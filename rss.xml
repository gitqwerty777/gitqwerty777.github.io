<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>QWERTY</title>
        <link>http://gitqwerty777.github.io</link>
        <description>Programming | Computer Science | Thought</description>
        <language>zh-TW</language>
        <pubDate>Tue, 22 Mar 2022 11:45:23 +0800</pubDate>
        <lastBuildDate>Tue, 22 Mar 2022 11:45:23 +0800</lastBuildDate>
        <category>C#</category>
        <category>CodingStyle</category>
        <category>Emacs</category>
        <category>編輯器</category>
        <category>CFR</category>
        <category>電腦對局理論</category>
        <category>指令</category>
        <category>機器學習</category>
        <category>perceptron</category>
        <category>readme</category>
        <category>文件</category>
        <category>github</category>
        <category>artificial intelligence</category>
        <category>search</category>
        <category>First-Order Logic</category>
        <category>大數</category>
        <category>程式</category>
        <category>C++</category>
        <category>Hexo</category>
        <category>網誌</category>
        <category>Markdown</category>
        <category>CleanCode</category>
        <category>重構</category>
        <category>TDD</category>
        <category>設計模式</category>
        <category>CMake</category>
        <category>Makefile</category>
        <category>Linux</category>
        <category>Todo</category>
        <category>註解</category>
        <category>經濟學</category>
        <category>策略</category>
        <category>競爭</category>
        <category>博弈論</category>
        <category>計算機結構</category>
        <category>人工智慧</category>
        <category>圍棋</category>
        <category>象棋</category>
        <category>蒙地卡羅</category>
        <category>Alpha-Beta搜尋</category>
        <category>強化學習</category>
        <category>計算機網路</category>
        <category>boost</category>
        <category>函式庫</category>
        <category>編譯</category>
        <category>gcc</category>
        <category>g++</category>
        <category>clang</category>
        <category>最佳化</category>
        <category>推薦系統</category>
        <category>FM</category>
        <category>FFM</category>
        <category>SVM</category>
        <category>Embedding</category>
        <category>自然語言處理</category>
        <category>外國用語</category>
        <category>萌典</category>
        <category>opencc</category>
        <category>PTT</category>
        <category>vuejs</category>
        <category>linux</category>
        <category>c</category>
        <category>compile</category>
        <category>gdb</category>
        <category>c語言</category>
        <category>cpp</category>
        <category>除錯</category>
        <category>git</category>
        <category>VMWare</category>
        <category>虛擬機</category>
        <category>IFTTT</category>
        <category>自動化</category>
        <category>備份</category>
        <category>webhook</category>
        <category>簡報</category>
        <category>軟體</category>
        <category>PowerPoint</category>
        <category>Latex</category>
        <category>JavaScript</category>
        <category>CSS</category>
        <category>Unity</category>
        <category>fcitx</category>
        <category>嘸蝦米</category>
        <category>輸入法</category>
        <category>硬碟</category>
        <category>記憶體</category>
        <category>效能</category>
        <category>錯誤</category>
        <category>makefile</category>
        <category>備忘錄</category>
        <category>存檔</category>
        <category>統計</category>
        <category>byobu</category>
        <category>screen</category>
        <category>tmux</category>
        <category>reactjs</category>
        <category>javascript</category>
        <category>WideAndDeep</category>
        <category>Google</category>
        <category>觀察者</category>
        <category>訂閱</category>
        <category>委託</category>
        <category>正規表示式(RegExp)</category>
        <category>上下文無關文法(CFG)</category>
        <category>hexo</category>
        <category>blog</category>
        <category>theme</category>
        <category>feature</category>
        <category>revealJS</category>
        <category>markdown</category>
        <category>rss</category>
        <category>facebook</category>
        <category>youtube</category>
        <category>ptt</category>
        <category>bilibili</category>
        <category>pixiv</category>
        <category>crawler</category>
        <category>SEO</category>
        <category>google</category>
        <category>html</category>
        <category>amazon</category>
        <category>webhost</category>
        <category>ssl</category>
        <category>漢字</category>
        <category>中文</category>
        <category>異體字</category>
        <category>unicode</category>
        <category>unity</category>
        <category>演算法</category>
        <category>隨機排序</category>
        <category>洗牌</category>
        <category>Fisher-Yates</category>
        <category>證明</category>
        <category>python</category>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/how-to-make-slides/</guid>
            <title>簡報製作軟體比較</title>
            <link>http://gitqwerty777.github.io/how-to-make-slides/</link>
            <category>Markdown</category>
            <category>簡報</category>
            <category>軟體</category>
            <category>PowerPoint</category>
            <category>Latex</category>
            <category>JavaScript</category>
            <category>CSS</category>
            <category>Unity</category>
            <pubDate>Tue, 22 Mar 2022 11:45:23 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;分類&#34;&gt;&lt;a href=&#34;#分類&#34; class=&#34;headerlink&#34; title=&#34;分類&#34;&gt;&lt;/a&gt;分類&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;編輯軟體&lt;/li&gt;
&lt;li&gt;Latex&lt;/li&gt;
&lt;li&gt;Markdown&lt;/li&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;編輯軟體&#34;&gt;&lt;a href=&#34;#編輯軟體&#34; class=&#34;headerlink&#34; title=&#34;編輯軟體&#34;&gt;&lt;/a&gt;編輯軟體&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;優點&lt;ul&gt;
&lt;li&gt;編輯方便&lt;/li&gt;
&lt;li&gt;功能齊全&lt;/li&gt;
&lt;li&gt;模版多&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺點&lt;ul&gt;
&lt;li&gt;手動排版&lt;/li&gt;
&lt;li&gt;需要使用特定軟體才能編輯&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;軟體&#34;&gt;&lt;a href=&#34;#軟體&#34; class=&#34;headerlink&#34; title=&#34;軟體&#34;&gt;&lt;/a&gt;軟體&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;PowerPoint&lt;/li&gt;
&lt;li&gt;Google Slides&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wcmV6aS5jb20veGNpdDR6YmF0NnN3L3N3ZWV0LXJlY2lwZS10by1zb2x2aW5nLXByb2JsZW1zLw==&#34;&gt;Prezi&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Latex&#34;&gt;&lt;a href=&#34;#Latex&#34; class=&#34;headerlink&#34; title=&#34;Latex&#34;&gt;&lt;/a&gt;Latex&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;優點&lt;ul&gt;
&lt;li&gt;自訂性高&lt;/li&gt;
&lt;li&gt;寫公式、程式碼方便&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺點&lt;ul&gt;
&lt;li&gt;指令過於複雜&lt;/li&gt;
&lt;li&gt;需要設定開發環境&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;模版&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3ZlcmxlYWYuY29tL2xlYXJuL2xhdGV4L0JlYW1lcg==&#34;&gt;Beamer&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hzdWFudGllbi9iZWFtZXJUYWl3YW4=&#34;&gt;BeamerTaiwan&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Markdown&#34;&gt;&lt;a href=&#34;#Markdown&#34; class=&#34;headerlink&#34; title=&#34;Markdown&#34;&gt;&lt;/a&gt;Markdown&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;優點&lt;ul&gt;
&lt;li&gt;原始文字易於保存&lt;/li&gt;
&lt;li&gt;語法較Latex簡單&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺點&lt;ul&gt;
&lt;li&gt;自訂性比Latex差&lt;/li&gt;
&lt;li&gt;難製作動畫&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;軟體-1&#34;&gt;&lt;a href=&#34;#軟體-1&#34; class=&#34;headerlink&#34; title=&#34;軟體&#34;&gt;&lt;/a&gt;軟體&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21hcnAtdGVhbS9tYXJwaXQ=&#34;&gt;Marp&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;可以寫html tag&lt;/li&gt;
&lt;li&gt;簡易的css支援&lt;/li&gt;
&lt;li&gt;動畫功能較少&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWRpdW0uY29tL3BtJUU3JTlBJTg0JUU3JTk0JTlGJUU3JTk0JUEyJUU1JThBJTlCJUU1JUI3JUE1JUU1JTg1JUI3JUU3JUFFJUIxLyVFNSVBNiU4MiVFNCVCRCU5NSVFNSVCRiVBQiVFOSU4MCU5RiVFNSVBRSU4QyVFNiU4OCU5MCVFNyVCMCVBMSVFNSVBMCVCMSVFNiU4RSU5MiVFNyU4OSU4OC0lRTUlQjAlODclRTclQjIlQkUlRTclQTUlOUUlRTUlQjAlODglRTYlQjMlQTglRTUlOUMlQTglRTYlQkElOTYlRTUlODIlOTklRTYlQkMlOTQlRTglQUMlOUIlRTQlQjglOEEtZWFiOGEwNjY4NzMz&#34;&gt;教學&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Javascript&#34;&gt;&lt;a href=&#34;#Javascript&#34; class=&#34;headerlink&#34; title=&#34;Javascript&#34;&gt;&lt;/a&gt;Javascript&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;用js擴充功能&lt;/li&gt;
&lt;li&gt;用css排版&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;軟體-2&#34;&gt;&lt;a href=&#34;#軟體-2&#34; class=&#34;headerlink&#34; title=&#34;軟體&#34;&gt;&lt;/a&gt;軟體&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZXZlYWxqcy5jb20v&#34;&gt;Reveal.js&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;支援Markdown語法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/revealjs-markdown&#34;&gt;教學:Reveal.js配合Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zbGkuZGV2Lw==&#34;&gt;Slidev&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;支援Markdown語法&lt;/li&gt;
&lt;li&gt;支援類Vue語法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pbXByZXNzLmpzLm9yZy8=&#34;&gt;Impress.js&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;類似Prezi&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2ltYWtld2VidGhpbmdzLmNvbS9kZWNrLmpzLw==&#34;&gt;Deck.js&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2tpcmthcy5jaC9hc2NlbnNvci8j&#34;&gt;Ascensor&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xhbmRzbGlkZS5hZGFtemFwLmNvbS8jc2xpZGUx&#34;&gt;LandSlide&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;p&gt;用遊戲引擎做簡報&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1VuaXR5VGVjaG5vbG9naWVzL1ByZXNlbnRhdGlvbg==&#34;&gt;Unity&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;可以將動畫和特效做到非常好，只是過於麻煩&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;結論&#34;&gt;&lt;a href=&#34;#結論&#34; class=&#34;headerlink&#34; title=&#34;結論&#34;&gt;&lt;/a&gt;結論&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用純文字(即Markdown)儲存簡報，較沒有相容性的問題，版本控制也容易&lt;ul&gt;
&lt;li&gt;但排版較困難&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;css是目前排版的最好方法&lt;/li&gt;
&lt;li&gt;所以最好的方法為Markdown+html&lt;/li&gt;
&lt;li&gt;推薦使用&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21hcnAtdGVhbS9tYXJwaXQ=&#34;&gt;Marp&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZXZlYWxqcy5jb20v&#34;&gt;Reveal.js&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zbGkuZGV2Lw==&#34;&gt;Slidev&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/linux-screen-tmux-byobu/</guid>
            <title>byobu指令和設定</title>
            <link>http://gitqwerty777.github.io/linux-screen-tmux-byobu/</link>
            <category>Linux</category>
            <category>byobu</category>
            <category>screen</category>
            <category>tmux</category>
            <pubDate>Mon, 21 Feb 2022 18:00:45 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;簡介&#34;&gt;&lt;a href=&#34;#簡介&#34; class=&#34;headerlink&#34; title=&#34;簡介&#34;&gt;&lt;/a&gt;簡介&lt;/h2&gt;&lt;p&gt;byobu是基於screen或tmux的一層操作介面&lt;br&gt;預設為基於tmux&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90YW8tb2YtdG11eC5yZWFkdGhlZG9jcy5pby96aF9DTi9sYXRlc3QvbWFudXNjcmlwdC8wMC1mb3Jld29yZC5odG1s&#34;&gt;tmux教學&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用byobu&#34;&gt;&lt;a href=&#34;#使用byobu&#34; class=&#34;headerlink&#34; title=&#34;使用byobu&#34;&gt;&lt;/a&gt;使用byobu&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;byobu-enable &lt;span class=&#34;comment&#34;&gt;#登入就開啟byobu&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byobu-disable &lt;span class=&#34;comment&#34;&gt;#取消&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byobu new -s &amp;lt;session name&amp;gt; &lt;span class=&#34;comment&#34;&gt;# 新建一個byobu 會話&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果新建兩個以上，每次進入byobu的時候需要選擇&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;滑鼠操作&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;選擇文字 &lt;code&gt;Shift+選擇&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;複製文字 &lt;code&gt;Shift+右鍵&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;開/關滑鼠操作 &lt;code&gt;Shift+F12&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;名詞解釋&#34;&gt;&lt;a href=&#34;#名詞解釋&#34; class=&#34;headerlink&#34; title=&#34;名詞解釋&#34;&gt;&lt;/a&gt;名詞解釋&lt;/h2&gt;&lt;p&gt;用瀏覽器的名詞解釋&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;session → 視窗：不同視窗包含不同分頁&lt;ul&gt;
&lt;li&gt;window → 分頁&lt;ul&gt;
&lt;li&gt;split → 分割：同一個分頁的不同終端&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/Other/byobu-cheat-sheet.jpg&#34; alt=&#34;cheetsheet&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;指令表&#34;&gt;&lt;a href=&#34;#指令表&#34; class=&#34;headerlink&#34; title=&#34;指令表&#34;&gt;&lt;/a&gt;指令表&lt;/h2&gt;&lt;h3 id=&#34;新建-F2&#34;&gt;&lt;a href=&#34;#新建-F2&#34; class=&#34;headerlink&#34; title=&#34;新建(F2)&#34;&gt;&lt;/a&gt;新建(F2)&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-F2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;新增垂直分割(分為左右兩塊)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-Shift-F2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;新增新視窗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;新增分頁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-F2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;新增水平分割(分為上下兩塊)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;移動-F3-F4&#34;&gt;&lt;a href=&#34;#移動-F3-F4&#34; class=&#34;headerlink&#34; title=&#34;移動(F3/F4)&#34;&gt;&lt;/a&gt;移動(F3/F4)&lt;/h3&gt;&lt;p&gt;移動的前後順序為編號順序&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Alt-↑/↓&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前/後一個視窗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-F3/F4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;交換兩個分割的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-Shift-F3/F4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;移動分頁的位置(編號)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F3/F4&lt;/code&gt;, &lt;code&gt;Alt-←/→&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前/後一個分頁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-Alt-Left/Right/Up/Down&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;修改目前的分割大小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-F3/F4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;移動至前/後分割&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-←/→/↑/↓&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;移動至其他分割&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;設定-F5-F12&#34;&gt;&lt;a href=&#34;#設定-F5-F12&#34; class=&#34;headerlink&#34; title=&#34;設定(F5, F12)&#34;&gt;&lt;/a&gt;設定(F5, F12)&lt;/h3&gt;&lt;p&gt;記&lt;code&gt;F9&lt;/code&gt;即可&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Alt-F12&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切換滑鼠支援&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Alt-F5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切換 UTF-8 支援&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-F5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Reconnect ssh/gpg/dbus sockets(註：應該是重新連線的意思)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;重新讀取設定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F9&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;開啟 byobu 設定頁面&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-F12&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;開/關 byobu 指令快捷鍵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-F5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切換底部狀態列資訊&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;取消-F6&#34;&gt;&lt;a href=&#34;#取消-F6&#34; class=&#34;headerlink&#34; title=&#34;取消(F6)&#34;&gt;&lt;/a&gt;取消(F6)&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Alt-F6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使連線到相同視窗的 terminal 離開(除了自己)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-F6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;關閉目前所在的分割&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;離開 byobu 但不登出(=&lt;code&gt;byobu detach&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-F6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;離開 byobu 且登出(註：不知道差別在哪)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;記錄-F7&#34;&gt;&lt;a href=&#34;#記錄-F7&#34; class=&#34;headerlink&#34; title=&#34;記錄(F7)&#34;&gt;&lt;/a&gt;記錄(F7)&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Alt-PageUp/PageDown&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;於歷史記錄中翻頁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F7&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;瀏覽歷史記錄(Command line history)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-F7&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;儲存歷史記錄於 &lt;code&gt;$BYOBU_RUN_DIR/printscreen&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;管理-F8&#34;&gt;&lt;a href=&#34;#管理-F8&#34; class=&#34;headerlink&#34; title=&#34;管理(F8)&#34;&gt;&lt;/a&gt;管理(F8)&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Alt-Shift-F8&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;選擇分割佈局&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-F8&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;命名目前視窗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-Shift-F8&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;儲存目前的分割佈局&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F8&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;命名目前分頁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-F8&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切換為不同的分割佈局&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;廣播-F9&#34;&gt;&lt;a href=&#34;#廣播-F9&#34; class=&#34;headerlink&#34; title=&#34;廣播(F9)&#34;&gt;&lt;/a&gt;廣播(F9)&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Alt-F9&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;開/關 同時輸入分割&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-F9&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;視窗中的所有分頁執行同一指令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-F9&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;分頁中的所有分割執行同一指令&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;其他-F11-F12&#34;&gt;&lt;a href=&#34;#其他-F11-F12&#34; class=&#34;headerlink&#34; title=&#34;其他(F11, F12)&#34;&gt;&lt;/a&gt;其他(F11, F12)&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Alt-F11&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;目前分割最大化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-F11&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;將目前分割合併至前一個分頁(Join window into a vertical split)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-Shift-F12&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;顯示蒙德裡安圖(Mondrian squares)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl-Shift-F5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;隨機切換狀態列的顏色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;F12&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Escape sequence(等同 screen 的&lt;code&gt;Ctrl+a&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-F11&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最大化/還原 目前分割&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Shift-F1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;顯示指令列表&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;設定&#34;&gt;&lt;a href=&#34;#設定&#34; class=&#34;headerlink&#34; title=&#34;設定&#34;&gt;&lt;/a&gt;設定&lt;/h2&gt;&lt;p&gt;預設放在&lt;code&gt;~/.byobu/&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;修改狀態列&#34;&gt;&lt;a href=&#34;#修改狀態列&#34; class=&#34;headerlink&#34; title=&#34;修改狀態列&#34;&gt;&lt;/a&gt;修改狀態列&lt;/h3&gt;&lt;p&gt;&lt;code&gt;~/.byobu/status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;預設是長這樣&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Tmux has one status line, with 2 halves for status&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tmux_left=&lt;span class=&#34;string&#34;&gt;&#34;#logo distro release #arch #session&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# You can have as many tmux right lines below here, and cycle through them using Shift-F5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tmux_right=&lt;span class=&#34;string&#34;&gt;&#34;network #disk_io #custom #entropy #raid reboot_required #updates_available #apport #services #mail #users uptime #ec2_cost #rcs_cost #fan_speed #cpu_temp #battery #wifi_quality #processes load_average cpu_count cpu_freq memory #swap disk users whoami #hostname ip_address #time_utc #date time&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#tmux_right=&#34;network #disk_io #custom entropy raid reboot_required updates_available #apport #services #mail users uptime #ec2_cost #rcs_cost fan_speed cpu_temp battery wifi_quality #processes load_average cpu_count cpu_freq memory #swap #disk whoami hostname ip_address #time_utc date time&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#tmux_right=&#34;network #disk_io custom #entropy raid reboot_required updates_available #apport #services #mail users uptime #ec2_cost #rcs_cost #fan_speed #cpu_temp battery wifi_quality #processes load_average cpu_count cpu_freq memory #swap #disk #whoami #hostname ip_address #time_utc date time&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#tmux_right=&#34;#network disk_io #custom entropy #raid #reboot_required #updates_available #apport #services #mail #users #uptime #ec2_cost #rcs_cost fan_speed cpu_temp #battery #wifi_quality #processes #load_average #cpu_count #cpu_freq #memory #swap whoami hostname ip_address #time_utc disk date time&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Left&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名稱&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;arch&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CPU 架構&lt;/td&gt;
&lt;td&gt;&lt;code&gt;x86_64&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;distro&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;作業系統名稱&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ubuntu&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;logo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;作業系統的 Logo，可設定&lt;/td&gt;
&lt;td&gt;&lt;code&gt;u&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;release&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;作業系統版本&lt;/td&gt;
&lt;td&gt;&lt;code&gt;20.04&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;session&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;視窗名字&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Right&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名稱&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;apport&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;提醒尚未讀的 Crash Report&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;battery&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;剩餘電量&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cpu_count&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CPU 核心數&lt;/td&gt;
&lt;td&gt;&lt;code&gt;16x&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cpu_freq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CPU 時脈&lt;/td&gt;
&lt;td&gt;&lt;code&gt;4.0GHz&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cpu_temp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CPU 溫度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;30C&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;custom&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;自訂腳本，需要額外設定&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;date&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;日期，可自行設定&lt;/td&gt;
&lt;td&gt;&lt;code&gt;2011-11-11&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;disk_io&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;即時 IO 讀/寫速度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;◁11KB/s ▷188KB/s&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;disk&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;磁碟用量&lt;/td&gt;
&lt;td&gt;&lt;code&gt;256G90%&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;entropy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;系統的 Entropy&lt;/td&gt;
&lt;td&gt;&lt;code&gt;e3363&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fan_speed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;風扇速度，需要額外設定&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hostname&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;主機名稱&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ip_address&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;系統 ip 位址&lt;/td&gt;
&lt;td&gt;&lt;code&gt;111.111.111.111&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;load_average&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前一分鐘 CPU 的平均用量&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0.12&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mail&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;是否有新信件&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[M]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;memory&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;記憶體用量&lt;/td&gt;
&lt;td&gt;&lt;code&gt;32G50%&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;network&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;即時網路上傳/下載速度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;△11KB/s ▽188KB/s&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;processes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;總程序(Process)數&lt;/td&gt;
&lt;td&gt;&lt;code&gt;100&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;raid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Raid 失敗警告&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reboot_required&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;是否需要重啟&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;services&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;監控中的服務，需要額外設定&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;swap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Swap 用量&lt;/td&gt;
&lt;td&gt;&lt;code&gt;s32G50%&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;time_utc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UTC 時間&lt;/td&gt;
&lt;td&gt;&lt;code&gt;04:00UTC&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;time&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;時間&lt;/td&gt;
&lt;td&gt;&lt;code&gt;11:11:11&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;updates_available&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;是否需要更新軟體&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!&lt;/code&gt;為一般更新 &lt;code&gt;!!&lt;/code&gt;為重要更新&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;uptime&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;系統開機時間&lt;/td&gt;
&lt;td&gt;&lt;code&gt;12d23h&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;users&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用 ssh 登入的人數&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;whoami&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;目前登入帳戶&lt;/td&gt;
&lt;td&gt;&lt;code&gt;qwerty&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;wifi_quality&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Wifi 訊號強度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[M]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;也可以用&lt;code&gt;F9&lt;/code&gt;設定&lt;/p&gt;
&lt;h3 id=&#34;顏色設定&#34;&gt;&lt;a href=&#34;#顏色設定&#34; class=&#34;headerlink&#34; title=&#34;顏色設定&#34;&gt;&lt;/a&gt;顏色設定&lt;/h3&gt;&lt;p&gt;&lt;code&gt;~/.byobu/color&lt;/code&gt;&lt;br&gt;&lt;code&gt;~/.byobu/color.tmux&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;VSCode設定&#34;&gt;&lt;a href=&#34;#VSCode設定&#34; class=&#34;headerlink&#34; title=&#34;VSCode設定&#34;&gt;&lt;/a&gt;VSCode設定&lt;/h3&gt;&lt;p&gt;避免和預設的快捷鍵重覆&lt;/p&gt;
&lt;p&gt;設定 → 終端機&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;取消勾選&lt;code&gt;Integrated: Allow Chords&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Integrated: Commands To Skip Shell&lt;/code&gt;增加下列&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.quickOpen&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.terminal&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.findNext&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.terminal&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.findPrevious&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.debug&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.debug&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.restart&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.debug&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.run&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.debug&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.debug&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.stop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.focusNextPart&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.focusPreviousPart&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.debug&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.pause&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.quickOpen&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;-workbench&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.action&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.terminal&lt;/span&gt;&lt;span class=&#34;selector-class&#34;&gt;.focusFind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;&lt;a href=&#34;#參考資料&#34; class=&#34;headerlink&#34; title=&#34;參考資料&#34;&gt;&lt;/a&gt;參考資料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYnlvYnUub3Jn&#34;&gt;byobu&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZGV2aGVyby83YjlhNzI4MWRiMGFjNGJhNjgzZg==&#34;&gt;byobu_cheatsheet&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdXBlcnVzZXIuY29tL2EvNDIzMzk3&#34;&gt;Byobu vs. GNU Screen vs. tmux — usefulness and transferability of skills&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaWNvbnNwbmcuY29tL2ltYWdlcy9ieW9idS1jaGVhdC1zaGVldC9ieW9idS1jaGVhdC1zaGVldC5qcGc=&#34;&gt;byobu-cheat-sheet&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYnlvYnUub3JnL2RvY3VtZW50YXRpb24=&#34;&gt;官方文件&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zemxpbi5tZS8yMDE2LzEwLzA1LyVFNSU4OCU5RCVFNiU4RSVBMi1saW51eC1rZXJuZWwtJUU0JUJBJTgyJUU2JTk1JUI4JUU3JTk0JUEyJUU3JTk0JTlGJUU1JTk5JUE4LXJhbmRvbS1nZW5lcmF0b3Iv&#34;&gt;Entropy說明&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kYWlzYWt1LXRlY2guaGF0ZW5hYmxvZy5jb20vZW50cnkvMjAyMC8wOS8wNS8xNzUzMjA=&#34;&gt;VS codeのターミナルでbyobuを使う&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/factorization-machines/</guid>
            <title>Factorization Machines(FM) 和 Field-Aware Factorization Machine(FFM)：推薦系統中的瑞士軍刀</title>
            <link>http://gitqwerty777.github.io/factorization-machines/</link>
            <category>推薦系統</category>
            <category>FM</category>
            <category>FFM</category>
            <category>SVM</category>
            <category>Embedding</category>
            <pubDate>Fri, 21 Jan 2022 11:11:11 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;Factorization-Machines-FM&#34;&gt;&lt;a href=&#34;#Factorization-Machines-FM&#34; class=&#34;headerlink&#34; title=&#34;Factorization Machines(FM)&#34;&gt;&lt;/a&gt;Factorization Machines(FM)&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;SVM&lt;ul&gt;
&lt;li&gt;難以在稀疏資料中學習&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Factorization Models(如Matrix Factorization)&lt;ul&gt;
&lt;li&gt;擴展性低：需要特定的輸入格式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FM：克服SVM和Factorization Models的缺點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可在稀疏資料中學習&lt;/li&gt;
&lt;li&gt;輸入資料可擴展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;訓練時間為線性複雜度&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;理論&#34;&gt;&lt;a href=&#34;#理論&#34; class=&#34;headerlink&#34; title=&#34;理論&#34;&gt;&lt;/a&gt;理論&lt;/h3&gt;&lt;p&gt;FM將權重 $w_{ij}$ 設為兩個長度為k的&lt;strong&gt;隱向量&lt;/strong&gt;$V_i, V_j$的&lt;strong&gt;內積&lt;/strong&gt;，表示為$\langle V_i, V_j \rangle$&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/recommend/fm-formula.png&#34; alt=&#34;2維的FM公式&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$w_0$​是bias&lt;/li&gt;
&lt;li&gt;$w_i​$是特徵$i$的一維權重&lt;/li&gt;
&lt;li&gt;$w_{i,j}$​是特徵$i$和特徵$j$的二次交叉權重&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;隱向量長度$k$為hyperparameter&lt;/li&gt;
&lt;li&gt;FM將權重矩陣分解為隱向量的內積，破壞了權重的獨立性，所以在稀疏資料中仍能學習&lt;ol&gt;
&lt;li&gt;已知一正定矩陣$W$，必存在$V$使$W=VV^t$&lt;/li&gt;
&lt;li&gt;權重矩陣$W$必為正定&lt;/li&gt;
&lt;li&gt;所以$W$必能分解成隱向量矩陣$V$乘自身的轉置&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;原本$W$的大小為$\frac{n^2}{2}$，改成隱向量$V$之後大小為$kn$，$k$通常不會設很大，明顯減少參數數量&lt;ul&gt;
&lt;li&gt;限制$k$的大小也能限制FM模型的表達力，泛化能力較好&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/recommend/FM-structure.png&#34; alt=&#34;結構&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;效率&#34;&gt;&lt;a href=&#34;#效率&#34; class=&#34;headerlink&#34; title=&#34;效率&#34;&gt;&lt;/a&gt;效率&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;/img/recommend/fm-time-complexity.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;整理公式後，Inference的時間複雜度從$O(kn^2)$降到了$O(kn)$，$n$為特徵維度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第2行公式推導：表示為整個矩陣扣掉對角項再除以2，因為$W$是對稱矩陣&lt;/li&gt;
&lt;li&gt;詳細推導可看&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly95dWxvbmd0c2FpLm1lZGl1bS5jb20vZmFjdG9yaXphdGlvbi1tYWNoaW5lLTYzMTYwYmMyYzA2Yg==&#34;&gt;這篇&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;實作上只須計算非0元素的乘積，時間複雜度再下降到$O(km)$，$m$為平均一筆輸入資料中，值非0的特徵數&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;更新&#34;&gt;&lt;a href=&#34;#更新&#34; class=&#34;headerlink&#34; title=&#34;更新&#34;&gt;&lt;/a&gt;更新&lt;/h3&gt;&lt;p&gt;使用gradient descent學習參數&lt;br&gt;&lt;img data-src=&#34;/img/recommend/fm-gradient.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;$\sum^n_{j=1}v_{j, f}x_j$可以事先計算，所以每次梯度更新的時間複雜度為$O(1)$&lt;/p&gt;
&lt;p&gt;因此FM的訓練時間複雜度也是$O(km)$&lt;/p&gt;
&lt;h3 id=&#34;高維度FM&#34;&gt;&lt;a href=&#34;#高維度FM&#34; class=&#34;headerlink&#34; title=&#34;高維度FM&#34;&gt;&lt;/a&gt;高維度FM&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;/img/recommend/fm-dway.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;經過公式簡化(和二維的方法相似)，也可以在線性時間內計算&lt;/p&gt;
&lt;h3 id=&#34;FM-和-Factorization-Model-SVM-比較&#34;&gt;&lt;a href=&#34;#FM-和-Factorization-Model-SVM-比較&#34; class=&#34;headerlink&#34; title=&#34;FM 和 Factorization Model, SVM 比較&#34;&gt;&lt;/a&gt;FM 和 Factorization Model, SVM 比較&lt;/h3&gt;&lt;p&gt;論文中證明了兩件事&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;各種Factorization Model為FM的特化&lt;/li&gt;
&lt;li&gt;FM可以解決SVM在稀疏資料中無法成功訓練的問題&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;詳細證明看不懂，略過&lt;/p&gt;
&lt;h3 id=&#34;結論&#34;&gt;&lt;a href=&#34;#結論&#34; class=&#34;headerlink&#34; title=&#34;結論&#34;&gt;&lt;/a&gt;結論&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;FM速度快、容易實作，於2012~14年為業界主流模型&lt;/li&gt;
&lt;li&gt;FM產生的隱向量可視為一種embedding&lt;ul&gt;
&lt;li&gt;所以拿user的隱向量找相似隱向量的item，就是一個簡易且快速的推薦方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FM適合類型特徵(離散)而非數值特徵(連續)，因為&lt;ul&gt;
&lt;li&gt;類型特徵可有多個隱向量，而數值特徵只有一個&lt;/li&gt;
&lt;li&gt;數值特徵不應使用同一個隱向量，如10歲和40歲&lt;/li&gt;
&lt;li&gt;FM速度和非零特徵數有關，數值特徵類型化後不影響訓練速度&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Field-aware-factorization-machines-FFM&#34;&gt;&lt;a href=&#34;#Field-aware-factorization-machines-FFM&#34; class=&#34;headerlink&#34; title=&#34;Field-aware factorization machines(FFM)&#34;&gt;&lt;/a&gt;Field-aware factorization machines(FFM)&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;FM：一個特徵有&lt;strong&gt;一個&lt;/strong&gt;隱向量&lt;/li&gt;
&lt;li&gt;FFM：一個特徵有&lt;strong&gt;一組&lt;/strong&gt;隱向量&lt;ul&gt;
&lt;li&gt;每個隱向量對應不同的&lt;strong&gt;特徵域&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;特徵域通常為一群代表相同性質的特徵，如one-hot特徵&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/recommend/ffm-formula.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;範例&#34;&gt;&lt;a href=&#34;#範例&#34; class=&#34;headerlink&#34; title=&#34;範例&#34;&gt;&lt;/a&gt;範例&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;出版商特徵域(P): ESPN, Vogue, and NBC&lt;/li&gt;
&lt;li&gt;廣告商特徵域(A): Nike, Gucci, and Adidas&lt;/li&gt;
&lt;li&gt;消費者性別特徵域(G): Male, Female&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在(ESPN, Nike) 和 (ESPN, Male) 中，ESPN的隱向量是不同的($V_{ESPN, A}$和 $V_{ESPN, G}$)&lt;/p&gt;
&lt;p&gt;FM的隱向量：$$V_{ESPN}V_{Nike}, V_{ESPN}V_{Male}, V_{Nike}V_{Male}$$&lt;br&gt;FFM的隱向量：$$V_{ESPN, A}V_{Nike, P}, V_{ESPN, G}V_{Male,P}, V_{Nike, G}V_{Male,A}$$&lt;/p&gt;
&lt;h3 id=&#34;結論-1&#34;&gt;&lt;a href=&#34;#結論-1&#34; class=&#34;headerlink&#34; title=&#34;結論&#34;&gt;&lt;/a&gt;結論&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;訓練時間複雜度為$O(kn^2)$&lt;/li&gt;
&lt;li&gt;因為FFM的隱向量限制在一個特徵域，FFM的$k$可以比FM的$k$小&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;公式比較&#34;&gt;&lt;a href=&#34;#公式比較&#34; class=&#34;headerlink&#34; title=&#34;公式比較&#34;&gt;&lt;/a&gt;公式比較&lt;/h2&gt;&lt;p&gt;只比較二次交叉項&lt;/p&gt;
&lt;p&gt;$$FM(v, x) = … + \sum^n_{j_1=1}{\sum^n_{j_2=j_1+1}{\langle v_{j_1}, v_{j_2}\rangle x_{j_1}x_{j_2}}}$$&lt;br&gt;$$FFM(v, x) = … + \sum^n_{j_1=1}{\sum^n_{j_2=j_1+1}{\langle v_{j_1, f_2}, v_{j_2, f_1}\rangle x_{j_1}x_{j_2}}}$$&lt;/p&gt;
&lt;h2 id=&#34;方法比較&#34;&gt;&lt;a href=&#34;#方法比較&#34; class=&#34;headerlink&#34; title=&#34;方法比較&#34;&gt;&lt;/a&gt;方法比較&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;FM：在LR(Logistic Regression)的基礎上，加入特徵交叉 &lt;/li&gt;
&lt;li&gt;FFM：在FM的基礎上，加入特徵域交叉&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;總結&#34;&gt;&lt;a href=&#34;#總結&#34; class=&#34;headerlink&#34; title=&#34;總結&#34;&gt;&lt;/a&gt;總結&lt;/h2&gt;&lt;p&gt;就算Deep Learning盛行，FM也是一個很好的Baseline Model&lt;/p&gt;
&lt;h2 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY3NpZS5udHUuZWR1LnR3L35iOTcwNTMvcGFwZXIvUmVuZGxlMjAxMEZNLnBkZg==&#34;&gt;Rendle, Steffen. “Factorization machines.” 2010 IEEE International conference on data mining. IEEE, 2010&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDEuMDQwOTk=&#34;&gt;Juan, Yuchin, et al. “Field-aware factorization machines for CTR prediction.” Proceedings of the 10th ACM conference on recommender systems. 2016&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNDMxNzQxMDg=&#34;&gt;FM：推薦算法中的瑞士軍刀&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93bmdhdy5naXRodWIuaW8vZmllbGQtYXdhcmUtZmFjdG9yaXphdGlvbi1tYWNoaW5lcy13aXRoLXhsZWFybi8=&#34;&gt;Field-aware Factorization Machines with xLearn&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3dlYi5jcy51Y2xhLmVkdS9+Y2hvaHNpZWgvdGVhY2hpbmcvQ1MyNjBfV2ludGVyMjAxOS9sZWN0dXJlMTMucGRm&#34;&gt;http://web.cs.ucla.edu/~chohsieh/teaching/CS260_Winter2019/lecture13.pdf&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC84OTYzOTMwNg==&#34;&gt;推薦系統系列（一）：FM理論與實踐&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly95dWxvbmd0c2FpLm1lZGl1bS5jb20vZmFjdG9yaXphdGlvbi1tYWNoaW5lLTYzMTYwYmMyYzA2Yg==&#34;&gt;初探Factorization Machine&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyODkyNTE0Mw==&#34;&gt;推薦系統算法FM、FFM使用時，連續性特徵，是直接作為輸入，還是經過離散化後one-hot處理呢？&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NTMyMzk2NzU=&#34;&gt;FM模型連續特徵離散化&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/why-linear-shuffle-works/</guid>
            <title>隨機排序演算法實作</title>
            <link>http://gitqwerty777.github.io/why-linear-shuffle-works/</link>
            <category>演算法</category>
            <category>隨機排序</category>
            <category>洗牌</category>
            <category>Fisher-Yates</category>
            <category>證明</category>
            <pubDate>Sat, 15 Jan 2022 18:12:50 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;簡介&#34;&gt;&lt;a href=&#34;#簡介&#34; class=&#34;headerlink&#34; title=&#34;簡介&#34;&gt;&lt;/a&gt;簡介&lt;/h2&gt;&lt;p&gt;說到隨機排序(shuffle)演算法，最著名的肯定是Fisher–Yates，它是一個$O(N)$時間的演算法，偽碼如下&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;
&lt;figure class=&#34;highlight reasonml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;constructor&#34;&gt;Shuffle(Array &lt;span class=&#34;params&#34;&gt;a&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    N = a.length&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for (i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ~ N-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;constructor&#34;&gt;Swap(&lt;span class=&#34;params&#34;&gt;a&lt;/span&gt;[&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;], &lt;span class=&#34;params&#34;&gt;a&lt;/span&gt;[Random &lt;span class=&#34;params&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;between&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;and&lt;/span&gt; N])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;簡單來說就是每個元素都和之後(包含自身)的隨機一個元素交換&lt;/p&gt;
&lt;h2 id=&#34;實作&#34;&gt;&lt;a href=&#34;#實作&#34; class=&#34;headerlink&#34; title=&#34;實作&#34;&gt;&lt;/a&gt;實作&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;N = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Shuffle&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(arr)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; range(N&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        j = random.randint(i, N&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        arr[i], arr[j] = arr[j], arr[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total = [[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; range(N)] &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; range(N)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; t &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; range(&lt;span class=&#34;number&#34;&gt;1000000&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    arr = [i &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; range(N)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Shuffle(arr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i, v &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; enumerate(arr):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        total[v][i] += &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; range(N):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&lt;span class=&#34;string&#34;&gt;f&#34;數字&lt;span class=&#34;subst&#34;&gt;&amp;#123;i&amp;#125;&lt;/span&gt;分佈&#34;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&lt;span class=&#34;string&#34;&gt;&#34;,&#34;&lt;/span&gt;.join(str(v) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; v &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; total[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;執行1000000次Shuffle，各數字的分布&lt;/p&gt;
&lt;figure class=&#34;highlight angelscript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;99656&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99624&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100636&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100081&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99957&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100149&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100238&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100287&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99710&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99662&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;100043&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100292&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99499&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100262&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100141&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99847&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100098&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100164&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99655&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;100032&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100412&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99857&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100035&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100148&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99738&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100139&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99765&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99681&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100193&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;100031&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99868&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100572&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99418&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99965&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99918&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99889&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100107&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100279&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99953&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;100214&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99716&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100181&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100315&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99764&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99667&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100270&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99829&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99871&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100173&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;99952&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100282&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99670&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99642&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99919&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100401&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99785&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100627&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100215&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99507&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;100332&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99879&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99976&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100143&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99614&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100319&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99665&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100169&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100380&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99523&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;99878&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100407&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99804&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99669&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100115&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99760&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100251&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99602&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100124&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100390&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;100104&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99888&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99876&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100575&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100181&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100229&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100083&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99398&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99632&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100034&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;99758&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99632&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99929&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99860&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100196&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99972&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99582&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100052&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100453&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100566&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但為何只要這樣交換，就是隨機排序？ 🤔&lt;/p&gt;
&lt;h2 id=&#34;不嚴謹的證明&#34;&gt;&lt;a href=&#34;#不嚴謹的證明&#34; class=&#34;headerlink&#34; title=&#34;不嚴謹的證明&#34;&gt;&lt;/a&gt;不嚴謹的證明&lt;/h2&gt;&lt;p&gt;已知N=1或2時，使用此法皆可使陣列為隨機排序。&lt;br&gt;若N=n時成立，考慮N=n+1時的情況：&lt;br&gt;Without loss of generality，令陣列為[0, 1, 2, …, n]&lt;br&gt;第一個位置的數0會和後面的隨機一個元素交換，此時第一個位置是0到n的數的機率是平均的 $P_0(v)=\frac{1}{n+1}, v \in {0, 1, 2, .. n}$&lt;br&gt;此時子陣列(&lt;code&gt;[1:]&lt;/code&gt;)即為N=n的情況，依照假設，使用此法後，其餘數字會是隨機排序，&lt;br&gt;所以N=n+1時也成立。&lt;br&gt;依數學歸納法，N=1,2時成立，且N=n成立時，N=n+1也成立；所以N為自然數時，使用此法皆可使陣列為隨機排序。$\blacksquare$&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;一個更直觀的解釋是，每一次交換都是在隨機選擇剩下還沒選的值。&lt;/p&gt;
&lt;h2 id=&#34;錯誤版本&#34;&gt;&lt;a href=&#34;#錯誤版本&#34; class=&#34;headerlink&#34; title=&#34;錯誤版本&#34;&gt;&lt;/a&gt;錯誤版本&lt;/h2&gt;&lt;figure class=&#34;highlight reasonml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;constructor&#34;&gt;WrongShuffle(Array &lt;span class=&#34;params&#34;&gt;a&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    N = a.length&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for (i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ~ N-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;constructor&#34;&gt;Swap(&lt;span class=&#34;params&#34;&gt;a&lt;/span&gt;[&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;], &lt;span class=&#34;params&#34;&gt;a&lt;/span&gt;[Random &lt;span class=&#34;params&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;between&lt;/span&gt; 0 &lt;span class=&#34;params&#34;&gt;and&lt;/span&gt; N])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;此版本的所有元素對陣列中的一個元素交換&lt;br&gt;雖然接近，但不是隨機排序&lt;/p&gt;
&lt;figure class=&#34;highlight angelscript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;99993&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100886&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99773&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100749&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100077&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99675&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99556&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99589&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99798&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99904&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;128185&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;93869&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;94816&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;95112&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;96020&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;96324&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;97355&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;98316&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99545&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100458&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;120180&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;124118&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;89932&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;91055&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;91953&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;92791&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;94813&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;96518&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;98183&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100457&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;112478&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;115941&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;120497&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;86991&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;88766&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;90575&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;92353&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;94732&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;97465&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100202&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;104476&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;109125&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;113448&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;119119&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;85554&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;88077&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;90897&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;92827&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;96727&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99750&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;97764&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;101507&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;106920&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;112440&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;118047&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;85835&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;89281&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;92036&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;96476&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99694&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;91910&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;96017&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;101046&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;105743&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;112624&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;119489&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;87594&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;91230&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;94797&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99550&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;86177&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;90650&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;96260&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;101089&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;107061&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;113865&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;120411&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;90146&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;94617&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;99724&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;81888&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;86070&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;90840&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;96392&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;101840&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;109008&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;115726&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;124044&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;93945&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100247&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;數字&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;分佈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;76949&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;81817&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;86468&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;91310&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;98058&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;104361&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;112014&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;120562&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;128447&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100014&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;為何不是隨機排序？ 🤔 目前想不到直觀解釋&lt;/p&gt;
&lt;p&gt;參考維基的證明：&lt;br&gt;總共有$n^n$種選法，但可能的排列只有$n!$種，在$n&amp;gt;2$時並不能整除&lt;/p&gt;
&lt;h2 id=&#34;更簡單的實作&#34;&gt;&lt;a href=&#34;#更簡單的實作&#34; class=&#34;headerlink&#34; title=&#34;更簡單的實作&#34;&gt;&lt;/a&gt;更簡單的實作&lt;/h2&gt;&lt;p&gt;對每個index設一隨機數，對隨機數排序&lt;br&gt;時間複雜度為$O(n\log n)$&lt;/p&gt;
&lt;h2 id=&#34;各語言Shuffle實作&#34;&gt;&lt;a href=&#34;#各語言Shuffle實作&#34; class=&#34;headerlink&#34; title=&#34;各語言Shuffle實作&#34;&gt;&lt;/a&gt;各語言Shuffle實作&lt;/h2&gt;&lt;p&gt;都是Fisher-Yates&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3B5dGhvbi9jcHl0aG9uL2Jsb2IvY2IwNzQ4ZDM5MzljMzExNjhhYjVkM2I4MGUzNjc3NDk0NDk3ZDVlMy9MaWIvcmFuZG9tLnB5I0wyODY=&#34;&gt;Python&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9saWJjeHgvYmxvYi8yN2M4MzZmZjNhOWM1MDVkZWI5ZmQxNjE2MDEyOTI0ZGU4ZmY5Mjc5L2luY2x1ZGUvYWxnb3JpdGhtI0wyNzg3&#34;&gt;LLVM C++&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRmlzaGVyJUUyJTgwJTkzWWF0ZXNfc2h1ZmZsZQ==&#34;&gt;Wiki&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZW9wbGUuY3MudW1hc3MuZWR1L35waGFhcy9DUzU5ME0vaGFuZG91dHMvRmlzaGVyLVlhdGVzLXByb29mLnBkZg==&#34;&gt;https://people.cs.umass.edu/~phaas/CS590M/handouts/Fisher-Yates-proof.pdf&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jcy5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvMjE1Mi9ob3ctdG8tcHJvdmUtY29ycmVjdG5lc3Mtb2YtYS1zaHVmZmxlLWFsZ29yaXRobQ==&#34;&gt;https://cs.stackexchange.com/questions/2152/how-to-prove-correctness-of-a-shuffle-algorithm&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/ifttt/</guid>
            <title>用IFTTT實作簡單的自動化</title>
            <link>http://gitqwerty777.github.io/ifttt/</link>
            <category>IFTTT</category>
            <category>自動化</category>
            <category>備份</category>
            <category>webhook</category>
            <pubDate>Tue, 04 Jan 2022 15:18:44 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;簡介&#34;&gt;&lt;a href=&#34;#簡介&#34; class=&#34;headerlink&#34; title=&#34;簡介&#34;&gt;&lt;/a&gt;簡介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pZnR0dC5jb20=&#34;&gt;IFTTT&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;通過其他不同平台的條件來決定是否執行下一條命令。即對網路服務透過其他網路服務作出反應&lt;/li&gt;
&lt;li&gt;IFTTT = “IF This Then ThaT”&lt;ul&gt;
&lt;li&gt;If A Then B(當 A 就 B)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h3 id=&#34;怎麼唸？&#34;&gt;&lt;a href=&#34;#怎麼唸？&#34; class=&#34;headerlink&#34; title=&#34;怎麼唸？&#34;&gt;&lt;/a&gt;怎麼唸？&lt;/h3&gt;&lt;p&gt;我都唸&lt;code&gt;IFTTT&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;支援的平台-節錄&#34;&gt;&lt;a href=&#34;#支援的平台-節錄&#34; class=&#34;headerlink&#34; title=&#34;支援的平台(節錄)&#34;&gt;&lt;/a&gt;支援的平台(節錄)&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;android/ios&lt;ul&gt;
&lt;li&gt;電量/電話/簡訊/拍照/地點&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;email&lt;/li&gt;
&lt;li&gt;社交&lt;ul&gt;
&lt;li&gt;twitter&lt;/li&gt;
&lt;li&gt;facebook&lt;/li&gt;
&lt;li&gt;reddit&lt;/li&gt;
&lt;li&gt;telegram&lt;/li&gt;
&lt;li&gt;github&lt;/li&gt;
&lt;li&gt;discord&lt;/li&gt;
&lt;li&gt;line&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RSS&lt;ul&gt;
&lt;li&gt;feedly(付費)&lt;/li&gt;
&lt;li&gt;inoreader&lt;/li&gt;
&lt;li&gt;instapaper&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;筆記&lt;ul&gt;
&lt;li&gt;onenote&lt;/li&gt;
&lt;li&gt;evernote&lt;/li&gt;
&lt;li&gt;pocket&lt;/li&gt;
&lt;li&gt;notion&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;影音&lt;ul&gt;
&lt;li&gt;spotify&lt;/li&gt;
&lt;li&gt;youtube&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;工作&lt;ul&gt;
&lt;li&gt;microsoft todo&lt;/li&gt;
&lt;li&gt;trello&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Google&lt;ul&gt;
&lt;li&gt;calendar&lt;/li&gt;
&lt;li&gt;drive&lt;/li&gt;
&lt;li&gt;sheet&lt;/li&gt;
&lt;li&gt;docs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
## 例子：一天一次，隨機傳line訊息

做不到，需要用line api
--&gt;

&lt;h2 id=&#34;例子&#34;&gt;&lt;a href=&#34;#例子&#34; class=&#34;headerlink&#34; title=&#34;例子&#34;&gt;&lt;/a&gt;例子&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;把發在Facebook的一篇廢文同步發在Twitter &lt;img data-src=&#34;/img/Other/ifttt1.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;將Youtube按讚的影片存到Onenote &lt;img data-src=&#34;/img/Other/ifttt2.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;手機 簡訊/照片 備份到Discord &lt;img data-src=&#34;/img/Other/ifttt3.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;彈性較大的選擇&#34;&gt;&lt;a href=&#34;#彈性較大的選擇&#34; class=&#34;headerlink&#34; title=&#34;彈性較大的選擇&#34;&gt;&lt;/a&gt;彈性較大的選擇&lt;/h3&gt;&lt;p&gt;使用Email, RSS, Webhook可以支援更多平台&lt;/p&gt;
&lt;p&gt;例如某新聞網站支援RSS，可將其內容發送到支援IFTTT的所有平台&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Email&lt;ul&gt;
&lt;li&gt;(if)傳送郵件到&lt;code&gt;trigger@applet.ifttt.com&lt;/code&gt;，(then)…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RSS&lt;ul&gt;
&lt;li&gt;(if)新RSS消息，(then)…&lt;/li&gt;
&lt;li&gt;參照&lt;a href=&#34;/rss-social-network&#34;&gt;此篇&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Webhook&lt;ul&gt;
&lt;li&gt;可以用程式接收/傳送Webhook，大幅提升使用彈性&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pZnR0dC5jb20vbWFrZXJfd2ViaG9va3M=&#34;&gt;https://ifttt.com/maker_webhooks&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt; → Documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;心得&#34;&gt;&lt;a href=&#34;#心得&#34; class=&#34;headerlink&#34; title=&#34;心得&#34;&gt;&lt;/a&gt;心得&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;If then&lt;/code&gt; 的語法限制了使用的彈性&lt;ul&gt;
&lt;li&gt;解法即為Webhook&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;許多平台為了&lt;del&gt;綁住用戶&lt;/del&gt;保護資料不提供讀取API，使可用性降低，如line&lt;/li&gt;
&lt;li&gt;配合物聯網效果較好，如智慧音箱、掃地機器人&lt;ul&gt;
&lt;li&gt;e.g., 回到家時(手機定位)，自動開燈(智慧燈泡)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;若只需要讀取，RSS還是最佳選擇&lt;/li&gt;
&lt;li&gt;使用到的所有服務都需要提供很多權限&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;類似服務&#34;&gt;&lt;a href=&#34;#類似服務&#34; class=&#34;headerlink&#34; title=&#34;類似服務&#34;&gt;&lt;/a&gt;類似服務&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96YXBpZXIuY29tLw==&#34;&gt;zapier&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2h1Z2lubi9odWdpbm4=&#34;&gt;huginn&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hdXRvbWF0ZS5pby8=&#34;&gt;automate&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaW50ZWdyb21hdC5jb20vZW4=&#34;&gt;integromat&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/recommender-wide-and-deep/</guid>
            <title>Wide And Deep 論文簡介：快思慢想的神經網路版</title>
            <link>http://gitqwerty777.github.io/recommender-wide-and-deep/</link>
            <category>推薦系統</category>
            <category>WideAndDeep</category>
            <category>Google</category>
            <pubDate>Mon, 20 Dec 2021 15:18:44 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;簡介&#34;&gt;&lt;a href=&#34;#簡介&#34; class=&#34;headerlink&#34; title=&#34;簡介&#34;&gt;&lt;/a&gt;簡介&lt;/h2&gt;&lt;p&gt;Wide And Deep 模型由簡單的Wide模型和複雜的Deep模型組成&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Wide&lt;ul&gt;
&lt;li&gt;Memorization(記憶)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Generalized linear model&lt;/strong&gt;(e.g., Linear Regression Model)&lt;/li&gt;
&lt;li&gt;適合學習稀疏、簡單的規則&lt;ul&gt;
&lt;li&gt;看了 A 電影的使用者經常喜歡看電影 B，這種「因為 A 所以 B」式的規則&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;從歷史資料學習規則(exploit)&lt;/li&gt;
&lt;li&gt;讓模型記住大量的直接且重要的規則，這正是單層的線性模型所擅長的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deep&lt;ul&gt;
&lt;li&gt;Generalization(泛化)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Embedding-based models&lt;/strong&gt;(e.g., Deep Neural Network)&lt;/li&gt;
&lt;li&gt;適合學習通用、深層的規則&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;學習新的特徵組合(explore)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;合併 Wide and Deep(Jointly Training) &lt;img data-src=&#34;/img/recommend/wide-and-deep.png&#34; alt=&#34;&#34;&gt;&lt;ul&gt;
&lt;li&gt;既能快速處理和記憶大量歷史行為特徵，又具有強大的表達能力&lt;/li&gt;
&lt;li&gt;和 Deep-only 比: 準確率高&lt;/li&gt;
&lt;li&gt;和 Wide-only 比: 更好的泛化規則&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;當user-item matrix非常稀疏時，例如有獨特愛好的users以及很小眾的items，NN很難為users和items學習到有效的embedding。導致over-generalize，並推薦不怎麼相關的物品。此時Memorization就展示了優勢，它可以「記住」這些特殊的特徵組合&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;實作&#34;&gt;&lt;a href=&#34;#實作&#34; class=&#34;headerlink&#34; title=&#34;實作&#34;&gt;&lt;/a&gt;實作&lt;/h2&gt;&lt;h3 id=&#34;Wide&#34;&gt;&lt;a href=&#34;#Wide&#34; class=&#34;headerlink&#34; title=&#34;Wide&#34;&gt;&lt;/a&gt;Wide&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;$y = w^Tx+b$&lt;/li&gt;
&lt;li&gt;Cross product transformation&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;/img/recommend/wide-and-deep-cross-product.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optimizer: Follow-the-regularized-leader (FTRL) + L1 regularization&lt;ul&gt;
&lt;li&gt;FTRL with L1非常注重模型的稀疏性。採用L1 FTRL是想讓Wide部分變得更加稀疏&lt;ul&gt;
&lt;li&gt;但是兩個id類特徵向量進行組合，在維度爆炸的同時，會讓原本已經非常稀疏的multihot特徵向量，變得更加稀疏。正因如此，wide部分的權重數量其實是海量的。為了不把數量如此之巨的權重都搬到線上進行model serving，採用FTRL過濾掉哪些稀疏特徵無疑是非常好的工程經驗&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Wide的輸入特徵較少&lt;ul&gt;
&lt;li&gt;只有已安裝app和瀏覽過的app&lt;/li&gt;
&lt;li&gt;希望能充份發揮Wide記憶能力強的優勢&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Deep&#34;&gt;&lt;a href=&#34;#Deep&#34; class=&#34;headerlink&#34; title=&#34;Deep&#34;&gt;&lt;/a&gt;Deep&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;特徵(節錄)&lt;ul&gt;
&lt;li&gt;用戶特徵&lt;ul&gt;
&lt;li&gt;年齡、國家、語言&lt;/li&gt;
&lt;li&gt;行為特徵&lt;ul&gt;
&lt;li&gt;已安裝App個數&lt;/li&gt;
&lt;li&gt;已安裝的App&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;情境特徵&lt;ul&gt;
&lt;li&gt;使用裝置&lt;/li&gt;
&lt;li&gt;目前時間(星期，小時)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;App特徵&lt;ul&gt;
&lt;li&gt;發佈時間&lt;/li&gt;
&lt;li&gt;下載數&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;候選App&lt;/li&gt;
&lt;li&gt;部份特徵有做embedding(Wide完全沒有)&lt;ul&gt;
&lt;li&gt;32 dimension&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optimizer: AdaGrad&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Jointly-Training&#34;&gt;&lt;a href=&#34;#Jointly-Training&#34; class=&#34;headerlink&#34; title=&#34;Jointly Training&#34;&gt;&lt;/a&gt;Jointly Training&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;同時更新Wide和Deep的權重&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;/img/recommend/wide-and-deep-joint-train.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結構圖&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;/img/recommend/wide-and-deep-features.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;結果&#34;&gt;&lt;a href=&#34;#結果&#34; class=&#34;headerlink&#34; title=&#34;結果&#34;&gt;&lt;/a&gt;結果&lt;/h2&gt;&lt;p&gt;實際用在 Google Play Store App 推薦&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/img/recommend/wide-and-deep-exp.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deep雖然離線結果較差，但實際結果仍比Wide好&lt;ul&gt;
&lt;li&gt;深層模型有學習到使用者的隱含喜好，而非直接記憶規則&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;心得&#34;&gt;&lt;a href=&#34;#心得&#34; class=&#34;headerlink&#34; title=&#34;心得&#34;&gt;&lt;/a&gt;心得&lt;/h2&gt;&lt;p&gt;這就是&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWFuYWdlcnRvZGF5LmNvbS50dy9hcnRpY2xlcy92aWV3LzUwOTA1Pw==&#34;&gt;快思慢想&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;的神經網路版&lt;/p&gt;
&lt;p&gt;Wide處理簡單的規則且省力，Deep處理複雜的規則但費力&lt;/p&gt;
&lt;p&gt;和純粹的deep learning相比，適合需要記憶大量簡易規則的情境。如App推薦中，有安裝A就推薦B&lt;/p&gt;
&lt;p&gt;Wide and Deep是一個架構，Wide模型和Deep模型可以為任意實作，所以衍生出許多變形，如DeepFM, Deep and Cross等&lt;/p&gt;
&lt;!--
deep的效率跟不上，可以固定住deep，對wide進行online learning來增強記憶性。
非常贊 跟我們的討論結果基本一致，deep部分做batch update保證准確性和充足表達能力，wide部分做online learning保證實效性。

用戶-物品互動太少 → over-generalize
wide部分的引入是為瞭解決 niche items的問題，對於很長尾的物品，dense features是沒法學到什麼東西的

However,deep neural networks with embeddings can over-generalize
and recommend less relevant items when the user-item inter-
actions are sparse and high-rank.
當user-item matrix非常稀疏時，例如有和獨特愛好的users以及很小眾的items，NN很難為users和items學習到有效的embedding。這種情況下，大部分user-item應該是沒有關聯的，但dense embedding 的方法還是可以得到對所有 user-item pair 的非零預測，因此導致 over-generalize並推薦不怎麼相關的物品。此時Memorization就展示了優勢，它可以“記住”這些特殊的特徵組合。
https://en.wikipedia.org/wiki/Rank_(linear_algebra)
--&gt;

&lt;h2 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MDYuMDc3OTI=&#34;&gt;Cheng, Heng-Tze, et al. “Wide &amp;amp; deep learning for recommender systems.” Proceedings of the 1st workshop on deep learning for recommender systems. 2016.&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWRpdW0uY29tL2RhdGEtc2NpZW50aXN0cy1wbGF5Z3JvdW5kL3dpZGUtZGVlcCVFNiVBOCVBMSVFNSU5RSU4Qi0lRTYlOEUlQTglRTglOTYlQTYlRTclQjMlQkIlRTclQjUlQjEtJUU1JThFJTlGJUU3JTkwJTg2LThiYWRhY2Y3NzdmMw==&#34;&gt;https://medium.com/data-scientists-playground/wide-deep%E6%A8%A1%E5%9E%8B-%E6%8E%A8%E8%96%A6%E7%B3%BB%E7%B5%B1-%E5%8E%9F%E7%90%86-8badacf777f3&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNDI5NTg4MzQ=&#34;&gt;https://zhuanlan.zhihu.com/p/142958834&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81MzM2MTUxOQ==&#34;&gt;https://zhuanlan.zhihu.com/p/53361519&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/revealjs-markdown/</guid>
            <title>使用revealJS + markdown 製作簡報</title>
            <link>http://gitqwerty777.github.io/revealjs-markdown/</link>
            <category>簡報</category>
            <category>revealJS</category>
            <category>markdown</category>
            <pubDate>Fri, 17 Dec 2021 09:53:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;優點：減少排版時間、資料為純文字、版本控制容易&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gitqwerty777.github.io/revealjs-markdown/&#34;&gt;說明簡報連結&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之後會再分析其他簡報製作方法&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/observer-pattern/</guid>
            <title>觀察者模式(Observer Pattern)</title>
            <link>http://gitqwerty777.github.io/observer-pattern/</link>
            <category>設計模式</category>
            <category>觀察者</category>
            <category>訂閱</category>
            <category>委託</category>
            <pubDate>Sat, 21 Nov 2020 15:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;目標&#34;&gt;&lt;a href=&#34;#目標&#34; class=&#34;headerlink&#34; title=&#34;目標&#34;&gt;&lt;/a&gt;目標&lt;/h2&gt;&lt;p&gt;一對多的依賴關係，當物件狀態改變時，所有依賴者會被通知。&lt;/p&gt;
&lt;h2 id=&#34;架構&#34;&gt;&lt;a href=&#34;#架構&#34; class=&#34;headerlink&#34; title=&#34;架構&#34;&gt;&lt;/a&gt;架構&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Observer_w_update.svg/1024px-Observer_w_update.svg.png?1618077346924&#34; alt=&#34;From Wiki&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Subject&lt;/code&gt;：主題&lt;ul&gt;
&lt;li&gt;特定事件發生時，會通知觀察者&lt;ul&gt;
&lt;li&gt;如資料改變&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新增/移除觀察者：&lt;code&gt;Attach(Observer), Detach(Observer)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;Notify(data)&lt;/code&gt;通知觀察者主題有更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Observer&lt;/code&gt;：觀察者&lt;ul&gt;
&lt;li&gt;訂閱主題，以便在更新時收到通知&lt;/li&gt;
&lt;li&gt;觀察者收到通知時呼叫&lt;code&gt;Update(Subject)&lt;/code&gt;以處理事件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分析&#34;&gt;&lt;a href=&#34;#分析&#34; class=&#34;headerlink&#34; title=&#34;分析&#34;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;設計守則：盡量讓需要互動的物件的關係鬆綁&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主題和觀察者鬆綁&lt;ul&gt;
&lt;li&gt;主題只知道觀察者有實作特定介面(&lt;code&gt;Observer&lt;/code&gt;)，不用知道觀察者的具體類別&lt;/li&gt;
&lt;li&gt;任何時候都可以加入新的觀察者，且主題的程式碼不需修改&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;實作&#34;&gt;&lt;a href=&#34;#實作&#34; class=&#34;headerlink&#34; title=&#34;實作&#34;&gt;&lt;/a&gt;實作&lt;/h2&gt;&lt;p&gt;有一觀測工作站數據的物件，在數據異常時可以通知到多個平台(Email, 簡訊, App)，&lt;br&gt;且使用者可以自由調整各平台的通知設定。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;觀察者之間彼此獨立，不可依頼通知觀察者的順序&lt;/li&gt;
&lt;li&gt;主題可以控制改變的定義(如溫度變化超過1度)&lt;/li&gt;
&lt;li&gt;Push model/Pull model&lt;ul&gt;
&lt;li&gt;Push model&lt;ul&gt;
&lt;li&gt;推送所有資料給Observer&lt;/li&gt;
&lt;li&gt;Subject要知道Observer需要什麼，彈性較差&lt;/li&gt;
&lt;li&gt;Observer會接收到不必要的資料&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pull model&lt;ul&gt;
&lt;li&gt;提供必要的資料或其來源(如data id或Subject本身)給Observer，由Observer自行取得相關資料&lt;/li&gt;
&lt;li&gt;每個Observer都要重新取得資料，效率較差&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C#的實作：委託，可看作對函數的抽象，是函數的類別&lt;ul&gt;
&lt;li&gt;委託物件所搭載的方法並不需要屬於同一個類別(即不需要Observer介面)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可以實作一個&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1dpdGhvdXRVbWJyZWxsYS1Cb3kvRGVzaWduLXBhdHRlcm5zLWluLWdhbWUtZGV2ZWxvcG1lbnQvYmxvYi8zODgzYzI3OGJiZWY2MzRlMzdiYzFlYTZmNDY2N2I5MjE4NDcwYmY3L1JlZEFsZXJ0UHJvamVjdC9Bc3NldHMvU2NyaXB0cy9HYW1lRXZlbnRTeXN0ZW0vR2FtZUV2ZW50U3lzdGVtLmNz&#34;&gt;Subject管理員&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;用途&#34;&gt;&lt;a href=&#34;#用途&#34; class=&#34;headerlink&#34; title=&#34;用途&#34;&gt;&lt;/a&gt;用途&lt;/h2&gt;&lt;p&gt;當一個物件的改變需要同時改變其他物件時&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;訂閱服務&lt;/li&gt;
&lt;li&gt;MVC架構: 後端資料更新、前端顯示資料&lt;/li&gt;
&lt;li&gt;UI操作: OnClick, OnHover&lt;/li&gt;
&lt;li&gt;觸發事件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;p&gt;RSS訂閱後可取得所有資料，目前的社群網站則是訂閱後仍會篩選並提供部份資料&lt;/p&gt;
&lt;h2 id=&#34;參考&#34;&gt;&lt;a href=&#34;#參考&#34; class=&#34;headerlink&#34; title=&#34;參考&#34;&gt;&lt;/a&gt;參考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Wiki&lt;/li&gt;
&lt;li&gt;Head-First Design Pattern&lt;/li&gt;
&lt;li&gt;大話設計模式&lt;/li&gt;
&lt;li&gt;設計模式與遊戲開發的完美結合&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RmYWxzZS5uZXQvMTAvb2JzZXJ2ZXItcGF0dGVybg==&#34;&gt;https://notfalse.net/10/observer-pattern&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/mementos-pattern/</guid>
            <title>備忘錄模式(Mementos Pattern)</title>
            <link>http://gitqwerty777.github.io/mementos-pattern/</link>
            <category>設計模式</category>
            <category>備份</category>
            <category>備忘錄</category>
            <category>存檔</category>
            <pubDate>Thu, 05 Nov 2020 15:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;/img/Other/morgana.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h2 id=&#34;目標&#34;&gt;&lt;a href=&#34;#目標&#34; class=&#34;headerlink&#34; title=&#34;目標&#34;&gt;&lt;/a&gt;目標&lt;/h2&gt;&lt;p&gt;在不破壞封裝及單一職責原則的情況下創立/還原類別的備份。&lt;/p&gt;
&lt;p&gt;若要建立備份，簡單的方法是在類別內部建立&lt;code&gt;Save()&lt;/code&gt;/&lt;code&gt;Load()&lt;/code&gt;等方法，但會使類別多了備份的職責。&lt;br&gt;若在其他類別執行備份，則需要將想備份的資料設為public或設定Getter，破壞封裝。&lt;/p&gt;
&lt;h2 id=&#34;架構&#34;&gt;&lt;a href=&#34;#架構&#34; class=&#34;headerlink&#34; title=&#34;架構&#34;&gt;&lt;/a&gt;架構&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/38/W3sDesign_Memento_Design_Pattern_UML.jpg?1615662505582&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;想法：Originator只產生Memento/使用Memento還原, 由Caretaker管理Memento&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Originator: 需要備份的類別，產生Memento並可用其還原&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Memento CreateMemento()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void RestoreFromMemento(Memento)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Memento: 儲存備份檔案的類別&lt;ul&gt;
&lt;li&gt;純資料，不可變(immutable)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Caretaker: 管理備份的類別&lt;ul&gt;
&lt;li&gt;呼叫 Originator 執行 備份/還原的操作&lt;/li&gt;
&lt;li&gt;管理備份&lt;ul&gt;
&lt;li&gt;存讀檔，路徑&lt;/li&gt;
&lt;li&gt;管理多份備份&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;實作&#34;&gt;&lt;a href=&#34;#實作&#34; class=&#34;headerlink&#34; title=&#34;實作&#34;&gt;&lt;/a&gt;實作&lt;/h2&gt;&lt;!-- - Memento可以是interface或abstract class，以避免被Originator以外的類別修改 --&gt;

&lt;ul&gt;
&lt;li&gt;Originator可以hold Caretaker reference使兩個物件的生命周期同步&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分析&#34;&gt;&lt;a href=&#34;#分析&#34; class=&#34;headerlink&#34; title=&#34;分析&#34;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;缺點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Memento會額外占用記憶體&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;用途&#34;&gt;&lt;a href=&#34;#用途&#34; class=&#34;headerlink&#34; title=&#34;用途&#34;&gt;&lt;/a&gt;用途&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;備份/還原(存/讀檔)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;p&gt;單詞Memento有「印象」、「紀念」的意思，有同名電影譯為「記憶拼圖」，在Persona5譯為「印象空間」&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;&lt;a href=&#34;#參考資料&#34; class=&#34;headerlink&#34; title=&#34;參考資料&#34;&gt;&lt;/a&gt;參考資料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Wiki&lt;/li&gt;
&lt;li&gt;Head-First Design Pattern&lt;/li&gt;
&lt;li&gt;大話設計模式&lt;/li&gt;
&lt;li&gt;設計模式與遊戲開發的完美結合&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3R3bWh0LmdpdGh1Yi5pby9ibG9nL3Bvc3RzL2Rlc2lnbi1wYXR0ZXJuL21lbWVudG8uaHRtbA==&#34;&gt;http://twmht.github.io/blog/posts/design-pattern/memento.html&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!--TODO: 看三本書,補足 --&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/unicode/</guid>
            <title>漢字的異體字及其Unicode編碼</title>
            <link>http://gitqwerty777.github.io/unicode/</link>
            <category>漢字</category>
            <category>中文</category>
            <category>異體字</category>
            <category>unicode</category>
            <pubDate>Thu, 29 Oct 2020 15:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;異體字&#34;&gt;&lt;a href=&#34;#異體字&#34; class=&#34;headerlink&#34; title=&#34;異體字&#34;&gt;&lt;/a&gt;異體字&lt;/h2&gt;&lt;p&gt;異體字為意思一樣、但寫法不同的字集合。&lt;br&gt;因為漢字在多個國家使用，每個國家的正式寫法不同，且在歷史中會出現字形改變的情形，自然字形也不同。&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;
&lt;h2 id=&#34;原因&#34;&gt;&lt;a href=&#34;#原因&#34; class=&#34;headerlink&#34; title=&#34;原因&#34;&gt;&lt;/a&gt;原因&lt;/h2&gt;&lt;p&gt;Unicode只是編碼標準，不是字形標準。因此其官方說法是：&lt;strong&gt;它只對字（Character）編碼，而非字形（Glyph，每個字的具體形狀、寫法）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;陸、港、臺、韓的「港」字右下從「巳」，日本的「港」字右下從「己」；港、臺、韓、日的「角」字中豎不穿頭，大陸的「角」字中豎穿頭；港、臺「起」字從「巳」，陸、日、韓從「己」……這些異形同字，Unicode都不分別編碼。例如「港」就是「6E2F」，不論從「巳」還是從「己」。&lt;/p&gt;
&lt;p&gt;爲了相容不同地區的編碼， Unicode 又有「&lt;strong&gt;字源分離原則&lt;/strong&gt;」。日本 JIS 編碼同時收錄了「剣」、「劍」二形， Unicode 爲了與之兼容，即使它們是同一個字， Unicode 也分別給予編碼：「剣」是「5263」，「劍」是「528D」。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;結果，有些異形同字，被編進同一碼位，有些則區分作兩碼，造成了 Unicode 內的自相矛盾。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;歷史&#34;&gt;&lt;a href=&#34;#歷史&#34; class=&#34;headerlink&#34; title=&#34;歷史&#34;&gt;&lt;/a&gt;歷史&lt;/h2&gt;&lt;p&gt;國際標準組織於 1993 年 5 月出版了「通用碼架構及基本多語文字面」（UCSArchitecture and Basic Multilingual Plane）草案，該草案將此標準定名為 Universal MultipleOctet Coded Character Set（通用多八位組編碼字符集），並說明其編碼架構為 4 個位元組（4 Bytes），共組成 128 個群（Group），每一個群有 256 個字面（Plane)，每一個字面有256×256 個編碼空間，其中第 32 群的第 32 個字面為基本多語文字面（Basic MultilingualPlane；簡稱 BMP）。到了 1993 年 ISO 10646-1 正式版本，此標準定名為 Universal Multiple-Octet Coded Character Set（廣用多八位元組編碼字元集；簡稱 UCS），BMP 則定義在第 0 群第 0 個字面。在使用上，假如需用的字集都在 BMP 中，則只要使用 2 個八位元組的編碼架構即可，否則就必須使用 4 個八位元組的編碼架構；而且這兩種編碼架構不能混合使用，不是使用 2 個八位元組，就是使用 4 個八位元組的固定長度編碼架構，其用意就是要避免 ISO 2022 不定長度的缺點。&lt;/p&gt;
&lt;p&gt;參與制定 ISO 10646 的代表莫不儘量爭取把自己國家使用的字集編入 BMP，目的就是希望能利用 BMP 只用 2 個八位元組的優勢，取得比 4 個八位元組更高的資訊處理效率。BMP 的爭取如此重要，然其編碼位置卻有限，因此如何充份利用這些編碼空間處理更多常用字符集，就成為標準研訂時的一個重要考慮因素。過去在 BMP 的設計中，除編入西方拼音文字及符號外，在漢字方面只蒐集日本、南韓及中國三個地區使用的漢字字集，並沒有考慮到我國的字集，我國遂積極組團以民間團體－臺北市電腦商業同業公會（TCA）的名義，參加 ISO 10646 的制定，以爭取將我國使用的正體字編入 BMP 中。&lt;/p&gt;
&lt;p&gt;ISO 10646 編碼基本原則為「一字一碼」，我國及中國的代表因此就共同提出了 HCS（Han Character Set） 的構想，這個構想同時獲得美國及其它國家代表的支持，進而一步步發展至今。1993 年公布的 ISO 10646-1 之 BMP 中，已經將臺灣、大陸、日本和南韓所使用之漢字整合成獨立的&lt;strong&gt;「中日韓認同表意文字區（ CJK Unified Ideographs）」&lt;/strong&gt;，使&lt;br&gt;得亞洲幾個主要使用漢字的國家，有圓滿的解決方案。&lt;/p&gt;
&lt;p&gt;然而，當初進行中日韓漢字編碼時，因各國所提出的漢字集有重複及形、體不盡相同，進行重複字比對、篩選及形、體認同（ unify） 原則討論等工作。歷經五次會議完成的「中日韓認同表意文字」（ CJK Unified Ideographs），其字序主要是參考康熙字典、大漢和詞典、漢語大詞典及大字源字典，以先部首後筆劃的順序排列。&lt;br&gt;完成了 ISO 10646:1993 之 BMP 中 I 區的表意文字編碼標準，總計含 20,902 個漢字，其中包含了 CNS 11643 用字共 17,011 個。&lt;/p&gt;
&lt;p&gt;1998 年 IRG 完成「中日韓認同表意文字擴充 A」(CJK Unified Ideographs Extension A)，編訂 6,582 字，送交 SC2／WG2 通過，編碼於 BMP 之 A 區的3400～4DFF，其中包含 CNS 11643 用字共 5,879 個。&lt;/p&gt;
&lt;p&gt;被認定相同的 CNS11643 字元 527 個，收容於「中日韓相容表意文字擴充 A 區」，編碼範圍為 0002-F800 ～0002-FA16h。&lt;/p&gt;
&lt;p&gt;「中日韓認同表意文字擴充 B」（CJK Unified Ideographs Extension B）的整理，這套字集涵蓋康熙字典全部用字、漢語大字典全部用字及中國、臺灣、韓國、越南、香港所提的國家標準字集。擴充 B 字集係編碼於 ISO 10646 第二輔助字面(Plane 2)，總計 42,807 中日韓越漢字，編碼範圍為 0002-0100～0002-A836h，其中含我國 CNS 11643 第 4~7 字面共約 3 萬字。「中日韓認同表意文字擴充 B」擴編完成後，CNS 11643 第 1 至 7 字面有 95%以上的用字全部納入 ISO 10646 標準中，其餘 5%是被認定相同(unified)的字。&lt;/p&gt;
&lt;h2 id=&#34;範例：不同Unicode的異體字&#34;&gt;&lt;a href=&#34;#範例：不同Unicode的異體字&#34; class=&#34;headerlink&#34; title=&#34;範例：不同Unicode的異體字&#34;&gt;&lt;/a&gt;範例：不同Unicode的異體字&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;剣(5263)、劍(528D)&lt;/li&gt;
&lt;li&gt;數(6578)、數(f969)&lt;/li&gt;
&lt;li&gt;靑(9751)、青(9752)&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;http://founder.acgvlyric.org/iu/lib/exe/fetch.php/%E8%AA%AA%E6%96%87:cing_unified.png?cache=&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;範例：相同Unicode的異體字&#34;&gt;&lt;a href=&#34;#範例：相同Unicode的異體字&#34; class=&#34;headerlink&#34; title=&#34;範例：相同Unicode的異體字&#34;&gt;&lt;/a&gt;範例：相同Unicode的異體字&lt;/h2&gt;&lt;p&gt;早期Unicode碰到在有關國家或地區既有碼表已分別編碼的字，像「値」與「值」，就會放棄認同原則，改以原字集分離原則來把兩個字形分別編碼。&lt;br&gt;但若當時有關國家或地區沒有把異體字分別編碼，像日本的JIS90只收錄了一個「葛」字，Unicode就不會分別編碼。如「直、殖、植」等字皆沒有像「値」與「值」般分別編碼。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://mojikiban.ipa.go.jp/contents/2013/11/IVS_fig1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;異體字選擇器&#34;&gt;&lt;a href=&#34;#異體字選擇器&#34; class=&#34;headerlink&#34; title=&#34;異體字選擇器&#34;&gt;&lt;/a&gt;異體字選擇器&lt;/h3&gt;&lt;p&gt;異體字選擇器是一種在Unicode上，用來準確、具體地指定選擇哪個文字字形的程序。有標準化的異體字選擇器（Standardized Variation Sequence，簡稱「SVS」），以及漢字異體字選擇器（Ideographic Variation Sequence，簡稱「IVS」）。&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;&lt;a href=&#34;#參考資料&#34; class=&#34;headerlink&#34; title=&#34;參考資料&#34;&gt;&lt;/a&gt;參考資料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaC5uYWVyLmVkdS50dy9jZ2ktYmluL2dzMzIvZ3N3ZWIuY2dpP289ZGlycHJvamVjdCZzPWlkPSUyMlJQMDAwMDAwMDAwNjM3JTIyLiZzZWFyY2htb2RlPWJhc2lj&#34;&gt;李鵑娟-異體字字典港澳陸規範字收錄研究&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JTk1JUIwJUU5JUFCJTk0JUU1JUFEJTk3JUU5JTgxJUI4JUU2JTkzJTg3JUU1JTk5JUE4&#34;&gt;異體字選擇器&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy51bmljb2RlLm9yZy9QdWJsaWMvMTIuMS4wL3VjZC9TdGFuZGFyZGl6ZWRWYXJpYW50cy50eHQ=&#34;&gt;SVS&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly91bmljb2RlLm9yZy9pdmQvZGF0YS8yMDE3LTEyLTEyL0lWRF9TZXF1ZW5jZXMudHh0&#34;&gt;IVS&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1jTnYyQnJtUDlTWQ==&#34;&gt;顯示表意文字字形變化序列示範&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb2ppa2liYW4uaXBhLmdvLmpwLzEyOTIuaHRtbA==&#34;&gt;IVD/IVSとは&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/CSharp-codeconvension/</guid>
            <title>C# 程式碼風格指南</title>
            <link>http://gitqwerty777.github.io/CSharp-codeconvension/</link>
            <category>C#</category>
            <category>CodingStyle</category>
            <pubDate>Thu, 22 Oct 2020 15:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvZG90bmV0L2MjL3Byb2dyYW1taW5nLWd1aWRlL2luc2lkZS1hLXByb2dyYW0vY29kaW5nLWNvbnZlbnRpb25z&#34;&gt;原文：C# Coding Conventions (C# Programming Guide)&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;Naming-Conventions&#34;&gt;&lt;a href=&#34;#Naming-Conventions&#34; class=&#34;headerlink&#34; title=&#34;Naming Conventions&#34;&gt;&lt;/a&gt;Naming Conventions&lt;/h2&gt;&lt;p&gt;若句子太長，可以分段，結尾需為&lt;code&gt;.&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var currentPerformanceCounterCategory &amp;#x3D; new System.Diagnostics.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PerformanceCounterCategory();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Layout-Conventions&#34;&gt;&lt;a href=&#34;#Layout-Conventions&#34; class=&#34;headerlink&#34; title=&#34;Layout Conventions&#34;&gt;&lt;/a&gt;Layout Conventions&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;四空格縮排, tabs 需要存為空格&lt;/li&gt;
&lt;li&gt;一行一個Statement/Declaration&lt;/li&gt;
&lt;li&gt;連續的行中，第二行需要多一個縮排&lt;/li&gt;
&lt;li&gt;方法的宣告和屬性的宣告中至少需要隔一行&lt;/li&gt;
&lt;li&gt;在判斷式中加上括號&lt;ul&gt;
&lt;li&gt;&lt;code&gt;if ((val1 &amp;gt; val2) &amp;amp;&amp;amp; (val1 &amp;gt; val3))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Commenting-Conventions&#34;&gt;&lt;a href=&#34;#Commenting-Conventions&#34; class=&#34;headerlink&#34; title=&#34;Commenting Conventions&#34;&gt;&lt;/a&gt;Commenting Conventions&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;將程式和註解放在不同行&lt;/li&gt;
&lt;li&gt;註解需以大寫開頭，逗號結尾，與&lt;code&gt;//&lt;/code&gt;間隔一個空格&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; The following declaration creates a query. It does not run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; the query.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Language-Guidelines&#34;&gt;&lt;a href=&#34;#Language-Guidelines&#34; class=&#34;headerlink&#34; title=&#34;Language Guidelines&#34;&gt;&lt;/a&gt;Language Guidelines&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用字串插補(String interpolation)來連接短的字串&lt;ul&gt;
&lt;li&gt;&lt;code&gt;string displayName = $&amp;quot;{nameList[n].LastName}, {nameList[n].FirstName}&amp;quot;;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;若要在迴圈中使用字串，使用&lt;code&gt;StringBuilder&lt;/code&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var phrase &amp;#x3D; &amp;quot;la&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var manyPhrases &amp;#x3D; new StringBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for (var i &amp;#x3D; 0; i &amp;lt; 10000; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    manyPhrases.Append(phrase);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Implicitly-Typed-Local-Variables&#34;&gt;&lt;a href=&#34;#Implicitly-Typed-Local-Variables&#34; class=&#34;headerlink&#34; title=&#34;Implicitly Typed Local Variables&#34;&gt;&lt;/a&gt;Implicitly Typed Local Variables&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;若變數的型別很明顯，使用隱式宣告&lt;ul&gt;
&lt;li&gt;&lt;code&gt;New&lt;/code&gt;, 型別轉換, 基本型別等&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var var1 &amp;#x3D; &amp;quot;This is clearly a string.&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var var2 &amp;#x3D; 27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; &amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int var3 &amp;#x3D; Convert.ToInt32(Console.ReadLine());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int var4 &amp;#x3D; ExampleClass.ResultSoFar();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可以在for中使用隱式宣告，但不要在foreach中使用隱式宣告&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Arrays&#34;&gt;&lt;a href=&#34;#Arrays&#34; class=&#34;headerlink&#34; title=&#34;Arrays&#34;&gt;&lt;/a&gt;Arrays&lt;/h2&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Preferred syntax. Note that you cannot use var here instead of string[].&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;string[] vowels1 &amp;#x3D; &amp;#123; &amp;quot;a&amp;quot;, &amp;quot;e&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;o&amp;quot;, &amp;quot;u&amp;quot; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; If you use explicit instantiation, you can use var.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var vowels2 &amp;#x3D; new string[] &amp;#123; &amp;quot;a&amp;quot;, &amp;quot;e&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;o&amp;quot;, &amp;quot;u&amp;quot; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; If you specify an array size, you must initialize the elements one at a time.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var vowels3 &amp;#x3D; new string[5];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vowels3[0] &amp;#x3D; &amp;quot;a&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vowels3[1] &amp;#x3D; &amp;quot;e&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Delegates-委託&#34;&gt;&lt;a href=&#34;#Delegates-委託&#34; class=&#34;headerlink&#34; title=&#34;Delegates(委託)&#34;&gt;&lt;/a&gt;Delegates(委託)&lt;/h2&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Define the type.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public delegate void Del(string message);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Define a method that has a matching signature.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public static void DelMethod(string str)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Console.WriteLine(&amp;quot;DelMethod argument: &amp;#123;0&amp;#125;&amp;quot;, str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; In the Main method, create an instance of Del.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Preferred: Create an instance of Del by using condensed syntax.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Del exampleDel2 &amp;#x3D; DelMethod;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; The following declaration uses the full syntax.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Del exampleDel1 &amp;#x3D; new Del(DelMethod);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Using&#34;&gt;&lt;a href=&#34;#Using&#34; class=&#34;headerlink&#34; title=&#34;Using&#34;&gt;&lt;/a&gt;Using&lt;/h2&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Method1: try-finally statement with Dispose&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Font font1 &amp;#x3D; new Font(&amp;quot;Arial&amp;quot;, 10.0f);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;try&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byte charset &amp;#x3D; font1.GdiCharSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;finally&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (font1 !&amp;#x3D; null)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ((IDisposable)font1).Dispose();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Method2: Using statement.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using (Font font2 &amp;#x3D; new Font(&amp;quot;Arial&amp;quot;, 10.0f))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byte charset &amp;#x3D; font2.GdiCharSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;amp-amp-and&#34;&gt;&lt;a href=&#34;#amp-amp-and&#34; class=&#34;headerlink&#34; title=&#34;&amp;amp;&amp;amp; and ||&#34;&gt;&lt;/a&gt;&amp;amp;&amp;amp; and ||&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;用 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 取代 &lt;code&gt;&amp;amp;&lt;/code&gt;, 用 &lt;code&gt;||&lt;/code&gt; 取代 &lt;code&gt;|&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 會 short-circult (即不可能是True時直接return False)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; 會判斷所有條件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;if ((divisor !&amp;#x3D; 0) &amp;amp;&amp;amp; (dividend &amp;#x2F; divisor &amp;gt; 0))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Console.WriteLine(&amp;quot;Quotient: &amp;#123;0&amp;#125;&amp;quot;, dividend &amp;#x2F; divisor);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Console.WriteLine(&amp;quot;Attempted division by 0 ends up here.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;New&#34;&gt;&lt;a href=&#34;#New&#34; class=&#34;headerlink&#34; title=&#34;New&#34;&gt;&lt;/a&gt;New&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用new的時候，使用var &lt;code&gt;var instance1 = new ExampleClass();&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;簡化Initialize&lt;ul&gt;
&lt;li&gt;&lt;code&gt;var instance3 = new ExampleClass { Name = &amp;quot;Desktop&amp;quot;, ID = 37414, Location = &amp;quot;Redmond&amp;quot;, Age = 2.3 };&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;事件&#34;&gt;&lt;a href=&#34;#事件&#34; class=&#34;headerlink&#34; title=&#34;事件&#34;&gt;&lt;/a&gt;事件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用lambda expression來產生一次性的event&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;public Form2()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x2F;&amp;#x2F; You can use a lambda expression to define an event handler.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.Click +&amp;#x3D; (s, e) &amp;#x3D;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MessageBox.Show(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ((MouseEventArgs)e).Location.ToString());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Using a lambda expression shortens the following traditional definition.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public Form1()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.Click +&amp;#x3D; new EventHandler(Form1_Click);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void Form1_Click(object sender, EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MessageBox.Show(((MouseEventArgs)e).Location.ToString());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Static&#34;&gt;&lt;a href=&#34;#Static&#34; class=&#34;headerlink&#34; title=&#34;Static&#34;&gt;&lt;/a&gt;Static&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;用類別名取得static成員 &lt;code&gt;ClassName.StaticMember&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;不要用繼承的類別名，直接用定義static成員的類別&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;LINQ-Queries&#34;&gt;&lt;a href=&#34;#LINQ-Queries&#34; class=&#34;headerlink&#34; title=&#34;LINQ Queries&#34;&gt;&lt;/a&gt;LINQ Queries&lt;/h2&gt;&lt;p&gt;使用有意義的變數名&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var seattleCustomers &amp;#x3D; from customer in customers&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       where customer.City &amp;#x3D;&amp;#x3D; &amp;quot;Seattle&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       select customer.Name;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;排列在&lt;code&gt;from&lt;/code&gt;下方&lt;/li&gt;
&lt;li&gt;使用多個&lt;code&gt;from&lt;/code&gt;取代&lt;code&gt;join&lt;/code&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Use a compound from to access the inner sequence within each element.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var scoreQuery &amp;#x3D; from student in students&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 from score in student.Scores&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 where score &amp;gt; 90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 select new &amp;#123; Last &amp;#x3D; student.LastName, score &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/linux-save-memory-disk/</guid>
            <title>在Linux系統中 節省硬碟和記憶體用量</title>
            <link>http://gitqwerty777.github.io/linux-save-memory-disk/</link>
            <category>linux</category>
            <category>硬碟</category>
            <category>記憶體</category>
            <category>效能</category>
            <pubDate>Thu, 15 Oct 2020 15:46:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;最近發現 VM 和遠端主機的使用空間都太大了，找到一些相關處理方法&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h2 id=&#34;硬碟用量&#34;&gt;&lt;a href=&#34;#硬碟用量&#34; class=&#34;headerlink&#34; title=&#34;硬碟用量&#34;&gt;&lt;/a&gt;硬碟用量&lt;/h2&gt;&lt;h3 id=&#34;檢查&#34;&gt;&lt;a href=&#34;#檢查&#34; class=&#34;headerlink&#34; title=&#34;檢查&#34;&gt;&lt;/a&gt;檢查&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;df -h&lt;/code&gt; 查看磁碟使用情形&lt;/li&gt;
&lt;li&gt;&lt;code&gt;df -i&lt;/code&gt; 檢查inode使用情形&lt;/li&gt;
&lt;li&gt;&lt;code&gt;du -sh&lt;/code&gt; 查看各資料夾用量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;du -sh * | sort -nr&lt;/code&gt; 依序列出大檔案&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -a&lt;/code&gt; 顯示隱藏檔案(&lt;code&gt;.&lt;/code&gt;開頭的檔案)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dpkg-query -Wf &amp;#39;${Installed-Size}\t${Package}\n&amp;#39; | sort -n&lt;/code&gt; 顯示已安裝的的大package&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wajig large&lt;/code&gt;&lt;!--  /lib/modules/&lt;kernel_release&gt;/extra/ --&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;apt&#34;&gt;&lt;a href=&#34;#apt&#34; class=&#34;headerlink&#34; title=&#34;apt&#34;&gt;&lt;/a&gt;apt&lt;/h3&gt;&lt;figure class=&#34;highlight dsconfig&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;sudo &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;apt &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;autoremove&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;sudo &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;apt &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;autoremove &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;--purge&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# remove old kernels&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;sudo &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;apt &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;clean &lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;# 清除 apt 快取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;git&#34;&gt;&lt;a href=&#34;#git&#34; class=&#34;headerlink&#34; title=&#34;git&#34;&gt;&lt;/a&gt;git&lt;/h3&gt;&lt;p&gt;&lt;code&gt;git gc --aggressive --prune=all&lt;/code&gt; 清理並壓縮 history&lt;/p&gt;
&lt;h3 id=&#34;docker&#34;&gt;&lt;a href=&#34;#docker&#34; class=&#34;headerlink&#34; title=&#34;docker&#34;&gt;&lt;/a&gt;docker&lt;/h3&gt;&lt;p&gt;&lt;code&gt;docker builder prune&lt;/code&gt; 移除沒在使用的build&lt;/p&gt;
&lt;h2 id=&#34;記憶體用量&#34;&gt;&lt;a href=&#34;#記憶體用量&#34; class=&#34;headerlink&#34; title=&#34;記憶體用量&#34;&gt;&lt;/a&gt;記憶體用量&lt;/h2&gt;&lt;h3 id=&#34;檢查-1&#34;&gt;&lt;a href=&#34;#檢查-1&#34; class=&#34;headerlink&#34; title=&#34;檢查&#34;&gt;&lt;/a&gt;檢查&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;free&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;硬碟容量換記憶體容量&#34;&gt;&lt;a href=&#34;#硬碟容量換記憶體容量&#34; class=&#34;headerlink&#34; title=&#34;硬碟容量換記憶體容量&#34;&gt;&lt;/a&gt;硬碟容量換記憶體容量&lt;/h3&gt;&lt;p&gt;當然，會比較慢&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3BlbmNsaS5jb20vbGludXgvbGludXgtYWRkLXN3YXA=&#34;&gt;使用 swap&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;CPU-用量&#34;&gt;&lt;a href=&#34;#CPU-用量&#34; class=&#34;headerlink&#34; title=&#34;CPU 用量&#34;&gt;&lt;/a&gt;CPU 用量&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;各process用量&lt;ul&gt;
&lt;li&gt;&lt;code&gt;top&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;htop&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kill &amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/foreign-language-police/</guid>
            <title>如何當稱職的支語警察？</title>
            <link>http://gitqwerty777.github.io/foreign-language-police/</link>
            <category>自然語言處理</category>
            <category>外國用語</category>
            <category>萌典</category>
            <category>opencc</category>
            <category>PTT</category>
            <category>vuejs</category>
            <pubDate>Sun, 13 Sep 2020 17:25:34 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;/img/Other/foreign-terms-police.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;簡介&#34;&gt;&lt;a href=&#34;#簡介&#34; class=&#34;headerlink&#34; title=&#34;簡介&#34;&gt;&lt;/a&gt;簡介&lt;/h2&gt;&lt;p&gt;PTT 上常有支語警察&lt;/p&gt;
&lt;p&gt;也常發現 google 翻譯的中文常常會&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2V0bi5jb20vTmV3cy5hc3B4P05ld3NJRD03NDY3OTM=&#34;&gt;翻譯成中國慣用語&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以就寫了一個支語警察的網站：&lt;a href=&#34;/foreign-terms-police&#34;&gt;支語警察&lt;/a&gt;&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h2 id=&#34;流程&#34;&gt;&lt;a href=&#34;#流程&#34; class=&#34;headerlink&#34; title=&#34;流程&#34;&gt;&lt;/a&gt;流程&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;文章分詞&lt;/li&gt;
&lt;li&gt;標出非台灣習慣用語&lt;/li&gt;
&lt;li&gt;從資料庫尋找對應的用語&lt;/li&gt;
&lt;li&gt;若無對應用語則尋找其解釋&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;資料庫&#34;&gt;&lt;a href=&#34;#資料庫&#34; class=&#34;headerlink&#34; title=&#34;資料庫&#34;&gt;&lt;/a&gt;資料庫&lt;/h2&gt;&lt;p&gt;基本上都是使用現有的詞典，其資料都是人工更新的，&lt;strong&gt;目前還沒有自動辨識習慣用語的方法&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;萌典&#34;&gt;&lt;a href=&#34;#萌典&#34; class=&#34;headerlink&#34; title=&#34;萌典&#34;&gt;&lt;/a&gt;萌典&lt;/h3&gt;&lt;p&gt;從萌典的兩岸字典獲取用語中台灣和中國的意思不同者(同字不同義，同義不同字)&lt;/p&gt;
&lt;h3 id=&#34;開放中文轉換-OpenCC&#34;&gt;&lt;a href=&#34;#開放中文轉換-OpenCC&#34; class=&#34;headerlink&#34; title=&#34;開放中文轉換 OpenCC&#34;&gt;&lt;/a&gt;開放中文轉換 OpenCC&lt;/h3&gt;&lt;p&gt;支持詞彙級別的轉換、異體字轉換和地區習慣用語及字體轉換（中國大陸、臺灣、香港、日本）。&lt;/p&gt;
&lt;p&gt;使用詞典對應的方式實作，像是簡體轉繁體就使用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0JZVm9pZC9PcGVuQ0MvYmxvYi9tYXN0ZXIvZGF0YS9kaWN0aW9uYXJ5L1NUUGhyYXNlcy50eHQ=&#34;&gt;此詞典&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;實作&#34;&gt;&lt;a href=&#34;#實作&#34; class=&#34;headerlink&#34; title=&#34;實作&#34;&gt;&lt;/a&gt;實作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;支援單字或文章檢測&lt;/li&gt;
&lt;li&gt;Google Trends&lt;ul&gt;
&lt;li&gt;使用台灣的搜尋趨勢比較原本用語及對應的外來用語&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;困難&#34;&gt;&lt;a href=&#34;#困難&#34; class=&#34;headerlink&#34; title=&#34;困難&#34;&gt;&lt;/a&gt;困難&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;資料庫通常沒有收錄網路流行語&lt;/li&gt;
&lt;li&gt;同詞不同義&lt;ol&gt;
&lt;li&gt;質量：中國常用於表示「品質」，但兩岸都有「重量」的意思 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucHR0LmNjL2Jicy9DX0NoYXQvTS4xNTk1NTU0NDM0LkEuNjc2Lmh0bWw=&#34;&gt;範例&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;土豆：中國為「馬鈴薯」，台灣為「花生」&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;&lt;a href=&#34;#參考資料&#34; class=&#34;headerlink&#34; title=&#34;參考資料&#34;&gt;&lt;/a&gt;參考資料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubW9lZGljdC50dy8=&#34;&gt;萌典&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0JZVm9pZC9PcGVuQ0M=&#34;&gt;OpenCC&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucHR0LmNjL2Jicy9DX0NoYXQvTS4xNTk1NTEyNDgwLkEuNTY5Lmh0bWw=&#34;&gt;[閒聊] 支語警察是誰畫的？&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/art-of-readme/</guid>
            <title>README 寫法</title>
            <link>http://gitqwerty777.github.io/art-of-readme/</link>
            <category>readme</category>
            <category>文件</category>
            <category>github</category>
            <pubDate>Mon, 07 Sep 2020 01:11:22 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;此篇文章大多參考自 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL25vZmZsZS9hcnQtb2YtcmVhZG1lL2Jsb2IvbWFzdGVyL1JFQURNRS16aC5tZA==&#34;&gt;art-of-readme&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;基本的-README-組成&#34;&gt;&lt;a href=&#34;#基本的-README-組成&#34; class=&#34;headerlink&#34; title=&#34;基本的 README 組成&#34;&gt;&lt;/a&gt;基本的 README 組成&lt;/h2&gt;&lt;p&gt;建議順序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一句話解釋模組的目的&lt;/li&gt;
&lt;li&gt;簡潔可運行的範例&lt;/li&gt;
&lt;li&gt;詳細的API文件&lt;/li&gt;
&lt;li&gt;安裝說明&lt;/li&gt;
&lt;li&gt;注意事項和限制&lt;/li&gt;
&lt;li&gt;授權條款(license)&lt;/li&gt;
&lt;li&gt;必要的背景資料或連結&lt;/li&gt;
&lt;li&gt;專業術語解譯&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;目的&#34;&gt;&lt;a href=&#34;#目的&#34; class=&#34;headerlink&#34; title=&#34;目的&#34;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;README 的目的：&lt;strong&gt;這是進行下一步之前的重要資訊&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;README 是寫給模組使用者的。&lt;/p&gt;
&lt;p&gt;README 也是寫給模組建立者的。一個沒有文件的模組，往往時隔 6 個月後，就連作者自己都會覺得陌生。每個模組的作者同時也是該模組的使用者。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;README 是使用者首先（或唯一）審視你作品的入口。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;編寫優秀的文件可以讓使用者不用閱讀原始碼就能理解你模組的精妙之處。&lt;br&gt;沒有 README 意味著開發者需要閱讀原始碼才能理解你的模組。&lt;br&gt;使用者希望模組能滿足他們的需要，所以你要清楚的說明你的模組的主要作用和優勢。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;只要你的文件是完備的，使用者就可以直接使用你的模組而無需去閱讀原始碼。透過文件可以在很大程度上將你的模組的外部介面和內部實現進行分離。這樣就可以在保持介面不變的情況下，靈活的修改內部實現。&lt;br&gt;定義模組的是文件而不是程式碼。 ——&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21hdGhmb3J1bS5vcmcva2VuL3BlcmxfbW9kdWxlcy5odG1sI2RvY3VtZW50&#34;&gt;Ken Williams&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;目標&#34;&gt;&lt;a href=&#34;#目標&#34; class=&#34;headerlink&#34; title=&#34;目標&#34;&gt;&lt;/a&gt;目標&lt;/h2&gt;&lt;p&gt;讓讀者了解&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;這是什麼&lt;/li&gt;
&lt;li&gt;使用情境&lt;/li&gt;
&lt;li&gt;如何使用&lt;/li&gt;
&lt;li&gt;實作及相關細節&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;原則&#34;&gt;&lt;a href=&#34;#原則&#34; class=&#34;headerlink&#34; title=&#34;原則&#34;&gt;&lt;/a&gt;原則&lt;/h2&gt;&lt;h3 id=&#34;簡潔&#34;&gt;&lt;a href=&#34;#簡潔&#34; class=&#34;headerlink&#34; title=&#34;簡潔&#34;&gt;&lt;/a&gt;簡潔&lt;/h3&gt;&lt;p&gt;理想的 README 應該儘可能的短。詳細的文件可以在單獨的頁面裡描述&lt;/p&gt;
&lt;h3 id=&#34;快速理解&#34;&gt;&lt;a href=&#34;#快速理解&#34; class=&#34;headerlink&#34; title=&#34;快速理解&#34;&gt;&lt;/a&gt;快速理解&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;這些關鍵要素的排序應該&lt;strong&gt;讓人儘快放棄你的模組&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;當你用利他主義思想來做的時候，不是為了銷售給別人，而是為了讓人們儘可能客觀公正的評估你的作品，並判斷是否滿足他們的需要。而不是讓你的下載量和使用者數最大化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;方法&#34;&gt;&lt;a href=&#34;#方法&#34; class=&#34;headerlink&#34; title=&#34;方法&#34;&gt;&lt;/a&gt;方法&lt;/h2&gt;&lt;h3 id=&#34;使用模版&#34;&gt;&lt;a href=&#34;#使用模版&#34; class=&#34;headerlink&#34; title=&#34;使用模版&#34;&gt;&lt;/a&gt;使用模版&lt;/h3&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL25vZmZsZS9jb21tb24tcmVhZG1l&#34;&gt;common-readme&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;用的文件格式，一個README寫作指南和方便的command-line生成器。&lt;br&gt;你也可以在&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3JpY2hhcmRsaXR0L3N0YW5kYXJkLXJlYWRtZQ==&#34;&gt;標準Readme(standard readme)&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;中領略下更具結構化的通用Readme格式。&lt;/p&gt;
&lt;h3 id=&#34;以史為鑑&#34;&gt;&lt;a href=&#34;#以史為鑑&#34; class=&#34;headerlink&#34; title=&#34;以史為鑑&#34;&gt;&lt;/a&gt;以史為鑑&lt;/h3&gt;&lt;p&gt;古人云：以史為鑑，可以知興替。&lt;br&gt;開發者編寫文件已經有多年的歷史了。值得我們花時間去看看之前人們是怎麼正確寫文件的。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;註：就是抄別人的&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&#34;順序：以使用者的角度分析&#34;&gt;&lt;a href=&#34;#順序：以使用者的角度分析&#34; class=&#34;headerlink&#34; title=&#34;順序：以使用者的角度分析&#34;&gt;&lt;/a&gt;順序：以使用者的角度分析&lt;/h3&gt;&lt;p&gt;當我想要一個 2D 碰撞檢測模組時我找到了&lt;a href=&#34;https://github.com/noffle/collide-2d-aabb-aabb&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;&lt;code&gt;collide-2d-aabb-aabb&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我開始從頭開始檢查這個模組：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;取名&lt;/strong&gt;：名字要能做到“其義自見”。&lt;code&gt;collide-2d-aabb-aabb&lt;/code&gt; 聽起來是個不錯的匹配，儘管它假設我知道”aabb”是什麼意思。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;簡介&lt;/strong&gt;：透過一句話簡明扼要的說明了這個模組是做什麼的。&lt;ol&gt;
&lt;li&gt;&lt;code&gt;collide-2d-aabb-aabb&lt;/code&gt; 的描述是：&lt;blockquote&gt;
&lt;p&gt;Determines whether a moving axis-aligned bounding box (AABB) collides with other AABBs.&lt;br&gt;太棒了 —— 描述了 AABB 的定義是什麼，並且說明了這個模組是做什麼的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用法&lt;/strong&gt;：在開始探究 API 文件之前，最好看看這個模組在實際應用中是什麼樣子。我可以快速決定用js寫的範例程式是否符合我的程式碼樣式和我要解決的問題。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API&lt;/strong&gt;：模組的名字，描述和使用方法都符合我的胃口。在這一點上我很樂意使用這個模組。我需要瀏覽API來確定這就是我需要的，並且很容易整合到我的程式碼中。API 部分應該詳述模組的物件和函式，以及它們的定義、回傳值和事件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安裝&lt;/strong&gt;：如果不是通用的安裝說明，就需要在這兒進行描述。即使是一句簡單的&lt;code&gt;npm install&lt;/code&gt;也好。 對於使用Node的新使用者來說，放一個指向npmjs.org的連結和安裝命令，可以讓使用者快速上手使用模組。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;授權&lt;/strong&gt;：大多數模組把這個放在最末尾，但是最好還是往前放一些；非常有可能在把這個模組整合完後才發現授權協議不合適。我通常使用 MIT/BSD/X11/ISC。如果你的協議不是很寬容，最好是放到最前面。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;順序：認知漏斗&#34;&gt;&lt;a href=&#34;#順序：認知漏斗&#34; class=&#34;headerlink&#34; title=&#34;順序：認知漏斗&#34;&gt;&lt;/a&gt;順序：認知漏斗&lt;/h3&gt;&lt;p&gt;可以想象成是一個直立的漏斗，越往下移動細節越具體，最寬的部分相關細節最寬泛，只有對你的作品足夠感興趣的人才會關注這部分內容。最後，底部可以放一些作品背景的細節&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Perl模組的文件對於細節的描述是從少到多的。&lt;br&gt;你的簡介部分應該包含一個小的例子程式&lt;br&gt;（或許只有一行程式碼，省略掉不常用的用例或大多數使用者用不到的功能）&lt;br&gt;描述部分應該從總體上描述你的模組，&lt;br&gt;通常只需要幾個段落；在隨後的章節中再詳細描述模組的例程或方法，長的程式碼示例，或其它的資料。&lt;br&gt;理想情況下，在點“下一頁”之前就能讓人大體上了解你的模組。&lt;br&gt;隨著使用者繼續閱讀文件，他們能夠漸進的獲得更多的知識。&lt;br&gt; —— &lt;code&gt;perlmodstyle&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;實作&#34;&gt;&lt;a href=&#34;#實作&#34; class=&#34;headerlink&#34; title=&#34;實作&#34;&gt;&lt;/a&gt;實作&lt;/h2&gt;&lt;p&gt;&lt;mark&gt;API改的越多，越要努力的去更新文件&lt;/mark&gt;&lt;/p&gt;
&lt;h3 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;如果你的模組依賴於重要但是不為人所熟知的抽象或生態系統，考慮包含一個 &lt;strong&gt;背景知識&lt;/strong&gt; 部分 (background)。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/noffle/bisecting-between&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;&lt;code&gt;bisecting-between&lt;/code&gt;&lt;/a&gt;的函式從它的名字上看不是特別明顯，所以在背景部分會描述定義，並且給出具體概念和抽象的連結，以便需要的人去使用和獲取。如果已經有相似的模組在npm上存在了，這兒也是一個非常適合描述建立模組的動機的地方&lt;/p&gt;
&lt;h3 id=&#34;連結&#34;&gt;&lt;a href=&#34;#連結&#34; class=&#34;headerlink&#34; title=&#34;連結&#34;&gt;&lt;/a&gt;連結&lt;/h3&gt;&lt;p&gt;如果你談及其它的模組，想法，或者其他人的時候，在相關的引用內容上加上連結，這樣訪客就可以很容易的得到你的模組背後的想法。極少有模組是憑空誕生的：所有的作品來源於其它作品，因此很有必要讓使用者追溯你的模組的歷史和靈感&lt;/p&gt;
&lt;h3 id=&#34;範例檔案&#34;&gt;&lt;a href=&#34;#範例檔案&#34; class=&#34;headerlink&#34; title=&#34;範例檔案&#34;&gt;&lt;/a&gt;範例檔案&lt;/h3&gt;&lt;p&gt;範例程式碼在repo中以檔案的形式體現 – 例如&lt;code&gt;example.js&lt;/code&gt;。這樣當用戶clone專案後，就可以直接執行README中提及的程式碼&lt;/p&gt;
&lt;h3 id=&#34;徽章-badge&#34;&gt;&lt;a href=&#34;#徽章-badge&#34; class=&#34;headerlink&#34; title=&#34;徽章(badge)&#34;&gt;&lt;/a&gt;徽章(badge)&lt;/h3&gt;&lt;p&gt;使用徽章要慎重。經常會被濫用。它們會容易引起爭論。它們在你的README中加入了視覺噪聲，並且只有當用戶在聯網的瀏覽器裡閱讀你的markdown時才能看到徽章，因為圖片是存放在網際網路上的其它地方。對於每一個徽章，需要考慮：README中的徽章提供給典型讀者的真實含義是什麼？用一個CI徽章來顯示build/test狀態？這個訊號更應該發郵件給維護者，或者自動建立一個issue – 永遠要考慮你的README中的資料的受眾並且自問一下是否有一個流程能夠讓資料更好的送達到目標受眾。&lt;/p&gt;
&lt;h3 id=&#34;API&#34;&gt;&lt;a href=&#34;#API&#34; class=&#34;headerlink&#34; title=&#34;API&#34;&gt;&lt;/a&gt;API&lt;/h3&gt;&lt;p&gt;API 文件格式沒有局限。使用任何你認為是清晰的格式，但是要包含重要的細節：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;引數是否可選，以及預設值&lt;/li&gt;
&lt;li&gt;包含型別資訊，如果型別不能清楚的根據約定進行體現&lt;/li&gt;
&lt;li&gt;對於 &lt;code&gt;opts&lt;/code&gt; 物件引數，描述它所接受的所有的 keys 和 values&lt;/li&gt;
&lt;li&gt;為每個API提供一個小的呼叫示例，如果它們的用法不明顯或是在用法部分沒有體現。&lt;ol&gt;
&lt;li&gt;不過，也有可能是函式太複雜了，需要進行重構，劃分成更細粒度的函式，或者整體刪除。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;為特殊術語建立連結! 在markdown中你可以把&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kYXJpbmdmaXJlYmFsbC5uZXQvcHJvamVjdHMvbWFya2Rvd24vc3ludGF4I2xpbms=&#34;&gt;腳註&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt; 放在文件的末尾，可以很方便的多次引用它們。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL25vZmZsZS9jb21tb24tcmVhZG1lL2Jsb2IvbWFzdGVyL2FwaV9mb3JtYXR0aW5nLm1k&#34;&gt;這兒&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;有一些我的API文件格式的個人偏好。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;放一些呼叫和返回值的範例&lt;ul&gt;
&lt;li&gt;如果你的模組提供了 CLI (command line interface)而不是 API，用命令呼叫的方式展示呼叫示例和輸出。如果你建立了或更改了一個檔案，&lt;code&gt;cat&lt;/code&gt; 它來展示更改前後的變化。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;關鍵字&#34;&gt;&lt;a href=&#34;#關鍵字&#34; class=&#34;headerlink&#34; title=&#34;關鍵字&#34;&gt;&lt;/a&gt;關鍵字&lt;/h3&gt;&lt;p&gt;github 和 npm 皆有提供手動填寫關鍵字(tag)&lt;/p&gt;
&lt;h3 id=&#34;內嵌圖片&#34;&gt;&lt;a href=&#34;#內嵌圖片&#34; class=&#34;headerlink&#34; title=&#34;內嵌圖片&#34;&gt;&lt;/a&gt;內嵌圖片&lt;/h3&gt;&lt;p&gt;最後，請記住你的程式碼倉庫和其中的README存在的時間要比你的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29t&#34;&gt;程式碼倉庫託管主機&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;和你連結到的其它任何東西–特別是圖片–的時間都要長久。所以&lt;strong&gt;內嵌任何對將來要獲取你的作品的使用者來說是重要的東西&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;註：還是可以上傳到圖床或Youtube等，但是要將這些圖片、影片等額外的資源也放在版本控制中&lt;/p&gt;
&lt;h2 id=&#34;心得&#34;&gt;&lt;a href=&#34;#心得&#34; class=&#34;headerlink&#34; title=&#34;心得&#34;&gt;&lt;/a&gt;心得&lt;/h2&gt;&lt;p&gt;我個人使用Repo的順序&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;觀察&lt;ol&gt;
&lt;li&gt;會看主要使用的程式語言、支援的OS&lt;/li&gt;
&lt;li&gt;Description: 一句話形容Repo的作用&lt;/li&gt;
&lt;li&gt;指令、圖片、影片或是線上的使用範例&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;決定試用&lt;ol&gt;
&lt;li&gt;安裝方法、或是Release可直接下載&lt;/li&gt;
&lt;li&gt;實際使用&lt;ol&gt;
&lt;li&gt;使用失敗：回去看Document或README&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;覺得好用：Star&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;實例評價&#34;&gt;&lt;a href=&#34;#實例評價&#34; class=&#34;headerlink&#34; title=&#34;實例評價&#34;&gt;&lt;/a&gt;實例評價&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0dhbGl0eTM2OS9DUy1Mb2FkZXI=&#34;&gt;CS-Loader&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;About欄位：CS免殺&lt;ul&gt;
&lt;li&gt;Google後才知道是繞過掃毒軟體的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;❌沒有對專有名詞的說明&lt;/li&gt;
&lt;li&gt;❌沒有使用方法&lt;/li&gt;
&lt;li&gt;只看README的話我是完全不會用的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL251bXRpZGUvZGV2c2hlbGw=&#34;&gt;devshell&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;副標題: ⭕like virtualenv, but for all the languages&lt;ul&gt;
&lt;li&gt;有用過Python的virtualenv的人可以馬上理解&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;About欄位: ➖Per project developer environments&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9udW10aWRlLmdpdGh1Yi5pby9kZXZzaGVsbC9pbnRyby5odG1s&#34;&gt;文件&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;: ❌沒有簡短的設定教學&lt;!-- - TODO: --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/vuejs/</guid>
            <title>vuejs 語法</title>
            <link>http://gitqwerty777.github.io/vuejs/</link>
            <category>vuejs</category>
            <category>javascript</category>
            <pubDate>Sun, 06 Sep 2020 14:50:12 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;因為mustache語法(雙大括號)會被判斷成render命令，改成全形符號&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;簡介&#34;&gt;&lt;a href=&#34;#簡介&#34; class=&#34;headerlink&#34; title=&#34;簡介&#34;&gt;&lt;/a&gt;簡介&lt;/h2&gt;&lt;p&gt;採用簡潔的模板語法來宣告式地將資料渲染進 DOM 的系統&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- html part --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;app&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ｛｛ message ｝｝&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//js part&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; app = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#app&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    message: &lt;span class=&#34;string&#34;&gt;&#39;Hello Vue.js!&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    todo: []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  methods: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reverseMessage: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.message = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.message.split(&lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;).reverse().join(&lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 html tag 中 加入&lt;code&gt;v-&lt;/code&gt;開頭的attributes以實作邏輯&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h2 id=&#34;元件化應用構建&#34;&gt;&lt;a href=&#34;#元件化應用構建&#34; class=&#34;headerlink&#34; title=&#34;元件化應用構建&#34;&gt;&lt;/a&gt;元件化應用構建&lt;/h2&gt;&lt;p&gt;&lt;code&gt;v-bind&lt;/code&gt;: todo-item 元件接受一個”prop”，類似於一個自定義 attribute。這個 prop 名為 todo。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div id=&lt;span class=&#34;string&#34;&gt;&#34;app&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;ol&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;todo-item&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v-&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;item in groceryList&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v-bind:todo=&lt;span class=&#34;string&#34;&gt;&#34;item&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v-bind:key=&lt;span class=&#34;string&#34;&gt;&#34;item.id&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/todo-item&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;/&lt;/span&gt;ol&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;Vue.component(&#39;todo-item&#39;, &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  props: [&#39;todo&#39;],&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  template: &#39;&amp;lt;li&amp;gt;｛｛ todo.text ｝｝&amp;lt;/&lt;/span&gt;li&amp;gt;&lt;span class=&#34;string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var app = new Vue(&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &#39;#app&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    groceryList: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;text&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#39;蔬菜&#39;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;text&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#39;乳酪&#39;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;text&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#39;隨便其它什麼人吃的東西&#39;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Instance&#34;&gt;&lt;a href=&#34;#Instance&#34; class=&#34;headerlink&#34; title=&#34;Instance&#34;&gt;&lt;/a&gt;Instance&lt;/h2&gt;&lt;p&gt;用 Vue 函式建立一個新的 Vue 例項&lt;br&gt;當一個 Vue 例項被建立時，它將 data 物件中的所有的 property 加入到 Vue 的響應式系統中&lt;br&gt;只有當例項被建立時就已經存在於 data 中的 property 才是響應式的&lt;br&gt;唯一的例外是使用&lt;code&gt;Object.freeze()&lt;/code&gt;，這會阻止修改現有的 property，也意味著響應系統無法再追蹤變化。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 我們的資料物件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; data = &amp;#123; &lt;span class=&#34;attr&#34;&gt;a&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 該物件被加入到一個 Vue 例項中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; vm = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#example&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 獲得這個例項上的 property&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 返回源資料中對應的欄位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.a == data.a &lt;span class=&#34;comment&#34;&gt;// =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 設定 property 也會影響到原始資料&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.a = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.a &lt;span class=&#34;comment&#34;&gt;// =&amp;gt; 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ……反之亦然&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.a = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.a &lt;span class=&#34;comment&#34;&gt;// =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.$data === data &lt;span class=&#34;comment&#34;&gt;// =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.$el === &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&#34;string&#34;&gt;&#39;example&#39;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// $watch 是一個例項方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.$watch(&lt;span class=&#34;string&#34;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;newValue, oldValue&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 這個回撥將在 `vm.a` 改變後呼叫&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;生命週期鉤子&#34;&gt;&lt;a href=&#34;#生命週期鉤子&#34; class=&#34;headerlink&#34; title=&#34;生命週期鉤子&#34;&gt;&lt;/a&gt;生命週期鉤子&lt;/h2&gt;&lt;p&gt;&lt;code&gt;created&lt;/code&gt;、&lt;code&gt;mounted&lt;/code&gt;、&lt;code&gt;updated&lt;/code&gt; 和 &lt;code&gt;destroyed&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不要在選項 property 或 callback 使用箭頭函式&lt;/strong&gt;。因為箭頭函式並沒有 this，this 會作為變數一直向上級詞法作用域查詢，直至找到為止，經常導致 Uncaught TypeError: Cannot read property of undefined 或 Uncaught TypeError: this.myMethod is not a function 之類的錯誤。&lt;/p&gt;
&lt;h2 id=&#34;資料繫結&#34;&gt;&lt;a href=&#34;#資料繫結&#34; class=&#34;headerlink&#34; title=&#34;資料繫結&#34;&gt;&lt;/a&gt;資料繫結&lt;/h2&gt;&lt;p&gt;資料繫結最常見的形式就是使用“Mustache”語法 (雙大括號) 的文字插值：&lt;br&gt;雙大括號會將資料解釋為普通文字，而非 HTML 程式碼&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;span&amp;gt;Message: ｛｛ msg ｝｝&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可使用表示式&lt;br&gt;&lt;code&gt;｛｛ ok ? &amp;#39;YES&amp;#39; : &amp;#39;NO&amp;#39; ｝｝&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;透過使用 &lt;code&gt;v-once&lt;/code&gt; 指令，你也能執行一次性地插值，當資料改變時，插值處的內容不會更新。但請留心這會影響到該節點上的其它資料繫結：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;span v-once&amp;gt;這個將不會改變: ｛｛ msg ｝｝&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;為了輸出真正的 HTML，你需要使用 &lt;code&gt;v-html&lt;/code&gt; 指令&lt;br&gt;&lt;code&gt;&amp;lt;p&amp;gt;Using v-html directive: &amp;lt;span v-html=&amp;quot;rawHtml&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;strong&gt;動態渲染 HTML 可能會非常危險，因為它很容易導致 XSS 攻擊。請只對可信內容使用 HTML 插值，絕不要對使用者提供的內容使用插值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Mustache 語法不能作用在 HTML attribute 上，應該使用 &lt;code&gt;v-bind&lt;/code&gt; 指令：&lt;br&gt;&lt;code&gt;&amp;lt;div v-bind:id=&amp;quot;dynamicId&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;div v-bind:id=&amp;quot;&amp;#39;list-&amp;#39; + id&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;指令&#34;&gt;&lt;a href=&#34;#指令&#34; class=&#34;headerlink&#34; title=&#34;指令&#34;&gt;&lt;/a&gt;指令&lt;/h2&gt;&lt;p&gt;指令 (Directives) 是帶有 &lt;code&gt;v-&lt;/code&gt; 字首的特殊 attribute。&lt;br&gt;指令 attribute 的值預期是單個 JavaScript 表示式 (&lt;code&gt;v-for&lt;/code&gt; 是例外)。&lt;br&gt;指令的職責是，當表示式的值改變時，將其產生的連帶影響，響應式地作用於 DOM。&lt;/p&gt;
&lt;p&gt;一些指令能夠接收一個“引數”，在指令名稱之後以冒號表示。例如，&lt;code&gt;v-bind&lt;/code&gt; 指令可以用於響應式地更新 HTML attribute&lt;br&gt;&lt;code&gt;&amp;lt;a v-bind:href&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;從 2.6.0 開始，可以用方括號括起來的 JavaScript 表示式作為一個指令的引數：&lt;br&gt;&lt;code&gt;&amp;lt;a v-bind:[attributeName]=&amp;quot;url&amp;quot;&amp;gt; ... &amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;動態引數預期會求出一個字串，異常情況下值為 null。這個特殊的 null 值可以用於移除繫結。任何其它非字串型別的值都將會觸發一個警告。&lt;/p&gt;
&lt;h3 id=&#34;修飾符&#34;&gt;&lt;a href=&#34;#修飾符&#34; class=&#34;headerlink&#34; title=&#34;修飾符&#34;&gt;&lt;/a&gt;修飾符&lt;/h3&gt;&lt;p&gt;修飾符 (modifier) 是以 &lt;code&gt;.&lt;/code&gt; 指明的特殊字尾，用於指出一個指令應該以特殊方式繫結。例如&lt;code&gt;.prevent&lt;/code&gt; 修飾符告訴 &lt;code&gt;v-on&lt;/code&gt; 指令對於觸發的事件呼叫 &lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;form v-on:submit.prevent=&amp;quot;onSubmit&amp;quot;&amp;gt;...&amp;lt;/form&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Vue 為 &lt;code&gt;v-bind&lt;/code&gt; 和 &lt;code&gt;v-on&lt;/code&gt; 這兩個最常用的指令，提供了特定簡寫：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 完整語法 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-bind:href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;url&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 縮寫 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;:href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;url&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 完整語法 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doSomething&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 縮寫 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; @&lt;span class=&#34;attr&#34;&gt;click&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doSomething&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;計算屬性-computed&#34;&gt;&lt;a href=&#34;#計算屬性-computed&#34; class=&#34;headerlink&#34; title=&#34;計算屬性(computed)&#34;&gt;&lt;/a&gt;計算屬性(computed)&lt;/h3&gt;&lt;p&gt;對於任何複雜邏輯，你都應當使用計算屬性&lt;br&gt;計算屬性只在相關響應式依賴發生改變時它們才會重新求值，這是比使用function好的地方&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; vm = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#app&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    message: &lt;span class=&#34;string&#34;&gt;&#39;Hello&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  computed: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 計算屬性的 getter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reversedMessage: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// `this` 指向 vm 例項&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.message.split(&lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;).reverse().join(&lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;//olleH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下面的計算屬性將不再更新，因為 Date.now() 不是響應式依賴：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;computed: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  now: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Date&lt;/span&gt;.now()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;計算屬性預設只有 getter，不過在需要時你也可以提供一個 setter：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;computed: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fullName: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// getter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;get&lt;/span&gt;: function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.firstName + &lt;span class=&#34;string&#34;&gt;&#39; &#39;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.lastName&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// better than set two variables seperately&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt;: function (newValue) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; names = newValue.split(&lt;span class=&#34;string&#34;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.firstName = names[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.lastName = names[names.length - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;watch&#34;&gt;&lt;a href=&#34;#watch&#34; class=&#34;headerlink&#34; title=&#34;watch&#34;&gt;&lt;/a&gt;watch&lt;/h3&gt;&lt;p&gt;監視某個資料，當其發生改變，這個函式就會執行&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div id=&lt;span class=&#34;string&#34;&gt;&#34;watch-example&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Ask a yes/no question:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;input v-model=&lt;span class=&#34;string&#34;&gt;&#34;question&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;p&amp;gt;｛｛ answer ｝｝&amp;lt;/&lt;/span&gt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;!-- 因為 AJAX 庫和通用工具的生態已經相當豐富，Vue 核心程式碼沒有重複 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;!-- 提供這些功能以保持精簡。這也可以讓你自由選擇自己更熟悉的工具。 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;script src=&#34;https:/&lt;/span&gt;&lt;span class=&#34;regexp&#34;&gt;/cdn.jsdelivr.net/&lt;/span&gt;npm/axios@&lt;span class=&#34;number&#34;&gt;0.12&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;/dist/axios.min.js&lt;span class=&#34;string&#34;&gt;&#34;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;script src=&#34;&lt;/span&gt;https:&lt;span class=&#34;comment&#34;&gt;//cdn.jsdelivr.net/npm/lodash@4.13.1/lodash.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; watchExampleVM = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#watch-example&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    question: &lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    answer: &lt;span class=&#34;string&#34;&gt;&#39;I cannot give you an answer until you ask a question!&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  watch: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果 `question` 發生改變，這個函式就會執行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    question: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;newQuestion, oldQuestion&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.answer = &lt;span class=&#34;string&#34;&gt;&#39;Waiting for you to stop typing...&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.debouncedGetAnswer()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  created: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// `_.debounce` 是一個透過 Lodash 限制操作頻率的函式。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 在這個例子中，我們希望限制訪問 yesno.wtf/api 的頻率&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// AJAX 請求直到使用者輸入完畢才會發出。想要瞭解更多關於&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// `_.debounce` 函式 (及其近親 `_.throttle`) 的知識，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 請參考：https://lodash.com/docs#debounce&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.debouncedGetAnswer = _.debounce(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.getAnswer, &lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  methods: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    getAnswer: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.question.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;?&#39;&lt;/span&gt;) === &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.answer = &lt;span class=&#34;string&#34;&gt;&#39;Questions usually contain a question mark. ;-)&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.answer = &lt;span class=&#34;string&#34;&gt;&#39;Thinking...&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; vm = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      axios.get(&lt;span class=&#34;string&#34;&gt;&#39;https://yesno.wtf/api&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .then(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;response&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          vm.answer = _.capitalize(response.data.answer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .catch(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;error&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          vm.answer = &lt;span class=&#34;string&#34;&gt;&#39;Error! Could not reach the API. &#39;&lt;/span&gt; + error&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Class-與-Style-繫結&#34;&gt;&lt;a href=&#34;#Class-與-Style-繫結&#34; class=&#34;headerlink&#34; title=&#34;Class 與 Style 繫結&#34;&gt;&lt;/a&gt;Class 與 Style 繫結&lt;/h2&gt;&lt;p&gt;&lt;code&gt;&amp;lt;div v-bind:class=&amp;quot;{ active: isActive }&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;br&gt;上面的語法表示 active 這個 class 存在與否將取決於資料 property isActive 的 truthiness。&lt;/p&gt;
&lt;p&gt;我們也可以在這裡繫結一個返回物件的計算屬性。這是一個常用且強大的模式：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div v-bind:&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;classObject&#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;data: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  isActive: true,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  error: null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;computed: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  classObject: function () &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    return &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      active: this.isActive &amp;amp;&amp;amp; !this.error,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &#39;text-danger&#39;: this.error &amp;amp;&amp;amp; this.error.type === &#39;fatal&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;陣列語法中也可以使用物件語法：&lt;br&gt;&lt;code&gt;&amp;lt;div v-bind:class=&amp;quot;[{ active: isActive }, errorClass]&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;v-if&#34;&gt;&lt;a href=&#34;#v-if&#34; class=&#34;headerlink&#34; title=&#34;v-if&#34;&gt;&lt;/a&gt;v-if&lt;/h3&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-if&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;type === &#39;A&#39;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-else-if&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;type === &#39;B&#39;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-else-if&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;type === &#39;C&#39;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  C&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-else&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Not A/B/C&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在html用&lt;code&gt;template&lt;/code&gt;作為隱形元素，不渲染&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;template v-&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;ok&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;h1&amp;gt;Title&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;p&amp;gt;Paragraph 1&amp;lt;/&lt;/span&gt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;p&amp;gt;Paragraph &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/&lt;/span&gt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Vue 會儘可能高效地渲染元素，通常會復用已有元素而不是從頭開始渲染。這麼做除了使 Vue 變得非常快之外，還有其它一些好處。例如，如果你允許使用者在不同的登入方式之間切換：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;template v-&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;loginType === &#39;username&#39;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;label&amp;gt;Username&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;input placeholder=&#34;Enter your username&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/&lt;/span&gt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;template v-&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;label&amp;gt;Email&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;input placeholder=&#34;Enter your email address&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/&lt;/span&gt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;那麼在上面的程式碼中切換 loginType 將不會清除使用者已經輸入的內容。因為兩個模板使用了相同的元素，&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 不會被替換掉——僅僅是替換了它的 placeholder。&lt;/p&gt;
&lt;p&gt;帶有 &lt;code&gt;v-show&lt;/code&gt; 的元素始終會被渲染並保留在 DOM 中。&lt;code&gt;v-show&lt;/code&gt; 只是簡單地切換元素的 CSS property display。&lt;br&gt;注意，&lt;code&gt;v-show&lt;/code&gt; 不支援 &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; 元素，也不支援 &lt;code&gt;v-else&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v-if&lt;/code&gt; 是“真正”的條件渲染，因為它會確保在切換過程中條件塊內的事件監聽器和子元件適當地被銷毀和重建。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v-if&lt;/code&gt; 也是惰性的：如果在初始渲染時條件為假，則什麼也不做——直到條件第一次變為真時，才會開始渲染條件塊。&lt;/p&gt;
&lt;p&gt;相比之下，&lt;code&gt;v-show&lt;/code&gt; 就簡單得多——不管初始條件是什麼，元素總是會被渲染，並且只是簡單地基於 CSS 進行切換。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般來說，v-if 有更高的切換開銷，而 v-show 有更高的初始渲染開銷。因此，如果需要非常頻繁地切換，則使用 v-show 較好；如果在執行時條件很少改變，則使用 v-if 較好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;不推薦同時使用 v-if 和 v-for&lt;/strong&gt;。請查閱風格指南以獲取更多資訊。&lt;/p&gt;
&lt;h3 id=&#34;v-for&#34;&gt;&lt;a href=&#34;#v-for&#34; class=&#34;headerlink&#34; title=&#34;v-for&#34;&gt;&lt;/a&gt;v-for&lt;/h3&gt;&lt;p&gt;&lt;code&gt;v-for&lt;/code&gt; 還支援一個可選的第二個引數，即當前項的索引。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;ul id=&lt;span class=&#34;string&#34;&gt;&#34;example-2&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;li v-&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;(item, index) in items&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ｛｛ parentMessage ｝｝ - ｛｛ index ｝｝ - ｛｛ item.message ｝｝&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/u&lt;/span&gt;l&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;你也可以用 &lt;code&gt;of&lt;/code&gt; 替代 &lt;code&gt;in&lt;/code&gt; 作為分隔符，因為它更接近 JavaScript 迭代器的語法：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;div v-for=&amp;quot;item of items&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以用 &lt;code&gt;v-for&lt;/code&gt; 來遍歷一個物件的 property。&lt;br&gt;也可以提供第二個的引數為 property 名稱 (也就是key)&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;ul id=&lt;span class=&#34;string&#34;&gt;&#34;v-for-object&#34;&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;demo&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;li v-&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;value in object&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ｛｛ value ｝｝&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/u&lt;/span&gt;l&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!-- 在遍歷物件時，會按 &lt;span class=&#34;built_in&#34;&gt;Object&lt;/span&gt;.keys() 的結果遍歷，但是不能保證它的結果在不同的 JavaScript 引擎下都一致。 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div v-&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;(value, name) in object&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ｛｛ name ｝｝: ｛｛ value ｝｝&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;v-for&lt;/code&gt; 渲染的元素列表時，它預設使用“就地更新”的策略。如果資料項的順序被改變，Vue 將不會移動 DOM 元素來匹配資料項的順序，而是就地更新每個元素，並且確保它們在每個索引位置正確渲染&lt;/p&gt;
&lt;p&gt;這個預設的模式是高效的，但是隻適用於不依賴子元件狀態或臨時 DOM 狀態 (例如：表單輸入值) 的列表渲染輸出。&lt;/p&gt;
&lt;p&gt;為了給 Vue 一個提示，以便它能跟蹤每個節點的身份，從而重用和重新排序現有元素，&lt;strong&gt;你需要為每項提供一個唯一的 key attribute&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;自動檢測變化的限制&#34;&gt;&lt;a href=&#34;#自動檢測變化的限制&#34; class=&#34;headerlink&#34; title=&#34;自動檢測變化的限制&#34;&gt;&lt;/a&gt;自動檢測變化的限制&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;由於 JavaScript 的限制，Vue 不能檢測陣列(array)和物件(object)的變化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Vue 將被偵聽的陣列的變更方法進行了包裹，所以它們也將會觸發檢視更新。這些被包裹過的方法包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pop()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shift()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unshift()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相比之下，也有非變更方法，例如 &lt;code&gt;filter()&lt;/code&gt;、&lt;code&gt;concat()&lt;/code&gt; 和 &lt;code&gt;slice()&lt;/code&gt;。它們不會變更原始陣列，而總是返回一個新陣列&lt;/p&gt;
&lt;h3 id=&#34;is&#34;&gt;&lt;a href=&#34;#is&#34; class=&#34;headerlink&#34; title=&#34;is&#34;&gt;&lt;/a&gt;is&lt;/h3&gt;&lt;p&gt;注意這裡的 &lt;code&gt;is=&amp;quot;todo-item&amp;quot;&lt;/code&gt; attribute。這種做法在使用 DOM 模板時是十分必要的，因為在 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 元素內只有 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素會被看作有效內容。這樣做實現的效果與 &lt;code&gt;&amp;lt;todo-item&amp;gt;&lt;/code&gt; 相同，但是可以避開一些潛在的瀏覽器解析錯誤。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;todo-list-example&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:submit.prevent&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;addNewTodo&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;new-todo&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;Add a todo&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;newTodoText&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;new-todo&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;placeholder&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;E.g. Feed the cat&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;Add&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;is&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;todo-item&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;v-for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;(todo, index) in todos&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;v-bind:key&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;todo.id&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;v-bind:title&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;todo.title&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;v-on:remove&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;todos.splice(index, 1)&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    &amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;v-on-dom-event&#34;&gt;&lt;a href=&#34;#v-on-dom-event&#34; class=&#34;headerlink&#34; title=&#34;v-on: dom event&#34;&gt;&lt;/a&gt;v-on: dom event&lt;/h3&gt;&lt;p&gt;用特殊變數 &lt;code&gt;$event&lt;/code&gt;訪問原始的 DOM 事件&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;button v-on:click=&lt;span class=&#34;string&#34;&gt;&#34;warn(&#39;Form cannot be submitted yet.&#39;, $event)&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Submit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;regexp&#34;&gt;/ ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;methods: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  warn: function (message, event) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    /&lt;/span&gt;&lt;span class=&#34;regexp&#34;&gt;/ 現在我們可以訪問原生事件物件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    if (event) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      event.preventDefault()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    alert(message)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Vue.js 為 &lt;code&gt;v-on&lt;/code&gt; 提供了事件修飾符。之前提過，修飾符是由點開頭的指令字尾來表示的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.prevent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.capture&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.self&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.once&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.passive&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 阻止單擊事件繼續傳播 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.stop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doThis&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 提交事件不再過載頁面 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:submit.prevent&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;onSubmit&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 修飾符可以串聯 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.stop.prevent&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doThat&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 只有修飾符 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:submit.prevent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 新增事件監聽器時使用事件捕獲模式 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 即內部元素觸發的事件先在此處理，然後才交由內部元素進行處理 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.capture&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doThis&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 只當在 event.target 是當前元素自身時觸發處理函式 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 即事件不是從內部元素觸發的 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.self&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doThat&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;v-on-input&#34;&gt;&lt;a href=&#34;#v-on-input&#34; class=&#34;headerlink&#34; title=&#34;v-on: input&#34;&gt;&lt;/a&gt;v-on: input&lt;/h2&gt;&lt;p&gt;Vue 允許為 &lt;code&gt;v-on&lt;/code&gt; 在監聽鍵盤事件時新增按鍵修飾符：&lt;br&gt;你可以直接將 KeyboardEvent.key 暴露的任意有效按鍵名轉換為 kebab-case 來作為修飾符。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 只有在 `key` 是 `Enter` 時呼叫 `vm.submit()` --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:keyup.enter&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;submit&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:keyup.page-down&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;onPageDown&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 即使 Alt 或 Shift 被一同按下時也會觸發 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.ctrl&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;onClick&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;A&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 有且只有 Ctrl 被按下的時候才觸發 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.ctrl.exact&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;onCtrlClick&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;A&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;滑鼠按鈕修飾符&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.left&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.right&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.middle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-model-Input&#34;&gt;&lt;a href=&#34;#v-model-Input&#34; class=&#34;headerlink&#34; title=&#34;v-model: Input&#34;&gt;&lt;/a&gt;v-model: Input&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;這是 Vue 完全贏過 React 的部分&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你可以用 &lt;code&gt;v-model&lt;/code&gt; 指令在表單 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 及 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 元素上建立雙向資料繫結。它會根據控制元件型別自動選取正確的方法來更新元素。儘管有些神奇，但 &lt;code&gt;v-model&lt;/code&gt; 本質上不過是語法糖。它負責監聽使用者的輸入事件以更新資料，並對一些極端場景進行一些特殊處理。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v-model&lt;/code&gt; 只看binding data的值，會忽略所有表單元素的 value、checked、selected attribute 的初始值&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v-model&lt;/code&gt; 在內部為不同的輸入元素使用不同的 property 並丟擲不同的事件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;text 和 textarea 元素使用 value property 和 input 事件；&lt;/li&gt;
&lt;li&gt;checkbox 和 radio 使用 checked property 和 change 事件；&lt;/li&gt;
&lt;li&gt;select 欄位將 value 作為 prop 並將 change 作為事件。&lt;!-- (? need example) --&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;searchText&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;等價於：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;searchText&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-on:input&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;searchText = $event.target.value&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- checkbox example --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkbox&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;jack&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;Jack&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkedNames&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;jack&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;Jack&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkbox&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;john&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;John&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkedNames&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;john&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;John&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkbox&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;mike&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;Mike&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkedNames&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;mike&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;Mike&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Checked names: ｛｛ checkedNames ｝｝&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &#39;...&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    checkedNames: []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- select example --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;selected&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;disabled&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;請選擇&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;A&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;B&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;C&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Selected: ｛｛ selected ｝｝&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &#39;...&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    selected: &#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果 &lt;code&gt;v-model&lt;/code&gt; 表示式的初始值未能匹配任何選項，&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 元素將被渲染為“未選中”狀態。在 iOS 中，這會使使用者無法選擇第一個選項。因為這樣的情況下，iOS 不會觸發 &lt;code&gt;change&lt;/code&gt; 事件。因此，更推薦像上面這樣提供一個值為空的禁用選項。&lt;/p&gt;
&lt;h3 id=&#34;input-繫結-variable&#34;&gt;&lt;a href=&#34;#input-繫結-variable&#34; class=&#34;headerlink&#34; title=&#34;input 繫結 variable&#34;&gt;&lt;/a&gt;input 繫結 variable&lt;/h3&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkbox&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;toggle&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;true-value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;yes&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;false-value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;no&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 當選中時&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.toggle === &#39;yes&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 當沒有選中時&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.toggle === &#39;no&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;radio&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;pick&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-bind:value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;a&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 當選中時&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.pick === vm.a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- v-model as object --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;selected&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 內聯物件字面量 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-bind:value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;&amp;#123; number: 123 &amp;#125;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;123&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 當選中時&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typeof vm.selected // =&amp;gt; &#39;object&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.selected.number // =&amp;gt; 123&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;v-model-修飾符&#34;&gt;&lt;a href=&#34;#v-model-修飾符&#34; class=&#34;headerlink&#34; title=&#34;v-model: 修飾符&#34;&gt;&lt;/a&gt;v-model: 修飾符&lt;/h3&gt;&lt;p&gt;&lt;code&gt;.lazy&lt;/code&gt;&lt;br&gt;在預設情況下，v-model 在每次 input 事件觸發後將輸入框的值與資料進行同步 (除了上述輸入法組合文字時)。&lt;/p&gt;
&lt;p&gt;新增 lazy 修飾符，等到滑鼠移到輸入框外，觸發 change 事件才更新。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.number&lt;/code&gt;&lt;br&gt;自動將使用者的輸入值轉為數值型別&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;input v-model.number=&amp;quot;age&amp;quot; type=&amp;quot;number&amp;quot;&amp;gt;&lt;/code&gt;&lt;br&gt;這通常很有用，因為即使在 type=”number” 時，HTML 輸入元素的值也總會返回字串。如果這個值無法被 parseFloat() 解析，則會返回原始的值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.trim&lt;/code&gt;&lt;br&gt;如果要自動過濾使用者輸入的首尾空白字元，可以給 v-model 新增 trim 修飾符：&lt;/p&gt;
&lt;h2 id=&#34;元件-Components&#34;&gt;&lt;a href=&#34;#元件-Components&#34; class=&#34;headerlink&#34; title=&#34;元件 Components&#34;&gt;&lt;/a&gt;元件 Components&lt;/h2&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 定義一個名為 button-counter 的新元件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Vue.component(&lt;span class=&#34;string&#34;&gt;&#39;button-counter&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      count: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  template: &lt;span class=&#34;string&#34;&gt;&#39;&amp;lt;button v-on:click=&#34;count++&#34;&amp;gt;You clicked me ｛｛ count ｝｝ times.&amp;lt;/button&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;元件是可復用的 Vue 例項，且帶有一個名字：在這個例子中是 &lt;code&gt;&amp;lt;button-counter&amp;gt;&lt;/code&gt;。我們可以在一個透過 new Vue 建立的 Vue 根例項中，把這個元件作為自定義元素來使用：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;components-demo&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button-counter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button-counter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;因為元件是可復用的 Vue 例項，所以它們與 new Vue 接收相同的選項，例如 data、computed、watch、methods 以及生命週期鉤子等。&lt;strong&gt;僅有的例外是像 el 這樣根例項特有的選項&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;為了能在模板中使用，這些元件必須先註冊以便 Vue 能夠識別。這裡有兩種元件的註冊型別：全域性註冊和區域性註冊。至此，我們的元件都只是透過 Vue.component 全域性註冊的&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Vue.component(&lt;span class=&#34;string&#34;&gt;&#39;my-component-name&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ... options ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;全域性註冊的元件可以用在其被註冊之後的任何 (透過 new Vue) 新建立的 Vue 根例項，也包括其元件樹中的所有子元件的模板中。&lt;/p&gt;
&lt;p&gt;而區域性註冊的好處是當你使用的是webpack這樣的構建系統時，如果是用全域性註冊的這種方法註冊的元件，那麼當你不使用某一個元件的時候，它仍然會存在最終的構建結果之中，這就增加的無謂的js下載。&lt;/p&gt;
&lt;h3 id=&#34;data-是一個函式&#34;&gt;&lt;a href=&#34;#data-是一個函式&#34; class=&#34;headerlink&#34; title=&#34;data 是一個函式&#34;&gt;&lt;/a&gt;data 是一個函式&lt;/h3&gt;&lt;p&gt;data 是一個函式，因此每個例項可以維護一份被返回物件的獨立的複製：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    count: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;範例&#34;&gt;&lt;a href=&#34;#範例&#34; class=&#34;headerlink&#34; title=&#34;範例&#34;&gt;&lt;/a&gt;範例&lt;/h3&gt;&lt;p&gt;每個元件必須只有一個根元素。你可以將模板的內容包裹在一個父元素內，來修復這個問題，例如：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;blog-post&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;｛｛ title ｝｝&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-html&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;content&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;當元件變得越來越複雜的時候，為每個相關的資訊定義一個 prop 會變得很麻煩：&lt;br&gt;所以是時候重構一下這個 &lt;code&gt;&amp;lt;blog-post&amp;gt;&lt;/code&gt; 元件了，讓它變成接受一個單獨的 post prop：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post in posts&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:key&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.id&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:title&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.title&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:content&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.content&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:publishedAt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.publishedAt&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:comments&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.comments&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post in posts&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:key&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.id&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:post&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Vue.component(&#39;blog-post&#39;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  props: [&#39;post&#39;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  template: `&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;blog-post&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;｛｛ post.title ｝｝&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-html&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.content&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- other props --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    `&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;父級元件可以像處理 native DOM 事件一樣透過 &lt;code&gt;v-on&lt;/code&gt; 監聽子元件例項的任意事件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-on:enlarge-text&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;postFontSize += 0.1&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;同時子元件可以透過呼叫內建的 `$emit` 方法並傳入事件名稱來觸發一個事件：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;$emit(&#39;enlarge-text&#39;)&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Enlarge text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;使用事件傳遞一個值&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;$emit(&#39;enlarge-text&#39;, 0.1)&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Enlarge text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 透過 $event 訪問到被拋出的這個值 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-on:enlarge-text&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;postFontSize += $event&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;emit input的值使 custom-input 可以更新&lt;code&gt;v-model&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;custom-input v-model=&lt;span class=&#34;string&#34;&gt;&#34;searchText&#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/custom-input&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;Vue.component(&#39;custom-input&#39;, &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  props: [&#39;value&#39;],&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  template: `&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;input&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      v-bind:value=&#34;value&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      v-on:input=&#34;$emit(&#39;input&#39;, $event.target.value)&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  `&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;slot&#34;&gt;&lt;a href=&#34;#slot&#34; class=&#34;headerlink&#34; title=&#34;slot&#34;&gt;&lt;/a&gt;slot&lt;/h2&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div id=&lt;span class=&#34;string&#34;&gt;&#34;app&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;layout&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;p slot=&lt;span class=&#34;string&#34;&gt;&#34;header&#34;&lt;/span&gt;&amp;gt;這裡可能是一個頁面標題&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;p&amp;gt;主要內容的一個段落。&amp;lt;/&lt;/span&gt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;p&amp;gt;另一個主要段落。&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;p slot=&#34;footer&#34;&amp;gt;這裡有一些聯繫信息&amp;lt;/&lt;/span&gt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/layout&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/&lt;/span&gt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Vue.component(&lt;span class=&#34;string&#34;&gt;&#39;layout&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  template: &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;lt;div class=&#34;container&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;header&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;slot name=&#34;header&#34;&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;/header&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;main&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;/main&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;footer&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;slot name=&#34;footer&#34;&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;/footer&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;lt;/div&amp;gt;`&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; vm = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#app&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;動態切換component&#34;&gt;&lt;a href=&#34;#動態切換component&#34; class=&#34;headerlink&#34; title=&#34;動態切換component&#34;&gt;&lt;/a&gt;動態切換component&lt;/h3&gt;&lt;p&gt;有的時候，在不同元件之間進行動態切換是非常有用的，比如在一個多標籤的介面裡：&lt;/p&gt;
&lt;p&gt;上述內容可以透過 Vue 的 &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; 元素加一個特殊的 is attribute 來實現：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 元件會在 `currentTabComponent` 改變時改變 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;component&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-bind:is&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;currentTabComponent&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;component&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在上述示例中，currentTabComponent 可以包括已註冊元件的名字，或一個元件的選項物件&lt;/p&gt;
&lt;h3 id=&#34;解析-DOM-模板時的注意事項&#34;&gt;&lt;a href=&#34;#解析-DOM-模板時的注意事項&#34; class=&#34;headerlink&#34; title=&#34;解析 DOM 模板時的注意事項&#34;&gt;&lt;/a&gt;解析 DOM 模板時的注意事項&lt;/h3&gt;&lt;p&gt;有些 HTML 元素，諸如 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;，對於哪些元素可以出現在其內部是有嚴格限制的。而有些元素，諸如 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;，只能出現在其它某些特定的元素內部。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- wrong --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;blog-post-row&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;blog-post-row&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- correct --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;tr&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;is&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;blog-post-row&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;需要注意的是如果我們從以下來源使用模板的話，這條限制是不存在的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字串 (例如：template: ‘…’)&lt;/li&gt;
&lt;li&gt;單檔案元件 (.vue)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/x-template&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;實作&#34;&gt;&lt;a href=&#34;#實作&#34; class=&#34;headerlink&#34; title=&#34;實作&#34;&gt;&lt;/a&gt;實作&lt;/h3&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2d1aWRlL3Byb3RvdHlwaW5nLmh0bWw=&#34;&gt;使用vue cli&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;說回App.vue這個檔案，這是一個檢視（或者說元件和頁面），想像一下我們的index.html中什麼也沒有，只有一個檢視，這個檢視相當於一個容器，然後我們往這個容器中放各種各樣的積木（其他元件或者其他頁面）&lt;/p&gt;
&lt;p&gt;將&lt;code&gt;App.vue&lt;/code&gt;放到&lt;code&gt;#app&lt;/code&gt;中，然後以&lt;code&gt;&amp;lt;App/&amp;gt;&lt;/code&gt;來指代我們的&lt;code&gt;#app&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Vue &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; App &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&#39;./App&#39;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;/*引入App這個元件*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; router &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&#39;./router&#39;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;/*引入路由配置*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Vue.config.productionTip = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* eslint-disable no-new */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#app&#39;&lt;/span&gt;,&lt;span class=&#34;comment&#34;&gt;/*最後效果將會替換頁面中id為app的div元素*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  router,&lt;span class=&#34;comment&#34;&gt;/*使用路由*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  template: &lt;span class=&#34;string&#34;&gt;&#39;&amp;lt;App/&amp;gt;&#39;&lt;/span&gt;,&lt;span class=&#34;comment&#34;&gt;/*告知頁面這個元件用這樣的標籤來包裹著,並且使用它*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  components: &amp;#123; App &amp;#125;&lt;span class=&#34;comment&#34;&gt;/*告知當前頁面想使用App這個元件*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;參考資料&#34;&gt;&lt;a href=&#34;#參考資料&#34; class=&#34;headerlink&#34; title=&#34;參考資料&#34;&gt;&lt;/a&gt;參考資料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvZ3VpZGUv&#34;&gt;https://cn.vuejs.org/v2/guide/&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZXRlcmhwY2hlbi5naXRodWIuaW8v&#34;&gt;https://peterhpchen.github.io/&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jeXRoaWx5YS5naXRodWIuaW8vMjAxNy8xMC8xMS92dWUtY29tcG9uZW50LXNsb3Qv&#34;&gt;https://cythilya.github.io/2017/10/11/vue-component-slot/&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/simple-website-host/</guid>
            <title>自建網站方法</title>
            <link>http://gitqwerty777.github.io/simple-website-host/</link>
            <category>hexo</category>
            <category>blog</category>
            <category>markdown</category>
            <category>amazon</category>
            <category>webhost</category>
            <category>ssl</category>
            <pubDate>Wed, 19 Aug 2020 00:45:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;不用免費架站服務的理由&#34;&gt;&lt;a href=&#34;#不用免費架站服務的理由&#34; class=&#34;headerlink&#34; title=&#34;不用免費架站服務的理由&#34;&gt;&lt;/a&gt;不用免費架站服務的理由&lt;/h2&gt;&lt;p&gt;若只是要純粹建blog，用github page + &lt;a href=&#34;/build-hexo-blog/&#34;&gt;hexo&lt;/a&gt; 即可。&lt;/p&gt;
&lt;p&gt;更簡單的方法就是用痞客邦、Blogger等免費部落格。&lt;/p&gt;
&lt;p&gt;不過自架有以下優點&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h3 id=&#34;資料轉移彈性&#34;&gt;&lt;a href=&#34;#資料轉移彈性&#34; class=&#34;headerlink&#34; title=&#34;資料轉移彈性&#34;&gt;&lt;/a&gt;資料轉移彈性&lt;/h3&gt;&lt;p&gt;要確認資料是容易轉移的，即匯出後的檔案可被其他平台匯入。&lt;/p&gt;
&lt;p&gt;即資料的格式是公開的，而非只有特定廠商才能讀取。&lt;/p&gt;
&lt;p&gt;像是 hexo 是用 markdown 格式儲存文章，日後若 hexo 不再更新，可以轉換到其他支援 markdown 的服務，如jekyll。&lt;/p&gt;
&lt;p&gt;儘量減少對特定服務商的依賴&lt;/p&gt;
&lt;p&gt;當轉移資料的成本太高時，就會失去選擇的自由。&lt;/p&gt;
&lt;h3 id=&#34;更多功能&#34;&gt;&lt;a href=&#34;#更多功能&#34; class=&#34;headerlink&#34; title=&#34;更多功能&#34;&gt;&lt;/a&gt;更多功能&lt;/h3&gt;&lt;p&gt;免費廠商提供的設定選項不一定符合需求，若要自訂功能就會很麻煩。&lt;/p&gt;
&lt;h2 id=&#34;網路主機&#34;&gt;&lt;a href=&#34;#網路主機&#34; class=&#34;headerlink&#34; title=&#34;網路主機&#34;&gt;&lt;/a&gt;網路主機&lt;/h2&gt;&lt;p&gt;考慮連線速度及品質，最好是找離台灣近一點的host，也可用電腦+固定IP自建。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS90dy9lYzIv&#34;&gt;amazon ec2&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;可選server地區，各地區價格不同&lt;/li&gt;
&lt;li&gt;有提供預設的image，包含LAMP&lt;/li&gt;
&lt;li&gt;第一年免費&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS90dy9saWdodHNhaWwv&#34;&gt;amazon lightsail&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;簡化版的ec2，較便宜&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2l0ZWdyb3VuZC5jb20v&#34;&gt;siteground&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;www.bluehost.com&#34;&gt;bluehost&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;網域&#34;&gt;&lt;a href=&#34;#網域&#34; class=&#34;headerlink&#34; title=&#34;網域&#34;&gt;&lt;/a&gt;網域&lt;/h2&gt;&lt;p&gt;非必要，直接用IP連也可。&lt;/p&gt;
&lt;p&gt;價格很浮動，和機票一樣，建議查完就買，不然可能會變貴。&lt;/p&gt;
&lt;p&gt;有些第一年特價的域名最好別買，不然續約時變原價，又要換域名。&lt;/p&gt;
&lt;h3 id=&#34;網域商&#34;&gt;&lt;a href=&#34;#網域商&#34; class=&#34;headerlink&#34; title=&#34;網域商&#34;&gt;&lt;/a&gt;網域商&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nYW5kaS5saW5rL2YvMGFjZjQzZmE=&#34;&gt;gandi&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS90dy9yb3V0ZTUzLw==&#34;&gt;route53&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90dy5nb2RhZGR5LmNvbS8=&#34;&gt;godaddy&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;www.namecheap.com&#34;&gt;namecheap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;SSL憑證&#34;&gt;&lt;a href=&#34;#SSL憑證&#34; class=&#34;headerlink&#34; title=&#34;SSL憑證&#34;&gt;&lt;/a&gt;SSL憑證&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZXRzZW5jcnlwdC5vcmcvemgtdHcv&#34;&gt;letsencrypt&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;若用amazon主機，也有&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS90dy9jZXJ0aWZpY2F0ZS1tYW5hZ2VyLw==&#34;&gt;免費提供&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;，&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;DNS&#34;&gt;&lt;a href=&#34;#DNS&#34; class=&#34;headerlink&#34; title=&#34;DNS&#34;&gt;&lt;/a&gt;DNS&lt;/h3&gt;&lt;p&gt;建議用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY2xvdWRmbGFyZS5jb20v&#34;&gt;cloudflare&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;設定，要換網域商時較方便&lt;/p&gt;
&lt;h2 id=&#34;用法&#34;&gt;&lt;a href=&#34;#用法&#34; class=&#34;headerlink&#34; title=&#34;用法&#34;&gt;&lt;/a&gt;用法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/rss-social-network/&#34;&gt;RSS服務&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;個人主頁&lt;/li&gt;
&lt;li&gt;子網域&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;備註&#34;&gt;&lt;a href=&#34;#備註&#34; class=&#34;headerlink&#34; title=&#34;備註&#34;&gt;&lt;/a&gt;備註&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;若有學生身份可用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lZHVjYXRpb24uZ2l0aHViLmNvbS9wYWNr&#34;&gt;github學生禮包&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;，提供免費域名及amazon 100鎂額度&lt;ul&gt;
&lt;li&gt;可以用多個同學的github人頭帳號，當長時間的免費仔&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;個人目前已非學生，amazon T2.micro(1GB memory, 8GB Disk, 一個月8鎂) + gandi 的 &lt;code&gt;.me&lt;/code&gt; 網域(一年17鎂)，還算堪用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;參考&#34;&gt;&lt;a href=&#34;#參考&#34; class=&#34;headerlink&#34; title=&#34;參考&#34;&gt;&lt;/a&gt;參考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuanl0MDUzMi5jb20vMjAxNy8xMi8xMS9sYXVuY2gtZWMyLWluLXRlbi1taW51dGVzLw==&#34;&gt;十分鐘在AWS架好個人部落格&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/zen-of-python/</guid>
            <title>Python 之禪</title>
            <link>http://gitqwerty777.github.io/zen-of-python/</link>
            <category>python</category>
            <pubDate>Tue, 18 Aug 2020 00:45:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;import-this&#34;&gt;&lt;a href=&#34;#import-this&#34; class=&#34;headerlink&#34; title=&#34;import this&#34;&gt;&lt;/a&gt;import this&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;The Zen of Python, by Tim Peters&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Beautiful is better than ugly.&lt;br&gt;Explicit is better than implicit.&lt;br&gt;Simple is better than complex.&lt;br&gt;Complex is better than complicated.&lt;br&gt;Flat is better than nested.&lt;br&gt;Sparse is better than dense.&lt;br&gt;Readability counts.&lt;br&gt;Special cases aren’t special enough to break the rules.&lt;br&gt;Although practicality beats purity.&lt;br&gt;Errors should never pass silently.&lt;br&gt;Unless explicitly silenced.&lt;br&gt;In the face of ambiguity, refuse the temptation to guess.&lt;br&gt;There should be one– and preferably only one –obvious way to do it.&lt;br&gt;Although that way may not be obvious at first unless you’re Dutch.&lt;br&gt;Now is better than never.&lt;br&gt;Although never is often better than &lt;em&gt;right&lt;/em&gt; now.&lt;br&gt;If the implementation is hard to explain, it’s a bad idea.&lt;br&gt;If the implementation is easy to explain, it may be a good idea.&lt;br&gt;Namespaces are one honking great idea – let’s do more of those!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h2 id=&#34;翻譯和解釋&#34;&gt;&lt;a href=&#34;#翻譯和解釋&#34; class=&#34;headerlink&#34; title=&#34;翻譯和解釋&#34;&gt;&lt;/a&gt;翻譯和解釋&lt;/h2&gt;&lt;p&gt;基本上在解釋 clean code 的做法&lt;/p&gt;
&lt;p&gt;優美優於醜陋，&lt;/p&gt;
&lt;p&gt;明瞭優於隱晦；&lt;/p&gt;
&lt;p&gt;簡單優於複雜，&lt;/p&gt;
&lt;p&gt;複雜優於凌亂，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果復雜不可避免，那代碼間也不能有難懂的關係，要保持接口簡潔&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;扁平優於嵌套，&lt;/p&gt;
&lt;p&gt;稀疏優於稠密，&lt;/p&gt;
&lt;p&gt;可讀性很重要！&lt;/p&gt;
&lt;p&gt;即使實用比純粹更優，&lt;/p&gt;
&lt;p&gt;特例亦不可違背原則。&lt;/p&gt;
&lt;p&gt;錯誤絕不能悄悄忽略，&lt;/p&gt;
&lt;p&gt;除非它明確需要如此。&lt;/p&gt;
&lt;p&gt;面對不確定性，&lt;/p&gt;
&lt;p&gt;拒絕妄加猜測。&lt;/p&gt;
&lt;p&gt;任何問題應有一種，&lt;/p&gt;
&lt;p&gt;且最好只有一種，&lt;/p&gt;
&lt;p&gt;顯而易見的解決方法。&lt;/p&gt;
&lt;p&gt;儘管這方法一開始並非如此直觀，&lt;/p&gt;
&lt;p&gt;除非你是荷蘭人。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;解決一個問題的方法可能會有很多種，但在Python中，只選擇最明顯的那一個&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;做優於不做，&lt;/p&gt;
&lt;p&gt;然而不假思索還不如不做。&lt;/p&gt;
&lt;p&gt;很難解釋的，必然是壞方法。&lt;/p&gt;
&lt;p&gt;很好解釋的，可能是好方法。&lt;/p&gt;
&lt;p&gt;命名空間是個絕妙的主意，&lt;/p&gt;
&lt;p&gt;我們應好好利用它。&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;&lt;a href=&#34;#reference&#34; class=&#34;headerlink&#34; title=&#34;reference&#34;&gt;&lt;/a&gt;reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cud2lraXdhbmQuY29tL3poLXR3L1B5dGhvbiVFNCVCOSU4QiVFNyVBNiU4NQ==&#34;&gt;wiki&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kZXYvcGVwcy9wZXAtMDAyMC8=&#34;&gt;PEP-20&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/comment-meaning/</guid>
            <title>程式註解的常用標記</title>
            <link>http://gitqwerty777.github.io/comment-meaning/</link>
            <category>CodingStyle</category>
            <category>程式</category>
            <category>Todo</category>
            <category>註解</category>
            <pubDate>Thu, 06 Aug 2020 20:08:03 +0800</pubDate>
            <description><![CDATA[ &lt;ul&gt;
&lt;li&gt;&lt;code&gt;TODO&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FIXME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;XXX&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NOTE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HACK&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;TODO&#34;&gt;&lt;a href=&#34;#TODO&#34; class=&#34;headerlink&#34; title=&#34;TODO&#34;&gt;&lt;/a&gt;TODO&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;需要實作的部份&lt;ul&gt;
&lt;li&gt;Bug, 錯誤, 改進等都不是&lt;code&gt;TODO&lt;/code&gt;，見下述&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;FIXME&#34;&gt;&lt;a href=&#34;#FIXME&#34; class=&#34;headerlink&#34; title=&#34;FIXME&#34;&gt;&lt;/a&gt;FIXME&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;錯誤的、需要修正的部份&lt;/li&gt;
&lt;li&gt;相似的標記:  &lt;code&gt;BUG&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FIXME&lt;/code&gt; 解釋如何修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BUG&lt;/code&gt; 記錄錯誤如何發生&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;XXX&#34;&gt;&lt;a href=&#34;#XXX&#34; class=&#34;headerlink&#34; title=&#34;XXX&#34;&gt;&lt;/a&gt;XXX&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;需要改進的實作方式&lt;/li&gt;
&lt;li&gt;相似的標記: &lt;code&gt;REFACT&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;想重構時可用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;NOTE&#34;&gt;&lt;a href=&#34;#NOTE&#34; class=&#34;headerlink&#34; title=&#34;NOTE&#34;&gt;&lt;/a&gt;NOTE&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;說明程式碼的如何使用&lt;ul&gt;
&lt;li&gt;就是註解原本的用途&lt;/li&gt;
&lt;li&gt;所以實際上不用加&lt;code&gt;NOTE&lt;/code&gt;，直接寫也可以&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;相似的標記: &lt;code&gt;MARK&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;HACK&#34;&gt;&lt;a href=&#34;#HACK&#34; class=&#34;headerlink&#34; title=&#34;HACK&#34;&gt;&lt;/a&gt;HACK&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一個暫時、骯髒的解法&lt;/li&gt;
&lt;li&gt;不應該進commit&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用&#34;&gt;&lt;a href=&#34;#使用&#34; class=&#34;headerlink&#34; title=&#34;使用&#34;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;VSCode 中的套件&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPUdydW50ZnVnZ2x5LnRvZG8tdHJlZQ==&#34;&gt;TODO tree&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;除了標記，還需要說明文字，多人協作時也可署名&lt;/li&gt;
&lt;li&gt;範例&lt;ul&gt;
&lt;li&gt;❌&lt;code&gt;TODO:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;➖&lt;code&gt;TODO: lowercase&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;⭕&lt;code&gt;TODO(qwerty): lowercase&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有些標記不需要寫在程式碼中&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BUG&lt;/code&gt;：應該有專用的Bug tracker&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TODO&lt;/code&gt;：應記錄在Todo tracker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;&lt;a href=&#34;#參考資料&#34; class=&#34;headerlink&#34; title=&#34;參考資料&#34;&gt;&lt;/a&gt;參考資料&lt;/h2&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L3RoZS1hcnQtb2YvOTc4MTQ0OTMxODQ4Mi8=&#34;&gt;The art of readable code&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/seo/</guid>
            <title>SEO實作方法</title>
            <link>http://gitqwerty777.github.io/seo/</link>
            <category>SEO</category>
            <category>google</category>
            <category>html</category>
            <pubDate>Mon, 03 Aug 2020 21:52:12 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;hexo 都實作得差不多了，純整理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;html-tag&#34;&gt;&lt;a href=&#34;#html-tag&#34; class=&#34;headerlink&#34; title=&#34;html tag&#34;&gt;&lt;/a&gt;html tag&lt;/h2&gt;&lt;h3 id=&#34;lt-title-gt&#34;&gt;&lt;a href=&#34;#lt-title-gt&#34; class=&#34;headerlink&#34; title=&#34;&amp;lt;title&amp;gt;&#34;&gt;&lt;/a&gt;&amp;lt;title&amp;gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;網頁的主題&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;標記應該放在HTML文件的&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;標記區段中&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;lt-meta-gt&#34;&gt;&lt;a href=&#34;#lt-meta-gt&#34; class=&#34;headerlink&#34; title=&#34;&amp;lt;meta&amp;gt;&#34;&gt;&lt;/a&gt;&amp;lt;meta&amp;gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;網頁的摘要&lt;/li&gt;
&lt;li&gt;描述中繼標記&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;也位於HTML文件的&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;標記部分中&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;“description”&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;content&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;“Brandon’s&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;Baseball&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;Cards&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;attr&#34;&gt;provides&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;large&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;selection&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;vintage&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;modern&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;baseball&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;cards&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt; &lt;span class=&#34;attr&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;sale.&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;We&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;also&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;offer&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;daily&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;baseball&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;news&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;events&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;in&lt;/span&gt;”&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;lt-a-gt&#34;&gt;&lt;a href=&#34;#lt-a-gt&#34; class=&#34;headerlink&#34; title=&#34;&amp;lt;a&amp;gt;&#34;&gt;&lt;/a&gt;&amp;lt;a&amp;gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;連結&lt;ul&gt;
&lt;li&gt;用文字敘述來告知使用者和Google有關您所要連結網頁的部分內容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;同時考慮內部連結的錨定文字&lt;ul&gt;
&lt;li&gt;多加注意用於內部連結的錨定文字可以幫助使用者和Google更容易瀏覽您的網站&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;請避免&lt;ul&gt;
&lt;li&gt;只是為了搜尋引擎而使用大量關鍵字或冗長的錨定文字&lt;/li&gt;
&lt;li&gt;建立不必要的連結，這對使用者瀏覽網站無益&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;將&lt;code&gt;rel&lt;/code&gt;屬性值設定為&lt;code&gt;nofollow&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;告知搜尋引擎不應隨著您網站上的某些連結連至他處，也不應將您網頁的信譽情況傳給連上的網頁&lt;/li&gt;
&lt;li&gt;對評論欄和訊息板新增 &lt;code&gt;nofollow&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;評論中的連結可能將信譽傳給不願擔保的網頁&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;對個別內容、所有網頁等使用 &lt;code&gt;nofollow&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;想要參照某個網站，但是又不想把信譽傳給該網站&lt;ul&gt;
&lt;li&gt;撰寫一篇以垃圾評論為主題的網誌文章&lt;/li&gt;
&lt;li&gt;並打算揭發一個最近經常在網誌上發表垃圾評論的網站&lt;/li&gt;
&lt;li&gt;希望提醒其他人對該網站提高警惕，因此將該網站的連結納入了內容中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在robots中繼標記中使用 &lt;code&gt;nofollow&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;robots&amp;quot; content=&amp;quot;nofollow&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;lt-img-gt&#34;&gt;&lt;a href=&#34;#lt-img-gt&#34; class=&#34;headerlink&#34; title=&#34;&amp;lt;img&amp;gt;&#34;&gt;&lt;/a&gt;&amp;lt;img&amp;gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;alt&lt;/code&gt;屬性&lt;ul&gt;
&lt;li&gt;如果因為某些原因而無法顯示圖片，&lt;code&gt;alt&lt;/code&gt;屬性可允許您為圖片指定替代文字&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;將圖片檔案合併儲存於單一目錄中，而不要分散儲存在整個網域的許多目錄和子目錄下。這樣可以簡化圖片的連結路徑&lt;/li&gt;
&lt;li&gt;提供&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vd2VibWFzdGVycy9hbnN3ZXIvMTc4NjM2&#34;&gt;圖片Sitemap&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;檔案&lt;/li&gt;
&lt;li&gt;簡單明瞭的檔案名稱&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;標題標記&#34;&gt;&lt;a href=&#34;#標題標記&#34; class=&#34;headerlink&#34; title=&#34;標題標記&#34;&gt;&lt;/a&gt;標題標記&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;標題標記有六種不同大小，從&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;到&lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt;，其重要性依次降低&lt;ul&gt;
&lt;li&gt;由於標題標記通常會使其中包含的文字比網頁上的普通文字大一些，因此使用者可以清楚意識到這部分文字比較重要&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;建立層次分明的結構&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;網站資訊&#34;&gt;&lt;a href=&#34;#網站資訊&#34; class=&#34;headerlink&#34; title=&#34;網站資訊&#34;&gt;&lt;/a&gt;網站資訊&lt;/h2&gt;&lt;h3 id=&#34;URL&#34;&gt;&lt;a href=&#34;#URL&#34; class=&#34;headerlink&#34; title=&#34;URL&#34;&gt;&lt;/a&gt;URL&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;簡單易懂的URL能夠更加容易的表達內容&lt;/li&gt;
&lt;li&gt;建立簡單的目錄架構&lt;/li&gt;
&lt;li&gt;在網址中使用文字而非數字&lt;ul&gt;
&lt;li&gt;&lt;code&gt;www.stasiasbakery.com/custom-cakes&lt;/code&gt; (O)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www.stasiasbakery.com/prodid?12345&lt;/code&gt; (X)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;為同一文件提供同一版本的網址&lt;ul&gt;
&lt;li&gt;設定301重新導向，將不喜歡的網址重新導向到您所期望使用的網址，這是一個很好的解決方案&lt;/li&gt;
&lt;li&gt;無法重新導向時，也可以使用標準網頁或&lt;code&gt;rel=&amp;quot;canonical&amp;quot;&lt;/code&gt;連結元素&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vd2VibWFzdGVycy9hbnN3ZXIvMTM5MDY2&#34;&gt;https://support.google.com/webmasters/answer/139066&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;請避免&lt;ul&gt;
&lt;li&gt;無論從子域還是根目錄(例如&lt;code&gt;domain.com/page.htm&lt;/code&gt;和&lt;code&gt;sub.domain.com/page.htm&lt;/code&gt;)都可以瀏覽到相同的內容&lt;/li&gt;
&lt;li&gt;在網址中使用奇怪的大寫字母&lt;ul&gt;
&lt;li&gt;大部分使用者喜歡小寫的網址， 並且小寫也便於使用者記憶&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;目錄&#34;&gt;&lt;a href=&#34;#目錄&#34; class=&#34;headerlink&#34; title=&#34;目錄&#34;&gt;&lt;/a&gt;目錄&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;建立自然流暢的層級架構&lt;ul&gt;
&lt;li&gt;將訪客從主網頁導向至包含特定內容的網頁&lt;/li&gt;
&lt;li&gt;導覽中儘量使用文字連結&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;移除部分網址&lt;ul&gt;
&lt;li&gt;正在瀏覽：&lt;code&gt;http://www.brandonsbaseballcards.com/news/2010/upcoming-baseball-cardshows.htm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;輸入：&lt;code&gt;http://www.brandonsbaseballcards.com/news/2010/&lt;/code&gt;，認為這樣就可以顯示2010年的所有新聞&lt;/li&gt;
&lt;li&gt;在這種情況下，您的網站是否已準備好顯示使用者想要的內容，還是只顯示一個404(「找不到網頁」錯誤)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;建立實用的404網頁&lt;ul&gt;
&lt;li&gt;使用自訂404網頁能夠確實幫助使用者返回您網站上的有效網頁，大幅改善使用者體驗&lt;/li&gt;
&lt;li&gt;最好能提供返回您網站根網頁的連結，以及前往網站中熱門或相關內容的連結&lt;/li&gt;
&lt;li&gt;Google提供了404小工具，可以將其嵌入您的404網頁，即可自動產生許多實用的功能&lt;/li&gt;
&lt;li&gt;可以使用Google網站管理員工具，找出導致「找不到網頁」錯誤的網址來源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Sitemap&#34;&gt;&lt;a href=&#34;#Sitemap&#34; class=&#34;headerlink&#34; title=&#34;Sitemap&#34;&gt;&lt;/a&gt;Sitemap&lt;/h3&gt;&lt;p&gt;Sitemap(網站架構)用於顯示網站架構，通常由一份網站網頁的層級清單組成。當訪客在您的網站上找不到某些特定網頁時，即可瀏覽該網頁&lt;br&gt;雖然搜尋引擎也會瀏覽該網頁，以便對您網站上的網頁進行更全面的檢索，但其主要目的還是為了方便訪客&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;準備兩種Sitemap：分別供使用者和搜尋引擎使用&lt;ul&gt;
&lt;li&gt;在網站上放置HTML Sitemap&lt;/li&gt;
&lt;li&gt;建立XML Sitemap檔案並提交給搜尋引擎&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;請避免&lt;ul&gt;
&lt;li&gt;HTML Sitemap中含有無效連結，無法到達相應的網頁&lt;/li&gt;
&lt;li&gt;建立的HTML Sitemap僅列出網頁，而沒有進行整理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;robots-txt&#34;&gt;&lt;a href=&#34;#robots-txt&#34; class=&#34;headerlink&#34; title=&#34;robots.txt&#34;&gt;&lt;/a&gt;robots.txt&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;避免內容出現在搜尋結果中&lt;ul&gt;
&lt;li&gt;&lt;code&gt;robots.txt&lt;/code&gt;檔案可告知搜尋引擎是否可以存取您網站的某些部分，進而對這些部分進行檢索&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;必須為該子網域建立一個單獨的&lt;code&gt;robots.txt&lt;/code&gt;檔案&lt;/li&gt;
&lt;li&gt;其他方法&lt;ul&gt;
&lt;li&gt;為robots中繼標記新增&lt;code&gt;NOINDEX&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;googlebot&amp;quot; content=&amp;quot;noindex&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;.htaccess&lt;/code&gt;對目錄進行密碼保護&lt;/li&gt;
&lt;li&gt;使用Google網站管理員工具移除已檢索的內容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;對敏感的內容使用更為安全的方法&#34;&gt;&lt;a href=&#34;#對敏感的內容使用更為安全的方法&#34; class=&#34;headerlink&#34; title=&#34;對敏感的內容使用更為安全的方法&#34;&gt;&lt;/a&gt;對敏感的內容使用更為安全的方法&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;一些不符合條件的搜尋引擎或惡意搜尋引擎並不遵守「漫遊器排除標準」，可能會違背您的&lt;code&gt;robots.txt&lt;/code&gt;指示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;好奇的使用者可能會查看&lt;code&gt;robots.txt&lt;/code&gt;檔案中的目錄或子目錄，並猜中不想曝光的內容網址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;對內容加密或使用&lt;code&gt;.htaccess&lt;/code&gt;對內容進行密碼保護是更安全的選擇&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;請避免&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;允許檢索類似搜尋結果的網頁&lt;ul&gt;
&lt;li&gt;使用者不喜歡從一個搜尋結果網頁進入另一個搜尋結果網頁，這對他們而言沒有多大價值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;允許檢索大量自動產生的且內容相同或相似的網頁&lt;/li&gt;
&lt;li&gt;允許檢索因Proxy服務而建立的網址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;https-和-SSL-憑證&#34;&gt;&lt;a href=&#34;#https-和-SSL-憑證&#34; class=&#34;headerlink&#34; title=&#34;https 和 SSL 憑證&#34;&gt;&lt;/a&gt;https 和 SSL 憑證&lt;/h3&gt;&lt;p&gt;安全性已經被視為 SEO 搜尋排名因素之一，而且當網站不安全時，人們也會感到擔心&lt;/p&gt;
&lt;h3 id=&#34;行動網站&#34;&gt;&lt;a href=&#34;#行動網站&#34; class=&#34;headerlink&#34; title=&#34;行動網站&#34;&gt;&lt;/a&gt;行動網站&lt;/h3&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWFyY2guZ29vZ2xlLmNvbS90ZXN0L21vYmlsZS1mcmllbmRseQ==&#34;&gt;Google提供的手機友善測試&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;驗證Google是否替行動網站製作索引&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;site:&lt;/code&gt; 運算子在Google行動搜尋&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Googlebot可能無法存取您的網站&lt;ul&gt;
&lt;li&gt;在網頁搜尋中使用&lt;code&gt;Googlebot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在行動搜尋中使用&lt;code&gt;Googlebot-Mobile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;提供給&lt;code&gt;Googlebot&lt;/code&gt;的內容應與電腦所見內容相同&lt;/li&gt;
&lt;li&gt;提供給&lt;code&gt;Googlebot-Mobile&lt;/code&gt;的內容應與行動裝置所見的內容相同&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;請檢查易於行動裝置使用的網址，其DTD宣告是否為適當的行動格式，例如&lt;code&gt;XHTML&lt;/code&gt;行動網頁或&lt;code&gt;Compact HTML&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;正確指導行動裝置使用者&lt;ul&gt;
&lt;li&gt;最常發生的問題就是在桌上型電腦中顯示行動版的網站，或是在行動裝置中顯示電腦版的網站&lt;/li&gt;
&lt;li&gt;重新導向至正確的版本&lt;ul&gt;
&lt;li&gt;行動裝置使用者或行動檢索器(例如&lt;code&gt;Googlebot-Mobile&lt;/code&gt;)存取電腦版的網址時，重新導向至對應的行動版網址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;網頁速度&#34;&gt;&lt;a href=&#34;#網頁速度&#34; class=&#34;headerlink&#34; title=&#34;網頁速度&#34;&gt;&lt;/a&gt;網頁速度&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如果讀取時間超過7秒鐘，訪客從您的網站反彈離開的可能性就會增加 113%&lt;/li&gt;
&lt;li&gt;使用 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZXN0bXlzaXRlLnRoaW5rd2l0aGdvb2dsZS5jb20v&#34;&gt;Google 的測試工具&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt; 瞭解網頁的載入速度&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;內容&#34;&gt;&lt;a href=&#34;#內容&#34; class=&#34;headerlink&#34; title=&#34;內容&#34;&gt;&lt;/a&gt;內容&lt;/h2&gt;&lt;h3 id=&#34;提供優質內容和服務&#34;&gt;&lt;a href=&#34;#提供優質內容和服務&#34; class=&#34;headerlink&#34; title=&#34;提供優質內容和服務&#34;&gt;&lt;/a&gt;提供優質內容和服務&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;內容引人注目的網站自然會受到肯定&lt;/li&gt;
&lt;li&gt;提供獨一無二的內容&lt;/li&gt;
&lt;li&gt;為使用者創作內容，而不是為搜尋引擎創作內容&lt;/li&gt;
&lt;li&gt;持續更新內容&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;宣傳&#34;&gt;&lt;a href=&#34;#宣傳&#34; class=&#34;headerlink&#34; title=&#34;宣傳&#34;&gt;&lt;/a&gt;宣傳&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;離線宣傳&lt;ul&gt;
&lt;li&gt;名片、信頭、海報&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;增加反向連結以提升網站的價值&lt;ul&gt;
&lt;li&gt;撰寫網誌文章，讓訪客知道有新增內容，這是宣傳新內容或服務的絕佳方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;社群媒體&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;關鍵字&#34;&gt;&lt;a href=&#34;#關鍵字&#34; class=&#34;headerlink&#34; title=&#34;關鍵字&#34;&gt;&lt;/a&gt;關鍵字&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;考量使用者為找到部分內容而可能搜尋的字詞。相較於對主題不瞭解的使用者，很瞭解該主題的使用者可能會在他們的搜尋查詢中使用不同的關鍵字&lt;ul&gt;
&lt;li&gt;一個資深棒球愛好者可能會搜尋國家聯盟冠軍系列賽(National League Championship Series)的縮寫&lt;code&gt;nlcs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;一個剛剛接觸棒球的愛好者可能會使用&lt;code&gt;棒球季後賽&lt;/code&gt;這樣較為普通的查詢&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Google AdWords的關鍵字工具，可找出新的關鍵字變化，並查看每一個關鍵字的約略搜尋量&lt;/li&gt;
&lt;li&gt;Google網站管理員工具會提供網站上出現的熱門搜尋查詢&lt;/li&gt;
&lt;li&gt;請避免&lt;ul&gt;
&lt;li&gt;針對搜尋引擎插入大量不必要的關鍵字，這些關鍵字對使用者毫無意義且令人感到厭煩&lt;/li&gt;
&lt;li&gt;欺騙性地對使用者隱藏一些文字，卻對搜尋引擎顯示這些文字&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;工具&#34;&gt;&lt;a href=&#34;#工具&#34; class=&#34;headerlink&#34; title=&#34;工具&#34;&gt;&lt;/a&gt;工具&lt;/h2&gt;&lt;h3 id=&#34;網站管理員工具&#34;&gt;&lt;a href=&#34;#網站管理員工具&#34; class=&#34;headerlink&#34; title=&#34;網站管理員工具&#34;&gt;&lt;/a&gt;網站管理員工具&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Google 網站管理員工具&lt;/li&gt;
&lt;li&gt;Yahoo! (Yahoo! Site Explorer)&lt;/li&gt;
&lt;li&gt;Microsoft (Live Search Webmaster Tools)&lt;/li&gt;
&lt;li&gt;Google Analytics(分析)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;h3 id=&#34;不符規定的方法&#34;&gt;&lt;a href=&#34;#不符規定的方法&#34; class=&#34;headerlink&#34; title=&#34;不符規定的方法&#34;&gt;&lt;/a&gt;不符規定的方法&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;斗蓬法（cloaking）&lt;ul&gt;
&lt;li&gt;用兩版不同的網頁來達到最佳化的效果。一個版本只給搜索引擎看，一個版本給人看&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;關鍵字隱密字 （hidden text with keyword stuffing）&lt;ul&gt;
&lt;li&gt;設定關鍵字的顏色和網頁背景顏色一樣，或透過 css hidden attribute （隱密特性） 來達到優化效果&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;橋頁（doorway pages）&lt;ul&gt;
&lt;li&gt;自動生成大量包含關鍵詞的網頁，然後從這些網頁做自動轉向到主頁。目的是希望這些以不同關鍵詞為目標的橋頁在搜索引擎中得到好的排名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;付費連結（paid link）&lt;ul&gt;
&lt;li&gt;是利用支付費用方式要求其他網站提供連結至自身網站，藉此偽裝高信任網站來欺騙搜尋引擎，付費連結類型多為錨點文字（Anchor Text）類型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;連結農場（link farm）&lt;ul&gt;
&lt;li&gt;是故意在一些低質素，內容跟自己內容無關的網站上取得大量連結，藉以提高排名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;&lt;a href=&#34;#reference&#34; class=&#34;headerlink&#34; title=&#34;reference&#34;&gt;&lt;/a&gt;reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdGF0aWMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL21lZGlhL3d3dy5nb29nbGUuY24vemgtVFcvY24vaW50bC96aC1UVy93ZWJtYXN0ZXJzL2RvY3Mvc2VhcmNoLWVuZ2luZS1vcHRpbWl6YXRpb24tc3RhcnRlci1ndWlkZS16aC10dy5wZGY=&#34;&gt;Google 搜尋引擎最佳化 (SEO) 速記指南&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdGF0aWMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL21lZGlhL3d3dy5nb29nbGUuY24vemgtVFcvY24vaW50bC96aC1UVy93ZWJtYXN0ZXJzL2RvY3Mvc2VhcmNoLWVuZ2luZS1vcHRpbWl6YXRpb24tc3RhcnRlci1ndWlkZS16aC10dy5wZGY=&#34;&gt;搜尋引擎最佳化初學者指南&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cud2lraXdhbmQuY29tL3poLyVFNiU5MCU5QyVFNSVCMCU4QiVFNSVCQyU5NSVFNiU5MyU4RSVFNiU5QyU4MCVFNCVCRCVCMyVFNSU4QyU5Ng==&#34;&gt;搜尋引擎最佳化&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/reactjs/</guid>
            <title>reactjs 語法</title>
            <link>http://gitqwerty777.github.io/reactjs/</link>
            <category>reactjs</category>
            <category>javascript</category>
            <pubDate>Wed, 29 Jul 2020 14:50:12 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;JSX&#34;&gt;&lt;a href=&#34;#JSX&#34; class=&#34;headerlink&#34; title=&#34;JSX&#34;&gt;&lt;/a&gt;JSX&lt;/h2&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; element = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;hello&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;這個語法叫做 JSX，是一個 JavaScript 的語法擴充，會產生 &lt;strong&gt;React element&lt;/strong&gt;&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;
&lt;p&gt;Babel 將 JSX 編譯為呼叫 React.createElement() 的程式。&lt;/p&gt;
&lt;p&gt;React DOM 預設會在 render 之前 escape 所有嵌入在 JSX 中的變數。這保證你永遠不會不小心注入任何不是直接寫在你的應用程式中的東西。所有變數都會在 render 之前轉為字串，這可以避免 XSS（跨網站指令碼）攻擊。&lt;/p&gt;
&lt;p&gt;大括號內代表變數，可以放入任何javascript expression&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; name = &lt;span class=&#34;string&#34;&gt;&#39;Josh Perez&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; element = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, &amp;#123;name&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//多行：包在小括號中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; element = (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;h1&amp;gt;Hello!&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;h2&amp;gt;Good to see you here.&amp;lt;/&lt;/span&gt;h2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Render&#34;&gt;&lt;a href=&#34;#Render&#34; class=&#34;headerlink&#34; title=&#34;Render&#34;&gt;&lt;/a&gt;Render&lt;/h2&gt;&lt;p&gt;使用 React 建立應用程式時，通常會有一個單一的 root DOM node。&lt;/p&gt;
&lt;p&gt;Render 一個 React element 到 root DOM node&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; element = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, world&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ReactDOM.render(element, &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&#34;string&#34;&gt;&#39;root&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;React element 是 immutable 的，即不能更改&lt;/p&gt;
&lt;p&gt;Element 就像是電影中的一個幀：它代表特定時間點的 UI。&lt;/p&gt;
&lt;h2 id=&#34;Component&#34;&gt;&lt;a href=&#34;#Component&#34; class=&#34;headerlink&#34; title=&#34;Component&#34;&gt;&lt;/a&gt;Component&lt;/h2&gt;&lt;p&gt;Component 就像是 JavaScript 的 function，它接收參數（稱之為「props」，屬性）並且回傳描述畫面的 React element。&lt;/p&gt;
&lt;p&gt;Component 的字首須為大寫字母。React 會將小寫字母開頭的組件視為原始 DOM 標籤，舉例來說，&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt; 就會被視為是 HTML 的 div 標籤，但是 &lt;code&gt;&amp;lt;Welcome /&amp;gt;&lt;/code&gt; 則是一個 component&lt;/p&gt;
&lt;p&gt;props 是唯讀的&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Welcome&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;props&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, &amp;#123;props.name&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此 function 是一個符合規範的 React component，因為它接受一個 props 物件並回傳一個 React element。&lt;/p&gt;
&lt;p&gt;我們稱之為 function component&lt;/p&gt;
&lt;p&gt;也可以使用 ES6 Class 來定義 component：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Welcome&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, &amp;#123;this.props.name&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可以在JSX中使用component&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; element = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;Welcome&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;Sara&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通常來說，每個 React 應用程式都有一個最高層級的 App component。然而，如果你將 React 結合至現存的應用程式中，你可能需要使用像 Button 這樣的小型 component，並由下往上，逐步應用到畫面的最高層級。&lt;/p&gt;
&lt;p&gt;在較大的應用程式中，建構可複用的 component 是非常值得的&lt;/p&gt;
&lt;h2 id=&#34;State&#34;&gt;&lt;a href=&#34;#State&#34; class=&#34;headerlink&#34; title=&#34;State&#34;&gt;&lt;/a&gt;State&lt;/h2&gt;&lt;p&gt;state 類似於 prop，但它是私有且由 component 完全控制的。&lt;/p&gt;
&lt;p&gt;需使用 class component，不能在 function component 使用&lt;/p&gt;
&lt;p&gt;在每次發生更新時，render 方法都會被呼叫&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Clock&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;h1&amp;gt;Hello, world!&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;h2&amp;gt;It is &amp;#123;this.props.date.toLocaleTimeString()&amp;#125;.&amp;lt;/&lt;/span&gt;h2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;加入state&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Clock&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state = &amp;#123;&lt;span class=&#34;attr&#34;&gt;date&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Date&lt;/span&gt;()&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;h1&amp;gt;Hello, world!&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;h2&amp;gt;It is &amp;#123;this.state.date.toLocaleTimeString()&amp;#125;.&amp;lt;/&lt;/span&gt;h2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;每當 Clock render 到 DOM 的時候，在 React 中稱為「mount」。&lt;/p&gt;
&lt;p&gt;每當產生的 Clock DOM 被移除時，在 React 中稱為「unmount」。&lt;/p&gt;
&lt;p&gt;在class內加入 &lt;code&gt;componentDidMount()&lt;/code&gt;, &lt;code&gt;componentWillUnmount()&lt;/code&gt;, 和 &lt;code&gt;setState()&lt;/code&gt;，用 state 實作每秒更新的部分&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;componentDidMount() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.timerID = setInterval(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      () =&amp;gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.tick(),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  componentWillUnmount() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clearInterval(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.timerID);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  tick() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      date: &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Date&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  因為 props 和 state 可能是非同步的被更新，你不應該依賴它們的值來計算新的 state。&lt;/p&gt;
&lt;p&gt;  要修正這個問題，使用第二種形式的 setState()，它接受一個 function 而不是一個 object。Function 將接收先前的 state 作為第一個參數，並且將更新的 props 作為第二個參數：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;state, props&lt;/span&gt;) =&amp;gt;&lt;/span&gt; (&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  counter: state.counter + props.increment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;React是「上至下」或「單向」的資料流：任何 state 總是由某個特地的 component 所擁有，任何從 state 得到的資料或 UI，state 只能影響自身和 child component。&lt;/p&gt;
&lt;h2 id=&#34;事件處理&#34;&gt;&lt;a href=&#34;#事件處理&#34; class=&#34;headerlink&#34; title=&#34;事件處理&#34;&gt;&lt;/a&gt;事件處理&lt;/h2&gt;&lt;p&gt;事件的名稱在 React 中都是 camelCase，而在 HTML DOM 中則是小寫。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML DOM 對照 React&lt;ul&gt;
&lt;li&gt;&lt;code&gt;onclick&lt;/code&gt; → &lt;code&gt;onClick&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onclick=&amp;quot;click()&amp;quot;&lt;/code&gt; → &lt;code&gt;onClick={click}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 React 中，你不能夠在像在 HTML DOM 中使用 &lt;code&gt;return false&lt;/code&gt; 來避免瀏覽器預設行為。你必須明確地呼叫 &lt;code&gt;preventDefault&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;a href=&lt;span class=&#34;string&#34;&gt;&#34;#&#34;&lt;/span&gt; onclick=&lt;span class=&#34;string&#34;&gt;&#34;console.log(&#39;The link was clicked.&#39;); return false&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Click me&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/a&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 React 中，你則可以這樣寫：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ActionLink&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;handleClick&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;string&#34;&gt;&#39;The link was clicked.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;a href=&lt;span class=&#34;string&#34;&gt;&#34;#&#34;&lt;/span&gt; onClick=&amp;#123;handleClick&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      Click me&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/a&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 JavaScript 中，class 的方法在預設上是沒有被綁定（bound）的。如果你忘了綁定 this.handleClick 並把它傳遞給 onClick 的話，this 的值將會在該 function 被呼叫時變成 undefined。&lt;/p&gt;
&lt;p&gt;總之，當你使用一個方法，卻沒有在後面加上 () 之時（例如當你使用 onClick={this.handleClick} 時），你應該要綁定這個方法。&lt;/p&gt;
&lt;p&gt;The bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Toggle&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state = &amp;#123;&lt;span class=&#34;attr&#34;&gt;isToggleOn&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 為了讓 `this` 能在 callback 中被使用，這裡的綁定是必要的：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleClick = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleClick.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleClick() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;state&lt;/span&gt; =&amp;gt;&lt;/span&gt; (&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      isToggleOn: !state.isToggleOn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;button onClick=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleClick&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.isToggleOn ? &lt;span class=&#34;string&#34;&gt;&#39;ON&#39;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&#39;OFF&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;ReactDOM.render(&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;Toggle /&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&#34;string&#34;&gt;&#39;root&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果呼叫 bind 對你來說很麻煩的話，你可以用別的方式。如果你使用了還在測試中的 class fields 語法的話，你可以用 class field 正確的綁定 callback：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;LoggingButton&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 這個語法確保 `this` 是在 handleClick 中被綁定：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 警告：這是一個還在*測試中*的語法：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleClick = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;string&#34;&gt;&#39;this is:&#39;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;button onClick=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleClick&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Click me&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;傳遞一個額外的參數給 event handler。例如，如果 id 是每一行的 ID 的話，下面兩種語法都可行：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;button onClick=&amp;#123;(e) =&amp;gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.deleteRow(id, e)&amp;#125;&amp;gt;Delete Row&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;button onClick=&amp;#123;this.deleteRow.bind(this, id)&amp;#125;&amp;gt;Delete Row&amp;lt;/&lt;/span&gt;button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;以上這兩行程式是相同的。一個使用 arrow functions，另一個則使用了 Function.prototype.bind。&lt;/p&gt;
&lt;p&gt;以這兩個例子來說，e 這個參數所代表的 React 事件將會被當作 ID 之後的第二個參數被傳遞下去。在使用 arrow function 時，我們必須明確地將它傳遞下去，但若使用 bind 語法，未來任何的參數都將會自動被傳遞下去。&lt;/p&gt;
&lt;h2 id=&#34;條件render&#34;&gt;&lt;a href=&#34;#條件render&#34; class=&#34;headerlink&#34; title=&#34;條件render&#34;&gt;&lt;/a&gt;條件render&lt;/h2&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; isLoggedIn = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.isLoggedIn;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; button;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isLoggedIn) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     button = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;LogoutButton&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onClick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;this.handleLogoutClick&amp;#125;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     button = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;LoginButton&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onClick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;this.handleLoginClick&amp;#125;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;lt;Greeting isLoggedIn=&amp;#123;isLoggedIn&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#123;button&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;   );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;用 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 來條件顯示&lt;br&gt;因為在 JavaScript 中，&lt;code&gt;true &amp;amp;&amp;amp; expression&lt;/code&gt; 總是回傳 &lt;code&gt;expression&lt;/code&gt; ，而 &lt;code&gt;false &amp;amp;&amp;amp; expression&lt;/code&gt; 總是回傳 &lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Mailbox&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;props&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; unreadMessages = props.unreadMessages;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;h1&amp;gt;Hello!&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;#123;unreadMessages.length &amp;gt; 0 &amp;amp;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;h2&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;          You have &amp;#123;unreadMessages.length&amp;#125; unread messages.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;/&lt;/span&gt;h2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;React 在遇到 &lt;code&gt;null&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 時都會忽略(不顯示)&lt;/p&gt;
&lt;p&gt;或用條件運算式&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;isLoggedIn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ? &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;LogoutButton&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onClick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;this.handleLogoutClick&amp;#125;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    : &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;LoginButton&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onClick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;this.handleLoginClick&amp;#125;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;列表與key&#34;&gt;&lt;a href=&#34;#列表與key&#34; class=&#34;headerlink&#34; title=&#34;列表與key&#34;&gt;&lt;/a&gt;列表與key&lt;/h2&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; numbers = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; listItems = numbers.map(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;number&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;li&amp;gt;&amp;#123;number&amp;#125;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;你會收到一個關於你應該提供 key 給每一個列表項目的警告。key 是當你在建立一個 element 列表時必須使用的特殊的 string attribute。&lt;/p&gt;
&lt;p&gt;key 幫助 React 分辨哪些項目被改變、增加或刪除。在 array 裡面的每個 element 都應該要有一個 key，如此才能給予每個 element 一個固定的身份：&lt;/p&gt;
&lt;p&gt;通常，你會使用資料的 ID 作為 key：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; listItems = numbers.map(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;number&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;li key=&amp;#123;number.toString()&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;number&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;const todoItems = todos.map((todo) =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;li key=&amp;#123;todo.id&amp;#125;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;#123;todo.text&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;/&lt;/span&gt;li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;當你 render 的項目沒有固定的 ID 且你也沒有更好的辦法時，你可以使用項目的索引做為 key：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; todoItems = todos.map(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;todo, index&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 請在項目沒有固定的 ID 時才這樣做&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;li key=&amp;#123;index&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;todo.text&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;React 預設將會使用索引作為 key。但並不建議你使用索引作為 key，尤其如果項目的順序會改變的話。這會對效能產生不好的影響，也可能會讓 component state 產生問題&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;key 必須在 Sibling 中是唯一的&lt;/li&gt;
&lt;li&gt;key 的功能是提示 React，但它們不會被傳遞到 component 的 prop。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;應該把 key 放在 array 產生 item 的 render，而不是把它放在 item 的 render。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ListItem&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;props&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; value = props.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 錯！你不需要在這裡指出 key：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;li key=&amp;#123;value.toString()&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;value&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;function NumberList(props) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  const numbers = props.numbers;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  const listItems = numbers.map((number) =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    /&lt;/span&gt;&lt;span class=&#34;regexp&#34;&gt;/ 錯！你應該要在這裡指出 key：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;ListItem value=&amp;#123;number&amp;#125; /&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;listItems&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/ul&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;一個好的經驗法則是，在 map() 呼叫中的每個 element 都會需要 key。&lt;/p&gt;
&lt;h2 id=&#34;Form&#34;&gt;&lt;a href=&#34;#Form&#34; class=&#34;headerlink&#34; title=&#34;Form&#34;&gt;&lt;/a&gt;Form&lt;/h2&gt;&lt;p&gt;把這個表單寫成一個 controlled component： 用 state 來 顯示 value，onChange 時更新&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;NameForm&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state = &amp;#123;&lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleChange(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&amp;#123;&lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;: event.target.value&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleSubmit(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alert(&lt;span class=&#34;string&#34;&gt;&#39;A name was submitted: &#39;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    event.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;form onSubmit=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          Name:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;input type=&lt;span class=&#34;string&#34;&gt;&#34;text&#34;&lt;/span&gt; value=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.value&amp;#125; onChange=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;input type=&#34;submit&#34; value=&#34;Submit&#34; /&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/form&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;這意味著你必須寫更多的 code，但現在你同時可以將 value 傳遞給其他的 UI element，或是從其他 event handler 重置。&lt;/p&gt;
&lt;h3 id=&#34;Select&#34;&gt;&lt;a href=&#34;#Select&#34; class=&#34;headerlink&#34; title=&#34;Select&#34;&gt;&lt;/a&gt;Select&lt;/h3&gt;&lt;p&gt;在 React 中並不是用 selected attribute，而是在 select 的標籤上用一個 value attribute&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;FlavorForm&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state = &amp;#123;&lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#39;coconut&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleChange(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&amp;#123;&lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;: event.target.value&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleSubmit(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alert(&lt;span class=&#34;string&#34;&gt;&#39;Your favorite flavor is: &#39;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    event.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;form onSubmit=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          Pick your favorite flavor:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;select value=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.value&amp;#125; onChange=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;option value=&lt;span class=&#34;string&#34;&gt;&#34;grapefruit&#34;&lt;/span&gt;&amp;gt;Grapefruit&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/option&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;            &amp;lt;option value=&#34;lime&#34;&amp;gt;Lime&amp;lt;/&lt;/span&gt;option&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;option value=&lt;span class=&#34;string&#34;&gt;&#34;coconut&#34;&lt;/span&gt;&amp;gt;Coconut&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/option&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;            &amp;lt;option value=&#34;mango&#34;&amp;gt;Mango&amp;lt;/&lt;/span&gt;option&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/select&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;/&lt;/span&gt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;input type=&lt;span class=&#34;string&#34;&gt;&#34;submit&#34;&lt;/span&gt; value=&lt;span class=&#34;string&#34;&gt;&#34;Submit&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/form&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;你可以將一個 array 傳給 value 這個 attribute，這使得你可以在一個 select 中選取多個選項：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;select multiple=&amp;#123;&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&amp;#125; value=&amp;#123;[&lt;span class=&#34;string&#34;&gt;&#39;B&#39;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&#39;C&#39;&lt;/span&gt;]&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;input-file&#34;&gt;&lt;a href=&#34;#input-file&#34; class=&#34;headerlink&#34; title=&#34;input file&#34;&gt;&lt;/a&gt;input file&lt;/h3&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;input type=&lt;span class=&#34;string&#34;&gt;&#34;file&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;由於它的值是唯讀，它在 React 中是一個 uncontrolled component。在稍後的文件中有其他關於它和其他 uncontrolled component 的討論。&lt;/p&gt;
&lt;h3 id=&#34;多個input&#34;&gt;&lt;a href=&#34;#多個input&#34; class=&#34;headerlink&#34; title=&#34;多個input&#34;&gt;&lt;/a&gt;多個input&lt;/h3&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Reservation&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      isGoing: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      numberOfGuests: &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleInputChange = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleInputChange.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleInputChange(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; target = event.target;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; value = target.name === &lt;span class=&#34;string&#34;&gt;&#39;isGoing&#39;&lt;/span&gt; ? target.checked : target.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; name = target.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      [name]: value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          Is going:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            name=&lt;span class=&#34;string&#34;&gt;&#34;isGoing&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            type=&lt;span class=&#34;string&#34;&gt;&#34;checkbox&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            checked=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.isGoing&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            onChange=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleInputChange&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;br /&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;Number&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; guests:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            name=&lt;span class=&#34;string&#34;&gt;&#34;numberOfGuests&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            type=&lt;span class=&#34;string&#34;&gt;&#34;number&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            value=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.numberOfGuests&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            onChange=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleInputChange&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;lt;/&lt;/span&gt;form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在一個 controlled component 上指明 value prop 可避免使用者改變輸入，除非你希望使用者這樣做。如果你已經指明了 value 但輸入仍然是可以被修改的，你很可能是不小心將 value 的值設定為 undefined 或 null。&lt;/p&gt;
&lt;p&gt;下面的程式碼就是一個範例。（輸入原先是被鎖住的，但在短暫的延遲後，變得可以被修改了。）&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ReactDOM.render(&lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;hi&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;, mountNode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setTimeout(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ReactDOM.render(&lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;null&amp;#125;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;, mountNode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;, &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;uncontrolled-component&#34;&gt;&lt;a href=&#34;#uncontrolled-component&#34; class=&#34;headerlink&#34; title=&#34;uncontrolled component&#34;&gt;&lt;/a&gt;uncontrolled component&lt;/h3&gt;&lt;p&gt;在大多數的情況下，我們推薦使用 controlled component 來實作表單。在控制元件裡，表單的資料是被 React component 所處理。另一個選擇是 uncontrolled component，表單的資料是由 DOM 本身所處理的。&lt;/p&gt;
&lt;p&gt;使用 ref 來從 DOM 取得表單的資料，而不是為了每個 state 的更新寫 event handler。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;NameForm&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.input = React.createRef();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleSubmit(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alert(&lt;span class=&#34;string&#34;&gt;&#39;A name was submitted: &#39;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.input.current.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    event.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;form onSubmit=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          Name:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;input type=&lt;span class=&#34;string&#34;&gt;&#34;text&#34;&lt;/span&gt; ref=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.input&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;input type=&#34;submit&#34; value=&#34;Submit&#34; /&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/form&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果你想找出一個完整的、包含驗證、可追蹤拜訪欄位並能處理提交表單等功能的解決方案，Formik 是一個很熱門的選擇。然而，它是在與 controlled component 和維持 state 相同的原則上所建立的，所以別忘了學習它。&lt;/p&gt;
&lt;h2 id=&#34;提升-State&#34;&gt;&lt;a href=&#34;#提升-State&#34; class=&#34;headerlink&#34; title=&#34;提升 State&#34;&gt;&lt;/a&gt;提升 State&lt;/h2&gt;&lt;p&gt;在 React 中，將 state 搬移到需要它的 component 的共同最近的祖先來共享 state。這被稱為「提升 state」。&lt;/p&gt;
&lt;p&gt;我們將從 TemperatureInput 移除 local state 並且搬移它到 Calculator。&lt;/p&gt;
&lt;p&gt;我們移除了它的 local state，並且不讀取 this.state.temperature，我們現在讀取 this.props.temperature。當我們想要改變時不呼叫 this.setState()，我們現在呼叫 this.props.onTemperatureChange()，它是由 Calculator 提供的&lt;/p&gt;
&lt;p&gt;calculator 傳入 prop.onChange 方法，供child的值改變時呼叫onChange()，以改變calculator(parent)的值&lt;/p&gt;
&lt;p&gt;通常來說，state 會優先被加入到需要 render 的 component。接著，如果其他的 component 也需要的話，你可以提升 state 到共同最靠近的 ancestor。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你應該依賴上至下的資料流，而不是嘗試在不同 component 之間同步 state。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;當你在 UI 上看到一些錯誤時，你可以使用 React Developer Tools 來檢查 prop 並往 tree 的上方尋找，直到找到負責更新 state 的 component。這讓你可以追蹤到錯誤的來源&lt;/p&gt;
&lt;h2 id=&#34;合成-vs-繼承&#34;&gt;&lt;a href=&#34;#合成-vs-繼承&#34; class=&#34;headerlink&#34; title=&#34;合成 vs 繼承&#34;&gt;&lt;/a&gt;合成 vs 繼承&lt;/h2&gt;&lt;p&gt;有些 component 不會提早知道它們的 children 有些什麼。對於像是 Sidebar 或 Dialog&lt;/p&gt;
&lt;p&gt;我們建議這些 component 使用特殊的 &lt;code&gt;children&lt;/code&gt; prop 將 children element 直接傳入到它們的輸出：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;FancyBorder&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;props&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;div className=&amp;#123;&lt;span class=&#34;string&#34;&gt;&#39;FancyBorder FancyBorder-&#39;&lt;/span&gt; + props.color&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;props.children&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;regexp&#34;&gt;/任何在 &amp;lt;FancyBorder&amp;gt; JSX tag 內的內容都被作為 children prop 被傳遞給 FancyBorder component。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;function WelcomeDialog() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  return (&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;FancyBorder color=&#34;blue&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;lt;h1 className=&#34;Dialog-title&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        Welcome&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;lt;/&lt;/span&gt;h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;p className=&lt;span class=&#34;string&#34;&gt;&#34;Dialog-message&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Thank you &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; visiting our spacecraft!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;/&lt;/span&gt;FancyBorder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可用來排版&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;SplitPane&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;props&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;div className=&lt;span class=&#34;string&#34;&gt;&#34;SplitPane&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;div className=&lt;span class=&#34;string&#34;&gt;&#34;SplitPane-left&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;props.left&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;lt;div className=&#34;SplitPane-right&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;#123;props.right&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;lt;/&lt;/span&gt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;function App() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  return (&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;SplitPane&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      left=&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;Contacts /&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      right=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;Chat /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 Facebook 中，我們使用 React 在成千上萬個 component，我們找不到任何使用案例來推薦你建立繼承結構的 component。&lt;/p&gt;
&lt;h2 id=&#34;用-React-思考&#34;&gt;&lt;a href=&#34;#用-React-思考&#34; class=&#34;headerlink&#34; title=&#34;用 React 思考&#34;&gt;&lt;/a&gt;用 React 思考&lt;/h2&gt;&lt;h3 id=&#34;第一步：將-UI-拆解成-component-層級&#34;&gt;&lt;a href=&#34;#第一步：將-UI-拆解成-component-層級&#34; class=&#34;headerlink&#34; title=&#34;第一步：將 UI 拆解成 component 層級&#34;&gt;&lt;/a&gt;第一步：將 UI 拆解成 component 層級&lt;/h3&gt;&lt;p&gt;首先，你要做的是將視覺稿中每一個 component （及 subcomponent）都圈起來，並幫它們命名。&lt;/p&gt;
&lt;p&gt;其中一個技巧是單一職責原則，它的意思是：在我們的理想中，一個 component應該只負責做一件事情。如果這個 component 最後變大了，你就需要再將它分成數個更小的 subcomponent 。&lt;/p&gt;
&lt;p&gt;由於你常常會展示 JSON 的資料模型給使用者，你會發現，如果你的模式是正確地被建立的話，你的 UI（以及你的 component 結構）會很好的相互對應。這是因為 UI 和資料模型通常是遵守同樣的資訊架構，這意味著將你的 UI 拆成 component 通常是相當容易的。&lt;/p&gt;
&lt;h3 id=&#34;第二步：在-React-中建立一個靜態版本&#34;&gt;&lt;a href=&#34;#第二步：在-React-中建立一個靜態版本&#34; class=&#34;headerlink&#34; title=&#34;第二步：在 React 中建立一個靜態版本&#34;&gt;&lt;/a&gt;第二步：在 React 中建立一個靜態版本&lt;/h3&gt;&lt;p&gt;在你有了 component 層級後，就可以開始實作你的應用程式了。最簡單的方式是為你的應用程式建立一個接收資料模型、render UI 且沒有互動性的版本。建立一個靜態版本需要打很多字，但不需要想很多，而加上互動性則相反，需要做很多的思考，很少的打字，所以最好的方式是把這幾個過程都分開來。接下來，我們會知道為什麼是如此。&lt;/p&gt;
&lt;p&gt;請完全不要使用 state 來建立這個靜態版本。State 是保留給互動性的，也就是會隨時間改變的資料。既然我們目前要做的是這應用程式的靜態版本，你就不需要 state。&lt;/p&gt;
&lt;p&gt;你可以從最上層開始，或從最下層開始。也就是說，你可以先從層級較高的 component 開始做起，或者你也可以從比它低層級的開始。在比較簡單的例子中，通常從上往下是比較簡單的。但在較為大型的專案中，從下往上、邊寫邊測試則比較容易。&lt;/p&gt;
&lt;p&gt;React 的 單向資料流（也可稱為單向綁定）確保所有 component 都是模塊化且快速的。&lt;/p&gt;
&lt;h3 id=&#34;第三步：找出最少（但完整）的-UI-State-的代表&#34;&gt;&lt;a href=&#34;#第三步：找出最少（但完整）的-UI-State-的代表&#34; class=&#34;headerlink&#34; title=&#34;第三步：找出最少（但完整）的 UI State 的代表&#34;&gt;&lt;/a&gt;第三步：找出最少（但完整）的 UI State 的代表&lt;/h3&gt;&lt;p&gt;請找出你的應用程式所需的最少的呈現方式，並在你遇到其他東西時再計算它們。例如，如果你在建立一個待辦清單，使用一個可以用來代表待辦事項的 array。不要另外用一個獨立的 state 變數來追蹤數量。當你要 render 代辦事項的數量時，讀取待辦事項 array 的長度即可。&lt;/p&gt;
&lt;p&gt;對於每一個資料，問你自己這三個問題：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;這個資料是從 parent 透過 props 傳下來的嗎？如果是的話，那它很可能不是 state。&lt;/li&gt;
&lt;li&gt;這個資料是否一直保持不變呢？如果是的話，那它很可能不是 state。&lt;/li&gt;
&lt;li&gt;你是否可以根據你的 component 中其他的 state 或 prop 來計算這個資料呢？如果是的話，那它一定不是 state。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;第四步：找出你的-State-應該在哪裡&#34;&gt;&lt;a href=&#34;#第四步：找出你的-State-應該在哪裡&#34; class=&#34;headerlink&#34; title=&#34;第四步：找出你的 State 應該在哪裡&#34;&gt;&lt;/a&gt;第四步：找出你的 State 應該在哪裡&lt;/h3&gt;&lt;p&gt;我們需要找出哪幾個 component 會 mutate，或者擁有，這個 state。&lt;/p&gt;
&lt;p&gt;請記得，React 的核心精神是單向資料流，從 component 的層級從高往下流。&lt;strong&gt;也許哪個 component 該擁有 state 在一開始並不是很明顯&lt;/strong&gt;。對新手來說，這往往是最難理解的概念，所以請跟著以下的步驟來思考：&lt;/p&gt;
&lt;p&gt;在你的應用程式中的每個 state：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指出每個根據 state 來 render 某些東西的 component。&lt;/li&gt;
&lt;li&gt;找出一個共同擁有者 component（在層級中單一一個需要 state 的、在所有的 component 之上的 component）。&lt;/li&gt;
&lt;li&gt;應該擁有 state 的會是共同擁有者 component 或另一個更高層級的 component。(找最高級的component來持有state)&lt;/li&gt;
&lt;li&gt;如果你找不出一個應該擁有 state 的 component 的話，那就建立一個新的 component 來保持 state，並把它加到層級中共同擁有者 component 之上的某處。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第五步：加入相反的資料流&#34;&gt;&lt;a href=&#34;#第五步：加入相反的資料流&#34; class=&#34;headerlink&#34; title=&#34;第五步：加入相反的資料流&#34;&gt;&lt;/a&gt;第五步：加入相反的資料流&lt;/h3&gt;&lt;p&gt;現在是時候支援另一種資料流的方向了：在層級深處的表格 component 需要更新 FilterableProductTable 的 state。&lt;/p&gt;
&lt;p&gt;讓我們思考一下我們想要做些什麼。我們想確保當使用者改變這個表格時，我們會更新 state 以反映使用者的輸入。既然 component 只應該更新它自己本身的 state， FilterableProductTable 將會把 callback 傳給 SearchBar，而它們則會在 state 該被更新的時候被觸發。我們可以在輸入上使用 onChange 這個 event 來 接收通知。被 FilterableProductTable 傳下來的 callback 則會呼叫 setState()，之後應用程式就會被更新。&lt;/p&gt;
&lt;h2 id=&#34;推薦的-Toolchain&#34;&gt;&lt;a href=&#34;#推薦的-Toolchain&#34; class=&#34;headerlink&#34; title=&#34;推薦的 Toolchain&#34;&gt;&lt;/a&gt;推薦的 Toolchain&lt;/h2&gt;&lt;p&gt;React 團隊主要推薦以下的方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你正在學習 React 或建立全新的 single-page 應用程式，請使用 Create React App。&lt;/li&gt;
&lt;li&gt;如果你正在建立一個使用 Node.js 的 server-rendered 網頁，請使用 Next.js。&lt;/li&gt;
&lt;li&gt;如果你正在建立一個靜態內容的網頁，請使用 Gatsby。&lt;/li&gt;
&lt;li&gt;如果你正在建立一個 component 函式庫或與現存程式碼倉庫進行接軌，請使用更靈活的 Toolchain。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aC1oYW50LnJlYWN0anMub3JnL2RvY3MvaGVsbG8td29ybGQuaHRtbA==&#34;&gt;React: 語法教學&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aC1oYW50LnJlYWN0anMub3JnL3R1dG9yaWFsL3R1dG9yaWFsLmh0bWw=&#34;&gt;React: 動手做教學&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;[React: css])(&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2ZhcS1zdHlsaW5nLmh0bWw=&#34;&gt;https://reactjs.org/docs/faq-styling.html&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;)&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
