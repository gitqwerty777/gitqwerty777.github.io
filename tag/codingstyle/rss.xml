<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>QWERTY • Posts by &#34;codingstyle&#34; tag</title>
        <link>http://gitqwerty777.github.io</link>
        <description>Programming | Computer Science | Thought</description>
        <language>zh-TW</language>
        <pubDate>Thu, 22 Oct 2020 15:00:00 +0800</pubDate>
        <lastBuildDate>Thu, 22 Oct 2020 15:00:00 +0800</lastBuildDate>
        <category>C#</category>
        <category>CodingStyle</category>
        <category>Emacs</category>
        <category>編輯器</category>
        <category>CFR</category>
        <category>電腦對局理論</category>
        <category>指令</category>
        <category>機器學習</category>
        <category>perceptron</category>
        <category>readme</category>
        <category>文件</category>
        <category>github</category>
        <category>artificial intelligence</category>
        <category>search</category>
        <category>First-Order Logic</category>
        <category>大數</category>
        <category>程式</category>
        <category>C++</category>
        <category>Hexo</category>
        <category>網誌</category>
        <category>Markdown</category>
        <category>CleanCode</category>
        <category>重構</category>
        <category>TDD</category>
        <category>設計模式</category>
        <category>CMake</category>
        <category>Makefile</category>
        <category>Linux</category>
        <category>Todo</category>
        <category>註解</category>
        <category>經濟學</category>
        <category>策略</category>
        <category>競爭</category>
        <category>博弈論</category>
        <category>計算機結構</category>
        <category>人工智慧</category>
        <category>圍棋</category>
        <category>象棋</category>
        <category>蒙地卡羅</category>
        <category>Alpha-Beta搜尋</category>
        <category>強化學習</category>
        <category>計算機網路</category>
        <category>boost</category>
        <category>函式庫</category>
        <category>編譯</category>
        <category>gcc</category>
        <category>g++</category>
        <category>clang</category>
        <category>最佳化</category>
        <category>推薦系統</category>
        <category>FM</category>
        <category>FFM</category>
        <category>SVM</category>
        <category>Embedding</category>
        <category>自然語言處理</category>
        <category>外國用語</category>
        <category>萌典</category>
        <category>opencc</category>
        <category>PTT</category>
        <category>vuejs</category>
        <category>linux</category>
        <category>c</category>
        <category>compile</category>
        <category>gdb</category>
        <category>c語言</category>
        <category>cpp</category>
        <category>除錯</category>
        <category>git</category>
        <category>VMWare</category>
        <category>虛擬機</category>
        <category>IFTTT</category>
        <category>自動化</category>
        <category>備份</category>
        <category>webhook</category>
        <category>簡報</category>
        <category>軟體</category>
        <category>PowerPoint</category>
        <category>Latex</category>
        <category>JavaScript</category>
        <category>CSS</category>
        <category>Unity</category>
        <category>fcitx</category>
        <category>嘸蝦米</category>
        <category>輸入法</category>
        <category>硬碟</category>
        <category>記憶體</category>
        <category>效能</category>
        <category>錯誤</category>
        <category>makefile</category>
        <category>備忘錄</category>
        <category>存檔</category>
        <category>統計</category>
        <category>byobu</category>
        <category>screen</category>
        <category>tmux</category>
        <category>reactjs</category>
        <category>javascript</category>
        <category>WideAndDeep</category>
        <category>Google</category>
        <category>觀察者</category>
        <category>訂閱</category>
        <category>委託</category>
        <category>正規表示式(RegExp)</category>
        <category>上下文無關文法(CFG)</category>
        <category>hexo</category>
        <category>blog</category>
        <category>theme</category>
        <category>feature</category>
        <category>revealJS</category>
        <category>markdown</category>
        <category>rss</category>
        <category>facebook</category>
        <category>youtube</category>
        <category>ptt</category>
        <category>bilibili</category>
        <category>pixiv</category>
        <category>crawler</category>
        <category>SEO</category>
        <category>google</category>
        <category>html</category>
        <category>amazon</category>
        <category>webhost</category>
        <category>ssl</category>
        <category>漢字</category>
        <category>中文</category>
        <category>異體字</category>
        <category>unicode</category>
        <category>unity</category>
        <category>演算法</category>
        <category>隨機排序</category>
        <category>洗牌</category>
        <category>Fisher-Yates</category>
        <category>證明</category>
        <category>python</category>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/CSharp-codeconvension/</guid>
            <title>C# 程式碼風格指南</title>
            <link>http://gitqwerty777.github.io/CSharp-codeconvension/</link>
            <category>C#</category>
            <category>CodingStyle</category>
            <pubDate>Thu, 22 Oct 2020 15:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvZG90bmV0L2MjL3Byb2dyYW1taW5nLWd1aWRlL2luc2lkZS1hLXByb2dyYW0vY29kaW5nLWNvbnZlbnRpb25z&#34;&gt;原文：C# Coding Conventions (C# Programming Guide)&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;Naming-Conventions&#34;&gt;&lt;a href=&#34;#Naming-Conventions&#34; class=&#34;headerlink&#34; title=&#34;Naming Conventions&#34;&gt;&lt;/a&gt;Naming Conventions&lt;/h2&gt;&lt;p&gt;若句子太長，可以分段，結尾需為&lt;code&gt;.&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var currentPerformanceCounterCategory &amp;#x3D; new System.Diagnostics.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PerformanceCounterCategory();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Layout-Conventions&#34;&gt;&lt;a href=&#34;#Layout-Conventions&#34; class=&#34;headerlink&#34; title=&#34;Layout Conventions&#34;&gt;&lt;/a&gt;Layout Conventions&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;四空格縮排, tabs 需要存為空格&lt;/li&gt;
&lt;li&gt;一行一個Statement/Declaration&lt;/li&gt;
&lt;li&gt;連續的行中，第二行需要多一個縮排&lt;/li&gt;
&lt;li&gt;方法的宣告和屬性的宣告中至少需要隔一行&lt;/li&gt;
&lt;li&gt;在判斷式中加上括號&lt;ul&gt;
&lt;li&gt;&lt;code&gt;if ((val1 &amp;gt; val2) &amp;amp;&amp;amp; (val1 &amp;gt; val3))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Commenting-Conventions&#34;&gt;&lt;a href=&#34;#Commenting-Conventions&#34; class=&#34;headerlink&#34; title=&#34;Commenting Conventions&#34;&gt;&lt;/a&gt;Commenting Conventions&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;將程式和註解放在不同行&lt;/li&gt;
&lt;li&gt;註解需以大寫開頭，逗號結尾，與&lt;code&gt;//&lt;/code&gt;間隔一個空格&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; The following declaration creates a query. It does not run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; the query.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Language-Guidelines&#34;&gt;&lt;a href=&#34;#Language-Guidelines&#34; class=&#34;headerlink&#34; title=&#34;Language Guidelines&#34;&gt;&lt;/a&gt;Language Guidelines&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用字串插補(String interpolation)來連接短的字串&lt;ul&gt;
&lt;li&gt;&lt;code&gt;string displayName = $&amp;quot;{nameList[n].LastName}, {nameList[n].FirstName}&amp;quot;;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;若要在迴圈中使用字串，使用&lt;code&gt;StringBuilder&lt;/code&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var phrase &amp;#x3D; &amp;quot;la&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var manyPhrases &amp;#x3D; new StringBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for (var i &amp;#x3D; 0; i &amp;lt; 10000; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    manyPhrases.Append(phrase);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Implicitly-Typed-Local-Variables&#34;&gt;&lt;a href=&#34;#Implicitly-Typed-Local-Variables&#34; class=&#34;headerlink&#34; title=&#34;Implicitly Typed Local Variables&#34;&gt;&lt;/a&gt;Implicitly Typed Local Variables&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;若變數的型別很明顯，使用隱式宣告&lt;ul&gt;
&lt;li&gt;&lt;code&gt;New&lt;/code&gt;, 型別轉換, 基本型別等&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var var1 &amp;#x3D; &amp;quot;This is clearly a string.&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var var2 &amp;#x3D; 27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; &amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int var3 &amp;#x3D; Convert.ToInt32(Console.ReadLine());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int var4 &amp;#x3D; ExampleClass.ResultSoFar();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可以在for中使用隱式宣告，但不要在foreach中使用隱式宣告&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Arrays&#34;&gt;&lt;a href=&#34;#Arrays&#34; class=&#34;headerlink&#34; title=&#34;Arrays&#34;&gt;&lt;/a&gt;Arrays&lt;/h2&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Preferred syntax. Note that you cannot use var here instead of string[].&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;string[] vowels1 &amp;#x3D; &amp;#123; &amp;quot;a&amp;quot;, &amp;quot;e&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;o&amp;quot;, &amp;quot;u&amp;quot; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; If you use explicit instantiation, you can use var.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var vowels2 &amp;#x3D; new string[] &amp;#123; &amp;quot;a&amp;quot;, &amp;quot;e&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;o&amp;quot;, &amp;quot;u&amp;quot; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; If you specify an array size, you must initialize the elements one at a time.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var vowels3 &amp;#x3D; new string[5];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vowels3[0] &amp;#x3D; &amp;quot;a&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vowels3[1] &amp;#x3D; &amp;quot;e&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Delegates-委託&#34;&gt;&lt;a href=&#34;#Delegates-委託&#34; class=&#34;headerlink&#34; title=&#34;Delegates(委託)&#34;&gt;&lt;/a&gt;Delegates(委託)&lt;/h2&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Define the type.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public delegate void Del(string message);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Define a method that has a matching signature.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public static void DelMethod(string str)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Console.WriteLine(&amp;quot;DelMethod argument: &amp;#123;0&amp;#125;&amp;quot;, str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; In the Main method, create an instance of Del.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Preferred: Create an instance of Del by using condensed syntax.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Del exampleDel2 &amp;#x3D; DelMethod;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; The following declaration uses the full syntax.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Del exampleDel1 &amp;#x3D; new Del(DelMethod);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Using&#34;&gt;&lt;a href=&#34;#Using&#34; class=&#34;headerlink&#34; title=&#34;Using&#34;&gt;&lt;/a&gt;Using&lt;/h2&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Method1: try-finally statement with Dispose&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Font font1 &amp;#x3D; new Font(&amp;quot;Arial&amp;quot;, 10.0f);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;try&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byte charset &amp;#x3D; font1.GdiCharSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;finally&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (font1 !&amp;#x3D; null)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ((IDisposable)font1).Dispose();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Method2: Using statement.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using (Font font2 &amp;#x3D; new Font(&amp;quot;Arial&amp;quot;, 10.0f))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byte charset &amp;#x3D; font2.GdiCharSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;amp-amp-and&#34;&gt;&lt;a href=&#34;#amp-amp-and&#34; class=&#34;headerlink&#34; title=&#34;&amp;amp;&amp;amp; and ||&#34;&gt;&lt;/a&gt;&amp;amp;&amp;amp; and ||&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;用 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 取代 &lt;code&gt;&amp;amp;&lt;/code&gt;, 用 &lt;code&gt;||&lt;/code&gt; 取代 &lt;code&gt;|&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 會 short-circult (即不可能是True時直接return False)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; 會判斷所有條件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;if ((divisor !&amp;#x3D; 0) &amp;amp;&amp;amp; (dividend &amp;#x2F; divisor &amp;gt; 0))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Console.WriteLine(&amp;quot;Quotient: &amp;#123;0&amp;#125;&amp;quot;, dividend &amp;#x2F; divisor);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Console.WriteLine(&amp;quot;Attempted division by 0 ends up here.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;New&#34;&gt;&lt;a href=&#34;#New&#34; class=&#34;headerlink&#34; title=&#34;New&#34;&gt;&lt;/a&gt;New&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用new的時候，使用var &lt;code&gt;var instance1 = new ExampleClass();&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;簡化Initialize&lt;ul&gt;
&lt;li&gt;&lt;code&gt;var instance3 = new ExampleClass { Name = &amp;quot;Desktop&amp;quot;, ID = 37414, Location = &amp;quot;Redmond&amp;quot;, Age = 2.3 };&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;事件&#34;&gt;&lt;a href=&#34;#事件&#34; class=&#34;headerlink&#34; title=&#34;事件&#34;&gt;&lt;/a&gt;事件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用lambda expression來產生一次性的event&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;public Form2()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x2F;&amp;#x2F; You can use a lambda expression to define an event handler.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.Click +&amp;#x3D; (s, e) &amp;#x3D;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MessageBox.Show(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ((MouseEventArgs)e).Location.ToString());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Using a lambda expression shortens the following traditional definition.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public Form1()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.Click +&amp;#x3D; new EventHandler(Form1_Click);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void Form1_Click(object sender, EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MessageBox.Show(((MouseEventArgs)e).Location.ToString());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Static&#34;&gt;&lt;a href=&#34;#Static&#34; class=&#34;headerlink&#34; title=&#34;Static&#34;&gt;&lt;/a&gt;Static&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;用類別名取得static成員 &lt;code&gt;ClassName.StaticMember&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;不要用繼承的類別名，直接用定義static成員的類別&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;LINQ-Queries&#34;&gt;&lt;a href=&#34;#LINQ-Queries&#34; class=&#34;headerlink&#34; title=&#34;LINQ Queries&#34;&gt;&lt;/a&gt;LINQ Queries&lt;/h2&gt;&lt;p&gt;使用有意義的變數名&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var seattleCustomers &amp;#x3D; from customer in customers&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       where customer.City &amp;#x3D;&amp;#x3D; &amp;quot;Seattle&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       select customer.Name;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;排列在&lt;code&gt;from&lt;/code&gt;下方&lt;/li&gt;
&lt;li&gt;使用多個&lt;code&gt;from&lt;/code&gt;取代&lt;code&gt;join&lt;/code&gt;&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; Use a compound from to access the inner sequence within each element.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var scoreQuery &amp;#x3D; from student in students&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 from score in student.Scores&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 where score &amp;gt; 90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 select new &amp;#123; Last &amp;#x3D; student.LastName, score &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/comment-meaning/</guid>
            <title>程式註解的常用標記</title>
            <link>http://gitqwerty777.github.io/comment-meaning/</link>
            <category>CodingStyle</category>
            <category>程式</category>
            <category>Todo</category>
            <category>註解</category>
            <pubDate>Thu, 06 Aug 2020 20:08:03 +0800</pubDate>
            <description><![CDATA[ &lt;ul&gt;
&lt;li&gt;&lt;code&gt;TODO&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FIXME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;XXX&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NOTE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HACK&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;TODO&#34;&gt;&lt;a href=&#34;#TODO&#34; class=&#34;headerlink&#34; title=&#34;TODO&#34;&gt;&lt;/a&gt;TODO&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;需要實作的部份&lt;ul&gt;
&lt;li&gt;Bug, 錯誤, 改進等都不是&lt;code&gt;TODO&lt;/code&gt;，見下述&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;FIXME&#34;&gt;&lt;a href=&#34;#FIXME&#34; class=&#34;headerlink&#34; title=&#34;FIXME&#34;&gt;&lt;/a&gt;FIXME&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;錯誤的、需要修正的部份&lt;/li&gt;
&lt;li&gt;相似的標記:  &lt;code&gt;BUG&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FIXME&lt;/code&gt; 解釋如何修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BUG&lt;/code&gt; 記錄錯誤如何發生&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;XXX&#34;&gt;&lt;a href=&#34;#XXX&#34; class=&#34;headerlink&#34; title=&#34;XXX&#34;&gt;&lt;/a&gt;XXX&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;需要改進的實作方式&lt;/li&gt;
&lt;li&gt;相似的標記: &lt;code&gt;REFACT&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;想重構時可用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;NOTE&#34;&gt;&lt;a href=&#34;#NOTE&#34; class=&#34;headerlink&#34; title=&#34;NOTE&#34;&gt;&lt;/a&gt;NOTE&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;說明程式碼的如何使用&lt;ul&gt;
&lt;li&gt;就是註解原本的用途&lt;/li&gt;
&lt;li&gt;所以實際上不用加&lt;code&gt;NOTE&lt;/code&gt;，直接寫也可以&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;相似的標記: &lt;code&gt;MARK&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;HACK&#34;&gt;&lt;a href=&#34;#HACK&#34; class=&#34;headerlink&#34; title=&#34;HACK&#34;&gt;&lt;/a&gt;HACK&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一個暫時、骯髒的解法&lt;/li&gt;
&lt;li&gt;不應該進commit&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用&#34;&gt;&lt;a href=&#34;#使用&#34; class=&#34;headerlink&#34; title=&#34;使用&#34;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;VSCode 中的套件&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPUdydW50ZnVnZ2x5LnRvZG8tdHJlZQ==&#34;&gt;TODO tree&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;除了標記，還需要說明文字，多人協作時也可署名&lt;/li&gt;
&lt;li&gt;範例&lt;ul&gt;
&lt;li&gt;❌&lt;code&gt;TODO:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;➖&lt;code&gt;TODO: lowercase&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;⭕&lt;code&gt;TODO(qwerty): lowercase&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有些標記不需要寫在程式碼中&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BUG&lt;/code&gt;：應該有專用的Bug tracker&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TODO&lt;/code&gt;：應記錄在Todo tracker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;&lt;a href=&#34;#參考資料&#34; class=&#34;headerlink&#34; title=&#34;參考資料&#34;&gt;&lt;/a&gt;參考資料&lt;/h2&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L3RoZS1hcnQtb2YvOTc4MTQ0OTMxODQ4Mi8=&#34;&gt;The art of readable code&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
