{
    "version": "https://jsonfeed.org/version/1",
    "title": "QWERTY • All posts by \"正規表示式(regexp)\" tag",
    "description": "Programming | Computer Science | Thought",
    "home_page_url": "http://gitqwerty777.github.io",
    "items": [
        {
            "id": "http://gitqwerty777.github.io/regular-expression/",
            "url": "http://gitqwerty777.github.io/regular-expression/",
            "title": "正規表示式簡介",
            "date_published": "2014-09-22T16:03:35.000Z",
            "content_html": "<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><ul>\n<li>Regular Expression, 也稱為 RegExp、regex、RE、正規表示式(台灣)、正則表達式(中國)</li>\n<li>用來處理符合某個句法規則的字串</li>\n<li>現在的標準已經被ISO(國際標準組織)批准和被Open Group組織認定(POSIX 1003.2)</li>\n</ul>\n<a id=\"more\"></a>\n\n<h2 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h2><p>指定字串樣式並加以處理</p>\n<ul>\n<li>搜尋</li>\n<li>取出資訊</li>\n<li>取代<ul>\n<li>color → colour</li>\n<li>12/06/2006 → 2006-12-06</li>\n</ul>\n</li>\n<li>檢查指定格式<ul>\n<li>Email格式檢查</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"哪些軟體使用正規表示式？\"><a href=\"#哪些軟體使用正規表示式？\" class=\"headerlink\" title=\"哪些軟體使用正規表示式？\"></a>哪些軟體使用正規表示式？</h2><p>Unix like下的工具大都內建regex，Windows下的工具比較少，但也有逐漸增多的趨勢</p>\n<p>各程式的regex雖大同小異，但仍有不同，不能直接轉換</p>\n<ul>\n<li>unix工具： <code>grep</code>, <code>sed</code>, <code>awk</code> …</li>\n<li>編輯器：<code>vi</code>, <code>emacs</code>, <code>notepad++</code> …</li>\n<li>程式語言： <code>Java</code>, <code>Python</code>, <code>Ruby</code> …</li>\n</ul>\n<h2 id=\"規則表\"><a href=\"#規則表\" class=\"headerlink\" title=\"規則表\"></a>規則表</h2><p>只列出常用的</p>\n<h3 id=\"位置和量詞\"><a href=\"#位置和量詞\" class=\"headerlink\" title=\"位置和量詞\"></a>位置和量詞</h3><table>\n<thead>\n<tr>\n<th>字元</th>\n<th>說明</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>^</td>\n<td>表示位置在開頭</td>\n<td><code>^A</code> → 開頭為A</td>\n</tr>\n<tr>\n<td>$</td>\n<td>表示位置在結尾</td>\n<td><code>A$</code> → 結尾為A</td>\n</tr>\n<tr>\n<td>*</td>\n<td>比對前一個字零次或更多次</td>\n<td><code>go*gle</code> → ggle, gogle, google…</td>\n</tr>\n<tr>\n<td>+</td>\n<td>比對前一個字一次或更多次</td>\n<td><code>go+gle</code> → gogle, google, gooogle…</td>\n</tr>\n<tr>\n<td>?</td>\n<td>比對前一個字零次或一次</td>\n<td><code>go?gle</code> → ggle, gogle</td>\n</tr>\n<tr>\n<td>{}</td>\n<td>表示前面的字元或集合出現的次數</td>\n<td><code>c{1,3}</code> → c, cc, ccc<br><code>c{3, }</code> → ccc, cccc, …</td>\n</tr>\n</tbody></table>\n<h3 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h3><table>\n<thead>\n<tr>\n<th>字元</th>\n<th>說明</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[ ]</td>\n<td>代表集合中的任一字元</td>\n<td><code>[01256]</code> → 0,1,2,5,6</td>\n</tr>\n<tr>\n<td>-</td>\n<td>在中括號內表示「範圍」(使用ascii計算)</td>\n<td><code>[0-9]</code> → 0, 1, 2, …, 9</td>\n</tr>\n<tr>\n<td>^</td>\n<td>在中括號內表示「否定」</td>\n<td><code>[^aeiou]</code> → 所有子音(❌); a, e, i, o, u以外的所有字元(✔️)</td>\n</tr>\n<tr>\n<td><code>&#124;</code></td>\n<td>或</td>\n<td><code>cat&#124;dog&#124;bird</code> → cat, dog, bird</td>\n</tr>\n</tbody></table>\n<ul>\n<li>容許多個範圍(自動加上或)：<code>[a-zA-Z0-9]</code></li>\n</ul>\n<h3 id=\"子字串\"><a href=\"#子字串\" class=\"headerlink\" title=\"子字串\"></a>子字串</h3><table>\n<thead>\n<tr>\n<th>字元</th>\n<th>說明</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>(x)</td>\n<td>將x取出，拿取資料時使用</td>\n<td><code>(a*) and (b*)</code> 可找出「aaa and bb」 中的 「aaa」 和 「bb」，並將其儲存</td>\n</tr>\n<tr>\n<td>(?:x)</td>\n<td>不取出x，純粹當作一個子空間使用</td>\n<td><code>industr(?:y&#124;ies)</code> → industry, industries</td>\n</tr>\n<tr>\n<td>(?=x)</td>\n<td>正向肯定預查，確認後方的字串是否符合</td>\n<td><code>Windows(?=95&#124;98&#124;NT&#124;2000)</code> → Windows95(✔️), Windows8(❌)</td>\n</tr>\n<tr>\n<td>(?!x)</td>\n<td>正向否定預查，確認後方的字串是否不符合</td>\n<td><code>Windows(?!95&#124;98&#124;NT&#124;2000)</code> → Windows95(❌), Windows8(✔️)</td>\n</tr>\n<tr>\n<td>(?&lt;=x)</td>\n<td>反向肯定預查，確認前方的字串是否符合</td>\n<td><code>(?&lt;=95&#124;98&#124;NT&#124;2000)Windows</code> → 95Windows(✔️), 8Windows(❌)</td>\n</tr>\n<tr>\n<td>(?&lt;!x)</td>\n<td>反向否定預查，確認前方的字串是否符合</td>\n<td><code>(?&lt;!95&#124;98&#124;NT&#124;2000)Windows</code> → 95Windows(❌), 8Windows(✔️)</td>\n</tr>\n<tr>\n<td>(x?)</td>\n<td>不貪心的比對<br>(不貪心：比對到的字串愈短愈好)</td>\n<td><code>go(.*?)gle</code> → google1google2 會比對到 o 而非ogle1goo</td>\n</tr>\n</tbody></table>\n<p>預查即代表不對應，所以最後四個範例都只會回傳符合的<code>Windows</code>而非<code>Windows95</code>或<code>Windows8</code>，而<code>(?:x)</code>是可以回傳符合的<code>industry</code>或<code>industries</code></p>\n<h3 id=\"簡寫\"><a href=\"#簡寫\" class=\"headerlink\" title=\"簡寫\"></a>簡寫</h3><table>\n<thead>\n<tr>\n<th>字元</th>\n<th>說明</th>\n<th>等價表達</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>\\d</td>\n<td>數字</td>\n<td><code>[0-9]</code></td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>\\d以外的字元</td>\n<td><code>[^0-9]</code></td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>數字、字母、底線</td>\n<td><code>[a-zA-Z0-9_]</code></td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>\\w以外的字元</td>\n<td><code>[^a-zA-Z0-9_]</code></td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>空白字元(tab, 換行等)</td>\n<td><code>[ \\t\\n\\x0B\\f\\r]</code></td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>\\s以外的字元</td>\n<td><code>[^ \\t\\n\\x0B\\f\\r]</code></td>\n</tr>\n<tr>\n<td>\\n</td>\n<td>換行符號</td>\n<td></td>\n</tr>\n<tr>\n<td>.</td>\n<td>\\n以外的字元</td>\n<td><code>[^\\n]</code></td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>英文字的邊界(空格、逗號等符號)</td>\n<td><code>(?<=\\W)(?=\\w)&#124;(?<=\\w)(?=\\W)</code></td>\n</tr>\n<tr>\n<td>\\B</td>\n<td>\\b以外的字元</td>\n<td><code>(?<=\\W)(?=\\W)&#124;(?<=\\w)(?=\\w)</code></td>\n</tr>\n<tr>\n<td>\\x[hex]</td>\n<td>十六進位，其中hex是十六進位數目</td>\n<td><code>\\x38</code> → $38_{16}$ = 56</td>\n</tr>\n<tr>\n<td>\\u[unicode]</td>\n<td>unicode，其中unicode為十六進位數字</td>\n<td><code>\\u00A9</code> → ©</td>\n</tr>\n<tr>\n<td>\\c[X]</td>\n<td>控制字元，其中 X 是控制字元</td>\n<td><code>\\cM</code> 可以比對<code>Control-M</code></td>\n</tr>\n</tbody></table>\n<ul>\n<li>特殊字元：有特殊意義的字元，如上述<code>*</code>, <code>$</code>等<ul>\n<li>若要搜尋這些字元，必須在其前方加上<code>\\</code>以跳脫字元（<code>\\^</code> → ^）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"正規表示式範例\"><a href=\"#正規表示式範例\" class=\"headerlink\" title=\"正規表示式範例\"></a>正規表示式範例</h2><ul>\n<li>數字或無輸入：<code>^[0-9]*$</code></li>\n<li>m到n個數字：<code>^\\d{m,n}$</code></li>\n<li>正整數(含0)：<code>^0$|^[1-9][0-9]*$</code></li>\n<li>用戶密碼 - 以字母開頭，長度在 6~18 之間，只能包含英數字和底線：<code>^[a-zA-Z]\\w{5,17}$</code></li>\n<li>漢字：<code>[\\u4e00-\\u9fa5]+</code></li>\n<li>IP位址：<code>^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$</code><ul>\n<li>可以先取<code>^(\\d{0,3})\\.(\\d{0,3})\\.(\\d{0,3})\\.(\\d{0,3})$</code>，再判斷取出的數字在0~255之間即可</li>\n</ul>\n</li>\n<li>可以思考下列兩題，是否有更好的寫法<ul>\n<li>一個月的 31 天(包含01-09和1-31)：<code>^((0?[1-9])|((1|2)[0-9])|30|31)$</code></li>\n<li>Email：<code>^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4})*$</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"例：以grep搜尋檔案內容\"><a href=\"#例：以grep搜尋檔案內容\" class=\"headerlink\" title=\"例：以grep搜尋檔案內容\"></a>例：以grep搜尋檔案內容</h3><ul>\n<li>在當前目錄尋找包含輸出函式<code>printf</code>或<code>fprintf</code>的檔案: <code>grep -Ern &#39;f?printf&#39; .</code><ul>\n<li><code>-E</code> 使用正規表示式</li>\n<li><code>-r</code> 遞迴搜尋(子目錄)</li>\n<li><code>-n</code> 列出行數</li>\n<li>加入尋找<code>sprintf</code><ul>\n<li><code>grep -Ern &#39;[sf]?printf&#39; .</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><ul>\n<li>regex 很像 CFG(Context Free Grammar)，應該是可以互相轉換</li>\n<li>可先使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVnZXgxMDEuY29tLw==\">regex101<i class=\"fa fa-external-link-alt\"></i></span>測試regex是否正確</li>\n</ul>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvUmVndWxhcl9leHByZXNzaW9u\">Wikipedia<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2lydy5uY3V0LmVkdS50dy9wZXRlcmp1L3dlYnNsaWRlL3JlLw==\">regexp介紹<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53ZWJwYWdlLmlkdi50dy9tYWlsbGlzdC9tYWlsbGlzdDQvcHJvLzA1L3JlZ3VsYXIxLmh0bQ==\">簡易圖片教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2F0ZWRldi53b3JkcHJlc3MuY29tLzIwMDcvMTEvMjMvJUU2JUFEJUEzJUU4JUE2JThGJUU4JUExJUE4JUU3JUE0JUJBJUU1JUJDJThGLXJlZ3VsYXItZXhwcmVzc2lvbi8=\">regexp-轉載自張智星教學網站<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jicy5xdWlja2Jlc3QubmV0L3ZpZXd0aHJlYWQucGhwP3RpZD01OTc4\">朱孝國–正規表示式原理及應用<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xpbnV4LnZiaXJkLm9yZy9saW51eF9iYXNpYy8wMzMwcmVndWxhcmV4LnBocCNiYXNpY19yZWdleHA=\">鳥哥<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3VzZXIuZnJkbS5pbmZvL2NraHVuZy9iL3JlL2luZGV4LnBocA==\">洪朝貴:字串樣版 Regexp: 兼談長線學習投資<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmhzZG4ubmV0LzEzOTEuaHRtbA==\">常用的正規表示式<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "正規表示式(RegExp)",
                "上下文無關文法(CFG)"
            ]
        }
    ]
}