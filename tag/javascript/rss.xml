<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>QWERTY • Posts by &#34;javascript&#34; tag</title>
        <link>http://gitqwerty777.github.io</link>
        <description>Programming | Computer Science | Thought</description>
        <language>zh-TW</language>
        <pubDate>Tue, 22 Mar 2022 11:45:23 +0800</pubDate>
        <lastBuildDate>Tue, 22 Mar 2022 11:45:23 +0800</lastBuildDate>
        <category>C#</category>
        <category>CodingStyle</category>
        <category>Emacs</category>
        <category>編輯器</category>
        <category>CFR</category>
        <category>電腦對局理論</category>
        <category>指令</category>
        <category>機器學習</category>
        <category>perceptron</category>
        <category>readme</category>
        <category>文件</category>
        <category>github</category>
        <category>artificial intelligence</category>
        <category>search</category>
        <category>First-Order Logic</category>
        <category>大數</category>
        <category>程式</category>
        <category>C++</category>
        <category>Hexo</category>
        <category>網誌</category>
        <category>Markdown</category>
        <category>CleanCode</category>
        <category>重構</category>
        <category>TDD</category>
        <category>設計模式</category>
        <category>CMake</category>
        <category>Makefile</category>
        <category>Linux</category>
        <category>Todo</category>
        <category>註解</category>
        <category>經濟學</category>
        <category>策略</category>
        <category>競爭</category>
        <category>博弈論</category>
        <category>計算機結構</category>
        <category>人工智慧</category>
        <category>圍棋</category>
        <category>象棋</category>
        <category>蒙地卡羅</category>
        <category>Alpha-Beta搜尋</category>
        <category>強化學習</category>
        <category>計算機網路</category>
        <category>boost</category>
        <category>函式庫</category>
        <category>編譯</category>
        <category>gcc</category>
        <category>g++</category>
        <category>clang</category>
        <category>最佳化</category>
        <category>推薦系統</category>
        <category>FM</category>
        <category>FFM</category>
        <category>SVM</category>
        <category>Embedding</category>
        <category>自然語言處理</category>
        <category>外國用語</category>
        <category>萌典</category>
        <category>opencc</category>
        <category>PTT</category>
        <category>vuejs</category>
        <category>linux</category>
        <category>c</category>
        <category>compile</category>
        <category>gdb</category>
        <category>c語言</category>
        <category>cpp</category>
        <category>除錯</category>
        <category>git</category>
        <category>VMWare</category>
        <category>虛擬機</category>
        <category>IFTTT</category>
        <category>自動化</category>
        <category>備份</category>
        <category>webhook</category>
        <category>簡報</category>
        <category>軟體</category>
        <category>PowerPoint</category>
        <category>Latex</category>
        <category>JavaScript</category>
        <category>CSS</category>
        <category>Unity</category>
        <category>fcitx</category>
        <category>嘸蝦米</category>
        <category>輸入法</category>
        <category>硬碟</category>
        <category>記憶體</category>
        <category>效能</category>
        <category>錯誤</category>
        <category>makefile</category>
        <category>備忘錄</category>
        <category>存檔</category>
        <category>統計</category>
        <category>byobu</category>
        <category>screen</category>
        <category>tmux</category>
        <category>reactjs</category>
        <category>javascript</category>
        <category>WideAndDeep</category>
        <category>Google</category>
        <category>觀察者</category>
        <category>訂閱</category>
        <category>委託</category>
        <category>正規表示式(RegExp)</category>
        <category>上下文無關文法(CFG)</category>
        <category>hexo</category>
        <category>blog</category>
        <category>theme</category>
        <category>feature</category>
        <category>revealJS</category>
        <category>markdown</category>
        <category>rss</category>
        <category>facebook</category>
        <category>youtube</category>
        <category>ptt</category>
        <category>bilibili</category>
        <category>pixiv</category>
        <category>crawler</category>
        <category>SEO</category>
        <category>google</category>
        <category>html</category>
        <category>amazon</category>
        <category>webhost</category>
        <category>ssl</category>
        <category>漢字</category>
        <category>中文</category>
        <category>異體字</category>
        <category>unicode</category>
        <category>unity</category>
        <category>演算法</category>
        <category>隨機排序</category>
        <category>洗牌</category>
        <category>Fisher-Yates</category>
        <category>證明</category>
        <category>python</category>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/how-to-make-slides/</guid>
            <title>簡報製作軟體比較</title>
            <link>http://gitqwerty777.github.io/how-to-make-slides/</link>
            <category>Markdown</category>
            <category>簡報</category>
            <category>軟體</category>
            <category>PowerPoint</category>
            <category>Latex</category>
            <category>JavaScript</category>
            <category>CSS</category>
            <category>Unity</category>
            <pubDate>Tue, 22 Mar 2022 11:45:23 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;分類&#34;&gt;&lt;a href=&#34;#分類&#34; class=&#34;headerlink&#34; title=&#34;分類&#34;&gt;&lt;/a&gt;分類&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;編輯軟體&lt;/li&gt;
&lt;li&gt;Latex&lt;/li&gt;
&lt;li&gt;Markdown&lt;/li&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;編輯軟體&#34;&gt;&lt;a href=&#34;#編輯軟體&#34; class=&#34;headerlink&#34; title=&#34;編輯軟體&#34;&gt;&lt;/a&gt;編輯軟體&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;優點&lt;ul&gt;
&lt;li&gt;編輯方便&lt;/li&gt;
&lt;li&gt;功能齊全&lt;/li&gt;
&lt;li&gt;模版多&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺點&lt;ul&gt;
&lt;li&gt;手動排版&lt;/li&gt;
&lt;li&gt;需要使用特定軟體才能編輯&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;軟體&#34;&gt;&lt;a href=&#34;#軟體&#34; class=&#34;headerlink&#34; title=&#34;軟體&#34;&gt;&lt;/a&gt;軟體&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;PowerPoint&lt;/li&gt;
&lt;li&gt;Google Slides&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wcmV6aS5jb20veGNpdDR6YmF0NnN3L3N3ZWV0LXJlY2lwZS10by1zb2x2aW5nLXByb2JsZW1zLw==&#34;&gt;Prezi&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Latex&#34;&gt;&lt;a href=&#34;#Latex&#34; class=&#34;headerlink&#34; title=&#34;Latex&#34;&gt;&lt;/a&gt;Latex&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;優點&lt;ul&gt;
&lt;li&gt;自訂性高&lt;/li&gt;
&lt;li&gt;寫公式、程式碼方便&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺點&lt;ul&gt;
&lt;li&gt;指令過於複雜&lt;/li&gt;
&lt;li&gt;需要設定開發環境&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;模版&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3ZlcmxlYWYuY29tL2xlYXJuL2xhdGV4L0JlYW1lcg==&#34;&gt;Beamer&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hzdWFudGllbi9iZWFtZXJUYWl3YW4=&#34;&gt;BeamerTaiwan&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Markdown&#34;&gt;&lt;a href=&#34;#Markdown&#34; class=&#34;headerlink&#34; title=&#34;Markdown&#34;&gt;&lt;/a&gt;Markdown&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;優點&lt;ul&gt;
&lt;li&gt;原始文字易於保存&lt;/li&gt;
&lt;li&gt;語法較Latex簡單&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺點&lt;ul&gt;
&lt;li&gt;自訂性比Latex差&lt;/li&gt;
&lt;li&gt;難製作動畫&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;軟體-1&#34;&gt;&lt;a href=&#34;#軟體-1&#34; class=&#34;headerlink&#34; title=&#34;軟體&#34;&gt;&lt;/a&gt;軟體&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21hcnAtdGVhbS9tYXJwaXQ=&#34;&gt;Marp&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;可以寫html tag&lt;/li&gt;
&lt;li&gt;簡易的css支援&lt;/li&gt;
&lt;li&gt;動畫功能較少&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWRpdW0uY29tL3BtJUU3JTlBJTg0JUU3JTk0JTlGJUU3JTk0JUEyJUU1JThBJTlCJUU1JUI3JUE1JUU1JTg1JUI3JUU3JUFFJUIxLyVFNSVBNiU4MiVFNCVCRCU5NSVFNSVCRiVBQiVFOSU4MCU5RiVFNSVBRSU4QyVFNiU4OCU5MCVFNyVCMCVBMSVFNSVBMCVCMSVFNiU4RSU5MiVFNyU4OSU4OC0lRTUlQjAlODclRTclQjIlQkUlRTclQTUlOUUlRTUlQjAlODglRTYlQjMlQTglRTUlOUMlQTglRTYlQkElOTYlRTUlODIlOTklRTYlQkMlOTQlRTglQUMlOUIlRTQlQjglOEEtZWFiOGEwNjY4NzMz&#34;&gt;教學&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Javascript&#34;&gt;&lt;a href=&#34;#Javascript&#34; class=&#34;headerlink&#34; title=&#34;Javascript&#34;&gt;&lt;/a&gt;Javascript&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;用js擴充功能&lt;/li&gt;
&lt;li&gt;用css排版&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;軟體-2&#34;&gt;&lt;a href=&#34;#軟體-2&#34; class=&#34;headerlink&#34; title=&#34;軟體&#34;&gt;&lt;/a&gt;軟體&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZXZlYWxqcy5jb20v&#34;&gt;Reveal.js&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;支援Markdown語法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/revealjs-markdown&#34;&gt;教學:Reveal.js配合Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zbGkuZGV2Lw==&#34;&gt;Slidev&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;支援Markdown語法&lt;/li&gt;
&lt;li&gt;支援類Vue語法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pbXByZXNzLmpzLm9yZy8=&#34;&gt;Impress.js&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;類似Prezi&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2ltYWtld2VidGhpbmdzLmNvbS9kZWNrLmpzLw==&#34;&gt;Deck.js&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2tpcmthcy5jaC9hc2NlbnNvci8j&#34;&gt;Ascensor&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xhbmRzbGlkZS5hZGFtemFwLmNvbS8jc2xpZGUx&#34;&gt;LandSlide&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;p&gt;用遊戲引擎做簡報&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1VuaXR5VGVjaG5vbG9naWVzL1ByZXNlbnRhdGlvbg==&#34;&gt;Unity&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;可以將動畫和特效做到非常好，只是過於麻煩&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;結論&#34;&gt;&lt;a href=&#34;#結論&#34; class=&#34;headerlink&#34; title=&#34;結論&#34;&gt;&lt;/a&gt;結論&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用純文字(即Markdown)儲存簡報，較沒有相容性的問題，版本控制也容易&lt;ul&gt;
&lt;li&gt;但排版較困難&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;css是目前排版的最好方法&lt;/li&gt;
&lt;li&gt;所以最好的方法為Markdown+html&lt;/li&gt;
&lt;li&gt;推薦使用&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21hcnAtdGVhbS9tYXJwaXQ=&#34;&gt;Marp&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZXZlYWxqcy5jb20v&#34;&gt;Reveal.js&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zbGkuZGV2Lw==&#34;&gt;Slidev&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/vuejs/</guid>
            <title>vuejs 語法</title>
            <link>http://gitqwerty777.github.io/vuejs/</link>
            <category>vuejs</category>
            <category>javascript</category>
            <pubDate>Sun, 06 Sep 2020 14:50:12 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;因為mustache語法(雙大括號)會被判斷成render命令，改成全形符號&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;簡介&#34;&gt;&lt;a href=&#34;#簡介&#34; class=&#34;headerlink&#34; title=&#34;簡介&#34;&gt;&lt;/a&gt;簡介&lt;/h2&gt;&lt;p&gt;採用簡潔的模板語法來宣告式地將資料渲染進 DOM 的系統&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- html part --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;app&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ｛｛ message ｝｝&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//js part&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; app = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#app&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    message: &lt;span class=&#34;string&#34;&gt;&#39;Hello Vue.js!&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    todo: []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  methods: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reverseMessage: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.message = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.message.split(&lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;).reverse().join(&lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 html tag 中 加入&lt;code&gt;v-&lt;/code&gt;開頭的attributes以實作邏輯&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h2 id=&#34;元件化應用構建&#34;&gt;&lt;a href=&#34;#元件化應用構建&#34; class=&#34;headerlink&#34; title=&#34;元件化應用構建&#34;&gt;&lt;/a&gt;元件化應用構建&lt;/h2&gt;&lt;p&gt;&lt;code&gt;v-bind&lt;/code&gt;: todo-item 元件接受一個”prop”，類似於一個自定義 attribute。這個 prop 名為 todo。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div id=&lt;span class=&#34;string&#34;&gt;&#34;app&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;ol&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;todo-item&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v-&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;item in groceryList&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v-bind:todo=&lt;span class=&#34;string&#34;&gt;&#34;item&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v-bind:key=&lt;span class=&#34;string&#34;&gt;&#34;item.id&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/todo-item&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;/&lt;/span&gt;ol&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;Vue.component(&#39;todo-item&#39;, &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  props: [&#39;todo&#39;],&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  template: &#39;&amp;lt;li&amp;gt;｛｛ todo.text ｝｝&amp;lt;/&lt;/span&gt;li&amp;gt;&lt;span class=&#34;string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var app = new Vue(&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &#39;#app&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    groceryList: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;text&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#39;蔬菜&#39;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;text&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#39;乳酪&#39;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;text&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#39;隨便其它什麼人吃的東西&#39;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Instance&#34;&gt;&lt;a href=&#34;#Instance&#34; class=&#34;headerlink&#34; title=&#34;Instance&#34;&gt;&lt;/a&gt;Instance&lt;/h2&gt;&lt;p&gt;用 Vue 函式建立一個新的 Vue 例項&lt;br&gt;當一個 Vue 例項被建立時，它將 data 物件中的所有的 property 加入到 Vue 的響應式系統中&lt;br&gt;只有當例項被建立時就已經存在於 data 中的 property 才是響應式的&lt;br&gt;唯一的例外是使用&lt;code&gt;Object.freeze()&lt;/code&gt;，這會阻止修改現有的 property，也意味著響應系統無法再追蹤變化。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 我們的資料物件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; data = &amp;#123; &lt;span class=&#34;attr&#34;&gt;a&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 該物件被加入到一個 Vue 例項中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; vm = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#example&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 獲得這個例項上的 property&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 返回源資料中對應的欄位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.a == data.a &lt;span class=&#34;comment&#34;&gt;// =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 設定 property 也會影響到原始資料&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.a = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.a &lt;span class=&#34;comment&#34;&gt;// =&amp;gt; 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ……反之亦然&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.a = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.a &lt;span class=&#34;comment&#34;&gt;// =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.$data === data &lt;span class=&#34;comment&#34;&gt;// =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.$el === &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&#34;string&#34;&gt;&#39;example&#39;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// $watch 是一個例項方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.$watch(&lt;span class=&#34;string&#34;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;newValue, oldValue&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 這個回撥將在 `vm.a` 改變後呼叫&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;生命週期鉤子&#34;&gt;&lt;a href=&#34;#生命週期鉤子&#34; class=&#34;headerlink&#34; title=&#34;生命週期鉤子&#34;&gt;&lt;/a&gt;生命週期鉤子&lt;/h2&gt;&lt;p&gt;&lt;code&gt;created&lt;/code&gt;、&lt;code&gt;mounted&lt;/code&gt;、&lt;code&gt;updated&lt;/code&gt; 和 &lt;code&gt;destroyed&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不要在選項 property 或 callback 使用箭頭函式&lt;/strong&gt;。因為箭頭函式並沒有 this，this 會作為變數一直向上級詞法作用域查詢，直至找到為止，經常導致 Uncaught TypeError: Cannot read property of undefined 或 Uncaught TypeError: this.myMethod is not a function 之類的錯誤。&lt;/p&gt;
&lt;h2 id=&#34;資料繫結&#34;&gt;&lt;a href=&#34;#資料繫結&#34; class=&#34;headerlink&#34; title=&#34;資料繫結&#34;&gt;&lt;/a&gt;資料繫結&lt;/h2&gt;&lt;p&gt;資料繫結最常見的形式就是使用“Mustache”語法 (雙大括號) 的文字插值：&lt;br&gt;雙大括號會將資料解釋為普通文字，而非 HTML 程式碼&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;span&amp;gt;Message: ｛｛ msg ｝｝&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可使用表示式&lt;br&gt;&lt;code&gt;｛｛ ok ? &amp;#39;YES&amp;#39; : &amp;#39;NO&amp;#39; ｝｝&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;透過使用 &lt;code&gt;v-once&lt;/code&gt; 指令，你也能執行一次性地插值，當資料改變時，插值處的內容不會更新。但請留心這會影響到該節點上的其它資料繫結：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;span v-once&amp;gt;這個將不會改變: ｛｛ msg ｝｝&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;為了輸出真正的 HTML，你需要使用 &lt;code&gt;v-html&lt;/code&gt; 指令&lt;br&gt;&lt;code&gt;&amp;lt;p&amp;gt;Using v-html directive: &amp;lt;span v-html=&amp;quot;rawHtml&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;strong&gt;動態渲染 HTML 可能會非常危險，因為它很容易導致 XSS 攻擊。請只對可信內容使用 HTML 插值，絕不要對使用者提供的內容使用插值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Mustache 語法不能作用在 HTML attribute 上，應該使用 &lt;code&gt;v-bind&lt;/code&gt; 指令：&lt;br&gt;&lt;code&gt;&amp;lt;div v-bind:id=&amp;quot;dynamicId&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;div v-bind:id=&amp;quot;&amp;#39;list-&amp;#39; + id&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;指令&#34;&gt;&lt;a href=&#34;#指令&#34; class=&#34;headerlink&#34; title=&#34;指令&#34;&gt;&lt;/a&gt;指令&lt;/h2&gt;&lt;p&gt;指令 (Directives) 是帶有 &lt;code&gt;v-&lt;/code&gt; 字首的特殊 attribute。&lt;br&gt;指令 attribute 的值預期是單個 JavaScript 表示式 (&lt;code&gt;v-for&lt;/code&gt; 是例外)。&lt;br&gt;指令的職責是，當表示式的值改變時，將其產生的連帶影響，響應式地作用於 DOM。&lt;/p&gt;
&lt;p&gt;一些指令能夠接收一個“引數”，在指令名稱之後以冒號表示。例如，&lt;code&gt;v-bind&lt;/code&gt; 指令可以用於響應式地更新 HTML attribute&lt;br&gt;&lt;code&gt;&amp;lt;a v-bind:href&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;從 2.6.0 開始，可以用方括號括起來的 JavaScript 表示式作為一個指令的引數：&lt;br&gt;&lt;code&gt;&amp;lt;a v-bind:[attributeName]=&amp;quot;url&amp;quot;&amp;gt; ... &amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;動態引數預期會求出一個字串，異常情況下值為 null。這個特殊的 null 值可以用於移除繫結。任何其它非字串型別的值都將會觸發一個警告。&lt;/p&gt;
&lt;h3 id=&#34;修飾符&#34;&gt;&lt;a href=&#34;#修飾符&#34; class=&#34;headerlink&#34; title=&#34;修飾符&#34;&gt;&lt;/a&gt;修飾符&lt;/h3&gt;&lt;p&gt;修飾符 (modifier) 是以 &lt;code&gt;.&lt;/code&gt; 指明的特殊字尾，用於指出一個指令應該以特殊方式繫結。例如&lt;code&gt;.prevent&lt;/code&gt; 修飾符告訴 &lt;code&gt;v-on&lt;/code&gt; 指令對於觸發的事件呼叫 &lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;form v-on:submit.prevent=&amp;quot;onSubmit&amp;quot;&amp;gt;...&amp;lt;/form&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Vue 為 &lt;code&gt;v-bind&lt;/code&gt; 和 &lt;code&gt;v-on&lt;/code&gt; 這兩個最常用的指令，提供了特定簡寫：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 完整語法 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-bind:href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;url&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 縮寫 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;:href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;url&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 完整語法 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doSomething&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 縮寫 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; @&lt;span class=&#34;attr&#34;&gt;click&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doSomething&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;計算屬性-computed&#34;&gt;&lt;a href=&#34;#計算屬性-computed&#34; class=&#34;headerlink&#34; title=&#34;計算屬性(computed)&#34;&gt;&lt;/a&gt;計算屬性(computed)&lt;/h3&gt;&lt;p&gt;對於任何複雜邏輯，你都應當使用計算屬性&lt;br&gt;計算屬性只在相關響應式依賴發生改變時它們才會重新求值，這是比使用function好的地方&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; vm = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#app&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    message: &lt;span class=&#34;string&#34;&gt;&#39;Hello&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  computed: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 計算屬性的 getter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reversedMessage: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// `this` 指向 vm 例項&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.message.split(&lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;).reverse().join(&lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;//olleH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下面的計算屬性將不再更新，因為 Date.now() 不是響應式依賴：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;computed: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  now: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Date&lt;/span&gt;.now()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;計算屬性預設只有 getter，不過在需要時你也可以提供一個 setter：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;computed: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fullName: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// getter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;get&lt;/span&gt;: function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.firstName + &lt;span class=&#34;string&#34;&gt;&#39; &#39;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.lastName&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// better than set two variables seperately&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt;: function (newValue) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; names = newValue.split(&lt;span class=&#34;string&#34;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.firstName = names[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.lastName = names[names.length - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;watch&#34;&gt;&lt;a href=&#34;#watch&#34; class=&#34;headerlink&#34; title=&#34;watch&#34;&gt;&lt;/a&gt;watch&lt;/h3&gt;&lt;p&gt;監視某個資料，當其發生改變，這個函式就會執行&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div id=&lt;span class=&#34;string&#34;&gt;&#34;watch-example&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Ask a yes/no question:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;input v-model=&lt;span class=&#34;string&#34;&gt;&#34;question&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;p&amp;gt;｛｛ answer ｝｝&amp;lt;/&lt;/span&gt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;!-- 因為 AJAX 庫和通用工具的生態已經相當豐富，Vue 核心程式碼沒有重複 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;!-- 提供這些功能以保持精簡。這也可以讓你自由選擇自己更熟悉的工具。 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;script src=&#34;https:/&lt;/span&gt;&lt;span class=&#34;regexp&#34;&gt;/cdn.jsdelivr.net/&lt;/span&gt;npm/axios@&lt;span class=&#34;number&#34;&gt;0.12&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;/dist/axios.min.js&lt;span class=&#34;string&#34;&gt;&#34;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;script src=&#34;&lt;/span&gt;https:&lt;span class=&#34;comment&#34;&gt;//cdn.jsdelivr.net/npm/lodash@4.13.1/lodash.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; watchExampleVM = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#watch-example&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    question: &lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    answer: &lt;span class=&#34;string&#34;&gt;&#39;I cannot give you an answer until you ask a question!&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  watch: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果 `question` 發生改變，這個函式就會執行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    question: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;newQuestion, oldQuestion&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.answer = &lt;span class=&#34;string&#34;&gt;&#39;Waiting for you to stop typing...&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.debouncedGetAnswer()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  created: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// `_.debounce` 是一個透過 Lodash 限制操作頻率的函式。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 在這個例子中，我們希望限制訪問 yesno.wtf/api 的頻率&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// AJAX 請求直到使用者輸入完畢才會發出。想要瞭解更多關於&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// `_.debounce` 函式 (及其近親 `_.throttle`) 的知識，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 請參考：https://lodash.com/docs#debounce&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.debouncedGetAnswer = _.debounce(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.getAnswer, &lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  methods: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    getAnswer: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.question.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;?&#39;&lt;/span&gt;) === &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.answer = &lt;span class=&#34;string&#34;&gt;&#39;Questions usually contain a question mark. ;-)&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.answer = &lt;span class=&#34;string&#34;&gt;&#39;Thinking...&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; vm = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      axios.get(&lt;span class=&#34;string&#34;&gt;&#39;https://yesno.wtf/api&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .then(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;response&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          vm.answer = _.capitalize(response.data.answer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .catch(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;error&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          vm.answer = &lt;span class=&#34;string&#34;&gt;&#39;Error! Could not reach the API. &#39;&lt;/span&gt; + error&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Class-與-Style-繫結&#34;&gt;&lt;a href=&#34;#Class-與-Style-繫結&#34; class=&#34;headerlink&#34; title=&#34;Class 與 Style 繫結&#34;&gt;&lt;/a&gt;Class 與 Style 繫結&lt;/h2&gt;&lt;p&gt;&lt;code&gt;&amp;lt;div v-bind:class=&amp;quot;{ active: isActive }&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;br&gt;上面的語法表示 active 這個 class 存在與否將取決於資料 property isActive 的 truthiness。&lt;/p&gt;
&lt;p&gt;我們也可以在這裡繫結一個返回物件的計算屬性。這是一個常用且強大的模式：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div v-bind:&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;classObject&#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;data: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  isActive: true,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  error: null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;computed: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  classObject: function () &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    return &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      active: this.isActive &amp;amp;&amp;amp; !this.error,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &#39;text-danger&#39;: this.error &amp;amp;&amp;amp; this.error.type === &#39;fatal&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;陣列語法中也可以使用物件語法：&lt;br&gt;&lt;code&gt;&amp;lt;div v-bind:class=&amp;quot;[{ active: isActive }, errorClass]&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;v-if&#34;&gt;&lt;a href=&#34;#v-if&#34; class=&#34;headerlink&#34; title=&#34;v-if&#34;&gt;&lt;/a&gt;v-if&lt;/h3&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-if&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;type === &#39;A&#39;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-else-if&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;type === &#39;B&#39;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-else-if&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;type === &#39;C&#39;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  C&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-else&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Not A/B/C&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在html用&lt;code&gt;template&lt;/code&gt;作為隱形元素，不渲染&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;template v-&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;ok&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;h1&amp;gt;Title&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;p&amp;gt;Paragraph 1&amp;lt;/&lt;/span&gt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;p&amp;gt;Paragraph &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/&lt;/span&gt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Vue 會儘可能高效地渲染元素，通常會復用已有元素而不是從頭開始渲染。這麼做除了使 Vue 變得非常快之外，還有其它一些好處。例如，如果你允許使用者在不同的登入方式之間切換：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;template v-&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;loginType === &#39;username&#39;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;label&amp;gt;Username&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;input placeholder=&#34;Enter your username&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/&lt;/span&gt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;template v-&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;label&amp;gt;Email&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;input placeholder=&#34;Enter your email address&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/&lt;/span&gt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;那麼在上面的程式碼中切換 loginType 將不會清除使用者已經輸入的內容。因為兩個模板使用了相同的元素，&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 不會被替換掉——僅僅是替換了它的 placeholder。&lt;/p&gt;
&lt;p&gt;帶有 &lt;code&gt;v-show&lt;/code&gt; 的元素始終會被渲染並保留在 DOM 中。&lt;code&gt;v-show&lt;/code&gt; 只是簡單地切換元素的 CSS property display。&lt;br&gt;注意，&lt;code&gt;v-show&lt;/code&gt; 不支援 &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; 元素，也不支援 &lt;code&gt;v-else&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v-if&lt;/code&gt; 是“真正”的條件渲染，因為它會確保在切換過程中條件塊內的事件監聽器和子元件適當地被銷毀和重建。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v-if&lt;/code&gt; 也是惰性的：如果在初始渲染時條件為假，則什麼也不做——直到條件第一次變為真時，才會開始渲染條件塊。&lt;/p&gt;
&lt;p&gt;相比之下，&lt;code&gt;v-show&lt;/code&gt; 就簡單得多——不管初始條件是什麼，元素總是會被渲染，並且只是簡單地基於 CSS 進行切換。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般來說，v-if 有更高的切換開銷，而 v-show 有更高的初始渲染開銷。因此，如果需要非常頻繁地切換，則使用 v-show 較好；如果在執行時條件很少改變，則使用 v-if 較好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;不推薦同時使用 v-if 和 v-for&lt;/strong&gt;。請查閱風格指南以獲取更多資訊。&lt;/p&gt;
&lt;h3 id=&#34;v-for&#34;&gt;&lt;a href=&#34;#v-for&#34; class=&#34;headerlink&#34; title=&#34;v-for&#34;&gt;&lt;/a&gt;v-for&lt;/h3&gt;&lt;p&gt;&lt;code&gt;v-for&lt;/code&gt; 還支援一個可選的第二個引數，即當前項的索引。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;ul id=&lt;span class=&#34;string&#34;&gt;&#34;example-2&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;li v-&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;(item, index) in items&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ｛｛ parentMessage ｝｝ - ｛｛ index ｝｝ - ｛｛ item.message ｝｝&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/u&lt;/span&gt;l&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;你也可以用 &lt;code&gt;of&lt;/code&gt; 替代 &lt;code&gt;in&lt;/code&gt; 作為分隔符，因為它更接近 JavaScript 迭代器的語法：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;div v-for=&amp;quot;item of items&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以用 &lt;code&gt;v-for&lt;/code&gt; 來遍歷一個物件的 property。&lt;br&gt;也可以提供第二個的引數為 property 名稱 (也就是key)&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;ul id=&lt;span class=&#34;string&#34;&gt;&#34;v-for-object&#34;&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;demo&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;li v-&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;value in object&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ｛｛ value ｝｝&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/u&lt;/span&gt;l&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!-- 在遍歷物件時，會按 &lt;span class=&#34;built_in&#34;&gt;Object&lt;/span&gt;.keys() 的結果遍歷，但是不能保證它的結果在不同的 JavaScript 引擎下都一致。 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div v-&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;(value, name) in object&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ｛｛ name ｝｝: ｛｛ value ｝｝&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;v-for&lt;/code&gt; 渲染的元素列表時，它預設使用“就地更新”的策略。如果資料項的順序被改變，Vue 將不會移動 DOM 元素來匹配資料項的順序，而是就地更新每個元素，並且確保它們在每個索引位置正確渲染&lt;/p&gt;
&lt;p&gt;這個預設的模式是高效的，但是隻適用於不依賴子元件狀態或臨時 DOM 狀態 (例如：表單輸入值) 的列表渲染輸出。&lt;/p&gt;
&lt;p&gt;為了給 Vue 一個提示，以便它能跟蹤每個節點的身份，從而重用和重新排序現有元素，&lt;strong&gt;你需要為每項提供一個唯一的 key attribute&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;自動檢測變化的限制&#34;&gt;&lt;a href=&#34;#自動檢測變化的限制&#34; class=&#34;headerlink&#34; title=&#34;自動檢測變化的限制&#34;&gt;&lt;/a&gt;自動檢測變化的限制&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;由於 JavaScript 的限制，Vue 不能檢測陣列(array)和物件(object)的變化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Vue 將被偵聽的陣列的變更方法進行了包裹，所以它們也將會觸發檢視更新。這些被包裹過的方法包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pop()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shift()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unshift()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相比之下，也有非變更方法，例如 &lt;code&gt;filter()&lt;/code&gt;、&lt;code&gt;concat()&lt;/code&gt; 和 &lt;code&gt;slice()&lt;/code&gt;。它們不會變更原始陣列，而總是返回一個新陣列&lt;/p&gt;
&lt;h3 id=&#34;is&#34;&gt;&lt;a href=&#34;#is&#34; class=&#34;headerlink&#34; title=&#34;is&#34;&gt;&lt;/a&gt;is&lt;/h3&gt;&lt;p&gt;注意這裡的 &lt;code&gt;is=&amp;quot;todo-item&amp;quot;&lt;/code&gt; attribute。這種做法在使用 DOM 模板時是十分必要的，因為在 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 元素內只有 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素會被看作有效內容。這樣做實現的效果與 &lt;code&gt;&amp;lt;todo-item&amp;gt;&lt;/code&gt; 相同，但是可以避開一些潛在的瀏覽器解析錯誤。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;todo-list-example&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:submit.prevent&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;addNewTodo&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;new-todo&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;Add a todo&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;newTodoText&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;new-todo&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;placeholder&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;E.g. Feed the cat&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;Add&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;is&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;todo-item&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;v-for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;(todo, index) in todos&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;v-bind:key&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;todo.id&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;v-bind:title&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;todo.title&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;v-on:remove&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;todos.splice(index, 1)&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    &amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;v-on-dom-event&#34;&gt;&lt;a href=&#34;#v-on-dom-event&#34; class=&#34;headerlink&#34; title=&#34;v-on: dom event&#34;&gt;&lt;/a&gt;v-on: dom event&lt;/h3&gt;&lt;p&gt;用特殊變數 &lt;code&gt;$event&lt;/code&gt;訪問原始的 DOM 事件&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;button v-on:click=&lt;span class=&#34;string&#34;&gt;&#34;warn(&#39;Form cannot be submitted yet.&#39;, $event)&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Submit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;regexp&#34;&gt;/ ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;methods: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  warn: function (message, event) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    /&lt;/span&gt;&lt;span class=&#34;regexp&#34;&gt;/ 現在我們可以訪問原生事件物件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    if (event) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      event.preventDefault()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    alert(message)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Vue.js 為 &lt;code&gt;v-on&lt;/code&gt; 提供了事件修飾符。之前提過，修飾符是由點開頭的指令字尾來表示的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.prevent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.capture&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.self&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.once&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.passive&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 阻止單擊事件繼續傳播 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.stop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doThis&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 提交事件不再過載頁面 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:submit.prevent&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;onSubmit&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 修飾符可以串聯 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.stop.prevent&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doThat&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 只有修飾符 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:submit.prevent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 新增事件監聽器時使用事件捕獲模式 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 即內部元素觸發的事件先在此處理，然後才交由內部元素進行處理 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.capture&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doThis&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 只當在 event.target 是當前元素自身時觸發處理函式 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 即事件不是從內部元素觸發的 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.self&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;doThat&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;v-on-input&#34;&gt;&lt;a href=&#34;#v-on-input&#34; class=&#34;headerlink&#34; title=&#34;v-on: input&#34;&gt;&lt;/a&gt;v-on: input&lt;/h2&gt;&lt;p&gt;Vue 允許為 &lt;code&gt;v-on&lt;/code&gt; 在監聽鍵盤事件時新增按鍵修飾符：&lt;br&gt;你可以直接將 KeyboardEvent.key 暴露的任意有效按鍵名轉換為 kebab-case 來作為修飾符。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 只有在 `key` 是 `Enter` 時呼叫 `vm.submit()` --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:keyup.enter&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;submit&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:keyup.page-down&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;onPageDown&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 即使 Alt 或 Shift 被一同按下時也會觸發 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.ctrl&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;onClick&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;A&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 有且只有 Ctrl 被按下的時候才觸發 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click.ctrl.exact&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;onCtrlClick&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;A&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;滑鼠按鈕修飾符&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.left&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.right&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.middle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-model-Input&#34;&gt;&lt;a href=&#34;#v-model-Input&#34; class=&#34;headerlink&#34; title=&#34;v-model: Input&#34;&gt;&lt;/a&gt;v-model: Input&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;這是 Vue 完全贏過 React 的部分&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你可以用 &lt;code&gt;v-model&lt;/code&gt; 指令在表單 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 及 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 元素上建立雙向資料繫結。它會根據控制元件型別自動選取正確的方法來更新元素。儘管有些神奇，但 &lt;code&gt;v-model&lt;/code&gt; 本質上不過是語法糖。它負責監聽使用者的輸入事件以更新資料，並對一些極端場景進行一些特殊處理。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v-model&lt;/code&gt; 只看binding data的值，會忽略所有表單元素的 value、checked、selected attribute 的初始值&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v-model&lt;/code&gt; 在內部為不同的輸入元素使用不同的 property 並丟擲不同的事件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;text 和 textarea 元素使用 value property 和 input 事件；&lt;/li&gt;
&lt;li&gt;checkbox 和 radio 使用 checked property 和 change 事件；&lt;/li&gt;
&lt;li&gt;select 欄位將 value 作為 prop 並將 change 作為事件。&lt;!-- (? need example) --&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;searchText&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;等價於：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;searchText&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-on:input&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;searchText = $event.target.value&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- checkbox example --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkbox&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;jack&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;Jack&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkedNames&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;jack&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;Jack&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkbox&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;john&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;John&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkedNames&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;john&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;John&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkbox&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;mike&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;Mike&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkedNames&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;mike&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;Mike&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Checked names: ｛｛ checkedNames ｝｝&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &#39;...&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    checkedNames: []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- select example --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;selected&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;disabled&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;請選擇&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;A&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;B&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;C&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Selected: ｛｛ selected ｝｝&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &#39;...&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    selected: &#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果 &lt;code&gt;v-model&lt;/code&gt; 表示式的初始值未能匹配任何選項，&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 元素將被渲染為“未選中”狀態。在 iOS 中，這會使使用者無法選擇第一個選項。因為這樣的情況下，iOS 不會觸發 &lt;code&gt;change&lt;/code&gt; 事件。因此，更推薦像上面這樣提供一個值為空的禁用選項。&lt;/p&gt;
&lt;h3 id=&#34;input-繫結-variable&#34;&gt;&lt;a href=&#34;#input-繫結-variable&#34; class=&#34;headerlink&#34; title=&#34;input 繫結 variable&#34;&gt;&lt;/a&gt;input 繫結 variable&lt;/h3&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;checkbox&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;toggle&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;true-value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;yes&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;false-value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;no&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 當選中時&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.toggle === &#39;yes&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 當沒有選中時&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.toggle === &#39;no&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;radio&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;pick&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-bind:value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;a&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 當選中時&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.pick === vm.a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- v-model as object --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;selected&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 內聯物件字面量 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-bind:value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;&amp;#123; number: 123 &amp;#125;&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;123&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 當選中時&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typeof vm.selected // =&amp;gt; &#39;object&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vm.selected.number // =&amp;gt; 123&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;v-model-修飾符&#34;&gt;&lt;a href=&#34;#v-model-修飾符&#34; class=&#34;headerlink&#34; title=&#34;v-model: 修飾符&#34;&gt;&lt;/a&gt;v-model: 修飾符&lt;/h3&gt;&lt;p&gt;&lt;code&gt;.lazy&lt;/code&gt;&lt;br&gt;在預設情況下，v-model 在每次 input 事件觸發後將輸入框的值與資料進行同步 (除了上述輸入法組合文字時)。&lt;/p&gt;
&lt;p&gt;新增 lazy 修飾符，等到滑鼠移到輸入框外，觸發 change 事件才更新。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.number&lt;/code&gt;&lt;br&gt;自動將使用者的輸入值轉為數值型別&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;input v-model.number=&amp;quot;age&amp;quot; type=&amp;quot;number&amp;quot;&amp;gt;&lt;/code&gt;&lt;br&gt;這通常很有用，因為即使在 type=”number” 時，HTML 輸入元素的值也總會返回字串。如果這個值無法被 parseFloat() 解析，則會返回原始的值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.trim&lt;/code&gt;&lt;br&gt;如果要自動過濾使用者輸入的首尾空白字元，可以給 v-model 新增 trim 修飾符：&lt;/p&gt;
&lt;h2 id=&#34;元件-Components&#34;&gt;&lt;a href=&#34;#元件-Components&#34; class=&#34;headerlink&#34; title=&#34;元件 Components&#34;&gt;&lt;/a&gt;元件 Components&lt;/h2&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 定義一個名為 button-counter 的新元件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Vue.component(&lt;span class=&#34;string&#34;&gt;&#39;button-counter&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      count: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  template: &lt;span class=&#34;string&#34;&gt;&#39;&amp;lt;button v-on:click=&#34;count++&#34;&amp;gt;You clicked me ｛｛ count ｝｝ times.&amp;lt;/button&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;元件是可復用的 Vue 例項，且帶有一個名字：在這個例子中是 &lt;code&gt;&amp;lt;button-counter&amp;gt;&lt;/code&gt;。我們可以在一個透過 new Vue 建立的 Vue 根例項中，把這個元件作為自定義元素來使用：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;components-demo&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button-counter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button-counter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;因為元件是可復用的 Vue 例項，所以它們與 new Vue 接收相同的選項，例如 data、computed、watch、methods 以及生命週期鉤子等。&lt;strong&gt;僅有的例外是像 el 這樣根例項特有的選項&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;為了能在模板中使用，這些元件必須先註冊以便 Vue 能夠識別。這裡有兩種元件的註冊型別：全域性註冊和區域性註冊。至此，我們的元件都只是透過 Vue.component 全域性註冊的&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Vue.component(&lt;span class=&#34;string&#34;&gt;&#39;my-component-name&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ... options ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;全域性註冊的元件可以用在其被註冊之後的任何 (透過 new Vue) 新建立的 Vue 根例項，也包括其元件樹中的所有子元件的模板中。&lt;/p&gt;
&lt;p&gt;而區域性註冊的好處是當你使用的是webpack這樣的構建系統時，如果是用全域性註冊的這種方法註冊的元件，那麼當你不使用某一個元件的時候，它仍然會存在最終的構建結果之中，這就增加的無謂的js下載。&lt;/p&gt;
&lt;h3 id=&#34;data-是一個函式&#34;&gt;&lt;a href=&#34;#data-是一個函式&#34; class=&#34;headerlink&#34; title=&#34;data 是一個函式&#34;&gt;&lt;/a&gt;data 是一個函式&lt;/h3&gt;&lt;p&gt;data 是一個函式，因此每個例項可以維護一份被返回物件的獨立的複製：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    count: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;範例&#34;&gt;&lt;a href=&#34;#範例&#34; class=&#34;headerlink&#34; title=&#34;範例&#34;&gt;&lt;/a&gt;範例&lt;/h3&gt;&lt;p&gt;每個元件必須只有一個根元素。你可以將模板的內容包裹在一個父元素內，來修復這個問題，例如：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;blog-post&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;｛｛ title ｝｝&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-html&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;content&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;當元件變得越來越複雜的時候，為每個相關的資訊定義一個 prop 會變得很麻煩：&lt;br&gt;所以是時候重構一下這個 &lt;code&gt;&amp;lt;blog-post&amp;gt;&lt;/code&gt; 元件了，讓它變成接受一個單獨的 post prop：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post in posts&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:key&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.id&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:title&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.title&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:content&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.content&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:publishedAt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.publishedAt&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:comments&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.comments&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post in posts&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:key&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.id&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-bind:post&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Vue.component(&#39;blog-post&#39;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  props: [&#39;post&#39;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  template: `&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;blog-post&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;｛｛ post.title ｝｝&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-html&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;post.content&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- other props --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    `&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;父級元件可以像處理 native DOM 事件一樣透過 &lt;code&gt;v-on&lt;/code&gt; 監聽子元件例項的任意事件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-on:enlarge-text&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;postFontSize += 0.1&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;同時子元件可以透過呼叫內建的 `$emit` 方法並傳入事件名稱來觸發一個事件：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;$emit(&#39;enlarge-text&#39;)&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Enlarge text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;使用事件傳遞一個值&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-on:click&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;$emit(&#39;enlarge-text&#39;, 0.1)&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Enlarge text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 透過 $event 訪問到被拋出的這個值 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-on:enlarge-text&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;postFontSize += $event&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;blog-post&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;emit input的值使 custom-input 可以更新&lt;code&gt;v-model&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;custom-input v-model=&lt;span class=&#34;string&#34;&gt;&#34;searchText&#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/custom-input&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;Vue.component(&#39;custom-input&#39;, &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  props: [&#39;value&#39;],&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  template: `&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;input&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      v-bind:value=&#34;value&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      v-on:input=&#34;$emit(&#39;input&#39;, $event.target.value)&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  `&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;slot&#34;&gt;&lt;a href=&#34;#slot&#34; class=&#34;headerlink&#34; title=&#34;slot&#34;&gt;&lt;/a&gt;slot&lt;/h2&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div id=&lt;span class=&#34;string&#34;&gt;&#34;app&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;layout&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;p slot=&lt;span class=&#34;string&#34;&gt;&#34;header&#34;&lt;/span&gt;&amp;gt;這裡可能是一個頁面標題&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;p&amp;gt;主要內容的一個段落。&amp;lt;/&lt;/span&gt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;p&amp;gt;另一個主要段落。&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;p slot=&#34;footer&#34;&amp;gt;這裡有一些聯繫信息&amp;lt;/&lt;/span&gt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/layout&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/&lt;/span&gt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Vue.component(&lt;span class=&#34;string&#34;&gt;&#39;layout&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  template: &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;lt;div class=&#34;container&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;header&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;slot name=&#34;header&#34;&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;/header&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;main&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;/main&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;footer&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;slot name=&#34;footer&#34;&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;/footer&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;lt;/div&amp;gt;`&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; vm = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#app&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;動態切換component&#34;&gt;&lt;a href=&#34;#動態切換component&#34; class=&#34;headerlink&#34; title=&#34;動態切換component&#34;&gt;&lt;/a&gt;動態切換component&lt;/h3&gt;&lt;p&gt;有的時候，在不同元件之間進行動態切換是非常有用的，比如在一個多標籤的介面裡：&lt;/p&gt;
&lt;p&gt;上述內容可以透過 Vue 的 &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; 元素加一個特殊的 is attribute 來實現：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 元件會在 `currentTabComponent` 改變時改變 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;component&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-bind:is&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;currentTabComponent&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;component&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在上述示例中，currentTabComponent 可以包括已註冊元件的名字，或一個元件的選項物件&lt;/p&gt;
&lt;h3 id=&#34;解析-DOM-模板時的注意事項&#34;&gt;&lt;a href=&#34;#解析-DOM-模板時的注意事項&#34; class=&#34;headerlink&#34; title=&#34;解析 DOM 模板時的注意事項&#34;&gt;&lt;/a&gt;解析 DOM 模板時的注意事項&lt;/h3&gt;&lt;p&gt;有些 HTML 元素，諸如 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;，對於哪些元素可以出現在其內部是有嚴格限制的。而有些元素，諸如 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;，只能出現在其它某些特定的元素內部。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- wrong --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;blog-post-row&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;blog-post-row&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- correct --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;tr&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;is&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;blog-post-row&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;需要注意的是如果我們從以下來源使用模板的話，這條限制是不存在的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字串 (例如：template: ‘…’)&lt;/li&gt;
&lt;li&gt;單檔案元件 (.vue)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/x-template&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;實作&#34;&gt;&lt;a href=&#34;#實作&#34; class=&#34;headerlink&#34; title=&#34;實作&#34;&gt;&lt;/a&gt;實作&lt;/h3&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2d1aWRlL3Byb3RvdHlwaW5nLmh0bWw=&#34;&gt;使用vue cli&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;說回App.vue這個檔案，這是一個檢視（或者說元件和頁面），想像一下我們的index.html中什麼也沒有，只有一個檢視，這個檢視相當於一個容器，然後我們往這個容器中放各種各樣的積木（其他元件或者其他頁面）&lt;/p&gt;
&lt;p&gt;將&lt;code&gt;App.vue&lt;/code&gt;放到&lt;code&gt;#app&lt;/code&gt;中，然後以&lt;code&gt;&amp;lt;App/&amp;gt;&lt;/code&gt;來指代我們的&lt;code&gt;#app&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Vue &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; App &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&#39;./App&#39;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;/*引入App這個元件*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; router &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&#39;./router&#39;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;/*引入路由配置*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Vue.config.productionTip = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* eslint-disable no-new */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  el: &lt;span class=&#34;string&#34;&gt;&#39;#app&#39;&lt;/span&gt;,&lt;span class=&#34;comment&#34;&gt;/*最後效果將會替換頁面中id為app的div元素*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  router,&lt;span class=&#34;comment&#34;&gt;/*使用路由*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  template: &lt;span class=&#34;string&#34;&gt;&#39;&amp;lt;App/&amp;gt;&#39;&lt;/span&gt;,&lt;span class=&#34;comment&#34;&gt;/*告知頁面這個元件用這樣的標籤來包裹著,並且使用它*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  components: &amp;#123; App &amp;#125;&lt;span class=&#34;comment&#34;&gt;/*告知當前頁面想使用App這個元件*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;參考資料&#34;&gt;&lt;a href=&#34;#參考資料&#34; class=&#34;headerlink&#34; title=&#34;參考資料&#34;&gt;&lt;/a&gt;參考資料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvZ3VpZGUv&#34;&gt;https://cn.vuejs.org/v2/guide/&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZXRlcmhwY2hlbi5naXRodWIuaW8v&#34;&gt;https://peterhpchen.github.io/&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jeXRoaWx5YS5naXRodWIuaW8vMjAxNy8xMC8xMS92dWUtY29tcG9uZW50LXNsb3Qv&#34;&gt;https://cythilya.github.io/2017/10/11/vue-component-slot/&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gitqwerty777.github.io/reactjs/</guid>
            <title>reactjs 語法</title>
            <link>http://gitqwerty777.github.io/reactjs/</link>
            <category>reactjs</category>
            <category>javascript</category>
            <pubDate>Wed, 29 Jul 2020 14:50:12 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;JSX&#34;&gt;&lt;a href=&#34;#JSX&#34; class=&#34;headerlink&#34; title=&#34;JSX&#34;&gt;&lt;/a&gt;JSX&lt;/h2&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; element = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;hello&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;這個語法叫做 JSX，是一個 JavaScript 的語法擴充，會產生 &lt;strong&gt;React element&lt;/strong&gt;&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;
&lt;p&gt;Babel 將 JSX 編譯為呼叫 React.createElement() 的程式。&lt;/p&gt;
&lt;p&gt;React DOM 預設會在 render 之前 escape 所有嵌入在 JSX 中的變數。這保證你永遠不會不小心注入任何不是直接寫在你的應用程式中的東西。所有變數都會在 render 之前轉為字串，這可以避免 XSS（跨網站指令碼）攻擊。&lt;/p&gt;
&lt;p&gt;大括號內代表變數，可以放入任何javascript expression&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; name = &lt;span class=&#34;string&#34;&gt;&#39;Josh Perez&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; element = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, &amp;#123;name&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//多行：包在小括號中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; element = (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;h1&amp;gt;Hello!&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;h2&amp;gt;Good to see you here.&amp;lt;/&lt;/span&gt;h2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Render&#34;&gt;&lt;a href=&#34;#Render&#34; class=&#34;headerlink&#34; title=&#34;Render&#34;&gt;&lt;/a&gt;Render&lt;/h2&gt;&lt;p&gt;使用 React 建立應用程式時，通常會有一個單一的 root DOM node。&lt;/p&gt;
&lt;p&gt;Render 一個 React element 到 root DOM node&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; element = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, world&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ReactDOM.render(element, &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&#34;string&#34;&gt;&#39;root&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;React element 是 immutable 的，即不能更改&lt;/p&gt;
&lt;p&gt;Element 就像是電影中的一個幀：它代表特定時間點的 UI。&lt;/p&gt;
&lt;h2 id=&#34;Component&#34;&gt;&lt;a href=&#34;#Component&#34; class=&#34;headerlink&#34; title=&#34;Component&#34;&gt;&lt;/a&gt;Component&lt;/h2&gt;&lt;p&gt;Component 就像是 JavaScript 的 function，它接收參數（稱之為「props」，屬性）並且回傳描述畫面的 React element。&lt;/p&gt;
&lt;p&gt;Component 的字首須為大寫字母。React 會將小寫字母開頭的組件視為原始 DOM 標籤，舉例來說，&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt; 就會被視為是 HTML 的 div 標籤，但是 &lt;code&gt;&amp;lt;Welcome /&amp;gt;&lt;/code&gt; 則是一個 component&lt;/p&gt;
&lt;p&gt;props 是唯讀的&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Welcome&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;props&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, &amp;#123;props.name&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此 function 是一個符合規範的 React component，因為它接受一個 props 物件並回傳一個 React element。&lt;/p&gt;
&lt;p&gt;我們稱之為 function component&lt;/p&gt;
&lt;p&gt;也可以使用 ES6 Class 來定義 component：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Welcome&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, &amp;#123;this.props.name&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可以在JSX中使用component&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; element = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;Welcome&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;Sara&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通常來說，每個 React 應用程式都有一個最高層級的 App component。然而，如果你將 React 結合至現存的應用程式中，你可能需要使用像 Button 這樣的小型 component，並由下往上，逐步應用到畫面的最高層級。&lt;/p&gt;
&lt;p&gt;在較大的應用程式中，建構可複用的 component 是非常值得的&lt;/p&gt;
&lt;h2 id=&#34;State&#34;&gt;&lt;a href=&#34;#State&#34; class=&#34;headerlink&#34; title=&#34;State&#34;&gt;&lt;/a&gt;State&lt;/h2&gt;&lt;p&gt;state 類似於 prop，但它是私有且由 component 完全控制的。&lt;/p&gt;
&lt;p&gt;需使用 class component，不能在 function component 使用&lt;/p&gt;
&lt;p&gt;在每次發生更新時，render 方法都會被呼叫&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Clock&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;h1&amp;gt;Hello, world!&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;h2&amp;gt;It is &amp;#123;this.props.date.toLocaleTimeString()&amp;#125;.&amp;lt;/&lt;/span&gt;h2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;加入state&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Clock&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state = &amp;#123;&lt;span class=&#34;attr&#34;&gt;date&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Date&lt;/span&gt;()&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;h1&amp;gt;Hello, world!&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;h2&amp;gt;It is &amp;#123;this.state.date.toLocaleTimeString()&amp;#125;.&amp;lt;/&lt;/span&gt;h2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;每當 Clock render 到 DOM 的時候，在 React 中稱為「mount」。&lt;/p&gt;
&lt;p&gt;每當產生的 Clock DOM 被移除時，在 React 中稱為「unmount」。&lt;/p&gt;
&lt;p&gt;在class內加入 &lt;code&gt;componentDidMount()&lt;/code&gt;, &lt;code&gt;componentWillUnmount()&lt;/code&gt;, 和 &lt;code&gt;setState()&lt;/code&gt;，用 state 實作每秒更新的部分&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;componentDidMount() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.timerID = setInterval(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      () =&amp;gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.tick(),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  componentWillUnmount() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clearInterval(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.timerID);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  tick() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      date: &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Date&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  因為 props 和 state 可能是非同步的被更新，你不應該依賴它們的值來計算新的 state。&lt;/p&gt;
&lt;p&gt;  要修正這個問題，使用第二種形式的 setState()，它接受一個 function 而不是一個 object。Function 將接收先前的 state 作為第一個參數，並且將更新的 props 作為第二個參數：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;state, props&lt;/span&gt;) =&amp;gt;&lt;/span&gt; (&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  counter: state.counter + props.increment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;React是「上至下」或「單向」的資料流：任何 state 總是由某個特地的 component 所擁有，任何從 state 得到的資料或 UI，state 只能影響自身和 child component。&lt;/p&gt;
&lt;h2 id=&#34;事件處理&#34;&gt;&lt;a href=&#34;#事件處理&#34; class=&#34;headerlink&#34; title=&#34;事件處理&#34;&gt;&lt;/a&gt;事件處理&lt;/h2&gt;&lt;p&gt;事件的名稱在 React 中都是 camelCase，而在 HTML DOM 中則是小寫。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML DOM 對照 React&lt;ul&gt;
&lt;li&gt;&lt;code&gt;onclick&lt;/code&gt; → &lt;code&gt;onClick&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onclick=&amp;quot;click()&amp;quot;&lt;/code&gt; → &lt;code&gt;onClick={click}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 React 中，你不能夠在像在 HTML DOM 中使用 &lt;code&gt;return false&lt;/code&gt; 來避免瀏覽器預設行為。你必須明確地呼叫 &lt;code&gt;preventDefault&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;a href=&lt;span class=&#34;string&#34;&gt;&#34;#&#34;&lt;/span&gt; onclick=&lt;span class=&#34;string&#34;&gt;&#34;console.log(&#39;The link was clicked.&#39;); return false&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Click me&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/a&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 React 中，你則可以這樣寫：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ActionLink&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;handleClick&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;string&#34;&gt;&#39;The link was clicked.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;a href=&lt;span class=&#34;string&#34;&gt;&#34;#&#34;&lt;/span&gt; onClick=&amp;#123;handleClick&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      Click me&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/a&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 JavaScript 中，class 的方法在預設上是沒有被綁定（bound）的。如果你忘了綁定 this.handleClick 並把它傳遞給 onClick 的話，this 的值將會在該 function 被呼叫時變成 undefined。&lt;/p&gt;
&lt;p&gt;總之，當你使用一個方法，卻沒有在後面加上 () 之時（例如當你使用 onClick={this.handleClick} 時），你應該要綁定這個方法。&lt;/p&gt;
&lt;p&gt;The bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Toggle&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state = &amp;#123;&lt;span class=&#34;attr&#34;&gt;isToggleOn&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 為了讓 `this` 能在 callback 中被使用，這裡的綁定是必要的：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleClick = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleClick.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleClick() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;state&lt;/span&gt; =&amp;gt;&lt;/span&gt; (&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      isToggleOn: !state.isToggleOn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;button onClick=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleClick&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.isToggleOn ? &lt;span class=&#34;string&#34;&gt;&#39;ON&#39;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&#39;OFF&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;ReactDOM.render(&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;Toggle /&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&#34;string&#34;&gt;&#39;root&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果呼叫 bind 對你來說很麻煩的話，你可以用別的方式。如果你使用了還在測試中的 class fields 語法的話，你可以用 class field 正確的綁定 callback：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;LoggingButton&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 這個語法確保 `this` 是在 handleClick 中被綁定：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 警告：這是一個還在*測試中*的語法：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleClick = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;string&#34;&gt;&#39;this is:&#39;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;button onClick=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleClick&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Click me&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;傳遞一個額外的參數給 event handler。例如，如果 id 是每一行的 ID 的話，下面兩種語法都可行：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;button onClick=&amp;#123;(e) =&amp;gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.deleteRow(id, e)&amp;#125;&amp;gt;Delete Row&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;button onClick=&amp;#123;this.deleteRow.bind(this, id)&amp;#125;&amp;gt;Delete Row&amp;lt;/&lt;/span&gt;button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;以上這兩行程式是相同的。一個使用 arrow functions，另一個則使用了 Function.prototype.bind。&lt;/p&gt;
&lt;p&gt;以這兩個例子來說，e 這個參數所代表的 React 事件將會被當作 ID 之後的第二個參數被傳遞下去。在使用 arrow function 時，我們必須明確地將它傳遞下去，但若使用 bind 語法，未來任何的參數都將會自動被傳遞下去。&lt;/p&gt;
&lt;h2 id=&#34;條件render&#34;&gt;&lt;a href=&#34;#條件render&#34; class=&#34;headerlink&#34; title=&#34;條件render&#34;&gt;&lt;/a&gt;條件render&lt;/h2&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; isLoggedIn = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.isLoggedIn;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; button;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isLoggedIn) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     button = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;LogoutButton&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onClick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;this.handleLogoutClick&amp;#125;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     button = &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;LoginButton&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onClick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;this.handleLoginClick&amp;#125;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;lt;Greeting isLoggedIn=&amp;#123;isLoggedIn&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#123;button&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;   );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;用 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 來條件顯示&lt;br&gt;因為在 JavaScript 中，&lt;code&gt;true &amp;amp;&amp;amp; expression&lt;/code&gt; 總是回傳 &lt;code&gt;expression&lt;/code&gt; ，而 &lt;code&gt;false &amp;amp;&amp;amp; expression&lt;/code&gt; 總是回傳 &lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Mailbox&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;props&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; unreadMessages = props.unreadMessages;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;h1&amp;gt;Hello!&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;#123;unreadMessages.length &amp;gt; 0 &amp;amp;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;h2&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;          You have &amp;#123;unreadMessages.length&amp;#125; unread messages.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;/&lt;/span&gt;h2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;React 在遇到 &lt;code&gt;null&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 時都會忽略(不顯示)&lt;/p&gt;
&lt;p&gt;或用條件運算式&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;isLoggedIn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ? &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;LogoutButton&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onClick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;this.handleLogoutClick&amp;#125;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    : &lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;LoginButton&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onClick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;this.handleLoginClick&amp;#125;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;列表與key&#34;&gt;&lt;a href=&#34;#列表與key&#34; class=&#34;headerlink&#34; title=&#34;列表與key&#34;&gt;&lt;/a&gt;列表與key&lt;/h2&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; numbers = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; listItems = numbers.map(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;number&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;li&amp;gt;&amp;#123;number&amp;#125;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;你會收到一個關於你應該提供 key 給每一個列表項目的警告。key 是當你在建立一個 element 列表時必須使用的特殊的 string attribute。&lt;/p&gt;
&lt;p&gt;key 幫助 React 分辨哪些項目被改變、增加或刪除。在 array 裡面的每個 element 都應該要有一個 key，如此才能給予每個 element 一個固定的身份：&lt;/p&gt;
&lt;p&gt;通常，你會使用資料的 ID 作為 key：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; listItems = numbers.map(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;number&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;li key=&amp;#123;number.toString()&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;number&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;const todoItems = todos.map((todo) =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;li key=&amp;#123;todo.id&amp;#125;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;#123;todo.text&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;lt;/&lt;/span&gt;li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;當你 render 的項目沒有固定的 ID 且你也沒有更好的辦法時，你可以使用項目的索引做為 key：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; todoItems = todos.map(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;todo, index&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 請在項目沒有固定的 ID 時才這樣做&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;li key=&amp;#123;index&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;todo.text&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;React 預設將會使用索引作為 key。但並不建議你使用索引作為 key，尤其如果項目的順序會改變的話。這會對效能產生不好的影響，也可能會讓 component state 產生問題&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;key 必須在 Sibling 中是唯一的&lt;/li&gt;
&lt;li&gt;key 的功能是提示 React，但它們不會被傳遞到 component 的 prop。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;應該把 key 放在 array 產生 item 的 render，而不是把它放在 item 的 render。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ListItem&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;props&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; value = props.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 錯！你不需要在這裡指出 key：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;li key=&amp;#123;value.toString()&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;value&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;function NumberList(props) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  const numbers = props.numbers;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  const listItems = numbers.map((number) =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    /&lt;/span&gt;&lt;span class=&#34;regexp&#34;&gt;/ 錯！你應該要在這裡指出 key：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;ListItem value=&amp;#123;number&amp;#125; /&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;listItems&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/ul&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;一個好的經驗法則是，在 map() 呼叫中的每個 element 都會需要 key。&lt;/p&gt;
&lt;h2 id=&#34;Form&#34;&gt;&lt;a href=&#34;#Form&#34; class=&#34;headerlink&#34; title=&#34;Form&#34;&gt;&lt;/a&gt;Form&lt;/h2&gt;&lt;p&gt;把這個表單寫成一個 controlled component： 用 state 來 顯示 value，onChange 時更新&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;NameForm&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state = &amp;#123;&lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#39;&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleChange(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&amp;#123;&lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;: event.target.value&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleSubmit(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alert(&lt;span class=&#34;string&#34;&gt;&#39;A name was submitted: &#39;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    event.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;form onSubmit=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          Name:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;input type=&lt;span class=&#34;string&#34;&gt;&#34;text&#34;&lt;/span&gt; value=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.value&amp;#125; onChange=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;input type=&#34;submit&#34; value=&#34;Submit&#34; /&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/form&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;這意味著你必須寫更多的 code，但現在你同時可以將 value 傳遞給其他的 UI element，或是從其他 event handler 重置。&lt;/p&gt;
&lt;h3 id=&#34;Select&#34;&gt;&lt;a href=&#34;#Select&#34; class=&#34;headerlink&#34; title=&#34;Select&#34;&gt;&lt;/a&gt;Select&lt;/h3&gt;&lt;p&gt;在 React 中並不是用 selected attribute，而是在 select 的標籤上用一個 value attribute&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;FlavorForm&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state = &amp;#123;&lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#39;coconut&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleChange(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&amp;#123;&lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;: event.target.value&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleSubmit(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alert(&lt;span class=&#34;string&#34;&gt;&#39;Your favorite flavor is: &#39;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    event.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;form onSubmit=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          Pick your favorite flavor:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;select value=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.value&amp;#125; onChange=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleChange&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;option value=&lt;span class=&#34;string&#34;&gt;&#34;grapefruit&#34;&lt;/span&gt;&amp;gt;Grapefruit&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/option&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;            &amp;lt;option value=&#34;lime&#34;&amp;gt;Lime&amp;lt;/&lt;/span&gt;option&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;option value=&lt;span class=&#34;string&#34;&gt;&#34;coconut&#34;&lt;/span&gt;&amp;gt;Coconut&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/option&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;            &amp;lt;option value=&#34;mango&#34;&amp;gt;Mango&amp;lt;/&lt;/span&gt;option&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/select&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;/&lt;/span&gt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;input type=&lt;span class=&#34;string&#34;&gt;&#34;submit&#34;&lt;/span&gt; value=&lt;span class=&#34;string&#34;&gt;&#34;Submit&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/form&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;你可以將一個 array 傳給 value 這個 attribute，這使得你可以在一個 select 中選取多個選項：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;select multiple=&amp;#123;&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&amp;#125; value=&amp;#123;[&lt;span class=&#34;string&#34;&gt;&#39;B&#39;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&#39;C&#39;&lt;/span&gt;]&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;input-file&#34;&gt;&lt;a href=&#34;#input-file&#34; class=&#34;headerlink&#34; title=&#34;input file&#34;&gt;&lt;/a&gt;input file&lt;/h3&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;input type=&lt;span class=&#34;string&#34;&gt;&#34;file&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;由於它的值是唯讀，它在 React 中是一個 uncontrolled component。在稍後的文件中有其他關於它和其他 uncontrolled component 的討論。&lt;/p&gt;
&lt;h3 id=&#34;多個input&#34;&gt;&lt;a href=&#34;#多個input&#34; class=&#34;headerlink&#34; title=&#34;多個input&#34;&gt;&lt;/a&gt;多個input&lt;/h3&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Reservation&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      isGoing: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      numberOfGuests: &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleInputChange = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleInputChange.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleInputChange(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; target = event.target;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; value = target.name === &lt;span class=&#34;string&#34;&gt;&#39;isGoing&#39;&lt;/span&gt; ? target.checked : target.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; name = target.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      [name]: value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          Is going:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            name=&lt;span class=&#34;string&#34;&gt;&#34;isGoing&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            type=&lt;span class=&#34;string&#34;&gt;&#34;checkbox&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            checked=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.isGoing&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            onChange=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleInputChange&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;br /&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;Number&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; guests:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            name=&lt;span class=&#34;string&#34;&gt;&#34;numberOfGuests&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            type=&lt;span class=&#34;string&#34;&gt;&#34;number&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            value=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.state.numberOfGuests&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            onChange=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleInputChange&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;lt;/&lt;/span&gt;form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在一個 controlled component 上指明 value prop 可避免使用者改變輸入，除非你希望使用者這樣做。如果你已經指明了 value 但輸入仍然是可以被修改的，你很可能是不小心將 value 的值設定為 undefined 或 null。&lt;/p&gt;
&lt;p&gt;下面的程式碼就是一個範例。（輸入原先是被鎖住的，但在短暫的延遲後，變得可以被修改了。）&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ReactDOM.render(&lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;hi&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;, mountNode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setTimeout(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ReactDOM.render(&lt;span class=&#34;xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;null&amp;#125;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;, mountNode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;, &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;uncontrolled-component&#34;&gt;&lt;a href=&#34;#uncontrolled-component&#34; class=&#34;headerlink&#34; title=&#34;uncontrolled component&#34;&gt;&lt;/a&gt;uncontrolled component&lt;/h3&gt;&lt;p&gt;在大多數的情況下，我們推薦使用 controlled component 來實作表單。在控制元件裡，表單的資料是被 React component 所處理。另一個選擇是 uncontrolled component，表單的資料是由 DOM 本身所處理的。&lt;/p&gt;
&lt;p&gt;使用 ref 來從 DOM 取得表單的資料，而不是為了每個 state 的更新寫 event handler。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;NameForm&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit.bind(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.input = React.createRef();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  handleSubmit(event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alert(&lt;span class=&#34;string&#34;&gt;&#39;A name was submitted: &#39;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.input.current.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    event.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;form onSubmit=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.handleSubmit&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;label&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          Name:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;lt;input type=&lt;span class=&#34;string&#34;&gt;&#34;text&#34;&lt;/span&gt; ref=&amp;#123;&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.input&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;input type=&#34;submit&#34; value=&#34;Submit&#34; /&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/form&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果你想找出一個完整的、包含驗證、可追蹤拜訪欄位並能處理提交表單等功能的解決方案，Formik 是一個很熱門的選擇。然而，它是在與 controlled component 和維持 state 相同的原則上所建立的，所以別忘了學習它。&lt;/p&gt;
&lt;h2 id=&#34;提升-State&#34;&gt;&lt;a href=&#34;#提升-State&#34; class=&#34;headerlink&#34; title=&#34;提升 State&#34;&gt;&lt;/a&gt;提升 State&lt;/h2&gt;&lt;p&gt;在 React 中，將 state 搬移到需要它的 component 的共同最近的祖先來共享 state。這被稱為「提升 state」。&lt;/p&gt;
&lt;p&gt;我們將從 TemperatureInput 移除 local state 並且搬移它到 Calculator。&lt;/p&gt;
&lt;p&gt;我們移除了它的 local state，並且不讀取 this.state.temperature，我們現在讀取 this.props.temperature。當我們想要改變時不呼叫 this.setState()，我們現在呼叫 this.props.onTemperatureChange()，它是由 Calculator 提供的&lt;/p&gt;
&lt;p&gt;calculator 傳入 prop.onChange 方法，供child的值改變時呼叫onChange()，以改變calculator(parent)的值&lt;/p&gt;
&lt;p&gt;通常來說，state 會優先被加入到需要 render 的 component。接著，如果其他的 component 也需要的話，你可以提升 state 到共同最靠近的 ancestor。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你應該依賴上至下的資料流，而不是嘗試在不同 component 之間同步 state。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;當你在 UI 上看到一些錯誤時，你可以使用 React Developer Tools 來檢查 prop 並往 tree 的上方尋找，直到找到負責更新 state 的 component。這讓你可以追蹤到錯誤的來源&lt;/p&gt;
&lt;h2 id=&#34;合成-vs-繼承&#34;&gt;&lt;a href=&#34;#合成-vs-繼承&#34; class=&#34;headerlink&#34; title=&#34;合成 vs 繼承&#34;&gt;&lt;/a&gt;合成 vs 繼承&lt;/h2&gt;&lt;p&gt;有些 component 不會提早知道它們的 children 有些什麼。對於像是 Sidebar 或 Dialog&lt;/p&gt;
&lt;p&gt;我們建議這些 component 使用特殊的 &lt;code&gt;children&lt;/code&gt; prop 將 children element 直接傳入到它們的輸出：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;FancyBorder&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;props&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;div className=&amp;#123;&lt;span class=&#34;string&#34;&gt;&#39;FancyBorder FancyBorder-&#39;&lt;/span&gt; + props.color&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;props.children&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;regexp&#34;&gt;/任何在 &amp;lt;FancyBorder&amp;gt; JSX tag 內的內容都被作為 children prop 被傳遞給 FancyBorder component。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;function WelcomeDialog() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  return (&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;FancyBorder color=&#34;blue&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;lt;h1 className=&#34;Dialog-title&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        Welcome&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;lt;/&lt;/span&gt;h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;p className=&lt;span class=&#34;string&#34;&gt;&#34;Dialog-message&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Thank you &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; visiting our spacecraft!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;/&lt;/span&gt;FancyBorder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可用來排版&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;SplitPane&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;props&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;div className=&lt;span class=&#34;string&#34;&gt;&#34;SplitPane&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;div className=&lt;span class=&#34;string&#34;&gt;&#34;SplitPane-left&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;props.left&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;lt;div className=&#34;SplitPane-right&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;#123;props.right&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      &amp;lt;/&lt;/span&gt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;&lt;span class=&#34;regexp&#34;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;function App() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;  return (&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;    &amp;lt;SplitPane&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;      left=&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;        &amp;lt;Contacts /&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      right=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;Chat /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 Facebook 中，我們使用 React 在成千上萬個 component，我們找不到任何使用案例來推薦你建立繼承結構的 component。&lt;/p&gt;
&lt;h2 id=&#34;用-React-思考&#34;&gt;&lt;a href=&#34;#用-React-思考&#34; class=&#34;headerlink&#34; title=&#34;用 React 思考&#34;&gt;&lt;/a&gt;用 React 思考&lt;/h2&gt;&lt;h3 id=&#34;第一步：將-UI-拆解成-component-層級&#34;&gt;&lt;a href=&#34;#第一步：將-UI-拆解成-component-層級&#34; class=&#34;headerlink&#34; title=&#34;第一步：將 UI 拆解成 component 層級&#34;&gt;&lt;/a&gt;第一步：將 UI 拆解成 component 層級&lt;/h3&gt;&lt;p&gt;首先，你要做的是將視覺稿中每一個 component （及 subcomponent）都圈起來，並幫它們命名。&lt;/p&gt;
&lt;p&gt;其中一個技巧是單一職責原則，它的意思是：在我們的理想中，一個 component應該只負責做一件事情。如果這個 component 最後變大了，你就需要再將它分成數個更小的 subcomponent 。&lt;/p&gt;
&lt;p&gt;由於你常常會展示 JSON 的資料模型給使用者，你會發現，如果你的模式是正確地被建立的話，你的 UI（以及你的 component 結構）會很好的相互對應。這是因為 UI 和資料模型通常是遵守同樣的資訊架構，這意味著將你的 UI 拆成 component 通常是相當容易的。&lt;/p&gt;
&lt;h3 id=&#34;第二步：在-React-中建立一個靜態版本&#34;&gt;&lt;a href=&#34;#第二步：在-React-中建立一個靜態版本&#34; class=&#34;headerlink&#34; title=&#34;第二步：在 React 中建立一個靜態版本&#34;&gt;&lt;/a&gt;第二步：在 React 中建立一個靜態版本&lt;/h3&gt;&lt;p&gt;在你有了 component 層級後，就可以開始實作你的應用程式了。最簡單的方式是為你的應用程式建立一個接收資料模型、render UI 且沒有互動性的版本。建立一個靜態版本需要打很多字，但不需要想很多，而加上互動性則相反，需要做很多的思考，很少的打字，所以最好的方式是把這幾個過程都分開來。接下來，我們會知道為什麼是如此。&lt;/p&gt;
&lt;p&gt;請完全不要使用 state 來建立這個靜態版本。State 是保留給互動性的，也就是會隨時間改變的資料。既然我們目前要做的是這應用程式的靜態版本，你就不需要 state。&lt;/p&gt;
&lt;p&gt;你可以從最上層開始，或從最下層開始。也就是說，你可以先從層級較高的 component 開始做起，或者你也可以從比它低層級的開始。在比較簡單的例子中，通常從上往下是比較簡單的。但在較為大型的專案中，從下往上、邊寫邊測試則比較容易。&lt;/p&gt;
&lt;p&gt;React 的 單向資料流（也可稱為單向綁定）確保所有 component 都是模塊化且快速的。&lt;/p&gt;
&lt;h3 id=&#34;第三步：找出最少（但完整）的-UI-State-的代表&#34;&gt;&lt;a href=&#34;#第三步：找出最少（但完整）的-UI-State-的代表&#34; class=&#34;headerlink&#34; title=&#34;第三步：找出最少（但完整）的 UI State 的代表&#34;&gt;&lt;/a&gt;第三步：找出最少（但完整）的 UI State 的代表&lt;/h3&gt;&lt;p&gt;請找出你的應用程式所需的最少的呈現方式，並在你遇到其他東西時再計算它們。例如，如果你在建立一個待辦清單，使用一個可以用來代表待辦事項的 array。不要另外用一個獨立的 state 變數來追蹤數量。當你要 render 代辦事項的數量時，讀取待辦事項 array 的長度即可。&lt;/p&gt;
&lt;p&gt;對於每一個資料，問你自己這三個問題：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;這個資料是從 parent 透過 props 傳下來的嗎？如果是的話，那它很可能不是 state。&lt;/li&gt;
&lt;li&gt;這個資料是否一直保持不變呢？如果是的話，那它很可能不是 state。&lt;/li&gt;
&lt;li&gt;你是否可以根據你的 component 中其他的 state 或 prop 來計算這個資料呢？如果是的話，那它一定不是 state。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;第四步：找出你的-State-應該在哪裡&#34;&gt;&lt;a href=&#34;#第四步：找出你的-State-應該在哪裡&#34; class=&#34;headerlink&#34; title=&#34;第四步：找出你的 State 應該在哪裡&#34;&gt;&lt;/a&gt;第四步：找出你的 State 應該在哪裡&lt;/h3&gt;&lt;p&gt;我們需要找出哪幾個 component 會 mutate，或者擁有，這個 state。&lt;/p&gt;
&lt;p&gt;請記得，React 的核心精神是單向資料流，從 component 的層級從高往下流。&lt;strong&gt;也許哪個 component 該擁有 state 在一開始並不是很明顯&lt;/strong&gt;。對新手來說，這往往是最難理解的概念，所以請跟著以下的步驟來思考：&lt;/p&gt;
&lt;p&gt;在你的應用程式中的每個 state：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指出每個根據 state 來 render 某些東西的 component。&lt;/li&gt;
&lt;li&gt;找出一個共同擁有者 component（在層級中單一一個需要 state 的、在所有的 component 之上的 component）。&lt;/li&gt;
&lt;li&gt;應該擁有 state 的會是共同擁有者 component 或另一個更高層級的 component。(找最高級的component來持有state)&lt;/li&gt;
&lt;li&gt;如果你找不出一個應該擁有 state 的 component 的話，那就建立一個新的 component 來保持 state，並把它加到層級中共同擁有者 component 之上的某處。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第五步：加入相反的資料流&#34;&gt;&lt;a href=&#34;#第五步：加入相反的資料流&#34; class=&#34;headerlink&#34; title=&#34;第五步：加入相反的資料流&#34;&gt;&lt;/a&gt;第五步：加入相反的資料流&lt;/h3&gt;&lt;p&gt;現在是時候支援另一種資料流的方向了：在層級深處的表格 component 需要更新 FilterableProductTable 的 state。&lt;/p&gt;
&lt;p&gt;讓我們思考一下我們想要做些什麼。我們想確保當使用者改變這個表格時，我們會更新 state 以反映使用者的輸入。既然 component 只應該更新它自己本身的 state， FilterableProductTable 將會把 callback 傳給 SearchBar，而它們則會在 state 該被更新的時候被觸發。我們可以在輸入上使用 onChange 這個 event 來 接收通知。被 FilterableProductTable 傳下來的 callback 則會呼叫 setState()，之後應用程式就會被更新。&lt;/p&gt;
&lt;h2 id=&#34;推薦的-Toolchain&#34;&gt;&lt;a href=&#34;#推薦的-Toolchain&#34; class=&#34;headerlink&#34; title=&#34;推薦的 Toolchain&#34;&gt;&lt;/a&gt;推薦的 Toolchain&lt;/h2&gt;&lt;p&gt;React 團隊主要推薦以下的方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你正在學習 React 或建立全新的 single-page 應用程式，請使用 Create React App。&lt;/li&gt;
&lt;li&gt;如果你正在建立一個使用 Node.js 的 server-rendered 網頁，請使用 Next.js。&lt;/li&gt;
&lt;li&gt;如果你正在建立一個靜態內容的網頁，請使用 Gatsby。&lt;/li&gt;
&lt;li&gt;如果你正在建立一個 component 函式庫或與現存程式碼倉庫進行接軌，請使用更靈活的 Toolchain。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Reference&#34;&gt;&lt;a href=&#34;#Reference&#34; class=&#34;headerlink&#34; title=&#34;Reference&#34;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aC1oYW50LnJlYWN0anMub3JnL2RvY3MvaGVsbG8td29ybGQuaHRtbA==&#34;&gt;React: 語法教學&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aC1oYW50LnJlYWN0anMub3JnL3R1dG9yaWFsL3R1dG9yaWFsLmh0bWw=&#34;&gt;React: 動手做教學&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;[React: css])(&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2ZhcS1zdHlsaW5nLmh0bWw=&#34;&gt;https://reactjs.org/docs/faq-styling.html&lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/span&gt;)&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
