{
    "version": "https://jsonfeed.org/version/1",
    "title": "QWERTY • All posts by \"筆記\" category",
    "description": "Programming | Computer Science | Thought",
    "home_page_url": "http://gitqwerty777.github.io",
    "items": [
        {
            "id": "http://gitqwerty777.github.io/linux-screen-tmux-byobu/",
            "url": "http://gitqwerty777.github.io/linux-screen-tmux-byobu/",
            "title": "byobu指令和設定",
            "date_published": "2022-02-21T10:00:45.000Z",
            "content_html": "<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>byobu是基於screen或tmux的一層操作介面<br>預設為基於tmux</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90YW8tb2YtdG11eC5yZWFkdGhlZG9jcy5pby96aF9DTi9sYXRlc3QvbWFudXNjcmlwdC8wMC1mb3Jld29yZC5odG1s\">tmux教學<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"使用byobu\"><a href=\"#使用byobu\" class=\"headerlink\" title=\"使用byobu\"></a>使用byobu</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">byobu-enable <span class=\"comment\">#登入就開啟byobu</span></span><br><span class=\"line\">byobu-disable <span class=\"comment\">#取消</span></span><br><span class=\"line\">byobu new -s &lt;session name&gt; <span class=\"comment\"># 新建一個byobu 會話</span></span><br><span class=\"line\"><span class=\"comment\"># 如果新建兩個以上，每次進入byobu的時候需要選擇</span></span><br></pre></td></tr></table></figure>\n\n<p>滑鼠操作</p>\n<ul>\n<li>選擇文字 <code>Shift+選擇</code></li>\n<li>複製文字 <code>Shift+右鍵</code></li>\n<li>開/關滑鼠操作 <code>Shift+F12</code></li>\n</ul>\n<h2 id=\"名詞解釋\"><a href=\"#名詞解釋\" class=\"headerlink\" title=\"名詞解釋\"></a>名詞解釋</h2><p>用瀏覽器的名詞解釋</p>\n<ul>\n<li>session → 視窗：不同視窗包含不同分頁<ul>\n<li>window → 分頁<ul>\n<li>split → 分割：同一個分頁的不同終端</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/Other/byobu-cheat-sheet.jpg\" alt=\"cheetsheet\"></p>\n<h2 id=\"指令表\"><a href=\"#指令表\" class=\"headerlink\" title=\"指令表\"></a>指令表</h2><h3 id=\"新建-F2\"><a href=\"#新建-F2\" class=\"headerlink\" title=\"新建(F2)\"></a>新建(F2)</h3><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Ctrl-F2</code></td>\n<td>新增垂直分割(分為左右兩塊)</td>\n</tr>\n<tr>\n<td><code>Ctrl-Shift-F2</code></td>\n<td>新增新視窗</td>\n</tr>\n<tr>\n<td><code>F2</code></td>\n<td>新增分頁</td>\n</tr>\n<tr>\n<td><code>Shift-F2</code></td>\n<td>新增水平分割(分為上下兩塊)</td>\n</tr>\n</tbody></table>\n<h3 id=\"移動-F3-F4\"><a href=\"#移動-F3-F4\" class=\"headerlink\" title=\"移動(F3/F4)\"></a>移動(F3/F4)</h3><p>移動的前後順序為編號順序</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Alt-↑/↓</code></td>\n<td>前/後一個視窗</td>\n</tr>\n<tr>\n<td><code>Ctrl-F3/F4</code></td>\n<td>交換兩個分割的位置</td>\n</tr>\n<tr>\n<td><code>Ctrl-Shift-F3/F4</code></td>\n<td>移動分頁的位置(編號)</td>\n</tr>\n<tr>\n<td><code>F3/F4</code>, <code>Alt-←/→</code></td>\n<td>前/後一個分頁</td>\n</tr>\n<tr>\n<td><code>Shift-Alt-Left/Right/Up/Down</code></td>\n<td>修改目前的分割大小</td>\n</tr>\n<tr>\n<td><code>Shift-F3/F4</code></td>\n<td>移動至前/後分割</td>\n</tr>\n<tr>\n<td><code>Shift-←/→/↑/↓</code></td>\n<td>移動至其他分割</td>\n</tr>\n</tbody></table>\n<h3 id=\"設定-F5-F12\"><a href=\"#設定-F5-F12\" class=\"headerlink\" title=\"設定(F5, F12)\"></a>設定(F5, F12)</h3><p>記<code>F9</code>即可</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Alt-F12</code></td>\n<td>切換滑鼠支援</td>\n</tr>\n<tr>\n<td><code>Alt-F5</code></td>\n<td>切換 UTF-8 支援</td>\n</tr>\n<tr>\n<td><code>Ctrl-F5</code></td>\n<td>Reconnect ssh/gpg/dbus sockets(註：應該是重新連線的意思)</td>\n</tr>\n<tr>\n<td><code>F5</code></td>\n<td>重新讀取設定</td>\n</tr>\n<tr>\n<td><code>F9</code></td>\n<td><strong>開啟 byobu 設定頁面</strong></td>\n</tr>\n<tr>\n<td><code>Shift-F12</code></td>\n<td>開/關 byobu 指令快捷鍵</td>\n</tr>\n<tr>\n<td><code>Shift-F5</code></td>\n<td>切換底部狀態列資訊</td>\n</tr>\n</tbody></table>\n<h3 id=\"取消-F6\"><a href=\"#取消-F6\" class=\"headerlink\" title=\"取消(F6)\"></a>取消(F6)</h3><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Alt-F6</code></td>\n<td>使連線到相同視窗的 terminal 離開(除了自己)</td>\n</tr>\n<tr>\n<td><code>Ctrl-F6</code></td>\n<td>關閉目前所在的分割</td>\n</tr>\n<tr>\n<td><code>F6</code></td>\n<td>離開 byobu 但不登出(=<code>byobu detach</code>)</td>\n</tr>\n<tr>\n<td><code>Shift-F6</code></td>\n<td>離開 byobu 且登出(註：不知道差別在哪)</td>\n</tr>\n</tbody></table>\n<h3 id=\"記錄-F7\"><a href=\"#記錄-F7\" class=\"headerlink\" title=\"記錄(F7)\"></a>記錄(F7)</h3><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Alt-PageUp/PageDown</code></td>\n<td>於歷史記錄中翻頁</td>\n</tr>\n<tr>\n<td><code>F7</code></td>\n<td>瀏覽歷史記錄(Command line history)</td>\n</tr>\n<tr>\n<td><code>Shift-F7</code></td>\n<td>儲存歷史記錄於 <code>$BYOBU_RUN_DIR/printscreen</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"管理-F8\"><a href=\"#管理-F8\" class=\"headerlink\" title=\"管理(F8)\"></a>管理(F8)</h3><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Alt-Shift-F8</code></td>\n<td>選擇分割佈局</td>\n</tr>\n<tr>\n<td><code>Ctrl-F8</code></td>\n<td>命名目前視窗</td>\n</tr>\n<tr>\n<td><code>Ctrl-Shift-F8</code></td>\n<td>儲存目前的分割佈局</td>\n</tr>\n<tr>\n<td><code>F8</code></td>\n<td>命名目前分頁</td>\n</tr>\n<tr>\n<td><code>Shift-F8</code></td>\n<td>切換為不同的分割佈局</td>\n</tr>\n</tbody></table>\n<h3 id=\"廣播-F9\"><a href=\"#廣播-F9\" class=\"headerlink\" title=\"廣播(F9)\"></a>廣播(F9)</h3><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Alt-F9</code></td>\n<td>開/關 同時輸入分割</td>\n</tr>\n<tr>\n<td><code>Ctrl-F9</code></td>\n<td>視窗中的所有分頁執行同一指令</td>\n</tr>\n<tr>\n<td><code>Shift-F9</code></td>\n<td>分頁中的所有分割執行同一指令</td>\n</tr>\n</tbody></table>\n<h3 id=\"其他-F11-F12\"><a href=\"#其他-F11-F12\" class=\"headerlink\" title=\"其他(F11, F12)\"></a>其他(F11, F12)</h3><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Alt-F11</code></td>\n<td>目前分割最大化</td>\n</tr>\n<tr>\n<td><code>Ctrl-F11</code></td>\n<td>將目前分割合併至前一個分頁(Join window into a vertical split)</td>\n</tr>\n<tr>\n<td><code>Ctrl-Shift-F12</code></td>\n<td>顯示蒙德裡安圖(Mondrian squares)</td>\n</tr>\n<tr>\n<td><code>Ctrl-Shift-F5</code></td>\n<td>隨機切換狀態列的顏色</td>\n</tr>\n<tr>\n<td><code>F12</code></td>\n<td>Escape sequence(等同 screen 的<code>Ctrl+a</code>)</td>\n</tr>\n<tr>\n<td><code>Shift-F11</code></td>\n<td>最大化/還原 目前分割</td>\n</tr>\n<tr>\n<td><code>Shift-F1</code></td>\n<td>顯示指令列表</td>\n</tr>\n</tbody></table>\n<h2 id=\"設定\"><a href=\"#設定\" class=\"headerlink\" title=\"設定\"></a>設定</h2><p>預設放在<code>~/.byobu/</code></p>\n<h3 id=\"修改狀態列\"><a href=\"#修改狀態列\" class=\"headerlink\" title=\"修改狀態列\"></a>修改狀態列</h3><p><code>~/.byobu/status</code></p>\n<p>預設是長這樣</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Tmux has one status line, with 2 halves for status</span></span><br><span class=\"line\">tmux_left=<span class=\"string\">\"#logo distro release #arch #session\"</span></span><br><span class=\"line\"><span class=\"comment\"># You can have as many tmux right lines below here, and cycle through them using Shift-F5</span></span><br><span class=\"line\">tmux_right=<span class=\"string\">\"network #disk_io #custom #entropy #raid reboot_required #updates_available #apport #services #mail #users uptime #ec2_cost #rcs_cost #fan_speed #cpu_temp #battery #wifi_quality #processes load_average cpu_count cpu_freq memory #swap disk users whoami #hostname ip_address #time_utc #date time\"</span></span><br><span class=\"line\"><span class=\"comment\">#tmux_right=\"network #disk_io #custom entropy raid reboot_required updates_available #apport #services #mail users uptime #ec2_cost #rcs_cost fan_speed cpu_temp battery wifi_quality #processes load_average cpu_count cpu_freq memory #swap #disk whoami hostname ip_address #time_utc date time\"</span></span><br><span class=\"line\"><span class=\"comment\">#tmux_right=\"network #disk_io custom #entropy raid reboot_required updates_available #apport #services #mail users uptime #ec2_cost #rcs_cost #fan_speed #cpu_temp battery wifi_quality #processes load_average cpu_count cpu_freq memory #swap #disk #whoami #hostname ip_address #time_utc date time\"</span></span><br><span class=\"line\"><span class=\"comment\">#tmux_right=\"#network disk_io #custom entropy #raid #reboot_required #updates_available #apport #services #mail #users #uptime #ec2_cost #rcs_cost fan_speed cpu_temp #battery #wifi_quality #processes #load_average #cpu_count #cpu_freq #memory #swap whoami hostname ip_address #time_utc disk date time\"</span></span><br></pre></td></tr></table></figure>\n\n<p>Left</p>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>arch</code></td>\n<td>CPU 架構</td>\n<td><code>x86_64</code></td>\n</tr>\n<tr>\n<td><code>distro</code></td>\n<td>作業系統名稱</td>\n<td><code>Ubuntu</code></td>\n</tr>\n<tr>\n<td><code>logo</code></td>\n<td>作業系統的 Logo，可設定</td>\n<td><code>u</code></td>\n</tr>\n<tr>\n<td><code>release</code></td>\n<td>作業系統版本</td>\n<td><code>20.04</code></td>\n</tr>\n<tr>\n<td><code>session</code></td>\n<td>視窗名字</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>Right</p>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>apport</code></td>\n<td>提醒尚未讀的 Crash Report</td>\n<td></td>\n</tr>\n<tr>\n<td><code>battery</code></td>\n<td>剩餘電量</td>\n<td></td>\n</tr>\n<tr>\n<td><code>cpu_count</code></td>\n<td>CPU 核心數</td>\n<td><code>16x</code></td>\n</tr>\n<tr>\n<td><code>cpu_freq</code></td>\n<td>CPU 時脈</td>\n<td><code>4.0GHz</code></td>\n</tr>\n<tr>\n<td><code>cpu_temp</code></td>\n<td>CPU 溫度</td>\n<td><code>30C</code></td>\n</tr>\n<tr>\n<td><code>custom</code></td>\n<td>自訂腳本，需要額外設定</td>\n<td></td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>日期，可自行設定</td>\n<td><code>2011-11-11</code></td>\n</tr>\n<tr>\n<td><code>disk_io</code></td>\n<td>即時 IO 讀/寫速度</td>\n<td><code>◁11KB/s ▷188KB/s</code></td>\n</tr>\n<tr>\n<td><code>disk</code></td>\n<td>磁碟用量</td>\n<td><code>256G90%</code></td>\n</tr>\n<tr>\n<td><code>entropy</code></td>\n<td>系統的 Entropy</td>\n<td><code>e3363</code></td>\n</tr>\n<tr>\n<td><code>fan_speed</code></td>\n<td>風扇速度，需要額外設定</td>\n<td></td>\n</tr>\n<tr>\n<td><code>hostname</code></td>\n<td>主機名稱</td>\n<td></td>\n</tr>\n<tr>\n<td><code>ip_address</code></td>\n<td>系統 ip 位址</td>\n<td><code>111.111.111.111</code></td>\n</tr>\n<tr>\n<td><code>load_average</code></td>\n<td>前一分鐘 CPU 的平均用量</td>\n<td><code>0.12</code></td>\n</tr>\n<tr>\n<td><code>mail</code></td>\n<td>是否有新信件</td>\n<td><code>[M]</code></td>\n</tr>\n<tr>\n<td><code>memory</code></td>\n<td>記憶體用量</td>\n<td><code>32G50%</code></td>\n</tr>\n<tr>\n<td><code>network</code></td>\n<td>即時網路上傳/下載速度</td>\n<td><code>△11KB/s ▽188KB/s</code></td>\n</tr>\n<tr>\n<td><code>processes</code></td>\n<td>總程序(Process)數</td>\n<td><code>100&amp;</code></td>\n</tr>\n<tr>\n<td><code>raid</code></td>\n<td>Raid 失敗警告</td>\n<td></td>\n</tr>\n<tr>\n<td><code>reboot_required</code></td>\n<td>是否需要重啟</td>\n<td></td>\n</tr>\n<tr>\n<td><code>services</code></td>\n<td>監控中的服務，需要額外設定</td>\n<td></td>\n</tr>\n<tr>\n<td><code>swap</code></td>\n<td>Swap 用量</td>\n<td><code>s32G50%</code></td>\n</tr>\n<tr>\n<td><code>time_utc</code></td>\n<td>UTC 時間</td>\n<td><code>04:00UTC</code></td>\n</tr>\n<tr>\n<td><code>time</code></td>\n<td>時間</td>\n<td><code>11:11:11</code></td>\n</tr>\n<tr>\n<td><code>updates_available</code></td>\n<td>是否需要更新軟體</td>\n<td><code>!</code>為一般更新 <code>!!</code>為重要更新</td>\n</tr>\n<tr>\n<td><code>uptime</code></td>\n<td>系統開機時間</td>\n<td><code>12d23h</code></td>\n</tr>\n<tr>\n<td><code>users</code></td>\n<td>用 ssh 登入的人數</td>\n<td><code>#1</code></td>\n</tr>\n<tr>\n<td><code>whoami</code></td>\n<td>目前登入帳戶</td>\n<td><code>qwerty</code></td>\n</tr>\n<tr>\n<td><code>wifi_quality</code></td>\n<td>Wifi 訊號強度</td>\n<td><code>[M]</code></td>\n</tr>\n</tbody></table>\n<p>也可以用<code>F9</code>設定</p>\n<h3 id=\"顏色設定\"><a href=\"#顏色設定\" class=\"headerlink\" title=\"顏色設定\"></a>顏色設定</h3><p><code>~/.byobu/color</code><br><code>~/.byobu/color.tmux</code></p>\n<h3 id=\"VSCode設定\"><a href=\"#VSCode設定\" class=\"headerlink\" title=\"VSCode設定\"></a>VSCode設定</h3><p>避免和預設的快捷鍵重覆</p>\n<p>設定 → 終端機</p>\n<ol>\n<li>取消勾選<code>Integrated: Allow Chords</code></li>\n<li><code>Integrated: Commands To Skip Shell</code>增加下列<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.quickOpen</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.terminal</span><span class=\"selector-class\">.findNext</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.terminal</span><span class=\"selector-class\">.findPrevious</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.continue</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.restart</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.run</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.start</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.stop</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.focusNextPart</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.focusPreviousPart</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.pause</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.quickOpen</span></span><br><span class=\"line\"><span class=\"selector-tag\">-workbench</span><span class=\"selector-class\">.action</span><span class=\"selector-class\">.terminal</span><span class=\"selector-class\">.focusFind</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnlvYnUub3Jn\">byobu<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZGV2aGVyby83YjlhNzI4MWRiMGFjNGJhNjgzZg==\">byobu_cheatsheet<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBlcnVzZXIuY29tL2EvNDIzMzk3\">Byobu vs. GNU Screen vs. tmux — usefulness and transferability of skills<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvbnNwbmcuY29tL2ltYWdlcy9ieW9idS1jaGVhdC1zaGVldC9ieW9idS1jaGVhdC1zaGVldC5qcGc=\">byobu-cheat-sheet<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnlvYnUub3JnL2RvY3VtZW50YXRpb24=\">官方文件<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zemxpbi5tZS8yMDE2LzEwLzA1LyVFNSU4OCU5RCVFNiU4RSVBMi1saW51eC1rZXJuZWwtJUU0JUJBJTgyJUU2JTk1JUI4JUU3JTk0JUEyJUU3JTk0JTlGJUU1JTk5JUE4LXJhbmRvbS1nZW5lcmF0b3Iv\">Entropy說明<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYWlzYWt1LXRlY2guaGF0ZW5hYmxvZy5jb20vZW50cnkvMjAyMC8wOS8wNS8xNzUzMjA=\">VS codeのターミナルでbyobuを使う<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "Linux",
                "byobu",
                "screen",
                "tmux"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/factorization-machines/",
            "url": "http://gitqwerty777.github.io/factorization-machines/",
            "title": "Factorization Machines(FM) 和 Field-Aware Factorization Machine(FFM)：推薦系統中的瑞士軍刀",
            "date_published": "2022-01-21T03:11:11.000Z",
            "content_html": "<h2 id=\"Factorization-Machines-FM\"><a href=\"#Factorization-Machines-FM\" class=\"headerlink\" title=\"Factorization Machines(FM)\"></a>Factorization Machines(FM)</h2><ul>\n<li>SVM<ul>\n<li>難以在稀疏資料中學習</li>\n</ul>\n</li>\n<li>Factorization Models(如Matrix Factorization)<ul>\n<li>擴展性低：需要特定的輸入格式</li>\n</ul>\n</li>\n</ul>\n<p>FM：克服SVM和Factorization Models的缺點</p>\n<ul>\n<li>可在稀疏資料中學習</li>\n<li>輸入資料可擴展</li>\n<li><strong>訓練時間為線性複雜度</strong></li>\n</ul>\n<h3 id=\"理論\"><a href=\"#理論\" class=\"headerlink\" title=\"理論\"></a>理論</h3><p>FM將權重 $w_{ij}$ 設為兩個長度為k的<strong>隱向量</strong>$V_i, V_j$的<strong>內積</strong>，表示為$\\langle V_i, V_j \\rangle$</p>\n<p><img data-src=\"/img/recommend/fm-formula.png\" alt=\"2維的FM公式\"></p>\n<ol>\n<li>$w_0$​是bias</li>\n<li>$w_i​$是特徵$i$的一維權重</li>\n<li>$w_{i,j}$​是特徵$i$和特徵$j$的二次交叉權重</li>\n</ol>\n<ul>\n<li>隱向量長度$k$為hyperparameter</li>\n<li>FM將權重矩陣分解為隱向量的內積，破壞了權重的獨立性，所以在稀疏資料中仍能學習<ol>\n<li>已知一正定矩陣$W$，必存在$V$使$W=VV^t$</li>\n<li>權重矩陣$W$必為正定</li>\n<li>所以$W$必能分解成隱向量矩陣$V$乘自身的轉置</li>\n</ol>\n</li>\n<li>原本$W$的大小為$\\frac{n^2}{2}$，改成隱向量$V$之後大小為$kn$，$k$通常不會設很大，明顯減少參數數量<ul>\n<li>限制$k$的大小也能限制FM模型的表達力，泛化能力較好</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/recommend/FM-structure.png\" alt=\"結構\"></p>\n<h3 id=\"效率\"><a href=\"#效率\" class=\"headerlink\" title=\"效率\"></a>效率</h3><p><img data-src=\"/img/recommend/fm-time-complexity.png\" alt=\"\"></p>\n<p>整理公式後，Inference的時間複雜度從$O(kn^2)$降到了$O(kn)$，$n$為特徵維度</p>\n<ul>\n<li>第2行公式推導：表示為整個矩陣扣掉對角項再除以2，因為$W$是對稱矩陣</li>\n<li>詳細推導可看<span class=\"exturl\" data-url=\"aHR0cHM6Ly95dWxvbmd0c2FpLm1lZGl1bS5jb20vZmFjdG9yaXphdGlvbi1tYWNoaW5lLTYzMTYwYmMyYzA2Yg==\">這篇<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>實作上只須計算非0元素的乘積，時間複雜度再下降到$O(km)$，$m$為平均一筆輸入資料中，值非0的特徵數</li>\n</ul>\n<h3 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h3><p>使用gradient descent學習參數<br><img data-src=\"/img/recommend/fm-gradient.png\" alt=\"\"></p>\n<p>$\\sum^n_{j=1}v_{j, f}x_j$可以事先計算，所以每次梯度更新的時間複雜度為$O(1)$</p>\n<p>因此FM的訓練時間複雜度也是$O(km)$</p>\n<h3 id=\"高維度FM\"><a href=\"#高維度FM\" class=\"headerlink\" title=\"高維度FM\"></a>高維度FM</h3><p><img data-src=\"/img/recommend/fm-dway.png\" alt=\"\"></p>\n<p>經過公式簡化(和二維的方法相似)，也可以在線性時間內計算</p>\n<h3 id=\"FM-和-Factorization-Model-SVM-比較\"><a href=\"#FM-和-Factorization-Model-SVM-比較\" class=\"headerlink\" title=\"FM 和 Factorization Model, SVM 比較\"></a>FM 和 Factorization Model, SVM 比較</h3><p>論文中證明了兩件事</p>\n<ol>\n<li>各種Factorization Model為FM的特化</li>\n<li>FM可以解決SVM在稀疏資料中無法成功訓練的問題</li>\n</ol>\n<p>詳細證明看不懂，略過</p>\n<h3 id=\"結論\"><a href=\"#結論\" class=\"headerlink\" title=\"結論\"></a>結論</h3><ul>\n<li>FM速度快、容易實作，於2012~14年為業界主流模型</li>\n<li>FM產生的隱向量可視為一種embedding<ul>\n<li>所以拿user的隱向量找相似隱向量的item，就是一個簡易且快速的推薦方法</li>\n</ul>\n</li>\n<li>FM適合類型特徵(離散)而非數值特徵(連續)，因為<ul>\n<li>類型特徵可有多個隱向量，而數值特徵只有一個</li>\n<li>數值特徵不應使用同一個隱向量，如10歲和40歲</li>\n<li>FM速度和非零特徵數有關，數值特徵類型化後不影響訓練速度</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Field-aware-factorization-machines-FFM\"><a href=\"#Field-aware-factorization-machines-FFM\" class=\"headerlink\" title=\"Field-aware factorization machines(FFM)\"></a>Field-aware factorization machines(FFM)</h2><ul>\n<li>FM：一個特徵有<strong>一個</strong>隱向量</li>\n<li>FFM：一個特徵有<strong>一組</strong>隱向量<ul>\n<li>每個隱向量對應不同的<strong>特徵域</strong></li>\n<li>特徵域通常為一群代表相同性質的特徵，如one-hot特徵</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/recommend/ffm-formula.png\" alt=\"\"></p>\n<h3 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h3><ul>\n<li>出版商特徵域(P): ESPN, Vogue, and NBC</li>\n<li>廣告商特徵域(A): Nike, Gucci, and Adidas</li>\n<li>消費者性別特徵域(G): Male, Female</li>\n</ul>\n<p>在(ESPN, Nike) 和 (ESPN, Male) 中，ESPN的隱向量是不同的($V_{ESPN, A}$和 $V_{ESPN, G}$)</p>\n<p>FM的隱向量：$$V_{ESPN}V_{Nike}, V_{ESPN}V_{Male}, V_{Nike}V_{Male}$$<br>FFM的隱向量：$$V_{ESPN, A}V_{Nike, P}, V_{ESPN, G}V_{Male,P}, V_{Nike, G}V_{Male,A}$$</p>\n<h3 id=\"結論-1\"><a href=\"#結論-1\" class=\"headerlink\" title=\"結論\"></a>結論</h3><ul>\n<li>訓練時間複雜度為$O(kn^2)$</li>\n<li>因為FFM的隱向量限制在一個特徵域，FFM的$k$可以比FM的$k$小</li>\n</ul>\n<h2 id=\"公式比較\"><a href=\"#公式比較\" class=\"headerlink\" title=\"公式比較\"></a>公式比較</h2><p>只比較二次交叉項</p>\n<p>$$FM(v, x) = … + \\sum^n_{j_1=1}{\\sum^n_{j_2=j_1+1}{\\langle v_{j_1}, v_{j_2}\\rangle x_{j_1}x_{j_2}}}$$<br>$$FFM(v, x) = … + \\sum^n_{j_1=1}{\\sum^n_{j_2=j_1+1}{\\langle v_{j_1, f_2}, v_{j_2, f_1}\\rangle x_{j_1}x_{j_2}}}$$</p>\n<h2 id=\"方法比較\"><a href=\"#方法比較\" class=\"headerlink\" title=\"方法比較\"></a>方法比較</h2><ul>\n<li>FM：在LR(Logistic Regression)的基礎上，加入特徵交叉 </li>\n<li>FFM：在FM的基礎上，加入特徵域交叉</li>\n</ul>\n<h2 id=\"總結\"><a href=\"#總結\" class=\"headerlink\" title=\"總結\"></a>總結</h2><p>就算Deep Learning盛行，FM也是一個很好的Baseline Model</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3NpZS5udHUuZWR1LnR3L35iOTcwNTMvcGFwZXIvUmVuZGxlMjAxMEZNLnBkZg==\">Rendle, Steffen. “Factorization machines.” 2010 IEEE International conference on data mining. IEEE, 2010<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDEuMDQwOTk=\">Juan, Yuchin, et al. “Field-aware factorization machines for CTR prediction.” Proceedings of the 10th ACM conference on recommender systems. 2016<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNDMxNzQxMDg=\">FM：推薦算法中的瑞士軍刀<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93bmdhdy5naXRodWIuaW8vZmllbGQtYXdhcmUtZmFjdG9yaXphdGlvbi1tYWNoaW5lcy13aXRoLXhsZWFybi8=\">Field-aware Factorization Machines with xLearn<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dlYi5jcy51Y2xhLmVkdS9+Y2hvaHNpZWgvdGVhY2hpbmcvQ1MyNjBfV2ludGVyMjAxOS9sZWN0dXJlMTMucGRm\">http://web.cs.ucla.edu/~chohsieh/teaching/CS260_Winter2019/lecture13.pdf<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC84OTYzOTMwNg==\">推薦系統系列（一）：FM理論與實踐<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly95dWxvbmd0c2FpLm1lZGl1bS5jb20vZmFjdG9yaXphdGlvbi1tYWNoaW5lLTYzMTYwYmMyYzA2Yg==\">初探Factorization Machine<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyODkyNTE0Mw==\">推薦系統算法FM、FFM使用時，連續性特徵，是直接作為輸入，還是經過離散化後one-hot處理呢？<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NTMyMzk2NzU=\">FM模型連續特徵離散化<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "推薦系統",
                "FM",
                "FFM",
                "SVM",
                "Embedding"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/why-linear-shuffle-works/",
            "url": "http://gitqwerty777.github.io/why-linear-shuffle-works/",
            "title": "隨機排序演算法實作",
            "date_published": "2022-01-15T10:12:50.000Z",
            "content_html": "<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>說到隨機排序(shuffle)演算法，最著名的肯定是Fisher–Yates，它是一個$O(N)$時間的演算法，偽碼如下</p>\n<a id=\"more\"></a>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"constructor\">Shuffle(Array <span class=\"params\">a</span>)</span>&#123;</span><br><span class=\"line\">    N = a.length</span><br><span class=\"line\">    for (i = <span class=\"number\">0</span> ~ N-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"constructor\">Swap(<span class=\"params\">a</span>[<span class=\"params\">i</span>], <span class=\"params\">a</span>[Random <span class=\"params\">value</span> <span class=\"params\">between</span> <span class=\"params\">i</span> <span class=\"params\">and</span> N])</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>簡單來說就是每個元素都和之後(包含自身)的隨機一個元素交換</p>\n<h2 id=\"實作\"><a href=\"#實作\" class=\"headerlink\" title=\"實作\"></a>實作</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">N = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Shuffle</span><span class=\"params\">(arr)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(N<span class=\"number\">-1</span>):</span><br><span class=\"line\">        j = random.randint(i, N<span class=\"number\">-1</span>)</span><br><span class=\"line\">        arr[i], arr[j] = arr[j], arr[i]</span><br><span class=\"line\"></span><br><span class=\"line\">total = [[<span class=\"number\">0</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(N)] <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(N)]</span><br><span class=\"line\"><span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> range(<span class=\"number\">1000000</span>):</span><br><span class=\"line\">    arr = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(N)]</span><br><span class=\"line\">    Shuffle(arr)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i, v <span class=\"keyword\">in</span> enumerate(arr):</span><br><span class=\"line\">        total[v][i] += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(N):</span><br><span class=\"line\">    print(<span class=\"string\">f\"數字<span class=\"subst\">&#123;i&#125;</span>分佈\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\",\"</span>.join(str(v) <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> total[i]))</span><br></pre></td></tr></table></figure>\n\n<p>執行1000000次Shuffle，各數字的分布</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><span class=\"line\">數字<span class=\"number\">0</span>分佈</span><br><span class=\"line\"><span class=\"number\">99656</span>,<span class=\"number\">99624</span>,<span class=\"number\">100636</span>,<span class=\"number\">100081</span>,<span class=\"number\">99957</span>,<span class=\"number\">100149</span>,<span class=\"number\">100238</span>,<span class=\"number\">100287</span>,<span class=\"number\">99710</span>,<span class=\"number\">99662</span></span><br><span class=\"line\">數字<span class=\"number\">1</span>分佈</span><br><span class=\"line\"><span class=\"number\">100043</span>,<span class=\"number\">100292</span>,<span class=\"number\">99499</span>,<span class=\"number\">100262</span>,<span class=\"number\">100141</span>,<span class=\"number\">99847</span>,<span class=\"number\">100098</span>,<span class=\"number\">100164</span>,<span class=\"number\">99655</span>,<span class=\"number\">99999</span></span><br><span class=\"line\">數字<span class=\"number\">2</span>分佈</span><br><span class=\"line\"><span class=\"number\">100032</span>,<span class=\"number\">100412</span>,<span class=\"number\">99857</span>,<span class=\"number\">100035</span>,<span class=\"number\">100148</span>,<span class=\"number\">99738</span>,<span class=\"number\">100139</span>,<span class=\"number\">99765</span>,<span class=\"number\">99681</span>,<span class=\"number\">100193</span></span><br><span class=\"line\">數字<span class=\"number\">3</span>分佈</span><br><span class=\"line\"><span class=\"number\">100031</span>,<span class=\"number\">99868</span>,<span class=\"number\">100572</span>,<span class=\"number\">99418</span>,<span class=\"number\">99965</span>,<span class=\"number\">99918</span>,<span class=\"number\">99889</span>,<span class=\"number\">100107</span>,<span class=\"number\">100279</span>,<span class=\"number\">99953</span></span><br><span class=\"line\">數字<span class=\"number\">4</span>分佈</span><br><span class=\"line\"><span class=\"number\">100214</span>,<span class=\"number\">99716</span>,<span class=\"number\">100181</span>,<span class=\"number\">100315</span>,<span class=\"number\">99764</span>,<span class=\"number\">99667</span>,<span class=\"number\">100270</span>,<span class=\"number\">99829</span>,<span class=\"number\">99871</span>,<span class=\"number\">100173</span></span><br><span class=\"line\">數字<span class=\"number\">5</span>分佈</span><br><span class=\"line\"><span class=\"number\">99952</span>,<span class=\"number\">100282</span>,<span class=\"number\">99670</span>,<span class=\"number\">99642</span>,<span class=\"number\">99919</span>,<span class=\"number\">100401</span>,<span class=\"number\">99785</span>,<span class=\"number\">100627</span>,<span class=\"number\">100215</span>,<span class=\"number\">99507</span></span><br><span class=\"line\">數字<span class=\"number\">6</span>分佈</span><br><span class=\"line\"><span class=\"number\">100332</span>,<span class=\"number\">99879</span>,<span class=\"number\">99976</span>,<span class=\"number\">100143</span>,<span class=\"number\">99614</span>,<span class=\"number\">100319</span>,<span class=\"number\">99665</span>,<span class=\"number\">100169</span>,<span class=\"number\">100380</span>,<span class=\"number\">99523</span></span><br><span class=\"line\">數字<span class=\"number\">7</span>分佈</span><br><span class=\"line\"><span class=\"number\">99878</span>,<span class=\"number\">100407</span>,<span class=\"number\">99804</span>,<span class=\"number\">99669</span>,<span class=\"number\">100115</span>,<span class=\"number\">99760</span>,<span class=\"number\">100251</span>,<span class=\"number\">99602</span>,<span class=\"number\">100124</span>,<span class=\"number\">100390</span></span><br><span class=\"line\">數字<span class=\"number\">8</span>分佈</span><br><span class=\"line\"><span class=\"number\">100104</span>,<span class=\"number\">99888</span>,<span class=\"number\">99876</span>,<span class=\"number\">100575</span>,<span class=\"number\">100181</span>,<span class=\"number\">100229</span>,<span class=\"number\">100083</span>,<span class=\"number\">99398</span>,<span class=\"number\">99632</span>,<span class=\"number\">100034</span></span><br><span class=\"line\">數字<span class=\"number\">9</span>分佈</span><br><span class=\"line\"><span class=\"number\">99758</span>,<span class=\"number\">99632</span>,<span class=\"number\">99929</span>,<span class=\"number\">99860</span>,<span class=\"number\">100196</span>,<span class=\"number\">99972</span>,<span class=\"number\">99582</span>,<span class=\"number\">100052</span>,<span class=\"number\">100453</span>,<span class=\"number\">100566</span></span><br></pre></td></tr></table></figure>\n\n<p>但為何只要這樣交換，就是隨機排序？ 🤔</p>\n<h2 id=\"不嚴謹的證明\"><a href=\"#不嚴謹的證明\" class=\"headerlink\" title=\"不嚴謹的證明\"></a>不嚴謹的證明</h2><p>已知N=1或2時，使用此法皆可使陣列為隨機排序。<br>若N=n時成立，考慮N=n+1時的情況：<br>Without loss of generality，令陣列為[0, 1, 2, …, n]<br>第一個位置的數0會和後面的隨機一個元素交換，此時第一個位置是0到n的數的機率是平均的 $P_0(v)=\\frac{1}{n+1}, v \\in {0, 1, 2, .. n}$<br>此時子陣列(<code>[1:]</code>)即為N=n的情況，依照假設，使用此法後，其餘數字會是隨機排序，<br>所以N=n+1時也成立。<br>依數學歸納法，N=1,2時成立，且N=n成立時，N=n+1也成立；所以N為自然數時，使用此法皆可使陣列為隨機排序。$\\blacksquare$</p>\n<hr>\n<p>一個更直觀的解釋是，每一次交換都是在隨機選擇剩下還沒選的值。</p>\n<h2 id=\"錯誤版本\"><a href=\"#錯誤版本\" class=\"headerlink\" title=\"錯誤版本\"></a>錯誤版本</h2><figure class=\"highlight reasonml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"constructor\">WrongShuffle(Array <span class=\"params\">a</span>)</span>&#123;</span><br><span class=\"line\">    N = a.length</span><br><span class=\"line\">    for (i = <span class=\"number\">0</span> ~ N-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"constructor\">Swap(<span class=\"params\">a</span>[<span class=\"params\">i</span>], <span class=\"params\">a</span>[Random <span class=\"params\">value</span> <span class=\"params\">between</span> 0 <span class=\"params\">and</span> N])</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>此版本的所有元素對陣列中的一個元素交換<br>雖然接近，但不是隨機排序</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><span class=\"line\">數字<span class=\"number\">0</span>分佈</span><br><span class=\"line\"><span class=\"number\">99993</span>,<span class=\"number\">100886</span>,<span class=\"number\">99773</span>,<span class=\"number\">100749</span>,<span class=\"number\">100077</span>,<span class=\"number\">99675</span>,<span class=\"number\">99556</span>,<span class=\"number\">99589</span>,<span class=\"number\">99798</span>,<span class=\"number\">99904</span></span><br><span class=\"line\">數字<span class=\"number\">1</span>分佈</span><br><span class=\"line\"><span class=\"number\">128185</span>,<span class=\"number\">93869</span>,<span class=\"number\">94816</span>,<span class=\"number\">95112</span>,<span class=\"number\">96020</span>,<span class=\"number\">96324</span>,<span class=\"number\">97355</span>,<span class=\"number\">98316</span>,<span class=\"number\">99545</span>,<span class=\"number\">100458</span></span><br><span class=\"line\">數字<span class=\"number\">2</span>分佈</span><br><span class=\"line\"><span class=\"number\">120180</span>,<span class=\"number\">124118</span>,<span class=\"number\">89932</span>,<span class=\"number\">91055</span>,<span class=\"number\">91953</span>,<span class=\"number\">92791</span>,<span class=\"number\">94813</span>,<span class=\"number\">96518</span>,<span class=\"number\">98183</span>,<span class=\"number\">100457</span></span><br><span class=\"line\">數字<span class=\"number\">3</span>分佈</span><br><span class=\"line\"><span class=\"number\">112478</span>,<span class=\"number\">115941</span>,<span class=\"number\">120497</span>,<span class=\"number\">86991</span>,<span class=\"number\">88766</span>,<span class=\"number\">90575</span>,<span class=\"number\">92353</span>,<span class=\"number\">94732</span>,<span class=\"number\">97465</span>,<span class=\"number\">100202</span></span><br><span class=\"line\">數字<span class=\"number\">4</span>分佈</span><br><span class=\"line\"><span class=\"number\">104476</span>,<span class=\"number\">109125</span>,<span class=\"number\">113448</span>,<span class=\"number\">119119</span>,<span class=\"number\">85554</span>,<span class=\"number\">88077</span>,<span class=\"number\">90897</span>,<span class=\"number\">92827</span>,<span class=\"number\">96727</span>,<span class=\"number\">99750</span></span><br><span class=\"line\">數字<span class=\"number\">5</span>分佈</span><br><span class=\"line\"><span class=\"number\">97764</span>,<span class=\"number\">101507</span>,<span class=\"number\">106920</span>,<span class=\"number\">112440</span>,<span class=\"number\">118047</span>,<span class=\"number\">85835</span>,<span class=\"number\">89281</span>,<span class=\"number\">92036</span>,<span class=\"number\">96476</span>,<span class=\"number\">99694</span></span><br><span class=\"line\">數字<span class=\"number\">6</span>分佈</span><br><span class=\"line\"><span class=\"number\">91910</span>,<span class=\"number\">96017</span>,<span class=\"number\">101046</span>,<span class=\"number\">105743</span>,<span class=\"number\">112624</span>,<span class=\"number\">119489</span>,<span class=\"number\">87594</span>,<span class=\"number\">91230</span>,<span class=\"number\">94797</span>,<span class=\"number\">99550</span></span><br><span class=\"line\">數字<span class=\"number\">7</span>分佈</span><br><span class=\"line\"><span class=\"number\">86177</span>,<span class=\"number\">90650</span>,<span class=\"number\">96260</span>,<span class=\"number\">101089</span>,<span class=\"number\">107061</span>,<span class=\"number\">113865</span>,<span class=\"number\">120411</span>,<span class=\"number\">90146</span>,<span class=\"number\">94617</span>,<span class=\"number\">99724</span></span><br><span class=\"line\">數字<span class=\"number\">8</span>分佈</span><br><span class=\"line\"><span class=\"number\">81888</span>,<span class=\"number\">86070</span>,<span class=\"number\">90840</span>,<span class=\"number\">96392</span>,<span class=\"number\">101840</span>,<span class=\"number\">109008</span>,<span class=\"number\">115726</span>,<span class=\"number\">124044</span>,<span class=\"number\">93945</span>,<span class=\"number\">100247</span></span><br><span class=\"line\">數字<span class=\"number\">9</span>分佈</span><br><span class=\"line\"><span class=\"number\">76949</span>,<span class=\"number\">81817</span>,<span class=\"number\">86468</span>,<span class=\"number\">91310</span>,<span class=\"number\">98058</span>,<span class=\"number\">104361</span>,<span class=\"number\">112014</span>,<span class=\"number\">120562</span>,<span class=\"number\">128447</span>,<span class=\"number\">100014</span></span><br></pre></td></tr></table></figure>\n\n<p>為何不是隨機排序？ 🤔 目前想不到直觀解釋</p>\n<p>參考維基的證明：<br>總共有$n^n$種選法，但可能的排列只有$n!$種，在$n&gt;2$時並不能整除</p>\n<h2 id=\"更簡單的實作\"><a href=\"#更簡單的實作\" class=\"headerlink\" title=\"更簡單的實作\"></a>更簡單的實作</h2><p>對每個index設一隨機數，對隨機數排序<br>時間複雜度為$O(n\\log n)$</p>\n<h2 id=\"各語言Shuffle實作\"><a href=\"#各語言Shuffle實作\" class=\"headerlink\" title=\"各語言Shuffle實作\"></a>各語言Shuffle實作</h2><p>都是Fisher-Yates</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B5dGhvbi9jcHl0aG9uL2Jsb2IvY2IwNzQ4ZDM5MzljMzExNjhhYjVkM2I4MGUzNjc3NDk0NDk3ZDVlMy9MaWIvcmFuZG9tLnB5I0wyODY=\">Python<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9saWJjeHgvYmxvYi8yN2M4MzZmZjNhOWM1MDVkZWI5ZmQxNjE2MDEyOTI0ZGU4ZmY5Mjc5L2luY2x1ZGUvYWxnb3JpdGhtI0wyNzg3\">LLVM C++<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRmlzaGVyJUUyJTgwJTkzWWF0ZXNfc2h1ZmZsZQ==\">Wiki<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW9wbGUuY3MudW1hc3MuZWR1L35waGFhcy9DUzU5ME0vaGFuZG91dHMvRmlzaGVyLVlhdGVzLXByb29mLnBkZg==\">https://people.cs.umass.edu/~phaas/CS590M/handouts/Fisher-Yates-proof.pdf<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcy5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvMjE1Mi9ob3ctdG8tcHJvdmUtY29ycmVjdG5lc3Mtb2YtYS1zaHVmZmxlLWFsZ29yaXRobQ==\">https://cs.stackexchange.com/questions/2152/how-to-prove-correctness-of-a-shuffle-algorithm<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "演算法",
                "隨機排序",
                "洗牌",
                "Fisher-Yates",
                "證明"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/recommender-wide-and-deep/",
            "url": "http://gitqwerty777.github.io/recommender-wide-and-deep/",
            "title": "Wide And Deep 論文簡介：快思慢想的神經網路版",
            "date_published": "2021-12-20T07:18:44.000Z",
            "content_html": "<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>Wide And Deep 模型由簡單的Wide模型和複雜的Deep模型組成</p>\n<a id=\"more\"></a>\n\n<ul>\n<li>Wide<ul>\n<li>Memorization(記憶)<ul>\n<li><strong>Generalized linear model</strong>(e.g., Linear Regression Model)</li>\n<li>適合學習稀疏、簡單的規則<ul>\n<li>看了 A 電影的使用者經常喜歡看電影 B，這種「因為 A 所以 B」式的規則</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>從歷史資料學習規則(exploit)</li>\n<li>讓模型記住大量的直接且重要的規則，這正是單層的線性模型所擅長的</li>\n</ul>\n</li>\n<li>Deep<ul>\n<li>Generalization(泛化)<ul>\n<li><strong>Embedding-based models</strong>(e.g., Deep Neural Network)</li>\n<li>適合學習通用、深層的規則</li>\n</ul>\n</li>\n<li>學習新的特徵組合(explore)</li>\n</ul>\n</li>\n<li>合併 Wide and Deep(Jointly Training) <img data-src=\"/img/recommend/wide-and-deep.png\" alt=\"\"><ul>\n<li>既能快速處理和記憶大量歷史行為特徵，又具有強大的表達能力</li>\n<li>和 Deep-only 比: 準確率高</li>\n<li>和 Wide-only 比: 更好的泛化規則</li>\n</ul>\n</li>\n<li>當user-item matrix非常稀疏時，例如有獨特愛好的users以及很小眾的items，NN很難為users和items學習到有效的embedding。導致over-generalize，並推薦不怎麼相關的物品。此時Memorization就展示了優勢，它可以「記住」這些特殊的特徵組合</li>\n</ul>\n<h2 id=\"實作\"><a href=\"#實作\" class=\"headerlink\" title=\"實作\"></a>實作</h2><h3 id=\"Wide\"><a href=\"#Wide\" class=\"headerlink\" title=\"Wide\"></a>Wide</h3><ul>\n<li>$y = w^Tx+b$</li>\n<li>Cross product transformation<ul>\n<li><img data-src=\"/img/recommend/wide-and-deep-cross-product.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>Optimizer: Follow-the-regularized-leader (FTRL) + L1 regularization<ul>\n<li>FTRL with L1非常注重模型的稀疏性。採用L1 FTRL是想讓Wide部分變得更加稀疏<ul>\n<li>但是兩個id類特徵向量進行組合，在維度爆炸的同時，會讓原本已經非常稀疏的multihot特徵向量，變得更加稀疏。正因如此，wide部分的權重數量其實是海量的。為了不把數量如此之巨的權重都搬到線上進行model serving，採用FTRL過濾掉哪些稀疏特徵無疑是非常好的工程經驗</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Wide的輸入特徵較少<ul>\n<li>只有已安裝app和瀏覽過的app</li>\n<li>希望能充份發揮Wide記憶能力強的優勢</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Deep\"><a href=\"#Deep\" class=\"headerlink\" title=\"Deep\"></a>Deep</h3><ul>\n<li>特徵(節錄)<ul>\n<li>用戶特徵<ul>\n<li>年齡、國家、語言</li>\n<li>行為特徵<ul>\n<li>已安裝App個數</li>\n<li>已安裝的App</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>情境特徵<ul>\n<li>使用裝置</li>\n<li>目前時間(星期，小時)</li>\n</ul>\n</li>\n<li>App特徵<ul>\n<li>發佈時間</li>\n<li>下載數</li>\n</ul>\n</li>\n<li>候選App</li>\n<li>部份特徵有做embedding(Wide完全沒有)<ul>\n<li>32 dimension</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Optimizer: AdaGrad</li>\n</ul>\n<h3 id=\"Jointly-Training\"><a href=\"#Jointly-Training\" class=\"headerlink\" title=\"Jointly Training\"></a>Jointly Training</h3><ul>\n<li>同時更新Wide和Deep的權重<ul>\n<li><img data-src=\"/img/recommend/wide-and-deep-joint-train.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>結構圖<ul>\n<li><img data-src=\"/img/recommend/wide-and-deep-features.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"結果\"><a href=\"#結果\" class=\"headerlink\" title=\"結果\"></a>結果</h2><p>實際用在 Google Play Store App 推薦</p>\n<p><img data-src=\"/img/recommend/wide-and-deep-exp.png\" alt=\"\"></p>\n<ul>\n<li>Deep雖然離線結果較差，但實際結果仍比Wide好<ul>\n<li>深層模型有學習到使用者的隱含喜好，而非直接記憶規則</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>這就是<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWFuYWdlcnRvZGF5LmNvbS50dy9hcnRpY2xlcy92aWV3LzUwOTA1Pw==\">快思慢想<i class=\"fa fa-external-link-alt\"></i></span>的神經網路版</p>\n<p>Wide處理簡單的規則且省力，Deep處理複雜的規則但費力</p>\n<p>和純粹的deep learning相比，適合需要記憶大量簡易規則的情境。如App推薦中，有安裝A就推薦B</p>\n<p>Wide and Deep是一個架構，Wide模型和Deep模型可以為任意實作，所以衍生出許多變形，如DeepFM, Deep and Cross等</p>\n<!--\ndeep的效率跟不上，可以固定住deep，對wide進行online learning來增強記憶性。\n非常贊 跟我們的討論結果基本一致，deep部分做batch update保證准確性和充足表達能力，wide部分做online learning保證實效性。\n\n用戶-物品互動太少 → over-generalize\nwide部分的引入是為瞭解決 niche items的問題，對於很長尾的物品，dense features是沒法學到什麼東西的\n\nHowever,deep neural networks with embeddings can over-generalize\nand recommend less relevant items when the user-item inter-\nactions are sparse and high-rank.\n當user-item matrix非常稀疏時，例如有和獨特愛好的users以及很小眾的items，NN很難為users和items學習到有效的embedding。這種情況下，大部分user-item應該是沒有關聯的，但dense embedding 的方法還是可以得到對所有 user-item pair 的非零預測，因此導致 over-generalize並推薦不怎麼相關的物品。此時Memorization就展示了優勢，它可以“記住”這些特殊的特徵組合。\nhttps://en.wikipedia.org/wiki/Rank_(linear_algebra)\n-->\n\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MDYuMDc3OTI=\">Cheng, Heng-Tze, et al. “Wide &amp; deep learning for recommender systems.” Proceedings of the 1st workshop on deep learning for recommender systems. 2016.<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL2RhdGEtc2NpZW50aXN0cy1wbGF5Z3JvdW5kL3dpZGUtZGVlcCVFNiVBOCVBMSVFNSU5RSU4Qi0lRTYlOEUlQTglRTglOTYlQTYlRTclQjMlQkIlRTclQjUlQjEtJUU1JThFJTlGJUU3JTkwJTg2LThiYWRhY2Y3NzdmMw==\">https://medium.com/data-scientists-playground/wide-deep%E6%A8%A1%E5%9E%8B-%E6%8E%A8%E8%96%A6%E7%B3%BB%E7%B5%B1-%E5%8E%9F%E7%90%86-8badacf777f3<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNDI5NTg4MzQ=\">https://zhuanlan.zhihu.com/p/142958834<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81MzM2MTUxOQ==\">https://zhuanlan.zhihu.com/p/53361519<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "推薦系統",
                "WideAndDeep",
                "Google"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/revealjs-markdown/",
            "url": "http://gitqwerty777.github.io/revealjs-markdown/",
            "title": "使用revealJS + markdown 製作簡報",
            "date_published": "2021-12-17T01:53:00.000Z",
            "content_html": "<p>優點：減少排版時間、資料為純文字、版本控制容易</p>\n<p><a href=\"https://gitqwerty777.github.io/revealjs-markdown/\">說明簡報連結</a></p>\n<p>之後會再分析其他簡報製作方法</p>\n",
            "tags": [
                "簡報",
                "revealJS",
                "markdown"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/unicode/",
            "url": "http://gitqwerty777.github.io/unicode/",
            "title": "漢字的異體字及其Unicode編碼",
            "date_published": "2020-10-29T07:00:00.000Z",
            "content_html": "<h2 id=\"異體字\"><a href=\"#異體字\" class=\"headerlink\" title=\"異體字\"></a>異體字</h2><p>異體字為意思一樣、但寫法不同的字集合。<br>因為漢字在多個國家使用，每個國家的正式寫法不同，且在歷史中會出現字形改變的情形，自然字形也不同。</p>\n<a id=\"more\"></a>\n<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>Unicode只是編碼標準，不是字形標準。因此其官方說法是：<strong>它只對字（Character）編碼，而非字形（Glyph，每個字的具體形狀、寫法）</strong>。</p>\n<p>陸、港、臺、韓的「港」字右下從「巳」，日本的「港」字右下從「己」；港、臺、韓、日的「角」字中豎不穿頭，大陸的「角」字中豎穿頭；港、臺「起」字從「巳」，陸、日、韓從「己」……這些異形同字，Unicode都不分別編碼。例如「港」就是「6E2F」，不論從「巳」還是從「己」。</p>\n<p>爲了相容不同地區的編碼， Unicode 又有「<strong>字源分離原則</strong>」。日本 JIS 編碼同時收錄了「剣」、「劍」二形， Unicode 爲了與之兼容，即使它們是同一個字， Unicode 也分別給予編碼：「剣」是「5263」，「劍」是「528D」。</p>\n<p><strong>結果，有些異形同字，被編進同一碼位，有些則區分作兩碼，造成了 Unicode 內的自相矛盾。</strong></p>\n<h2 id=\"歷史\"><a href=\"#歷史\" class=\"headerlink\" title=\"歷史\"></a>歷史</h2><p>國際標準組織於 1993 年 5 月出版了「通用碼架構及基本多語文字面」（UCSArchitecture and Basic Multilingual Plane）草案，該草案將此標準定名為 Universal MultipleOctet Coded Character Set（通用多八位組編碼字符集），並說明其編碼架構為 4 個位元組（4 Bytes），共組成 128 個群（Group），每一個群有 256 個字面（Plane)，每一個字面有256×256 個編碼空間，其中第 32 群的第 32 個字面為基本多語文字面（Basic MultilingualPlane；簡稱 BMP）。到了 1993 年 ISO 10646-1 正式版本，此標準定名為 Universal Multiple-Octet Coded Character Set（廣用多八位元組編碼字元集；簡稱 UCS），BMP 則定義在第 0 群第 0 個字面。在使用上，假如需用的字集都在 BMP 中，則只要使用 2 個八位元組的編碼架構即可，否則就必須使用 4 個八位元組的編碼架構；而且這兩種編碼架構不能混合使用，不是使用 2 個八位元組，就是使用 4 個八位元組的固定長度編碼架構，其用意就是要避免 ISO 2022 不定長度的缺點。</p>\n<p>參與制定 ISO 10646 的代表莫不儘量爭取把自己國家使用的字集編入 BMP，目的就是希望能利用 BMP 只用 2 個八位元組的優勢，取得比 4 個八位元組更高的資訊處理效率。BMP 的爭取如此重要，然其編碼位置卻有限，因此如何充份利用這些編碼空間處理更多常用字符集，就成為標準研訂時的一個重要考慮因素。過去在 BMP 的設計中，除編入西方拼音文字及符號外，在漢字方面只蒐集日本、南韓及中國三個地區使用的漢字字集，並沒有考慮到我國的字集，我國遂積極組團以民間團體－臺北市電腦商業同業公會（TCA）的名義，參加 ISO 10646 的制定，以爭取將我國使用的正體字編入 BMP 中。</p>\n<p>ISO 10646 編碼基本原則為「一字一碼」，我國及中國的代表因此就共同提出了 HCS（Han Character Set） 的構想，這個構想同時獲得美國及其它國家代表的支持，進而一步步發展至今。1993 年公布的 ISO 10646-1 之 BMP 中，已經將臺灣、大陸、日本和南韓所使用之漢字整合成獨立的<strong>「中日韓認同表意文字區（ CJK Unified Ideographs）」</strong>，使<br>得亞洲幾個主要使用漢字的國家，有圓滿的解決方案。</p>\n<p>然而，當初進行中日韓漢字編碼時，因各國所提出的漢字集有重複及形、體不盡相同，進行重複字比對、篩選及形、體認同（ unify） 原則討論等工作。歷經五次會議完成的「中日韓認同表意文字」（ CJK Unified Ideographs），其字序主要是參考康熙字典、大漢和詞典、漢語大詞典及大字源字典，以先部首後筆劃的順序排列。<br>完成了 ISO 10646:1993 之 BMP 中 I 區的表意文字編碼標準，總計含 20,902 個漢字，其中包含了 CNS 11643 用字共 17,011 個。</p>\n<p>1998 年 IRG 完成「中日韓認同表意文字擴充 A」(CJK Unified Ideographs Extension A)，編訂 6,582 字，送交 SC2／WG2 通過，編碼於 BMP 之 A 區的3400～4DFF，其中包含 CNS 11643 用字共 5,879 個。</p>\n<p>被認定相同的 CNS11643 字元 527 個，收容於「中日韓相容表意文字擴充 A 區」，編碼範圍為 0002-F800 ～0002-FA16h。</p>\n<p>「中日韓認同表意文字擴充 B」（CJK Unified Ideographs Extension B）的整理，這套字集涵蓋康熙字典全部用字、漢語大字典全部用字及中國、臺灣、韓國、越南、香港所提的國家標準字集。擴充 B 字集係編碼於 ISO 10646 第二輔助字面(Plane 2)，總計 42,807 中日韓越漢字，編碼範圍為 0002-0100～0002-A836h，其中含我國 CNS 11643 第 4~7 字面共約 3 萬字。「中日韓認同表意文字擴充 B」擴編完成後，CNS 11643 第 1 至 7 字面有 95%以上的用字全部納入 ISO 10646 標準中，其餘 5%是被認定相同(unified)的字。</p>\n<h2 id=\"範例：不同Unicode的異體字\"><a href=\"#範例：不同Unicode的異體字\" class=\"headerlink\" title=\"範例：不同Unicode的異體字\"></a>範例：不同Unicode的異體字</h2><ul>\n<li>剣(5263)、劍(528D)</li>\n<li>數(6578)、數(f969)</li>\n<li>靑(9751)、青(9752)</li>\n<li><img data-src=\"http://founder.acgvlyric.org/iu/lib/exe/fetch.php/%E8%AA%AA%E6%96%87:cing_unified.png?cache=\" alt=\"\"></li>\n</ul>\n<h2 id=\"範例：相同Unicode的異體字\"><a href=\"#範例：相同Unicode的異體字\" class=\"headerlink\" title=\"範例：相同Unicode的異體字\"></a>範例：相同Unicode的異體字</h2><p>早期Unicode碰到在有關國家或地區既有碼表已分別編碼的字，像「値」與「值」，就會放棄認同原則，改以原字集分離原則來把兩個字形分別編碼。<br>但若當時有關國家或地區沒有把異體字分別編碼，像日本的JIS90只收錄了一個「葛」字，Unicode就不會分別編碼。如「直、殖、植」等字皆沒有像「値」與「值」般分別編碼。</p>\n<p><img data-src=\"https://mojikiban.ipa.go.jp/contents/2013/11/IVS_fig1.png\" alt=\"\"></p>\n<h3 id=\"異體字選擇器\"><a href=\"#異體字選擇器\" class=\"headerlink\" title=\"異體字選擇器\"></a>異體字選擇器</h3><p>異體字選擇器是一種在Unicode上，用來準確、具體地指定選擇哪個文字字形的程序。有標準化的異體字選擇器（Standardized Variation Sequence，簡稱「SVS」），以及漢字異體字選擇器（Ideographic Variation Sequence，簡稱「IVS」）。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yaC5uYWVyLmVkdS50dy9jZ2ktYmluL2dzMzIvZ3N3ZWIuY2dpP289ZGlycHJvamVjdCZzPWlkPSUyMlJQMDAwMDAwMDAwNjM3JTIyLiZzZWFyY2htb2RlPWJhc2lj\">李鵑娟-異體字字典港澳陸規範字收錄研究<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JTk1JUIwJUU5JUFCJTk0JUU1JUFEJTk3JUU5JTgxJUI4JUU2JTkzJTg3JUU1JTk5JUE4\">異體字選擇器<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy51bmljb2RlLm9yZy9QdWJsaWMvMTIuMS4wL3VjZC9TdGFuZGFyZGl6ZWRWYXJpYW50cy50eHQ=\">SVS<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly91bmljb2RlLm9yZy9pdmQvZGF0YS8yMDE3LTEyLTEyL0lWRF9TZXF1ZW5jZXMudHh0\">IVS<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1jTnYyQnJtUDlTWQ==\">顯示表意文字字形變化序列示範<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb2ppa2liYW4uaXBhLmdvLmpwLzEyOTIuaHRtbA==\">IVD/IVSとは<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "漢字",
                "中文",
                "異體字",
                "unicode"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/vuejs/",
            "url": "http://gitqwerty777.github.io/vuejs/",
            "title": "vuejs 語法",
            "date_published": "2020-09-06T06:50:12.000Z",
            "content_html": "<blockquote>\n<p>因為mustache語法(雙大括號)會被判斷成render命令，改成全形符號</p>\n</blockquote>\n<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>採用簡潔的模板語法來宣告式地將資料渲染進 DOM 的系統</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- html part --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  ｛｛ message ｝｝</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//js part</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    message: <span class=\"string\">'Hello Vue.js!'</span></span><br><span class=\"line\">    todo: []</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    reverseMessage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.message = <span class=\"keyword\">this</span>.message.split(<span class=\"string\">''</span>).reverse().join(<span class=\"string\">''</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>在 html tag 中 加入<code>v-</code>開頭的attributes以實作邏輯</p>\n<a id=\"more\"></a>\n\n<h2 id=\"元件化應用構建\"><a href=\"#元件化應用構建\" class=\"headerlink\" title=\"元件化應用構建\"></a>元件化應用構建</h2><p><code>v-bind</code>: todo-item 元件接受一個”prop”，類似於一個自定義 attribute。這個 prop 名為 todo。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">  &lt;ol&gt;</span><br><span class=\"line\">    &lt;todo-item</span><br><span class=\"line\">      v-<span class=\"keyword\">for</span>=<span class=\"string\">\"item in groceryList\"</span></span><br><span class=\"line\">      v-bind:todo=<span class=\"string\">\"item\"</span></span><br><span class=\"line\">      v-bind:key=<span class=\"string\">\"item.id\"</span></span><br><span class=\"line\">    &gt;&lt;<span class=\"regexp\">/todo-item&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>ol&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">Vue.component('todo-item', &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  props: ['todo'],</span></span><br><span class=\"line\"><span class=\"regexp\">  template: '&lt;li&gt;｛｛ todo.text ｝｝&lt;/</span>li&gt;<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">&#125;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">var app = new Vue(&#123;</span></span><br><span class=\"line\">  el: '#app',</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    groceryList: [</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">0</span>, <span class=\"attr\">text</span>: <span class=\"string\">'蔬菜'</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">text</span>: <span class=\"string\">'乳酪'</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">text</span>: <span class=\"string\">'隨便其它什麼人吃的東西'</span> &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Instance\"><a href=\"#Instance\" class=\"headerlink\" title=\"Instance\"></a>Instance</h2><p>用 Vue 函式建立一個新的 Vue 例項<br>當一個 Vue 例項被建立時，它將 data 物件中的所有的 property 加入到 Vue 的響應式系統中<br>只有當例項被建立時就已經存在於 data 中的 property 才是響應式的<br>唯一的例外是使用<code>Object.freeze()</code>，這會阻止修改現有的 property，也意味著響應系統無法再追蹤變化。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 我們的資料物件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = &#123; <span class=\"attr\">a</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 該物件被加入到一個 Vue 例項中</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#example'</span>,</span><br><span class=\"line\">  data: data</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 獲得這個例項上的 property</span></span><br><span class=\"line\"><span class=\"comment\">// 返回源資料中對應的欄位</span></span><br><span class=\"line\">vm.a == data.a <span class=\"comment\">// =&gt; true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 設定 property 也會影響到原始資料</span></span><br><span class=\"line\">vm.a = <span class=\"number\">2</span></span><br><span class=\"line\">data.a <span class=\"comment\">// =&gt; 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ……反之亦然</span></span><br><span class=\"line\">data.a = <span class=\"number\">3</span></span><br><span class=\"line\">vm.a <span class=\"comment\">// =&gt; 3</span></span><br><span class=\"line\"></span><br><span class=\"line\">vm.$data === data <span class=\"comment\">// =&gt; true</span></span><br><span class=\"line\">vm.$el === <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'example'</span>) <span class=\"comment\">// =&gt; true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// $watch 是一個例項方法</span></span><br><span class=\"line\">vm.$watch(<span class=\"string\">'a'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newValue, oldValue</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 這個回撥將在 `vm.a` 改變後呼叫</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生命週期鉤子\"><a href=\"#生命週期鉤子\" class=\"headerlink\" title=\"生命週期鉤子\"></a>生命週期鉤子</h2><p><code>created</code>、<code>mounted</code>、<code>updated</code> 和 <code>destroyed</code></p>\n<p><strong>不要在選項 property 或 callback 使用箭頭函式</strong>。因為箭頭函式並沒有 this，this 會作為變數一直向上級詞法作用域查詢，直至找到為止，經常導致 Uncaught TypeError: Cannot read property of undefined 或 Uncaught TypeError: this.myMethod is not a function 之類的錯誤。</p>\n<h2 id=\"資料繫結\"><a href=\"#資料繫結\" class=\"headerlink\" title=\"資料繫結\"></a>資料繫結</h2><p>資料繫結最常見的形式就是使用“Mustache”語法 (雙大括號) 的文字插值：<br>雙大括號會將資料解釋為普通文字，而非 HTML 程式碼</p>\n<p><code>&lt;span&gt;Message: ｛｛ msg ｝｝&lt;/span&gt;</code></p>\n<p>可使用表示式<br><code>｛｛ ok ? &#39;YES&#39; : &#39;NO&#39; ｝｝</code></p>\n<p>透過使用 <code>v-once</code> 指令，你也能執行一次性地插值，當資料改變時，插值處的內容不會更新。但請留心這會影響到該節點上的其它資料繫結：</p>\n<p><code>&lt;span v-once&gt;這個將不會改變: ｛｛ msg ｝｝&lt;/span&gt;</code></p>\n<p>為了輸出真正的 HTML，你需要使用 <code>v-html</code> 指令<br><code>&lt;p&gt;Using v-html directive: &lt;span v-html=&quot;rawHtml&quot;&gt;&lt;/span&gt;&lt;/p&gt;</code><br><strong>動態渲染 HTML 可能會非常危險，因為它很容易導致 XSS 攻擊。請只對可信內容使用 HTML 插值，絕不要對使用者提供的內容使用插值。</strong></p>\n<p>Mustache 語法不能作用在 HTML attribute 上，應該使用 <code>v-bind</code> 指令：<br><code>&lt;div v-bind:id=&quot;dynamicId&quot;&gt;&lt;/div&gt;</code><br><code>&lt;div v-bind:id=&quot;&#39;list-&#39; + id&quot;&gt;&lt;/div&gt;</code></p>\n<h2 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h2><p>指令 (Directives) 是帶有 <code>v-</code> 字首的特殊 attribute。<br>指令 attribute 的值預期是單個 JavaScript 表示式 (<code>v-for</code> 是例外)。<br>指令的職責是，當表示式的值改變時，將其產生的連帶影響，響應式地作用於 DOM。</p>\n<p>一些指令能夠接收一個“引數”，在指令名稱之後以冒號表示。例如，<code>v-bind</code> 指令可以用於響應式地更新 HTML attribute<br><code>&lt;a v-bind:href&gt;</code></p>\n<p>從 2.6.0 開始，可以用方括號括起來的 JavaScript 表示式作為一個指令的引數：<br><code>&lt;a v-bind:[attributeName]=&quot;url&quot;&gt; ... &lt;/a&gt;</code></p>\n<p>動態引數預期會求出一個字串，異常情況下值為 null。這個特殊的 null 值可以用於移除繫結。任何其它非字串型別的值都將會觸發一個警告。</p>\n<h3 id=\"修飾符\"><a href=\"#修飾符\" class=\"headerlink\" title=\"修飾符\"></a>修飾符</h3><p>修飾符 (modifier) 是以 <code>.</code> 指明的特殊字尾，用於指出一個指令應該以特殊方式繫結。例如<code>.prevent</code> 修飾符告訴 <code>v-on</code> 指令對於觸發的事件呼叫 <code>event.preventDefault()</code></p>\n<p><code>&lt;form v-on:submit.prevent=&quot;onSubmit&quot;&gt;...&lt;/form&gt;</code></p>\n<p>Vue 為 <code>v-bind</code> 和 <code>v-on</code> 這兩個最常用的指令，提供了特定簡寫：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 完整語法 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:href</span>=<span class=\"string\">\"url\"</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 縮寫 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:href</span>=<span class=\"string\">\"url\"</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 完整語法 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"doSomething\"</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 縮寫 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"doSomething\"</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"計算屬性-computed\"><a href=\"#計算屬性-computed\" class=\"headerlink\" title=\"計算屬性(computed)\"></a>計算屬性(computed)</h3><p>對於任何複雜邏輯，你都應當使用計算屬性<br>計算屬性只在相關響應式依賴發生改變時它們才會重新求值，這是比使用function好的地方</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    message: <span class=\"string\">'Hello'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 計算屬性的 getter</span></span><br><span class=\"line\">    reversedMessage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// `this` 指向 vm 例項</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.message.split(<span class=\"string\">''</span>).reverse().join(<span class=\"string\">''</span>)<span class=\"comment\">//olleH</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>下面的計算屬性將不再更新，因為 Date.now() 不是響應式依賴：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  now: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>計算屬性預設只有 getter，不過在需要時你也可以提供一個 setter：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  fullName: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// getter</span></span><br><span class=\"line\">    <span class=\"keyword\">get</span>: function () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.firstName + <span class=\"string\">' '</span> + <span class=\"keyword\">this</span>.lastName</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// better than set two variables seperately</span></span><br><span class=\"line\">    <span class=\"keyword\">set</span>: function (newValue) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> names = newValue.split(<span class=\"string\">' '</span>)</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.firstName = names[<span class=\"number\">0</span>]</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.lastName = names[names.length - <span class=\"number\">1</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"watch\"><a href=\"#watch\" class=\"headerlink\" title=\"watch\"></a>watch</h3><p>監視某個資料，當其發生改變，這個函式就會執行</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"watch-example\"</span>&gt;</span><br><span class=\"line\">  &lt;p&gt;</span><br><span class=\"line\">    Ask a yes/no question:</span><br><span class=\"line\">    &lt;input v-model=<span class=\"string\">\"question\"</span>&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;p&gt;｛｛ answer ｝｝&lt;/</span>p&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;!-- 因為 AJAX 庫和通用工具的生態已經相當豐富，Vue 核心程式碼沒有重複 --&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;!-- 提供這些功能以保持精簡。這也可以讓你自由選擇自己更熟悉的工具。 --&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script src=\"https:/</span><span class=\"regexp\">/cdn.jsdelivr.net/</span>npm/axios@<span class=\"number\">0.12</span><span class=\"number\">.0</span>/dist/axios.min.js<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;script src=\"</span>https:<span class=\"comment\">//cdn.jsdelivr.net/npm/lodash@4.13.1/lodash.min.js\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">var</span> watchExampleVM = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#watch-example'</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    question: <span class=\"string\">''</span>,</span><br><span class=\"line\">    answer: <span class=\"string\">'I cannot give you an answer until you ask a question!'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果 `question` 發生改變，這個函式就會執行</span></span><br><span class=\"line\">    question: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newQuestion, oldQuestion</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.answer = <span class=\"string\">'Waiting for you to stop typing...'</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.debouncedGetAnswer()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// `_.debounce` 是一個透過 Lodash 限制操作頻率的函式。</span></span><br><span class=\"line\">    <span class=\"comment\">// 在這個例子中，我們希望限制訪問 yesno.wtf/api 的頻率</span></span><br><span class=\"line\">    <span class=\"comment\">// AJAX 請求直到使用者輸入完畢才會發出。想要瞭解更多關於</span></span><br><span class=\"line\">    <span class=\"comment\">// `_.debounce` 函式 (及其近親 `_.throttle`) 的知識，</span></span><br><span class=\"line\">    <span class=\"comment\">// 請參考：https://lodash.com/docs#debounce</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.debouncedGetAnswer = _.debounce(<span class=\"keyword\">this</span>.getAnswer, <span class=\"number\">500</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    getAnswer: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.question.indexOf(<span class=\"string\">'?'</span>) === <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.answer = <span class=\"string\">'Questions usually contain a question mark. ;-)'</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.answer = <span class=\"string\">'Thinking...'</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> vm = <span class=\"keyword\">this</span></span><br><span class=\"line\">      axios.get(<span class=\"string\">'https://yesno.wtf/api'</span>)</span><br><span class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">          vm.answer = _.capitalize(response.data.answer)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</span><br><span class=\"line\">          vm.answer = <span class=\"string\">'Error! Could not reach the API. '</span> + error</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Class-與-Style-繫結\"><a href=\"#Class-與-Style-繫結\" class=\"headerlink\" title=\"Class 與 Style 繫結\"></a>Class 與 Style 繫結</h2><p><code>&lt;div v-bind:class=&quot;{ active: isActive }&quot;&gt;&lt;/div&gt;</code><br>上面的語法表示 active 這個 class 存在與否將取決於資料 property isActive 的 truthiness。</p>\n<p>我們也可以在這裡繫結一個返回物件的計算屬性。這是一個常用且強大的模式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div v-bind:<span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"classObject\"</span>&gt;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">data: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  isActive: true,</span></span><br><span class=\"line\"><span class=\"regexp\">  error: null</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">computed: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  classObject: function () &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      active: this.isActive &amp;&amp; !this.error,</span></span><br><span class=\"line\"><span class=\"regexp\">      'text-danger': this.error &amp;&amp; this.error.type === 'fatal'</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>陣列語法中也可以使用物件語法：<br><code>&lt;div v-bind:class=&quot;[{ active: isActive }, errorClass]&quot;&gt;&lt;/div&gt;</code></p>\n<h3 id=\"v-if\"><a href=\"#v-if\" class=\"headerlink\" title=\"v-if\"></a>v-if</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"type === 'A'\"</span>&gt;</span></span><br><span class=\"line\">  A</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">\"type === 'B'\"</span>&gt;</span></span><br><span class=\"line\">  B</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">\"type === 'C'\"</span>&gt;</span></span><br><span class=\"line\">  C</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">  Not A/B/C</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在html用<code>template</code>作為隱形元素，不渲染</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template v-<span class=\"keyword\">if</span>=<span class=\"string\">\"ok\"</span>&gt;</span><br><span class=\"line\">  &lt;h1&gt;Title&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;p&gt;Paragraph 1&lt;/</span>p&gt;</span><br><span class=\"line\">  &lt;p&gt;Paragraph <span class=\"number\">2</span>&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br></pre></td></tr></table></figure>\n\n<p>Vue 會儘可能高效地渲染元素，通常會復用已有元素而不是從頭開始渲染。這麼做除了使 Vue 變得非常快之外，還有其它一些好處。例如，如果你允許使用者在不同的登入方式之間切換：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template v-<span class=\"keyword\">if</span>=<span class=\"string\">\"loginType === 'username'\"</span>&gt;</span><br><span class=\"line\">  &lt;label&gt;Username&lt;<span class=\"regexp\">/label&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;input placeholder=\"Enter your username\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\">&lt;template v-<span class=\"keyword\">else</span>&gt;</span><br><span class=\"line\">  &lt;label&gt;Email&lt;<span class=\"regexp\">/label&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;input placeholder=\"Enter your email address\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br></pre></td></tr></table></figure>\n\n<p>那麼在上面的程式碼中切換 loginType 將不會清除使用者已經輸入的內容。因為兩個模板使用了相同的元素，<code>&lt;input&gt;</code> 不會被替換掉——僅僅是替換了它的 placeholder。</p>\n<p>帶有 <code>v-show</code> 的元素始終會被渲染並保留在 DOM 中。<code>v-show</code> 只是簡單地切換元素的 CSS property display。<br>注意，<code>v-show</code> 不支援 <code>&lt;template&gt;</code> 元素，也不支援 <code>v-else</code>。</p>\n<p><code>v-if</code> 是“真正”的條件渲染，因為它會確保在切換過程中條件塊內的事件監聽器和子元件適當地被銷毀和重建。</p>\n<p><code>v-if</code> 也是惰性的：如果在初始渲染時條件為假，則什麼也不做——直到條件第一次變為真時，才會開始渲染條件塊。</p>\n<p>相比之下，<code>v-show</code> 就簡單得多——不管初始條件是什麼，元素總是會被渲染，並且只是簡單地基於 CSS 進行切換。</p>\n<blockquote>\n<p>一般來說，v-if 有更高的切換開銷，而 v-show 有更高的初始渲染開銷。因此，如果需要非常頻繁地切換，則使用 v-show 較好；如果在執行時條件很少改變，則使用 v-if 較好。</p>\n</blockquote>\n<p><strong>不推薦同時使用 v-if 和 v-for</strong>。請查閱風格指南以獲取更多資訊。</p>\n<h3 id=\"v-for\"><a href=\"#v-for\" class=\"headerlink\" title=\"v-for\"></a>v-for</h3><p><code>v-for</code> 還支援一個可選的第二個引數，即當前項的索引。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;ul id=<span class=\"string\">\"example-2\"</span>&gt;</span><br><span class=\"line\">  &lt;li v-<span class=\"keyword\">for</span>=<span class=\"string\">\"(item, index) in items\"</span>&gt;</span><br><span class=\"line\">    ｛｛ parentMessage ｝｝ - ｛｛ index ｝｝ - ｛｛ item.message ｝｝</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/u</span>l&gt;</span><br></pre></td></tr></table></figure>\n\n<p>你也可以用 <code>of</code> 替代 <code>in</code> 作為分隔符，因為它更接近 JavaScript 迭代器的語法：</p>\n<p><code>&lt;div v-for=&quot;item of items&quot;&gt;&lt;/div&gt;</code></p>\n<p>可以用 <code>v-for</code> 來遍歷一個物件的 property。<br>也可以提供第二個的引數為 property 名稱 (也就是key)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;ul id=<span class=\"string\">\"v-for-object\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"demo\"</span>&gt;</span><br><span class=\"line\">  &lt;li v-<span class=\"keyword\">for</span>=<span class=\"string\">\"value in object\"</span>&gt;</span><br><span class=\"line\">    ｛｛ value ｝｝</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/u</span>l&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 在遍歷物件時，會按 <span class=\"built_in\">Object</span>.keys() 的結果遍歷，但是不能保證它的結果在不同的 JavaScript 引擎下都一致。 --&gt;</span><br><span class=\"line\">&lt;div v-<span class=\"keyword\">for</span>=<span class=\"string\">\"(value, name) in object\"</span>&gt;</span><br><span class=\"line\">  ｛｛ name ｝｝: ｛｛ value ｝｝</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>v-for</code> 渲染的元素列表時，它預設使用“就地更新”的策略。如果資料項的順序被改變，Vue 將不會移動 DOM 元素來匹配資料項的順序，而是就地更新每個元素，並且確保它們在每個索引位置正確渲染</p>\n<p>這個預設的模式是高效的，但是隻適用於不依賴子元件狀態或臨時 DOM 狀態 (例如：表單輸入值) 的列表渲染輸出。</p>\n<p>為了給 Vue 一個提示，以便它能跟蹤每個節點的身份，從而重用和重新排序現有元素，<strong>你需要為每項提供一個唯一的 key attribute</strong></p>\n<h3 id=\"自動檢測變化的限制\"><a href=\"#自動檢測變化的限制\" class=\"headerlink\" title=\"自動檢測變化的限制\"></a>自動檢測變化的限制</h3><p><strong>由於 JavaScript 的限制，Vue 不能檢測陣列(array)和物件(object)的變化</strong></p>\n<p>Vue 將被偵聽的陣列的變更方法進行了包裹，所以它們也將會觸發檢視更新。這些被包裹過的方法包括：</p>\n<ul>\n<li><code>push()</code></li>\n<li><code>pop()</code></li>\n<li><code>shift()</code></li>\n<li><code>unshift()</code></li>\n<li><code>splice()</code></li>\n<li><code>sort()</code></li>\n<li><code>reverse()</code></li>\n</ul>\n<p>相比之下，也有非變更方法，例如 <code>filter()</code>、<code>concat()</code> 和 <code>slice()</code>。它們不會變更原始陣列，而總是返回一個新陣列</p>\n<h3 id=\"is\"><a href=\"#is\" class=\"headerlink\" title=\"is\"></a>is</h3><p>注意這裡的 <code>is=&quot;todo-item&quot;</code> attribute。這種做法在使用 DOM 模板時是十分必要的，因為在 <code>&lt;ul&gt;</code> 元素內只有 <code>&lt;li&gt;</code> 元素會被看作有效內容。這樣做實現的效果與 <code>&lt;todo-item&gt;</code> 相同，但是可以避開一些潛在的瀏覽器解析錯誤。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"todo-list-example\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">v-on:submit.prevent</span>=<span class=\"string\">\"addNewTodo\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"new-todo\"</span>&gt;</span>Add a todo<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-model</span>=<span class=\"string\">\"newTodoText\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">\"new-todo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">placeholder</span>=<span class=\"string\">\"E.g. Feed the cat\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>Add<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">is</span>=<span class=\"string\">\"todo-item\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-for</span>=<span class=\"string\">\"(todo, index) in todos\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-bind:key</span>=<span class=\"string\">\"todo.id\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-bind:title</span>=<span class=\"string\">\"todo.title\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-on:remove</span>=<span class=\"string\">\"todos.splice(index, 1)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"v-on-dom-event\"><a href=\"#v-on-dom-event\" class=\"headerlink\" title=\"v-on: dom event\"></a>v-on: dom event</h3><p>用特殊變數 <code>$event</code>訪問原始的 DOM 事件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;button v-on:click=<span class=\"string\">\"warn('Form cannot be submitted yet.', $event)\"</span>&gt;</span><br><span class=\"line\">  Submit</span><br><span class=\"line\">&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ ...</span></span><br><span class=\"line\"><span class=\"regexp\">methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  warn: function (message, event) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    /</span><span class=\"regexp\">/ 現在我們可以訪問原生事件物件</span></span><br><span class=\"line\"><span class=\"regexp\">    if (event) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      event.preventDefault()</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    alert(message)</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>Vue.js 為 <code>v-on</code> 提供了事件修飾符。之前提過，修飾符是由點開頭的指令字尾來表示的。</p>\n<ul>\n<li><code>.stop</code></li>\n<li><code>.prevent</code></li>\n<li><code>.capture</code></li>\n<li><code>.self</code></li>\n<li><code>.once</code></li>\n<li><code>.passive</code></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 阻止單擊事件繼續傳播 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-on:click.stop</span>=<span class=\"string\">\"doThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 提交事件不再過載頁面 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">v-on:submit.prevent</span>=<span class=\"string\">\"onSubmit\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 修飾符可以串聯 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-on:click.stop.prevent</span>=<span class=\"string\">\"doThat\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 只有修飾符 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">v-on:submit.prevent</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 新增事件監聽器時使用事件捕獲模式 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 即內部元素觸發的事件先在此處理，然後才交由內部元素進行處理 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-on:click.capture</span>=<span class=\"string\">\"doThis\"</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 只當在 event.target 是當前元素自身時觸發處理函式 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 即事件不是從內部元素觸發的 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-on:click.self</span>=<span class=\"string\">\"doThat\"</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-on-input\"><a href=\"#v-on-input\" class=\"headerlink\" title=\"v-on: input\"></a>v-on: input</h2><p>Vue 允許為 <code>v-on</code> 在監聽鍵盤事件時新增按鍵修飾符：<br>你可以直接將 KeyboardEvent.key 暴露的任意有效按鍵名轉換為 kebab-case 來作為修飾符。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 只有在 `key` 是 `Enter` 時呼叫 `vm.submit()` --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-on:keyup.enter</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-on:keyup.page-down</span>=<span class=\"string\">\"onPageDown\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 即使 Alt 或 Shift 被一同按下時也會觸發 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click.ctrl</span>=<span class=\"string\">\"onClick\"</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 有且只有 Ctrl 被按下的時候才觸發 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click.ctrl.exact</span>=<span class=\"string\">\"onCtrlClick\"</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>滑鼠按鈕修飾符</p>\n<ul>\n<li><code>.left</code></li>\n<li><code>.right</code></li>\n<li><code>.middle</code></li>\n</ul>\n<h2 id=\"v-model-Input\"><a href=\"#v-model-Input\" class=\"headerlink\" title=\"v-model: Input\"></a>v-model: Input</h2><blockquote>\n<p>這是 Vue 完全贏過 React 的部分</p>\n</blockquote>\n<p>你可以用 <code>v-model</code> 指令在表單 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 及 <code>&lt;select&gt;</code> 元素上建立雙向資料繫結。它會根據控制元件型別自動選取正確的方法來更新元素。儘管有些神奇，但 <code>v-model</code> 本質上不過是語法糖。它負責監聽使用者的輸入事件以更新資料，並對一些極端場景進行一些特殊處理。</p>\n<p><code>v-model</code> 只看binding data的值，會忽略所有表單元素的 value、checked、selected attribute 的初始值</p>\n<p><code>v-model</code> 在內部為不同的輸入元素使用不同的 property 並丟擲不同的事件：</p>\n<ul>\n<li>text 和 textarea 元素使用 value property 和 input 事件；</li>\n<li>checkbox 和 radio 使用 checked property 和 change 事件；</li>\n<li>select 欄位將 value 作為 prop 並將 change 作為事件。<!-- (? need example) -->\n\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"searchText\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">等價於：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:value</span>=<span class=\"string\">\"searchText\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-on:input</span>=<span class=\"string\">\"searchText = $event.target.value\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- checkbox example --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jack\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Jack\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"checkedNames\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"jack\"</span>&gt;</span>Jack<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"john\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"John\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"checkedNames\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"john\"</span>&gt;</span>John<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mike\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Mike\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"checkedNames\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"mike\"</span>&gt;</span>Mike<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Checked names: ｛｛ checkedNames ｝｝<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">new Vue(&#123;</span><br><span class=\"line\">  el: '...',</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    checkedNames: []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- select example --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"selected\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">disabled</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>&gt;</span>請選擇<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>B<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>C<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Selected: ｛｛ selected ｝｝<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">new Vue(&#123;</span><br><span class=\"line\">  el: '...',</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    selected: ''</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>如果 <code>v-model</code> 表示式的初始值未能匹配任何選項，<code>&lt;select&gt;</code> 元素將被渲染為“未選中”狀態。在 iOS 中，這會使使用者無法選擇第一個選項。因為這樣的情況下，iOS 不會觸發 <code>change</code> 事件。因此，更推薦像上面這樣提供一個值為空的禁用選項。</p>\n<h3 id=\"input-繫結-variable\"><a href=\"#input-繫結-variable\" class=\"headerlink\" title=\"input 繫結 variable\"></a>input 繫結 variable</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-model</span>=<span class=\"string\">\"toggle\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">true-value</span>=<span class=\"string\">\"yes\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">false-value</span>=<span class=\"string\">\"no\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">// 當選中時</span><br><span class=\"line\">vm.toggle === 'yes'</span><br><span class=\"line\">// 當沒有選中時</span><br><span class=\"line\">vm.toggle === 'no'</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"pick\"</span> <span class=\"attr\">v-bind:value</span>=<span class=\"string\">\"a\"</span>&gt;</span></span><br><span class=\"line\">// 當選中時</span><br><span class=\"line\">vm.pick === vm.a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- v-model as object --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"selected\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 內聯物件字面量 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">v-bind:value</span>=<span class=\"string\">\"&#123; number: 123 &#125;\"</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">// 當選中時</span><br><span class=\"line\">typeof vm.selected // =&gt; 'object'</span><br><span class=\"line\">vm.selected.number // =&gt; 123</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"v-model-修飾符\"><a href=\"#v-model-修飾符\" class=\"headerlink\" title=\"v-model: 修飾符\"></a>v-model: 修飾符</h3><p><code>.lazy</code><br>在預設情況下，v-model 在每次 input 事件觸發後將輸入框的值與資料進行同步 (除了上述輸入法組合文字時)。</p>\n<p>新增 lazy 修飾符，等到滑鼠移到輸入框外，觸發 change 事件才更新。</p>\n<p><code>.number</code><br>自動將使用者的輸入值轉為數值型別</p>\n<p><code>&lt;input v-model.number=&quot;age&quot; type=&quot;number&quot;&gt;</code><br>這通常很有用，因為即使在 type=”number” 時，HTML 輸入元素的值也總會返回字串。如果這個值無法被 parseFloat() 解析，則會返回原始的值。</p>\n<p><code>.trim</code><br>如果要自動過濾使用者輸入的首尾空白字元，可以給 v-model 新增 trim 修飾符：</p>\n<h2 id=\"元件-Components\"><a href=\"#元件-Components\" class=\"headerlink\" title=\"元件 Components\"></a>元件 Components</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定義一個名為 button-counter 的新元件</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'button-counter'</span>, &#123;</span><br><span class=\"line\">  data: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      count: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;button v-on:click=\"count++\"&gt;You clicked me ｛｛ count ｝｝ times.&lt;/button&gt;'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>元件是可復用的 Vue 例項，且帶有一個名字：在這個例子中是 <code>&lt;button-counter&gt;</code>。我們可以在一個透過 new Vue 建立的 Vue 根例項中，把這個元件作為自定義元素來使用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"components-demo\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button-counter</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-counter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>因為元件是可復用的 Vue 例項，所以它們與 new Vue 接收相同的選項，例如 data、computed、watch、methods 以及生命週期鉤子等。<strong>僅有的例外是像 el 這樣根例項特有的選項</strong>。</p>\n<p>為了能在模板中使用，這些元件必須先註冊以便 Vue 能夠識別。這裡有兩種元件的註冊型別：全域性註冊和區域性註冊。至此，我們的元件都只是透過 Vue.component 全域性註冊的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">'my-component-name'</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ... options ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>全域性註冊的元件可以用在其被註冊之後的任何 (透過 new Vue) 新建立的 Vue 根例項，也包括其元件樹中的所有子元件的模板中。</p>\n<p>而區域性註冊的好處是當你使用的是webpack這樣的構建系統時，如果是用全域性註冊的這種方法註冊的元件，那麼當你不使用某一個元件的時候，它仍然會存在最終的構建結果之中，這就增加的無謂的js下載。</p>\n<h3 id=\"data-是一個函式\"><a href=\"#data-是一個函式\" class=\"headerlink\" title=\"data 是一個函式\"></a>data 是一個函式</h3><p>data 是一個函式，因此每個例項可以維護一份被返回物件的獨立的複製：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">data: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    count: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h3><p>每個元件必須只有一個根元素。你可以將模板的內容包裹在一個父元素內，來修復這個問題，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"blog-post\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>｛｛ title ｝｝<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">\"content\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>當元件變得越來越複雜的時候，為每個相關的資訊定義一個 prop 會變得很麻煩：<br>所以是時候重構一下這個 <code>&lt;blog-post&gt;</code> 元件了，讓它變成接受一個單獨的 post prop：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blog-post</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-for</span>=<span class=\"string\">\"post in posts\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:key</span>=<span class=\"string\">\"post.id\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:title</span>=<span class=\"string\">\"post.title\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:content</span>=<span class=\"string\">\"post.content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:publishedAt</span>=<span class=\"string\">\"post.publishedAt\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:comments</span>=<span class=\"string\">\"post.comments\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blog-post</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-for</span>=<span class=\"string\">\"post in posts\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:key</span>=<span class=\"string\">\"post.id\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:post</span>=<span class=\"string\">\"post\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post</span>&gt;</span></span><br><span class=\"line\">Vue.component('blog-post', &#123;</span><br><span class=\"line\">  props: ['post'],</span><br><span class=\"line\">  template: `</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"blog-post\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>｛｛ post.title ｝｝<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">\"post.content\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- other props --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    `</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><strong>父級元件可以像處理 native DOM 事件一樣透過 <code>v-on</code> 監聽子元件例項的任意事件</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blog-post</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">...</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-on:enlarge-text</span>=<span class=\"string\">\"postFontSize += 0.1\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post</span>&gt;</span></span><br><span class=\"line\">同時子元件可以透過呼叫內建的 `$emit` 方法並傳入事件名稱來觸發一個事件：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"$emit('enlarge-text')\"</span>&gt;</span></span><br><span class=\"line\">  Enlarge text</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用事件傳遞一個值</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"$emit('enlarge-text', 0.1)\"</span>&gt;</span></span><br><span class=\"line\">  Enlarge text</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 透過 $event 訪問到被拋出的這個值 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blog-post</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">...</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-on:enlarge-text</span>=<span class=\"string\">\"postFontSize += $event\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>emit input的值使 custom-input 可以更新<code>v-model</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;custom-input v-model=<span class=\"string\">\"searchText\"</span>&gt;&lt;<span class=\"regexp\">/custom-input&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">Vue.component('custom-input', &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  props: ['value'],</span></span><br><span class=\"line\"><span class=\"regexp\">  template: `</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;input</span></span><br><span class=\"line\"><span class=\"regexp\">      v-bind:value=\"value\"</span></span><br><span class=\"line\"><span class=\"regexp\">      v-on:input=\"$emit('input', $event.target.value)\"</span></span><br><span class=\"line\"><span class=\"regexp\">    &gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  `</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"slot\"><a href=\"#slot\" class=\"headerlink\" title=\"slot\"></a>slot</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">  &lt;layout&gt;</span><br><span class=\"line\">    &lt;p slot=<span class=\"string\">\"header\"</span>&gt;這裡可能是一個頁面標題&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;p&gt;主要內容的一個段落。&lt;/</span>p&gt;</span><br><span class=\"line\">    &lt;p&gt;另一個主要段落。&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;p slot=\"footer\"&gt;這裡有一些聯繫信息&lt;/</span>p&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/layout&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.component(<span class=\"string\">'layout'</span>, &#123;</span><br><span class=\"line\">  template: <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div class=\"container\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;header&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;slot name=\"header\"&gt;&lt;/slot&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/header&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;main&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;slot&gt;&lt;/slot&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/main&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;footer&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;slot name=\"footer\"&gt;&lt;/slot&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/footer&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;`</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"動態切換component\"><a href=\"#動態切換component\" class=\"headerlink\" title=\"動態切換component\"></a>動態切換component</h3><p>有的時候，在不同元件之間進行動態切換是非常有用的，比如在一個多標籤的介面裡：</p>\n<p>上述內容可以透過 Vue 的 <code>&lt;component&gt;</code> 元素加一個特殊的 is attribute 來實現：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 元件會在 `currentTabComponent` 改變時改變 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">v-bind:is</span>=<span class=\"string\">\"currentTabComponent\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在上述示例中，currentTabComponent 可以包括已註冊元件的名字，或一個元件的選項物件</p>\n<h3 id=\"解析-DOM-模板時的注意事項\"><a href=\"#解析-DOM-模板時的注意事項\" class=\"headerlink\" title=\"解析 DOM 模板時的注意事項\"></a>解析 DOM 模板時的注意事項</h3><p>有些 HTML 元素，諸如 <code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;table&gt;</code> 和 <code>&lt;select&gt;</code>，對於哪些元素可以出現在其內部是有嚴格限制的。而有些元素，諸如 <code>&lt;li&gt;</code>、<code>&lt;tr&gt;</code> 和 <code>&lt;option&gt;</code>，只能出現在其它某些特定的元素內部。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- wrong --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">blog-post-row</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post-row</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- correct --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">is</span>=<span class=\"string\">\"blog-post-row\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>需要注意的是如果我們從以下來源使用模板的話，這條限制是不存在的：</p>\n<ul>\n<li>字串 (例如：template: ‘…’)</li>\n<li>單檔案元件 (.vue)</li>\n<li><code>&lt;script type=&quot;text/x-template&quot;&gt;</code></li>\n</ul>\n<h3 id=\"實作\"><a href=\"#實作\" class=\"headerlink\" title=\"實作\"></a>實作</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2d1aWRlL3Byb3RvdHlwaW5nLmh0bWw=\">使用vue cli<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>說回App.vue這個檔案，這是一個檢視（或者說元件和頁面），想像一下我們的index.html中什麼也沒有，只有一個檢視，這個檢視相當於一個容器，然後我們往這個容器中放各種各樣的積木（其他元件或者其他頁面）</p>\n<p>將<code>App.vue</code>放到<code>#app</code>中，然後以<code>&lt;App/&gt;</code>來指代我們的<code>#app</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span><span class=\"comment\">/*引入App這個元件*/</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span><span class=\"comment\">/*引入路由配置*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* eslint-disable no-new */</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,<span class=\"comment\">/*最後效果將會替換頁面中id為app的div元素*/</span></span><br><span class=\"line\">  router,<span class=\"comment\">/*使用路由*/</span></span><br><span class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span>,<span class=\"comment\">/*告知頁面這個元件用這樣的標籤來包裹著,並且使用它*/</span></span><br><span class=\"line\">  components: &#123; App &#125;<span class=\"comment\">/*告知當前頁面想使用App這個元件*/</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvZ3VpZGUv\">https://cn.vuejs.org/v2/guide/<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZXRlcmhwY2hlbi5naXRodWIuaW8v\">https://peterhpchen.github.io/<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeXRoaWx5YS5naXRodWIuaW8vMjAxNy8xMC8xMS92dWUtY29tcG9uZW50LXNsb3Qv\">https://cythilya.github.io/2017/10/11/vue-component-slot/<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "vuejs",
                "javascript"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/comment-meaning/",
            "url": "http://gitqwerty777.github.io/comment-meaning/",
            "title": "程式註解的常用標記",
            "date_published": "2020-08-06T12:08:03.000Z",
            "content_html": "<ul>\n<li><code>TODO</code></li>\n<li><code>FIXME</code></li>\n<li><code>XXX</code></li>\n<li><code>NOTE</code></li>\n<li><code>HACK</code></li>\n</ul>\n<h2 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h2><ul>\n<li>需要實作的部份<ul>\n<li>Bug, 錯誤, 改進等都不是<code>TODO</code>，見下述</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"FIXME\"><a href=\"#FIXME\" class=\"headerlink\" title=\"FIXME\"></a>FIXME</h2><ul>\n<li>錯誤的、需要修正的部份</li>\n<li>相似的標記:  <code>BUG</code><ul>\n<li><code>FIXME</code> 解釋如何修正</li>\n<li><code>BUG</code> 記錄錯誤如何發生</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"XXX\"><a href=\"#XXX\" class=\"headerlink\" title=\"XXX\"></a>XXX</h2><ul>\n<li>需要改進的實作方式</li>\n<li>相似的標記: <code>REFACT</code><ul>\n<li>想重構時可用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"NOTE\"><a href=\"#NOTE\" class=\"headerlink\" title=\"NOTE\"></a>NOTE</h2><ul>\n<li>說明程式碼的如何使用<ul>\n<li>就是註解原本的用途</li>\n<li>所以實際上不用加<code>NOTE</code>，直接寫也可以</li>\n</ul>\n</li>\n<li>相似的標記: <code>MARK</code></li>\n</ul>\n<h2 id=\"HACK\"><a href=\"#HACK\" class=\"headerlink\" title=\"HACK\"></a>HACK</h2><ul>\n<li>一個暫時、骯髒的解法</li>\n<li>不應該進commit</li>\n</ul>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><ul>\n<li>VSCode 中的套件<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPUdydW50ZnVnZ2x5LnRvZG8tdHJlZQ==\">TODO tree<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n<li>除了標記，還需要說明文字，多人協作時也可署名</li>\n<li>範例<ul>\n<li>❌<code>TODO:</code></li>\n<li>➖<code>TODO: lowercase</code></li>\n<li>⭕<code>TODO(qwerty): lowercase</code></li>\n</ul>\n</li>\n<li>有些標記不需要寫在程式碼中<ul>\n<li><code>BUG</code>：應該有專用的Bug tracker</li>\n<li><code>TODO</code>：應記錄在Todo tracker</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L3RoZS1hcnQtb2YvOTc4MTQ0OTMxODQ4Mi8=\">The art of readable code<i class=\"fa fa-external-link-alt\"></i></span></p>\n",
            "tags": [
                "CodingStyle",
                "程式",
                "Todo",
                "註解"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/seo/",
            "url": "http://gitqwerty777.github.io/seo/",
            "title": "SEO實作方法",
            "date_published": "2020-08-03T13:52:12.000Z",
            "content_html": "<blockquote>\n<p>hexo 都實作得差不多了，純整理</p>\n</blockquote>\n<h2 id=\"html-tag\"><a href=\"#html-tag\" class=\"headerlink\" title=\"html tag\"></a>html tag</h2><h3 id=\"lt-title-gt\"><a href=\"#lt-title-gt\" class=\"headerlink\" title=\"&lt;title&gt;\"></a>&lt;title&gt;</h3><ul>\n<li>網頁的主題</li>\n<li><code>&lt;title&gt;</code>標記應該放在HTML文件的<code>&lt;head&gt;</code>標記區段中<a id=\"more\"></a>\n\n</li>\n</ul>\n<h3 id=\"lt-meta-gt\"><a href=\"#lt-meta-gt\" class=\"headerlink\" title=\"&lt;meta&gt;\"></a>&lt;meta&gt;</h3><ul>\n<li>網頁的摘要</li>\n<li>描述中繼標記<code>&lt;meta&gt;</code>也位於HTML文件的<code>&lt;head&gt;</code>標記部分中</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">“description”</span> <span class=\"attr\">content</span>=<span class=\"string\">“Brandon’s</span> <span class=\"attr\">Baseball</span> <span class=\"attr\">Cards</span> </span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">provides</span> <span class=\"attr\">a</span> <span class=\"attr\">large</span> <span class=\"attr\">selection</span> <span class=\"attr\">of</span> <span class=\"attr\">vintage</span> <span class=\"attr\">and</span> <span class=\"attr\">modern</span> <span class=\"attr\">baseball</span> <span class=\"attr\">cards</span></span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">for</span> <span class=\"attr\">sale.</span> <span class=\"attr\">We</span> <span class=\"attr\">also</span> <span class=\"attr\">offer</span> <span class=\"attr\">daily</span> <span class=\"attr\">baseball</span> <span class=\"attr\">news</span> <span class=\"attr\">and</span> <span class=\"attr\">events</span> <span class=\"attr\">in</span>”&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"lt-a-gt\"><a href=\"#lt-a-gt\" class=\"headerlink\" title=\"&lt;a&gt;\"></a>&lt;a&gt;</h3><ul>\n<li>連結<ul>\n<li>用文字敘述來告知使用者和Google有關您所要連結網頁的部分內容</li>\n</ul>\n</li>\n<li>同時考慮內部連結的錨定文字<ul>\n<li>多加注意用於內部連結的錨定文字可以幫助使用者和Google更容易瀏覽您的網站</li>\n</ul>\n</li>\n<li>請避免<ul>\n<li>只是為了搜尋引擎而使用大量關鍵字或冗長的錨定文字</li>\n<li>建立不必要的連結，這對使用者瀏覽網站無益</li>\n</ul>\n</li>\n<li>將<code>rel</code>屬性值設定為<code>nofollow</code><ul>\n<li>告知搜尋引擎不應隨著您網站上的某些連結連至他處，也不應將您網頁的信譽情況傳給連上的網頁</li>\n<li>對評論欄和訊息板新增 <code>nofollow</code><ul>\n<li>評論中的連結可能將信譽傳給不願擔保的網頁</li>\n</ul>\n</li>\n<li>對個別內容、所有網頁等使用 <code>nofollow</code><ul>\n<li>想要參照某個網站，但是又不想把信譽傳給該網站<ul>\n<li>撰寫一篇以垃圾評論為主題的網誌文章</li>\n<li>並打算揭發一個最近經常在網誌上發表垃圾評論的網站</li>\n<li>希望提醒其他人對該網站提高警惕，因此將該網站的連結納入了內容中</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>在robots中繼標記中使用 <code>nofollow</code><ul>\n<li><code>&lt;meta name=&quot;robots&quot; content=&quot;nofollow&quot;&gt;</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"lt-img-gt\"><a href=\"#lt-img-gt\" class=\"headerlink\" title=\"&lt;img&gt;\"></a>&lt;img&gt;</h3><ul>\n<li><code>alt</code>屬性<ul>\n<li>如果因為某些原因而無法顯示圖片，<code>alt</code>屬性可允許您為圖片指定替代文字</li>\n</ul>\n</li>\n<li>將圖片檔案合併儲存於單一目錄中，而不要分散儲存在整個網域的許多目錄和子目錄下。這樣可以簡化圖片的連結路徑</li>\n<li>提供<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vd2VibWFzdGVycy9hbnN3ZXIvMTc4NjM2\">圖片Sitemap<i class=\"fa fa-external-link-alt\"></i></span>檔案</li>\n<li>簡單明瞭的檔案名稱</li>\n</ul>\n<h3 id=\"標題標記\"><a href=\"#標題標記\" class=\"headerlink\" title=\"標題標記\"></a>標題標記</h3><ul>\n<li>標題標記有六種不同大小，從<code>&lt;h1&gt;</code>到<code>&lt;h6&gt;</code>，其重要性依次降低<ul>\n<li>由於標題標記通常會使其中包含的文字比網頁上的普通文字大一些，因此使用者可以清楚意識到這部分文字比較重要</li>\n</ul>\n</li>\n<li>建立層次分明的結構</li>\n</ul>\n<h2 id=\"網站資訊\"><a href=\"#網站資訊\" class=\"headerlink\" title=\"網站資訊\"></a>網站資訊</h2><h3 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h3><ul>\n<li>簡單易懂的URL能夠更加容易的表達內容</li>\n<li>建立簡單的目錄架構</li>\n<li>在網址中使用文字而非數字<ul>\n<li><code>www.stasiasbakery.com/custom-cakes</code> (O)</li>\n<li><code>www.stasiasbakery.com/prodid?12345</code> (X)</li>\n</ul>\n</li>\n<li>為同一文件提供同一版本的網址<ul>\n<li>設定301重新導向，將不喜歡的網址重新導向到您所期望使用的網址，這是一個很好的解決方案</li>\n<li>無法重新導向時，也可以使用標準網頁或<code>rel=&quot;canonical&quot;</code>連結元素<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vd2VibWFzdGVycy9hbnN3ZXIvMTM5MDY2\">https://support.google.com/webmasters/answer/139066<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>請避免<ul>\n<li>無論從子域還是根目錄(例如<code>domain.com/page.htm</code>和<code>sub.domain.com/page.htm</code>)都可以瀏覽到相同的內容</li>\n<li>在網址中使用奇怪的大寫字母<ul>\n<li>大部分使用者喜歡小寫的網址， 並且小寫也便於使用者記憶</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"目錄\"><a href=\"#目錄\" class=\"headerlink\" title=\"目錄\"></a>目錄</h4><ul>\n<li>建立自然流暢的層級架構<ul>\n<li>將訪客從主網頁導向至包含特定內容的網頁</li>\n<li>導覽中儘量使用文字連結</li>\n</ul>\n</li>\n<li>移除部分網址<ul>\n<li>正在瀏覽：<code>http://www.brandonsbaseballcards.com/news/2010/upcoming-baseball-cardshows.htm</code></li>\n<li>輸入：<code>http://www.brandonsbaseballcards.com/news/2010/</code>，認為這樣就可以顯示2010年的所有新聞</li>\n<li>在這種情況下，您的網站是否已準備好顯示使用者想要的內容，還是只顯示一個404(「找不到網頁」錯誤)</li>\n</ul>\n</li>\n<li>建立實用的404網頁<ul>\n<li>使用自訂404網頁能夠確實幫助使用者返回您網站上的有效網頁，大幅改善使用者體驗</li>\n<li>最好能提供返回您網站根網頁的連結，以及前往網站中熱門或相關內容的連結</li>\n<li>Google提供了404小工具，可以將其嵌入您的404網頁，即可自動產生許多實用的功能</li>\n<li>可以使用Google網站管理員工具，找出導致「找不到網頁」錯誤的網址來源</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Sitemap\"><a href=\"#Sitemap\" class=\"headerlink\" title=\"Sitemap\"></a>Sitemap</h3><p>Sitemap(網站架構)用於顯示網站架構，通常由一份網站網頁的層級清單組成。當訪客在您的網站上找不到某些特定網頁時，即可瀏覽該網頁<br>雖然搜尋引擎也會瀏覽該網頁，以便對您網站上的網頁進行更全面的檢索，但其主要目的還是為了方便訪客</p>\n<ul>\n<li>準備兩種Sitemap：分別供使用者和搜尋引擎使用<ul>\n<li>在網站上放置HTML Sitemap</li>\n<li>建立XML Sitemap檔案並提交給搜尋引擎</li>\n</ul>\n</li>\n<li>請避免<ul>\n<li>HTML Sitemap中含有無效連結，無法到達相應的網頁</li>\n<li>建立的HTML Sitemap僅列出網頁，而沒有進行整理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"robots-txt\"><a href=\"#robots-txt\" class=\"headerlink\" title=\"robots.txt\"></a>robots.txt</h3><ul>\n<li>避免內容出現在搜尋結果中<ul>\n<li><code>robots.txt</code>檔案可告知搜尋引擎是否可以存取您網站的某些部分，進而對這些部分進行檢索</li>\n</ul>\n</li>\n<li>必須為該子網域建立一個單獨的<code>robots.txt</code>檔案</li>\n<li>其他方法<ul>\n<li>為robots中繼標記新增<code>NOINDEX</code><ul>\n<li><code>&lt;meta name=&quot;googlebot&quot; content=&quot;noindex&quot; /&gt;</code></li>\n</ul>\n</li>\n<li>使用<code>.htaccess</code>對目錄進行密碼保護</li>\n<li>使用Google網站管理員工具移除已檢索的內容</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"對敏感的內容使用更為安全的方法\"><a href=\"#對敏感的內容使用更為安全的方法\" class=\"headerlink\" title=\"對敏感的內容使用更為安全的方法\"></a>對敏感的內容使用更為安全的方法</h4><ul>\n<li><p>一些不符合條件的搜尋引擎或惡意搜尋引擎並不遵守「漫遊器排除標準」，可能會違背您的<code>robots.txt</code>指示</p>\n</li>\n<li><p>好奇的使用者可能會查看<code>robots.txt</code>檔案中的目錄或子目錄，並猜中不想曝光的內容網址</p>\n</li>\n<li><p>對內容加密或使用<code>.htaccess</code>對內容進行密碼保護是更安全的選擇</p>\n</li>\n<li><p>請避免</p>\n<ul>\n<li>允許檢索類似搜尋結果的網頁<ul>\n<li>使用者不喜歡從一個搜尋結果網頁進入另一個搜尋結果網頁，這對他們而言沒有多大價值</li>\n</ul>\n</li>\n<li>允許檢索大量自動產生的且內容相同或相似的網頁</li>\n<li>允許檢索因Proxy服務而建立的網址</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"https-和-SSL-憑證\"><a href=\"#https-和-SSL-憑證\" class=\"headerlink\" title=\"https 和 SSL 憑證\"></a>https 和 SSL 憑證</h3><p>安全性已經被視為 SEO 搜尋排名因素之一，而且當網站不安全時，人們也會感到擔心</p>\n<h3 id=\"行動網站\"><a href=\"#行動網站\" class=\"headerlink\" title=\"行動網站\"></a>行動網站</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWFyY2guZ29vZ2xlLmNvbS90ZXN0L21vYmlsZS1mcmllbmRseQ==\">Google提供的手機友善測試<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>驗證Google是否替行動網站製作索引<ul>\n<li>使用<code>site:</code> 運算子在Google行動搜尋</li>\n</ul>\n</li>\n<li>Googlebot可能無法存取您的網站<ul>\n<li>在網頁搜尋中使用<code>Googlebot</code></li>\n<li>在行動搜尋中使用<code>Googlebot-Mobile</code></li>\n<li>提供給<code>Googlebot</code>的內容應與電腦所見內容相同</li>\n<li>提供給<code>Googlebot-Mobile</code>的內容應與行動裝置所見的內容相同</li>\n</ul>\n</li>\n<li>請檢查易於行動裝置使用的網址，其DTD宣告是否為適當的行動格式，例如<code>XHTML</code>行動網頁或<code>Compact HTML</code></li>\n<li>正確指導行動裝置使用者<ul>\n<li>最常發生的問題就是在桌上型電腦中顯示行動版的網站，或是在行動裝置中顯示電腦版的網站</li>\n<li>重新導向至正確的版本<ul>\n<li>行動裝置使用者或行動檢索器(例如<code>Googlebot-Mobile</code>)存取電腦版的網址時，重新導向至對應的行動版網址</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"網頁速度\"><a href=\"#網頁速度\" class=\"headerlink\" title=\"網頁速度\"></a>網頁速度</h3><ul>\n<li>如果讀取時間超過7秒鐘，訪客從您的網站反彈離開的可能性就會增加 113%</li>\n<li>使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZXN0bXlzaXRlLnRoaW5rd2l0aGdvb2dsZS5jb20v\">Google 的測試工具<i class=\"fa fa-external-link-alt\"></i></span> 瞭解網頁的載入速度</li>\n</ul>\n<h2 id=\"內容\"><a href=\"#內容\" class=\"headerlink\" title=\"內容\"></a>內容</h2><h3 id=\"提供優質內容和服務\"><a href=\"#提供優質內容和服務\" class=\"headerlink\" title=\"提供優質內容和服務\"></a>提供優質內容和服務</h3><ul>\n<li>內容引人注目的網站自然會受到肯定</li>\n<li>提供獨一無二的內容</li>\n<li>為使用者創作內容，而不是為搜尋引擎創作內容</li>\n<li>持續更新內容</li>\n</ul>\n<h3 id=\"宣傳\"><a href=\"#宣傳\" class=\"headerlink\" title=\"宣傳\"></a>宣傳</h3><ul>\n<li>離線宣傳<ul>\n<li>名片、信頭、海報</li>\n</ul>\n</li>\n<li>增加反向連結以提升網站的價值<ul>\n<li>撰寫網誌文章，讓訪客知道有新增內容，這是宣傳新內容或服務的絕佳方法</li>\n</ul>\n</li>\n<li>社群媒體</li>\n</ul>\n<h3 id=\"關鍵字\"><a href=\"#關鍵字\" class=\"headerlink\" title=\"關鍵字\"></a>關鍵字</h3><ul>\n<li>考量使用者為找到部分內容而可能搜尋的字詞。相較於對主題不瞭解的使用者，很瞭解該主題的使用者可能會在他們的搜尋查詢中使用不同的關鍵字<ul>\n<li>一個資深棒球愛好者可能會搜尋國家聯盟冠軍系列賽(National League Championship Series)的縮寫<code>nlcs</code></li>\n<li>一個剛剛接觸棒球的愛好者可能會使用<code>棒球季後賽</code>這樣較為普通的查詢</li>\n</ul>\n</li>\n<li>Google AdWords的關鍵字工具，可找出新的關鍵字變化，並查看每一個關鍵字的約略搜尋量</li>\n<li>Google網站管理員工具會提供網站上出現的熱門搜尋查詢</li>\n<li>請避免<ul>\n<li>針對搜尋引擎插入大量不必要的關鍵字，這些關鍵字對使用者毫無意義且令人感到厭煩</li>\n<li>欺騙性地對使用者隱藏一些文字，卻對搜尋引擎顯示這些文字</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><h3 id=\"網站管理員工具\"><a href=\"#網站管理員工具\" class=\"headerlink\" title=\"網站管理員工具\"></a>網站管理員工具</h3><ul>\n<li>Google 網站管理員工具</li>\n<li>Yahoo! (Yahoo! Site Explorer)</li>\n<li>Microsoft (Live Search Webmaster Tools)</li>\n<li>Google Analytics(分析)</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"不符規定的方法\"><a href=\"#不符規定的方法\" class=\"headerlink\" title=\"不符規定的方法\"></a>不符規定的方法</h3><ul>\n<li>斗蓬法（cloaking）<ul>\n<li>用兩版不同的網頁來達到最佳化的效果。一個版本只給搜索引擎看，一個版本給人看</li>\n</ul>\n</li>\n<li>關鍵字隱密字 （hidden text with keyword stuffing）<ul>\n<li>設定關鍵字的顏色和網頁背景顏色一樣，或透過 css hidden attribute （隱密特性） 來達到優化效果</li>\n</ul>\n</li>\n<li>橋頁（doorway pages）<ul>\n<li>自動生成大量包含關鍵詞的網頁，然後從這些網頁做自動轉向到主頁。目的是希望這些以不同關鍵詞為目標的橋頁在搜索引擎中得到好的排名。</li>\n</ul>\n</li>\n<li>付費連結（paid link）<ul>\n<li>是利用支付費用方式要求其他網站提供連結至自身網站，藉此偽裝高信任網站來欺騙搜尋引擎，付費連結類型多為錨點文字（Anchor Text）類型</li>\n</ul>\n</li>\n<li>連結農場（link farm）<ul>\n<li>是故意在一些低質素，內容跟自己內容無關的網站上取得大量連結，藉以提高排名</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGF0aWMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL21lZGlhL3d3dy5nb29nbGUuY24vemgtVFcvY24vaW50bC96aC1UVy93ZWJtYXN0ZXJzL2RvY3Mvc2VhcmNoLWVuZ2luZS1vcHRpbWl6YXRpb24tc3RhcnRlci1ndWlkZS16aC10dy5wZGY=\">Google 搜尋引擎最佳化 (SEO) 速記指南<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGF0aWMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL21lZGlhL3d3dy5nb29nbGUuY24vemgtVFcvY24vaW50bC96aC1UVy93ZWJtYXN0ZXJzL2RvY3Mvc2VhcmNoLWVuZ2luZS1vcHRpbWl6YXRpb24tc3RhcnRlci1ndWlkZS16aC10dy5wZGY=\">搜尋引擎最佳化初學者指南<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2lraXdhbmQuY29tL3poLyVFNiU5MCU5QyVFNSVCMCU4QiVFNSVCQyU5NSVFNiU5MyU4RSVFNiU5QyU4MCVFNCVCRCVCMyVFNSU4QyU5Ng==\">搜尋引擎最佳化<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "SEO",
                "google",
                "html"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/reactjs/",
            "url": "http://gitqwerty777.github.io/reactjs/",
            "title": "reactjs 語法",
            "date_published": "2020-07-29T06:50:12.000Z",
            "content_html": "<h2 id=\"JSX\"><a href=\"#JSX\" class=\"headerlink\" title=\"JSX\"></a>JSX</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> element = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>這個語法叫做 JSX，是一個 JavaScript 的語法擴充，會產生 <strong>React element</strong></p>\n<a id=\"more\"></a>\n<p>Babel 將 JSX 編譯為呼叫 React.createElement() 的程式。</p>\n<p>React DOM 預設會在 render 之前 escape 所有嵌入在 JSX 中的變數。這保證你永遠不會不小心注入任何不是直接寫在你的應用程式中的東西。所有變數都會在 render 之前轉為字串，這可以避免 XSS（跨網站指令碼）攻擊。</p>\n<p>大括號內代表變數，可以放入任何javascript expression</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">'Josh Perez'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> element = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//多行：包在小括號中</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> element = (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;h1&gt;Hello!&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;h2&gt;Good to see you here.&lt;/</span>h2&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">);</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Render\"><a href=\"#Render\" class=\"headerlink\" title=\"Render\"></a>Render</h2><p>使用 React 建立應用程式時，通常會有一個單一的 root DOM node。</p>\n<p>Render 一個 React element 到 root DOM node</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> element = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">ReactDOM.render(element, <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'root'</span>));</span><br></pre></td></tr></table></figure>\n\n<p>React element 是 immutable 的，即不能更改</p>\n<p>Element 就像是電影中的一個幀：它代表特定時間點的 UI。</p>\n<h2 id=\"Component\"><a href=\"#Component\" class=\"headerlink\" title=\"Component\"></a>Component</h2><p>Component 就像是 JavaScript 的 function，它接收參數（稱之為「props」，屬性）並且回傳描述畫面的 React element。</p>\n<p>Component 的字首須為大寫字母。React 會將小寫字母開頭的組件視為原始 DOM 標籤，舉例來說，<code>&lt;div /&gt;</code> 就會被視為是 HTML 的 div 標籤，但是 <code>&lt;Welcome /&gt;</code> 則是一個 component</p>\n<p>props 是唯讀的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Welcome</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此 function 是一個符合規範的 React component，因為它接受一個 props 物件並回傳一個 React element。</p>\n<p>我們稱之為 function component</p>\n<p>也可以使用 ES6 Class 來定義 component：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Welcome</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以在JSX中使用component</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> element = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Welcome</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Sara\"</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>通常來說，每個 React 應用程式都有一個最高層級的 App component。然而，如果你將 React 結合至現存的應用程式中，你可能需要使用像 Button 這樣的小型 component，並由下往上，逐步應用到畫面的最高層級。</p>\n<p>在較大的應用程式中，建構可複用的 component 是非常值得的</p>\n<h2 id=\"State\"><a href=\"#State\" class=\"headerlink\" title=\"State\"></a>State</h2><p>state 類似於 prop，但它是私有且由 component 完全控制的。</p>\n<p>需使用 class component，不能在 function component 使用</p>\n<p>在每次發生更新時，render 方法都會被呼叫</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Clock</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;h1&gt;Hello, world!&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;h2&gt;It is &#123;this.props.date.toLocaleTimeString()&#125;.&lt;/</span>h2&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>加入state</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Clock</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;<span class=\"attr\">date</span>: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()&#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;h1&gt;Hello, world!&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;h2&gt;It is &#123;this.state.date.toLocaleTimeString()&#125;.&lt;/</span>h2&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>每當 Clock render 到 DOM 的時候，在 React 中稱為「mount」。</p>\n<p>每當產生的 Clock DOM 被移除時，在 React 中稱為「unmount」。</p>\n<p>在class內加入 <code>componentDidMount()</code>, <code>componentWillUnmount()</code>, 和 <code>setState()</code>，用 state 實作每秒更新的部分</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">componentDidMount() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.timerID = setInterval(</span><br><span class=\"line\">      () =&gt; <span class=\"keyword\">this</span>.tick(),</span><br><span class=\"line\">      <span class=\"number\">1000</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  componentWillUnmount() &#123;</span><br><span class=\"line\">    clearInterval(<span class=\"keyword\">this</span>.timerID);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  tick() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      date: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>  因為 props 和 state 可能是非同步的被更新，你不應該依賴它們的值來計算新的 state。</p>\n<p>  要修正這個問題，使用第二種形式的 setState()，它接受一個 function 而不是一個 object。Function 將接收先前的 state 作為第一個參數，並且將更新的 props 作為第二個參數：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.setState(<span class=\"function\">(<span class=\"params\">state, props</span>) =&gt;</span> (&#123;</span><br><span class=\"line\">  counter: state.counter + props.increment</span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n\n<p>React是「上至下」或「單向」的資料流：任何 state 總是由某個特地的 component 所擁有，任何從 state 得到的資料或 UI，state 只能影響自身和 child component。</p>\n<h2 id=\"事件處理\"><a href=\"#事件處理\" class=\"headerlink\" title=\"事件處理\"></a>事件處理</h2><p>事件的名稱在 React 中都是 camelCase，而在 HTML DOM 中則是小寫。</p>\n<ul>\n<li>HTML DOM 對照 React<ul>\n<li><code>onclick</code> → <code>onClick</code></li>\n<li><code>onclick=&quot;click()&quot;</code> → <code>onClick={click}</code></li>\n</ul>\n</li>\n</ul>\n<p>在 React 中，你不能夠在像在 HTML DOM 中使用 <code>return false</code> 來避免瀏覽器預設行為。你必須明確地呼叫 <code>preventDefault</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a href=<span class=\"string\">\"#\"</span> onclick=<span class=\"string\">\"console.log('The link was clicked.'); return false\"</span>&gt;</span><br><span class=\"line\">  Click me</span><br><span class=\"line\">&lt;<span class=\"regexp\">/a&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在 React 中，你則可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ActionLink</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleClick</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'The link was clicked.'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;a href=<span class=\"string\">\"#\"</span> onClick=&#123;handleClick&#125;&gt;</span><br><span class=\"line\">      Click me</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>在 JavaScript 中，class 的方法在預設上是沒有被綁定（bound）的。如果你忘了綁定 this.handleClick 並把它傳遞給 onClick 的話，this 的值將會在該 function 被呼叫時變成 undefined。</p>\n<p>總之，當你使用一個方法，卻沒有在後面加上 () 之時（例如當你使用 onClick={this.handleClick} 時），你應該要綁定這個方法。</p>\n<p>The bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Toggle</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;<span class=\"attr\">isToggleOn</span>: <span class=\"literal\">true</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 為了讓 `this` 能在 callback 中被使用，這裡的綁定是必要的：</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.handleClick = <span class=\"keyword\">this</span>.handleClick.bind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleClick() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(<span class=\"function\"><span class=\"params\">state</span> =&gt;</span> (&#123;</span><br><span class=\"line\">      isToggleOn: !state.isToggleOn</span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;button onClick=&#123;<span class=\"keyword\">this</span>.handleClick&#125;&gt;</span><br><span class=\"line\">        &#123;<span class=\"keyword\">this</span>.state.isToggleOn ? <span class=\"string\">'ON'</span> : <span class=\"string\">'OFF'</span>&#125;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">ReactDOM.render(</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;Toggle /</span>&gt;,</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'root'</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>如果呼叫 bind 對你來說很麻煩的話，你可以用別的方式。如果你使用了還在測試中的 class fields 語法的話，你可以用 class field 正確的綁定 callback：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoggingButton</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 這個語法確保 `this` 是在 handleClick 中被綁定：</span></span><br><span class=\"line\">  <span class=\"comment\">// 警告：這是一個還在*測試中*的語法：</span></span><br><span class=\"line\">  handleClick = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'this is:'</span>, <span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;button onClick=&#123;<span class=\"keyword\">this</span>.handleClick&#125;&gt;</span><br><span class=\"line\">        Click me</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>傳遞一個額外的參數給 event handler。例如，如果 id 是每一行的 ID 的話，下面兩種語法都可行：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;button onClick=&#123;(e) =&gt; <span class=\"keyword\">this</span>.deleteRow(id, e)&#125;&gt;Delete Row&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;button onClick=&#123;this.deleteRow.bind(this, id)&#125;&gt;Delete Row&lt;/</span>button&gt;</span><br></pre></td></tr></table></figure>\n\n<p>以上這兩行程式是相同的。一個使用 arrow functions，另一個則使用了 Function.prototype.bind。</p>\n<p>以這兩個例子來說，e 這個參數所代表的 React 事件將會被當作 ID 之後的第二個參數被傳遞下去。在使用 arrow function 時，我們必須明確地將它傳遞下去，但若使用 bind 語法，未來任何的參數都將會自動被傳遞下去。</p>\n<h2 id=\"條件render\"><a href=\"#條件render\" class=\"headerlink\" title=\"條件render\"></a>條件render</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">render() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> isLoggedIn = <span class=\"keyword\">this</span>.state.isLoggedIn;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> button;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (isLoggedIn) &#123;</span><br><span class=\"line\">     button = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">LogoutButton</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleLogoutClick&#125;</span> /&gt;</span></span>;</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     button = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">LoginButton</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleLoginClick&#125;</span> /&gt;</span></span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> (</span><br><span class=\"line\">     &lt;div&gt;</span><br><span class=\"line\">       &lt;Greeting isLoggedIn=&#123;isLoggedIn&#125; /&gt;</span><br><span class=\"line\">       &#123;button&#125;</span><br><span class=\"line\">     &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   );</span></span><br><span class=\"line\"><span class=\"regexp\"> &#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>用 <code>&amp;&amp;</code> 來條件顯示<br>因為在 JavaScript 中，<code>true &amp;&amp; expression</code> 總是回傳 <code>expression</code> ，而 <code>false &amp;&amp; expression</code> 總是回傳 <code>false</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Mailbox</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> unreadMessages = props.unreadMessages;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &lt;h1&gt;Hello!&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123;unreadMessages.length &gt; 0 &amp;&amp;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;h2&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          You have &#123;unreadMessages.length&#125; unread messages.</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>h2&gt;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>React 在遇到 <code>null</code> 或 <code>false</code> 時都會忽略(不顯示)</p>\n<p>或用條件運算式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;isLoggedIn</span><br><span class=\"line\">    ? <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">LogoutButton</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleLogoutClick&#125;</span> /&gt;</span></span></span><br><span class=\"line\">    : <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">LoginButton</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleLoginClick&#125;</span> /&gt;</span></span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"列表與key\"><a href=\"#列表與key\" class=\"headerlink\" title=\"列表與key\"></a>列表與key</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> listItems = numbers.map(<span class=\"function\">(<span class=\"params\">number</span>) =&gt;</span></span><br><span class=\"line\">  &lt;li&gt;&#123;number&#125;&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">);</span></span><br></pre></td></tr></table></figure>\n\n<p>你會收到一個關於你應該提供 key 給每一個列表項目的警告。key 是當你在建立一個 element 列表時必須使用的特殊的 string attribute。</p>\n<p>key 幫助 React 分辨哪些項目被改變、增加或刪除。在 array 裡面的每個 element 都應該要有一個 key，如此才能給予每個 element 一個固定的身份：</p>\n<p>通常，你會使用資料的 ID 作為 key：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> listItems = numbers.map(<span class=\"function\">(<span class=\"params\">number</span>) =&gt;</span></span><br><span class=\"line\">  &lt;li key=&#123;number.toString()&#125;&gt;</span><br><span class=\"line\">    &#123;number&#125;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">);</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">const todoItems = todos.map((todo) =&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;li key=&#123;todo.id&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#123;todo.text&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>li&gt;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>當你 render 的項目沒有固定的 ID 且你也沒有更好的辦法時，你可以使用項目的索引做為 key：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> todoItems = todos.map(<span class=\"function\">(<span class=\"params\">todo, index</span>) =&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">// 請在項目沒有固定的 ID 時才這樣做</span></span><br><span class=\"line\">  &lt;li key=&#123;index&#125;&gt;</span><br><span class=\"line\">    &#123;todo.text&#125;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">);</span></span><br></pre></td></tr></table></figure>\n\n<p>React 預設將會使用索引作為 key。但並不建議你使用索引作為 key，尤其如果項目的順序會改變的話。這會對效能產生不好的影響，也可能會讓 component state 產生問題</p>\n<ul>\n<li>key 必須在 Sibling 中是唯一的</li>\n<li>key 的功能是提示 React，但它們不會被傳遞到 component 的 prop。</li>\n</ul>\n<p>應該把 key 放在 array 產生 item 的 render，而不是把它放在 item 的 render。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ListItem</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> value = props.value;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"comment\">// 錯！你不需要在這裡指出 key：</span></span><br><span class=\"line\">    &lt;li key=&#123;value.toString()&#125;&gt;</span><br><span class=\"line\">      &#123;value&#125;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">function NumberList(props) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  const numbers = props.numbers;</span></span><br><span class=\"line\"><span class=\"regexp\">  const listItems = numbers.map((number) =&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    /</span><span class=\"regexp\">/ 錯！你應該要在這裡指出 key：</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;ListItem value=&#123;number&#125; /</span>&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">      &#123;listItems&#125;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>一個好的經驗法則是，在 map() 呼叫中的每個 element 都會需要 key。</p>\n<h2 id=\"Form\"><a href=\"#Form\" class=\"headerlink\" title=\"Form\"></a>Form</h2><p>把這個表單寫成一個 controlled component： 用 state 來 顯示 value，onChange 時更新</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NameForm</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;<span class=\"attr\">value</span>: <span class=\"string\">''</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.handleChange = <span class=\"keyword\">this</span>.handleChange.bind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.handleSubmit = <span class=\"keyword\">this</span>.handleSubmit.bind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleChange(event) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;<span class=\"attr\">value</span>: event.target.value&#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleSubmit(event) &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'A name was submitted: '</span> + <span class=\"keyword\">this</span>.state.value);</span><br><span class=\"line\">    event.preventDefault();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;form onSubmit=&#123;<span class=\"keyword\">this</span>.handleSubmit&#125;&gt;</span><br><span class=\"line\">        &lt;label&gt;</span><br><span class=\"line\">          Name:</span><br><span class=\"line\">          &lt;input type=<span class=\"string\">\"text\"</span> value=&#123;<span class=\"keyword\">this</span>.state.value&#125; onChange=&#123;<span class=\"keyword\">this</span>.handleChange&#125; /&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/label&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;input type=\"submit\" value=\"Submit\" /</span>&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/form&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>這意味著你必須寫更多的 code，但現在你同時可以將 value 傳遞給其他的 UI element，或是從其他 event handler 重置。</p>\n<h3 id=\"Select\"><a href=\"#Select\" class=\"headerlink\" title=\"Select\"></a>Select</h3><p>在 React 中並不是用 selected attribute，而是在 select 的標籤上用一個 value attribute</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FlavorForm</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;<span class=\"attr\">value</span>: <span class=\"string\">'coconut'</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.handleChange = <span class=\"keyword\">this</span>.handleChange.bind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.handleSubmit = <span class=\"keyword\">this</span>.handleSubmit.bind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleChange(event) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;<span class=\"attr\">value</span>: event.target.value&#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleSubmit(event) &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'Your favorite flavor is: '</span> + <span class=\"keyword\">this</span>.state.value);</span><br><span class=\"line\">    event.preventDefault();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;form onSubmit=&#123;<span class=\"keyword\">this</span>.handleSubmit&#125;&gt;</span><br><span class=\"line\">        &lt;label&gt;</span><br><span class=\"line\">          Pick your favorite flavor:</span><br><span class=\"line\">          &lt;select value=&#123;<span class=\"keyword\">this</span>.state.value&#125; onChange=&#123;<span class=\"keyword\">this</span>.handleChange&#125;&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">\"grapefruit\"</span>&gt;Grapefruit&lt;<span class=\"regexp\">/option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"lime\"&gt;Lime&lt;/</span>option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">\"coconut\"</span>&gt;Coconut&lt;<span class=\"regexp\">/option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"mango\"&gt;Mango&lt;/</span>option&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/select&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>label&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">\"submit\"</span> value=<span class=\"string\">\"Submit\"</span> /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/form&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>你可以將一個 array 傳給 value 這個 attribute，這使得你可以在一個 select 中選取多個選項：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;select multiple=&#123;<span class=\"literal\">true</span>&#125; value=&#123;[<span class=\"string\">'B'</span>, <span class=\"string\">'C'</span>]&#125;&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"input-file\"><a href=\"#input-file\" class=\"headerlink\" title=\"input file\"></a>input file</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">\"file\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n\n<p>由於它的值是唯讀，它在 React 中是一個 uncontrolled component。在稍後的文件中有其他關於它和其他 uncontrolled component 的討論。</p>\n<h3 id=\"多個input\"><a href=\"#多個input\" class=\"headerlink\" title=\"多個input\"></a>多個input</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Reservation</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">      isGoing: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      numberOfGuests: <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.handleInputChange = <span class=\"keyword\">this</span>.handleInputChange.bind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleInputChange(event) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> target = event.target;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> value = target.name === <span class=\"string\">'isGoing'</span> ? target.checked : target.value;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> name = target.name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      [name]: value</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;form&gt;</span><br><span class=\"line\">        &lt;label&gt;</span><br><span class=\"line\">          Is going:</span><br><span class=\"line\">          &lt;input</span><br><span class=\"line\">            name=<span class=\"string\">\"isGoing\"</span></span><br><span class=\"line\">            type=<span class=\"string\">\"checkbox\"</span></span><br><span class=\"line\">            checked=&#123;<span class=\"keyword\">this</span>.state.isGoing&#125;</span><br><span class=\"line\">            onChange=&#123;<span class=\"keyword\">this</span>.handleInputChange&#125; /&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/label&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;br /</span>&gt;</span><br><span class=\"line\">        &lt;label&gt;</span><br><span class=\"line\">          <span class=\"built_in\">Number</span> <span class=\"keyword\">of</span> guests:</span><br><span class=\"line\">          &lt;input</span><br><span class=\"line\">            name=<span class=\"string\">\"numberOfGuests\"</span></span><br><span class=\"line\">            type=<span class=\"string\">\"number\"</span></span><br><span class=\"line\">            value=&#123;<span class=\"keyword\">this</span>.state.numberOfGuests&#125;</span><br><span class=\"line\">            onChange=&#123;<span class=\"keyword\">this</span>.handleInputChange&#125; /&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/label&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>form&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在一個 controlled component 上指明 value prop 可避免使用者改變輸入，除非你希望使用者這樣做。如果你已經指明了 value 但輸入仍然是可以被修改的，你很可能是不小心將 value 的值設定為 undefined 或 null。</p>\n<p>下面的程式碼就是一個範例。（輸入原先是被鎖住的，但在短暫的延遲後，變得可以被修改了。）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">ReactDOM.render(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">value</span>=<span class=\"string\">\"hi\"</span> /&gt;</span></span>, mountNode);</span><br><span class=\"line\"></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  ReactDOM.render(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;null&#125;</span> /&gt;</span></span>, mountNode);</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"uncontrolled-component\"><a href=\"#uncontrolled-component\" class=\"headerlink\" title=\"uncontrolled component\"></a>uncontrolled component</h3><p>在大多數的情況下，我們推薦使用 controlled component 來實作表單。在控制元件裡，表單的資料是被 React component 所處理。另一個選擇是 uncontrolled component，表單的資料是由 DOM 本身所處理的。</p>\n<p>使用 ref 來從 DOM 取得表單的資料，而不是為了每個 state 的更新寫 event handler。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NameForm</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.handleSubmit = <span class=\"keyword\">this</span>.handleSubmit.bind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.input = React.createRef();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleSubmit(event) &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'A name was submitted: '</span> + <span class=\"keyword\">this</span>.input.current.value);</span><br><span class=\"line\">    event.preventDefault();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;form onSubmit=&#123;<span class=\"keyword\">this</span>.handleSubmit&#125;&gt;</span><br><span class=\"line\">        &lt;label&gt;</span><br><span class=\"line\">          Name:</span><br><span class=\"line\">          &lt;input type=<span class=\"string\">\"text\"</span> ref=&#123;<span class=\"keyword\">this</span>.input&#125; /&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/label&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;input type=\"submit\" value=\"Submit\" /</span>&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/form&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你想找出一個完整的、包含驗證、可追蹤拜訪欄位並能處理提交表單等功能的解決方案，Formik 是一個很熱門的選擇。然而，它是在與 controlled component 和維持 state 相同的原則上所建立的，所以別忘了學習它。</p>\n<h2 id=\"提升-State\"><a href=\"#提升-State\" class=\"headerlink\" title=\"提升 State\"></a>提升 State</h2><p>在 React 中，將 state 搬移到需要它的 component 的共同最近的祖先來共享 state。這被稱為「提升 state」。</p>\n<p>我們將從 TemperatureInput 移除 local state 並且搬移它到 Calculator。</p>\n<p>我們移除了它的 local state，並且不讀取 this.state.temperature，我們現在讀取 this.props.temperature。當我們想要改變時不呼叫 this.setState()，我們現在呼叫 this.props.onTemperatureChange()，它是由 Calculator 提供的</p>\n<p>calculator 傳入 prop.onChange 方法，供child的值改變時呼叫onChange()，以改變calculator(parent)的值</p>\n<p>通常來說，state 會優先被加入到需要 render 的 component。接著，如果其他的 component 也需要的話，你可以提升 state 到共同最靠近的 ancestor。</p>\n<p><strong>你應該依賴上至下的資料流，而不是嘗試在不同 component 之間同步 state。</strong></p>\n<p>當你在 UI 上看到一些錯誤時，你可以使用 React Developer Tools 來檢查 prop 並往 tree 的上方尋找，直到找到負責更新 state 的 component。這讓你可以追蹤到錯誤的來源</p>\n<h2 id=\"合成-vs-繼承\"><a href=\"#合成-vs-繼承\" class=\"headerlink\" title=\"合成 vs 繼承\"></a>合成 vs 繼承</h2><p>有些 component 不會提早知道它們的 children 有些什麼。對於像是 Sidebar 或 Dialog</p>\n<p>我們建議這些 component 使用特殊的 <code>children</code> prop 將 children element 直接傳入到它們的輸出：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FancyBorder</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;div className=&#123;<span class=\"string\">'FancyBorder FancyBorder-'</span> + props.color&#125;&gt;</span><br><span class=\"line\">      &#123;props.children&#125;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/任何在 &lt;FancyBorder&gt; JSX tag 內的內容都被作為 children prop 被傳遞給 FancyBorder component。</span></span><br><span class=\"line\"><span class=\"regexp\">function WelcomeDialog() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  return (</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;FancyBorder color=\"blue\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;h1 className=\"Dialog-title\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        Welcome</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>h1&gt;</span><br><span class=\"line\">      &lt;p className=<span class=\"string\">\"Dialog-message\"</span>&gt;</span><br><span class=\"line\">        Thank you <span class=\"keyword\">for</span> visiting our spacecraft!</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>FancyBorder&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可用來排版</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SplitPane</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;div className=<span class=\"string\">\"SplitPane\"</span>&gt;</span><br><span class=\"line\">      &lt;div className=<span class=\"string\">\"SplitPane-left\"</span>&gt;</span><br><span class=\"line\">        &#123;props.left&#125;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;div className=\"SplitPane-right\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#123;props.right&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">function App() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  return (</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;SplitPane</span></span><br><span class=\"line\"><span class=\"regexp\">      left=&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Contacts /</span>&gt;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      right=&#123;</span><br><span class=\"line\">        &lt;Chat /&gt;</span><br><span class=\"line\">      &#125; /&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 Facebook 中，我們使用 React 在成千上萬個 component，我們找不到任何使用案例來推薦你建立繼承結構的 component。</p>\n<h2 id=\"用-React-思考\"><a href=\"#用-React-思考\" class=\"headerlink\" title=\"用 React 思考\"></a>用 React 思考</h2><h3 id=\"第一步：將-UI-拆解成-component-層級\"><a href=\"#第一步：將-UI-拆解成-component-層級\" class=\"headerlink\" title=\"第一步：將 UI 拆解成 component 層級\"></a>第一步：將 UI 拆解成 component 層級</h3><p>首先，你要做的是將視覺稿中每一個 component （及 subcomponent）都圈起來，並幫它們命名。</p>\n<p>其中一個技巧是單一職責原則，它的意思是：在我們的理想中，一個 component應該只負責做一件事情。如果這個 component 最後變大了，你就需要再將它分成數個更小的 subcomponent 。</p>\n<p>由於你常常會展示 JSON 的資料模型給使用者，你會發現，如果你的模式是正確地被建立的話，你的 UI（以及你的 component 結構）會很好的相互對應。這是因為 UI 和資料模型通常是遵守同樣的資訊架構，這意味著將你的 UI 拆成 component 通常是相當容易的。</p>\n<h3 id=\"第二步：在-React-中建立一個靜態版本\"><a href=\"#第二步：在-React-中建立一個靜態版本\" class=\"headerlink\" title=\"第二步：在 React 中建立一個靜態版本\"></a>第二步：在 React 中建立一個靜態版本</h3><p>在你有了 component 層級後，就可以開始實作你的應用程式了。最簡單的方式是為你的應用程式建立一個接收資料模型、render UI 且沒有互動性的版本。建立一個靜態版本需要打很多字，但不需要想很多，而加上互動性則相反，需要做很多的思考，很少的打字，所以最好的方式是把這幾個過程都分開來。接下來，我們會知道為什麼是如此。</p>\n<p>請完全不要使用 state 來建立這個靜態版本。State 是保留給互動性的，也就是會隨時間改變的資料。既然我們目前要做的是這應用程式的靜態版本，你就不需要 state。</p>\n<p>你可以從最上層開始，或從最下層開始。也就是說，你可以先從層級較高的 component 開始做起，或者你也可以從比它低層級的開始。在比較簡單的例子中，通常從上往下是比較簡單的。但在較為大型的專案中，從下往上、邊寫邊測試則比較容易。</p>\n<p>React 的 單向資料流（也可稱為單向綁定）確保所有 component 都是模塊化且快速的。</p>\n<h3 id=\"第三步：找出最少（但完整）的-UI-State-的代表\"><a href=\"#第三步：找出最少（但完整）的-UI-State-的代表\" class=\"headerlink\" title=\"第三步：找出最少（但完整）的 UI State 的代表\"></a>第三步：找出最少（但完整）的 UI State 的代表</h3><p>請找出你的應用程式所需的最少的呈現方式，並在你遇到其他東西時再計算它們。例如，如果你在建立一個待辦清單，使用一個可以用來代表待辦事項的 array。不要另外用一個獨立的 state 變數來追蹤數量。當你要 render 代辦事項的數量時，讀取待辦事項 array 的長度即可。</p>\n<p>對於每一個資料，問你自己這三個問題：</p>\n<ol>\n<li>這個資料是從 parent 透過 props 傳下來的嗎？如果是的話，那它很可能不是 state。</li>\n<li>這個資料是否一直保持不變呢？如果是的話，那它很可能不是 state。</li>\n<li>你是否可以根據你的 component 中其他的 state 或 prop 來計算這個資料呢？如果是的話，那它一定不是 state。</li>\n</ol>\n<h3 id=\"第四步：找出你的-State-應該在哪裡\"><a href=\"#第四步：找出你的-State-應該在哪裡\" class=\"headerlink\" title=\"第四步：找出你的 State 應該在哪裡\"></a>第四步：找出你的 State 應該在哪裡</h3><p>我們需要找出哪幾個 component 會 mutate，或者擁有，這個 state。</p>\n<p>請記得，React 的核心精神是單向資料流，從 component 的層級從高往下流。<strong>也許哪個 component 該擁有 state 在一開始並不是很明顯</strong>。對新手來說，這往往是最難理解的概念，所以請跟著以下的步驟來思考：</p>\n<p>在你的應用程式中的每個 state：</p>\n<ul>\n<li>指出每個根據 state 來 render 某些東西的 component。</li>\n<li>找出一個共同擁有者 component（在層級中單一一個需要 state 的、在所有的 component 之上的 component）。</li>\n<li>應該擁有 state 的會是共同擁有者 component 或另一個更高層級的 component。(找最高級的component來持有state)</li>\n<li>如果你找不出一個應該擁有 state 的 component 的話，那就建立一個新的 component 來保持 state，並把它加到層級中共同擁有者 component 之上的某處。</li>\n</ul>\n<h3 id=\"第五步：加入相反的資料流\"><a href=\"#第五步：加入相反的資料流\" class=\"headerlink\" title=\"第五步：加入相反的資料流\"></a>第五步：加入相反的資料流</h3><p>現在是時候支援另一種資料流的方向了：在層級深處的表格 component 需要更新 FilterableProductTable 的 state。</p>\n<p>讓我們思考一下我們想要做些什麼。我們想確保當使用者改變這個表格時，我們會更新 state 以反映使用者的輸入。既然 component 只應該更新它自己本身的 state， FilterableProductTable 將會把 callback 傳給 SearchBar，而它們則會在 state 該被更新的時候被觸發。我們可以在輸入上使用 onChange 這個 event 來 接收通知。被 FilterableProductTable 傳下來的 callback 則會呼叫 setState()，之後應用程式就會被更新。</p>\n<h2 id=\"推薦的-Toolchain\"><a href=\"#推薦的-Toolchain\" class=\"headerlink\" title=\"推薦的 Toolchain\"></a>推薦的 Toolchain</h2><p>React 團隊主要推薦以下的方案：</p>\n<ul>\n<li>如果你正在學習 React 或建立全新的 single-page 應用程式，請使用 Create React App。</li>\n<li>如果你正在建立一個使用 Node.js 的 server-rendered 網頁，請使用 Next.js。</li>\n<li>如果你正在建立一個靜態內容的網頁，請使用 Gatsby。</li>\n<li>如果你正在建立一個 component 函式庫或與現存程式碼倉庫進行接軌，請使用更靈活的 Toolchain。</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC1oYW50LnJlYWN0anMub3JnL2RvY3MvaGVsbG8td29ybGQuaHRtbA==\">React: 語法教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC1oYW50LnJlYWN0anMub3JnL3R1dG9yaWFsL3R1dG9yaWFsLmh0bWw=\">React: 動手做教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>[React: css])(<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2ZhcS1zdHlsaW5nLmh0bWw=\">https://reactjs.org/docs/faq-styling.html<i class=\"fa fa-external-link-alt\"></i></span>)</li>\n</ul>\n",
            "tags": [
                "reactjs",
                "javascript"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/cpp-compile-speed/",
            "url": "http://gitqwerty777.github.io/cpp-compile-speed/",
            "title": "加快C++編譯速度的方法",
            "date_published": "2017-05-23T12:44:30.000Z",
            "content_html": "<h2 id=\"編譯速度慢的原因\"><a href=\"#編譯速度慢的原因\" class=\"headerlink\" title=\"編譯速度慢的原因\"></a>編譯速度慢的原因</h2><p>因為C++ <code>.h</code> + <code>.cpp</code> 的編譯模型<br>每個cpp檔可能會包含上百甚至上千個<code>.h</code>檔，這些<code>.h</code>檔都會被讀進來一遍，然後被解析一遍。<br>每個編譯單元都會產生一個<code>.obj</code>文件，然後所以這些<code>.obj</code>文件會被link到一起，並且這個過程很難平行。重複load與解析，以及密集的IO，使編譯速度很慢。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"代碼角度\"><a href=\"#代碼角度\" class=\"headerlink\" title=\"代碼角度\"></a>代碼角度</h2><h3 id=\"前置聲明\"><a href=\"#前置聲明\" class=\"headerlink\" title=\"前置聲明\"></a>前置聲明</h3><p>在<code>.h</code>檔中使用前置聲明(forward declaration)，而不是直接包含<code>.h</code>檔。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span>;</span> <span class=\"comment\">//forward declaration, instead #include \"a.h\"</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span>&#123;</span></span><br><span class=\"line\">    A* a;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">useA</span><span class=\"params\">(A&amp; a)</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"a.h\"</span> <span class=\"comment\">//cannot use forward declaration because compiler needs to know what A really is</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span>&#123;</span></span><br><span class=\"line\">    A a;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>要盡一切可能使<code>.h</code>檔精簡</strong>。<br>很多時候前置聲明某個namespace中的class會比較痛苦，而直接include會方便很多，千萬要抵制住這種誘惑；class的成員，函數參數等也儘量用reference或pointer。</p>\n<h3 id=\"使用Pimpl模式\"><a href=\"#使用Pimpl模式\" class=\"headerlink\" title=\"使用Pimpl模式\"></a>使用Pimpl模式</h3><p>Pimpl為Private Implementation<br>傳統的C++的class的接口與實現是混淆在一起的，而Pimpl這種做法使得class的接口與實現得以完全分離。<br>如此，只要class的公共接口保持不變，對class實現的修改始終只需編譯該cpp；同時，該class提供給外界的.h檔也會精簡許多。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    A();</span><br><span class=\"line\">    ~A();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">doSomething</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Impl</span>;</span><span class=\"comment\">//real implementation in this class</span></span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">auto_ptr</span>&lt;impl&gt; m_impl;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"高度模塊化\"><a href=\"#高度模塊化\" class=\"headerlink\" title=\"高度模塊化\"></a>高度模塊化</h3><p>模塊化就是低耦合，就是儘可能的減少相互依賴。</p>\n<ol>\n<li>文件與文件之間，一個<code>.h</code>檔的變化，儘量不要引起其他文件的重新編譯。</li>\n<li>工程與工程之間，對一個工程的修改，儘量不要引起太多其他工程的編譯。這就要求<code>.h</code>檔，或者工程的內容一定要單一，不要什麼東西都往裡面塞，從而引起不必要的依賴。</li>\n</ol>\n<p>不要把兩個不相關的class，或者沒什麼聯繫的macro定義放到一個<code>.h</code>檔裡；內容要儘量單一。</p>\n<p>把代碼中最常用到的那些<code>.h</code>檔找出來，然後分成多個獨立的小文件，效果相當可觀。</p>\n<h3 id=\"刪除冗餘的header檔\"><a href=\"#刪除冗餘的header檔\" class=\"headerlink\" title=\"刪除冗餘的header檔\"></a>刪除冗餘的header檔</h3><p>一些代碼經過上十年的開發與維護，經手的人無數，很有可能出現包含了沒用的<code>.h</code>檔，或重複包含的現象，去掉這些冗餘的include是相當必要的。<br>當然，這主要是針對<code>.cpp</code>的，因為對於一個<code>.h</code>檔，其中的某個include是否冗餘很難界定，得看是否在最終的編譯單元中用到了，而這樣又可能出現在一個編譯單元用到了，而在另外一個編譯單元中沒用到的情況。</p>\n<h3 id=\"特別注意inline和template\"><a href=\"#特別注意inline和template\" class=\"headerlink\" title=\"特別注意inline和template\"></a>特別注意inline和template</h3><p>它們強制在<code>.h</code>檔中包含實作，這會增加<code>.h</code>檔的內容，從而減慢許多編譯速度，需權衡使用。</p>\n<h3 id=\"預編譯-h檔\"><a href=\"#預編譯-h檔\" class=\"headerlink\" title=\"預編譯.h檔\"></a>預編譯<code>.h</code>檔</h3><p>把一些常用但不常改動的<code>.h</code>檔放在預編譯<code>.h</code>檔中。這樣，至少在單個工程中你不需要在每個編譯單元裡一遍又一遍的load與解析同一個<code>.h</code>檔了。</p>\n<p>首次編譯source.cpp時，編譯器生成header.pch的預編譯header。以後再編譯該程式時，編譯器會比較該表頭檔的時間戳，如果表頭檔沒有改變，編譯器直接使用預編譯header。</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\">CORE_PCH_FILENAME=Core.h</span><br><span class=\"line\">CORE_PCH=<span class=\"variable\">$(CORE_PCH_FILENAME)</span>.gch</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$(CORE_PCH)</span>:</span><br><span class=\"line\">    <span class=\"variable\">$(CXX)</span> <span class=\"variable\">$(CXX_CFLAGS)</span> -x c++-header <span class=\"variable\">$(CORE_PCH_FILENAME)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Guard-Conditions\"><a href=\"#Guard-Conditions\" class=\"headerlink\" title=\"Guard Conditions\"></a>Guard Conditions</h3><p>保證每個 header file 在每個編譯單元只被 include 一次</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> once</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> filename_h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> filename_h</span></span><br><span class=\"line\"><span class=\"comment\">//...</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n<p>同時使用兩種方法以確保compiler的相容性</p>\n<h2 id=\"Unity-Build\"><a href=\"#Unity-Build\" class=\"headerlink\" title=\"Unity Build\"></a>Unity Build</h2><p>把所有的檔案包含到一個cpp中(如<code>all.cpp</code>)，然後只編譯all.cpp。這樣就只有一個編譯單元，這意味著不需要重複load與解析同一個<code>.h</code>檔了，同時因為只產生一個obj文件，在link的時候也不需要那麼密集的IO</p>\n<h2 id=\"Compiler-Cache\"><a href=\"#Compiler-Cache\" class=\"headerlink\" title=\"Compiler Cache\"></a>Compiler Cache</h2><p>藉由快取上一次編譯的結果，使rebuild在保持結果相同的情況下，極大的提高速度。</p>\n<h2 id=\"不要有太多的Include-Directories\"><a href=\"#不要有太多的Include-Directories\" class=\"headerlink\" title=\"不要有太多的Include Directories\"></a>不要有太多的Include Directories</h2><p>編譯器定位你include的<code>.h</code>檔，是根據你提供的include directories進行搜索的。</p>\n<p>用 <code>cpp -v</code> 查看 <code>#include &quot;...&quot; search starts here:</code> 中的目錄<br>和 GNU Make 的 <code>-I</code> 選項</p>\n<h2 id=\"平行化及分佈式編譯\"><a href=\"#平行化及分佈式編譯\" class=\"headerlink\" title=\"平行化及分佈式編譯\"></a>平行化及分佈式編譯</h2><p>GNU Make 的 <code>-j [N]</code> 可以用N個核心編譯<br>Visual Studio 有 <code>/MP</code> 選項可做到檔案等級的平行<br>或是用空閒的機器來編譯</p>\n<h2 id=\"買更好的磁碟\"><a href=\"#買更好的磁碟\" class=\"headerlink\" title=\"買更好的磁碟\"></a>買更好的磁碟</h2><p>編譯速度慢很大一部分原因是磁碟操作，那麼除了儘可能的減少磁碟操作，我們還可以做的就是加快磁碟速度。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzczMTQyL3doYXQtdGVjaG5pcXVlcy1jYW4tYmUtdXNlZC10by1zcGVlZC11cC1jLWNvbXBpbGF0aW9uLXRpbWVz\">What techniques can be used to speed up C++ compilation times?<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9iYWl5YW5odWFuZy9hcmNoaXZlLzIwMTAvMDEvMTcvMTczMDcxNy5odG1s\">如何加快C++代碼的編譯速度<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1xWU42ZWR1VTA2cw==\">(Unity Build) CppCon 2014: Nicolas Fleury “C++ in Huge AAA Games”<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL2dhbWVkZXYvY29tbWVudHMvMms0bDJ6L2lzX3ViaXNvZnRzX3VuaXR5X2J1aWxkX2Zvcl9jX3dvcnRoLw==\">(Unity Build) Is Ubisoft’s unity build for C++ worth?<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dvb2RzcGVlZGxlZS5ibG9nc3BvdC50dy8yMDE2LzAxL2MtcGltcGwuaHRtbA==\">(pimpl) C++: 善用 PIMPL 技巧<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JhaXlhbmh1YW5nL2JhY2t1cC9ibG9iLzlmMTFkMDE0OWNiMzY1OWRhYzQ3OTY3ZjFiMTBmM2I3ZWVjODg4ZDMvdG9vbHMvUGVybC9SZW1vdmVSZWR1bmRhbnRJbmNsdWRlcy5wbA==\">(去除重複) Perl腳本，用來自動去除這些冗餘的.h檔<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2R1Y2tyb29tLmJsb2dzcG90LnR3LzIwMTAvMDIvcHJlY29tcGlsZWQtaGVhZGVyLmh0bWw=\">(預編譯.h檔) 終於搞懂了，預編譯header 檔(precompiled header)<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9Yb3JlYXglMjBJbmNyZWRpQnVpbGQ=\">(分佈式編譯) Xoreax IncrediBuild<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvODkyMDY0MC9ob3ctZG8taS1rbm93LXRoZS1kZWZhdWx0LWluY2x1ZGUtZGlyZWN0b3JpZXMtZGVmYXVsdC1saW5rLWRpcmVjdG9yaWVzLWFuZA==\">How do I know the default include directories<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jY2FjaGUuc2FtYmEub3JnLw==\">(Compiler Cache) ccache<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2l0c2NvbXBpbGluZy5ldS8yMDE3LzAxLzEyL3ByZWNvbXBpbGVkLWhlYWRlcnMtY3BwLWNvbXBpbGF0aW9uLw==\">(預編譯.h檔) Speed up C++ compilation, part 1: precompiled headers<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzczNjU3NzA=\">(預編譯.h檔) makefile 範例<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "C++",
                "編譯",
                "gcc",
                "g++",
                "clang",
                "最佳化"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/cmake/",
            "url": "http://gitqwerty777.github.io/cmake/",
            "title": "Makefile 和 CMake 之間的轉換和實作",
            "date_published": "2017-01-17T10:12:50.000Z",
            "content_html": "<!-- RENEW: -->\n\n<p><span class=\"exturl\" data-url=\"aHR0cDovL21xamluZy5ibG9nc3BvdC50dy8yMDA5LzA5L2NtYWtlLWhvdy10by11c2UtY21ha2UuaHRtbA==\">http://mqjing.blogspot.tw/2009/09/cmake-how-to-use-cmake.html<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pdGsub3JnL1dpa2kvQ01ha2VfVXNlZnVsX1ZhcmlhYmxlcw==\">CMake 常用變數<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>CMake用來產生跨平台的專案建置文件，在windows下它會生成visual studio的專案檔(.sln) codeblock eclipse，在linux下它會生成Makefile。類似工具有autotools和qmake，不過autotools太複雜，qmake只限於qt使用。</p>\n<p>CMake用更抽象的語法來組織項目。例如用math表示數學庫，而不需要再具體指定到底是math.dll還是libmath.so。</p>\n<a id=\"more\"></a>\n\n<p>類似功能的工具</p>\n<ul>\n<li><p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zY29ucy5vcmc=\">SCons<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>by python</li>\n</ul>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cDovL2FudC5hcGFjaGUub3JnLw==\">Apache ant<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>by java</li>\n</ul>\n</li>\n<li><p>優點</p>\n<ul>\n<li>stable</li>\n<li>fast</li>\n<li>支援Code::Blocks, Xcode等</li>\n</ul>\n</li>\n<li><p>缺點</p>\n<ul>\n<li>需學習語法</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaXRidWNrZXQub3JnL3Njb25zL3Njb25zL3dpa2kvU2NvbnNWc090aGVyQnVpbGRUb29scw==\">專案建置工具比較<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"GUI\"><a href=\"#GUI\" class=\"headerlink\" title=\"GUI\"></a>GUI</h3><ul>\n<li>command line: <code>cmake</code></li>\n<li>curse-based TUI: <code>ccmake</code></li>\n<li>QT-based GUI: <code>cmake-gui</code></li>\n</ul>\n<h3 id=\"Out-Of-Source-Build\"><a href=\"#Out-Of-Source-Build\" class=\"headerlink\" title=\"Out-Of-Source Build\"></a>Out-Of-Source Build</h3><p>將build資料和原始碼分離</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改 CMakeLists.txt</span></span><br><span class=\"line\">mkdir build # will generate build files in this folder</span><br><span class=\"line\">cd build</span><br><span class=\"line\">cmake .. # the place that put CMakelists.txt</span><br><span class=\"line\"></span><br><span class=\"line\">cmake -G \"Unix Makefiles\" [CMakeList.txt path] # 指定生成平台</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>執行結束後，build資料夾會出現各項中間檔、makefile 以及執行檔</li>\n</ul>\n<p>優點</p>\n<ol>\n<li>可保持working directory的乾淨</li>\n<li>只要用新的資料夾，就可以產生多個不同的build，也可以隨時刪除</li>\n</ol>\n<h2 id=\"語法\"><a href=\"#語法\" class=\"headerlink\" title=\"語法\"></a>語法</h2><ul>\n<li>設定變數 <code>set(var hello)</code></li>\n<li>印出訊息 <code>message(${var})</code></li>\n</ul>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cmake_minimum_required</span> (VERSION <span class=\"number\">2.6</span>) <span class=\"comment\"># minimum executable version of cmake</span></span><br><span class=\"line\"><span class=\"keyword\">project</span>(ex1) <span class=\"comment\"># project name</span></span><br><span class=\"line\"><span class=\"keyword\">add_executable</span>(ex1 main.c) <span class=\"comment\"># build program ex1 from main.c</span></span><br></pre></td></tr></table></figure>\n\n<p>在不同的資料夾下建立執行檔</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> relative destination</span></span><br><span class=\"line\">cmake --help-variable CMAKE_INSTALL_PREFIX</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> At Install-time use DESTDIR mechanism (Unix Makefiles)</span></span><br><span class=\"line\">make DESTDIR=/tmp/testinstall install</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CMake語法\"><a href=\"#CMake語法\" class=\"headerlink\" title=\"CMake語法\"></a>CMake語法</h3><p>general purpose constructs: <code>set</code>, <code>unset</code>, <code>if</code>, <code>elseif</code>, <code>else</code>, <code>endif</code>, <code>foreach</code>, <code>while</code>, <code>break</code></p>\n<h3 id=\"CMake-變數\"><a href=\"#CMake-變數\" class=\"headerlink\" title=\"CMake 變數\"></a>CMake 變數</h3><p>變數不分大小寫，但我習慣性用大寫</p>\n<ul>\n<li><p>變數指定</p>\n<ul>\n<li>CMake 有許多預設變數，以改變基本的運作，用<code>cmake --help-variables-list</code>可以瀏覽</li>\n<li>在檔案內指定<ul>\n<li><code>set(CMAKE_INSTALL_PREFIX /home/eric/testinstall)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>平台相關變數</p>\n<ul>\n<li>作業系統<ul>\n<li><code>WIN32</code> True on windows systems, including win64.</li>\n<li><code>UNIX</code> True for UNIX and UNIX like operating systems.</li>\n<li><code>APPLE</code> True if running on Mac OSX.</li>\n<li><code>CYGWIN</code> True for cygwin.</li>\n</ul>\n</li>\n<li>編譯器<ul>\n<li><code>MSVC</code> True when using Microsoft Visual C</li>\n<li><code>GNU&lt;LANG&gt;</code> True if the compiler of this language is GNU</li>\n<li><code>MINGW</code> True if the compiler is MinGW</li>\n</ul>\n</li>\n<li>example<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">NOT</span> WIN32)</span><br><span class=\"line\"><span class=\"keyword\">option</span> (WITH GUESS NAME <span class=\"string\">\"Guess acronym name\"</span> <span class=\"keyword\">ON</span>)</span><br><span class=\"line\"><span class=\"keyword\">endif</span> (<span class=\"keyword\">NOT</span> WIN32)</span><br></pre></td></tr></table></figure></li>\n<li>找需要的package<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\">find package ( LibXml2 )</span><br><span class=\"line\"><span class=\"keyword\">if</span> (LIBXML2 FOUND)</span><br><span class=\"line\">add definitions (−DHAVE XML <span class=\"variable\">$&#123;LIBXML2 DEFINITIONS &#125;</span>)</span><br><span class=\"line\">includedirectories( <span class=\"variable\">$&#123;LIBXML2 INCLUDE DIR &#125;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><code>XXXFOUND</code><pre><code>- Set to false, or undefined, if we haven’t found, or don’t want to use XXX</code></pre><ul>\n<li><code>XXX_INCLUDE_DIRS</code><ul>\n<li>The final set of include directories listed in one variable for use by client code</li>\n</ul>\n</li>\n<li><code>XXX_LIBRARIES</code><ul>\n<li>The libraries to link against to use XXX. These should include full paths</li>\n</ul>\n</li>\n<li><code>XXX_DEFINITIONS</code><ul>\n<li>Definitions to use when compiling code that uses XXX</li>\n</ul>\n</li>\n<li><code>XXX_EXECUTABLE</code><ul>\n<li>Where to find the XXX tool</li>\n</ul>\n</li>\n<li><code>XXX_LIBRARY_DIRS</code><ul>\n<li>Optionally, the final set of library directories listed in one variable for use by client code</li>\n</ul>\n</li>\n<li>to find an executable program<ul>\n<li><code>find_program</code></li>\n</ul>\n</li>\n<li>to find a library<ul>\n<li><code>find_library</code></li>\n</ul>\n</li>\n<li>to find any kind of file<ul>\n<li><code>find_file</code></li>\n</ul>\n</li>\n<li>to find a path where a file reside<ul>\n<li><code>find_path</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>file manipulation with file</p>\n<ul>\n<li><code>READ</code>, <code>WRITE</code>, <code>APPEND</code>, <code>RENAME</code>, <code>REMOVE</code>, <code>MAKE DIRECTORY</code></li>\n</ul>\n</li>\n<li><p>advanced files operations</p>\n<ul>\n<li><code>GLOB</code>, <code>GLOB RECURSE [file name in a path]</code>, <code>DOWNLOAD</code>, <code>UPLOAD</code></li>\n</ul>\n</li>\n<li><p>working with path</p>\n<ul>\n<li><code>file (TO CMAKE PATH /TO NATIVE PATH ...)</code>, get filename component</li>\n</ul>\n</li>\n<li><p>execute an external process (with stdout, stderr and return code retrieval): execute process</p>\n</li>\n<li><p>builtin list manipulation command</p>\n<ul>\n<li><code>LENGTH</code>, <code>GET</code>, <code>APPEND</code>, <code>FIND</code>, <code>APPEND</code>, <code>INSERT</code>, <code>REMOVE ITEM</code>, <code>REMOVE AT</code>, <code>REMOVE DUPLICATES REVERSE</code>, <code>SORT</code></li>\n</ul>\n</li>\n<li><p>string manipulation</p>\n<ul>\n<li>upper/lower case conversion, length, comparison, substring, regular expression match</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"CMake-Application\"><a href=\"#CMake-Application\" class=\"headerlink\" title=\"CMake Application\"></a>CMake Application</h3><ul>\n<li><p>CPack</p>\n<ul>\n<li>CMake friend application</li>\n<li>used to easily package your software</li>\n<li>Package the resulting binaries with CPack</li>\n</ul>\n</li>\n<li><p>CTest</p>\n<ul>\n<li>make test</li>\n<li>runs systematic test with CTest and publish them with CDash</li>\n</ul>\n</li>\n<li><p>Wizard mode</p>\n<ul>\n<li>cmake -i, interactive equivalent of the Normal mode</li>\n</ul>\n</li>\n<li><p>Command mode</p>\n<ul>\n<li>cmake -E <command>, command line mode which offers basic command in a portable way</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"專案說明\"><a href=\"#專案說明\" class=\"headerlink\" title=\"專案說明\"></a>專案說明</h2><p>一個簡單的圍棋程式</p>\n<p>file tree</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">├── <span class=\"selector-tag\">CMakeLists</span><span class=\"selector-class\">.txt</span></span><br><span class=\"line\">├── *<span class=\"selector-class\">.h</span></span><br><span class=\"line\">├── *<span class=\"selector-class\">.cpp</span></span><br><span class=\"line\">├── <span class=\"selector-tag\">previous_version</span></span><br><span class=\"line\">│   ├── <span class=\"selector-tag\">CMakeLists</span><span class=\"selector-class\">.txt</span></span><br><span class=\"line\">│   ├── *<span class=\"selector-class\">.cpp</span></span><br><span class=\"line\">│   └── *<span class=\"selector-class\">.h</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\">P?=binary</span><br><span class=\"line\">EXEC=execs/<span class=\"variable\">$(P)</span></span><br><span class=\"line\">OBJECTS=<span class=\"variable\">$(P)</span>.o *.o</span><br><span class=\"line\">CXXFLAGS=-pipe -std=c++11 -Wall -Wextra -Wpedantic -Wno-unknown-pragmas -g -O3 -march=native -fopenmp</span><br><span class=\"line\">LDFLAGS=-lpthread</span><br><span class=\"line\">CXX=g++</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">all: main</span></span><br><span class=\"line\"><span class=\"section\">parallel: main</span></span><br><span class=\"line\"><span class=\"section\">parallel: CXXFLAGS+=-fopenmp -DPARALLEL # add additional flags</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">previous:</span></span><br><span class=\"line\">    cd previous_version; make</span><br><span class=\"line\"><span class=\"section\">binary: <span class=\"variable\">$(OBJECTS)</span></span></span><br><span class=\"line\">\tg++ <span class=\"variable\">$(CXXFLAGS)</span> <span class=\"variable\">$(OBJECTS)</span> -flto -o <span class=\"variable\">$(EXEC)</span> <span class=\"variable\">$(LDFLAGS)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$(P)</span>.o: *.h</span><br><span class=\"line\">\t<span class=\"variable\">$(CXX)</span> <span class=\"variable\">$(CXXFLAGS)</span> main.cpp -c -o <span class=\"variable\">$(P)</span>.o <span class=\"variable\">$(LDFLAGS)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># object files and it's dependency</span></span><br><span class=\"line\"><span class=\"section\">board.o: mc_node.h liberty.h board.h board_constants.h ladder.h database.h strategy.h gameSetting.h</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">clean:</span></span><br><span class=\"line\">\trm -rf *.o</span><br><span class=\"line\"><span class=\"section\">previous_clean:</span></span><br><span class=\"line\">\tcd previous_version; make clean</span><br></pre></td></tr></table></figure>\n\n<p>CMakeLists.txt in root directly</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cmake_minimum_required</span>(VERSION <span class=\"number\">2.6</span>)</span><br><span class=\"line\"><span class=\"keyword\">project</span>(MCTS_Go9x9)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set default output file name</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span>(BINARYNAME <span class=\"string\">\"binary\"</span> CACHE <span class=\"keyword\">STRING</span> <span class=\"string\">\"default binary file's name = binary\"</span> FORCE)</span><br><span class=\"line\"><span class=\"comment\"># set output directory</span></span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_RUNTIME_OUTPUT_DIRECTORY <span class=\"variable\">$&#123;CMAKE_SOURCE_DIR&#125;</span>/execs</span><br><span class=\"line\"><span class=\"comment\"># compile parameters</span></span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_CXX_COMPILER g++)</span><br><span class=\"line\"><span class=\"keyword\">message</span>(<span class=\"string\">\"compiler: $&#123;CMAKE_CXX_COMPILER&#125;\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_CXX_FLAGS <span class=\"string\">\"-pipe -std=c++11 -Wall -Wextra -Wpedantic -Wno-unknown-pragmas -g -O3 -march=native -fopenmp\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">message</span>(<span class=\"string\">\"cxxflags: $&#123;CMAKE_CXX_FLAGS&#125;\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_EXE_LINKER_FLAGS <span class=\"string\">\"-flto\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span>(THREADS_PREFER_PTHREAD_FLAG <span class=\"keyword\">ON</span>) <span class=\"comment\"># pthread</span></span><br><span class=\"line\"><span class=\"keyword\">find_package</span>(Threads REQUIRED) <span class=\"comment\"># pthread</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span>(SRC_FILES *.cpp)</span><br><span class=\"line\"><span class=\"keyword\">message</span>(<span class=\"string\">\"source files: $&#123;SRC_FILES&#125;\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># each executable is a target in GNU makefile</span></span><br><span class=\"line\"><span class=\"keyword\">add_executable</span>(<span class=\"variable\">$&#123;BINARYNAME&#125;</span> <span class=\"variable\">$&#123;SRC_FILES&#125;</span>)</span><br><span class=\"line\"><span class=\"keyword\">target_link_libraries</span>(<span class=\"variable\">$&#123;BINARYNAME&#125;</span> Threads::Threads) <span class=\"comment\"># pthread</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># parallel</span></span><br><span class=\"line\"><span class=\"keyword\">add_executable</span>(parallel <span class=\"variable\">$&#123;SRC_FILES&#125;</span>)</span><br><span class=\"line\"><span class=\"keyword\">target_compile_options</span>(parallel PUBLIC -fopenmp -DPARALLEL) <span class=\"comment\"># add additional compile parameters</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># we have another CMakeLists.txt in this directory, still follow the same method to generate</span></span><br><span class=\"line\"><span class=\"keyword\">add_subdirectory</span>(previous_version)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Makefile-和-CMake-的語法比較\"><a href=\"#Makefile-和-CMake-的語法比較\" class=\"headerlink\" title=\"Makefile 和 CMake 的語法比較\"></a>Makefile 和 CMake 的語法比較</h2><table>\n<thead>\n<tr>\n<th>makefile</th>\n<th>cmake</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>COMPILE_FLAGS = -c -m32 -O3 -fPIC -w -DSOMETHING -Wall -I src/sdk/core</code></td>\n<td><code>SET( COMPILE_FLAGS &quot;-c -m32 -O3 -fPIC -w DSOMETHING -Wall&quot; ) INCLUDE_DIRECTORIES( src/sdk/core )</code></td>\n</tr>\n</tbody></table>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Makefile</span></span><br><span class=\"line\"><span class=\"keyword\">ifdef</span> STATIC</span><br><span class=\"line\">  <span class=\"comment\"># Do something</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"comment\"># Do something elseendif</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># CMake</span></span><br><span class=\"line\"><span class=\"keyword\">OPTION</span>(STATIC <span class=\"string\">\"Brief description\"</span> <span class=\"keyword\">ON</span>)</span><br><span class=\"line\"><span class=\"keyword\">IF</span>( STATIC )</span><br><span class=\"line\">  <span class=\"comment\"># Do something</span></span><br><span class=\"line\"><span class=\"keyword\">ELSE</span>()</span><br><span class=\"line\">  <span class=\"comment\"># Do something else</span></span><br><span class=\"line\"><span class=\"keyword\">ENDIF</span>()</span><br></pre></td></tr></table></figure>\n\n<p>using libraries<br>call find_package with the name of your library, which will invoke a library search script from your cmake module path. This script (which is also written in CMake) will attempt to detect the location of the library’s header and lib files and store them in a couple of CMake variables that can then be passed to the according CMake commands like include_directories and target_link_libraries.</p>\n<p>There are two problems with this approach: First, you need a search script. Fortunately, CMake ships with search scripts for Pthreads, Boost and a couple of others, but if you are using a more exotic library, you might have to write the search script yourself, which is kind of an arcane experience at first…</p>\n<p> 並不會刪除自身產出的快取和中間檔</p>\n<p>The following Makefile builds an executable named prog from the sources prog1.c, prog2.c, prog3.c and main.c. prog is linked against libmystatlib.a and libmydynlib.so which are both also built from source. Additionally, prog uses the library libstuff.a in stuff/lib and its header in stuff/include. The Makefile by default builds a release target, but offers also a debug target:</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Makefile</span></span><br><span class=\"line\">CC = gcc</span><br><span class=\"line\">CPP = g++</span><br><span class=\"line\">RANLIB = ar rcs</span><br><span class=\"line\">RELEASE = -c -O3</span><br><span class=\"line\">DEBUG = -c -g -D_DEBUG</span><br><span class=\"line\">INCDIR = -I./stuff/<span class=\"keyword\">include</span></span><br><span class=\"line\">LIBDIR = -L./stuff/lib -L.</span><br><span class=\"line\">LIBS = -lstuff -lmystatlib -lmydynlib</span><br><span class=\"line\">CFLAGS = <span class=\"variable\">$(RELEASE)</span></span><br><span class=\"line\"></span><br><span class=\"line\">PROGOBJS = prog1.o prog2.o prog3.o</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">prog: main.o <span class=\"variable\">$(PROGOBJS)</span> mystatlib mydynlib</span></span><br><span class=\"line\">    <span class=\"variable\">$(CC)</span> main.o <span class=\"variable\">$(PROGOBJS)</span> <span class=\"variable\">$(LIBDIR)</span> <span class=\"variable\">$(LIBS)</span> -o prog</span><br><span class=\"line\"><span class=\"section\">debug: CFLAGS=<span class=\"variable\">$(DEBUG)</span></span></span><br><span class=\"line\"><span class=\"section\">debug: prog</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">mystatlib: mystatlib.o</span></span><br><span class=\"line\">    <span class=\"variable\">$(RANLIB)</span> libmystatlib.a mystatlib.o</span><br><span class=\"line\"><span class=\"section\">mydynlib: mydynlib.o</span></span><br><span class=\"line\">    <span class=\"variable\">$(CPP)</span> -shared mydynlib.o -o libmydynlib.so</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">%.o: %.c</span></span><br><span class=\"line\">    <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(CFLAGS)</span> <span class=\"variable\">$(INCDIR)</span> <span class=\"variable\">$&lt;</span> -o <span class=\"variable\">$@</span></span><br><span class=\"line\"><span class=\"section\">%.o: %.cpp</span></span><br><span class=\"line\">    <span class=\"variable\">$(CPP)</span> <span class=\"variable\">$(CFLAGS)</span> <span class=\"variable\">$(INCDIR)</span> -fPIC  <span class=\"variable\">$&lt;</span> -o <span class=\"variable\">$@</span></span><br><span class=\"line\">Here is a CMakeLists.txtthat does (almost) exactly the same, with some comments to underline the similarities to the Makefile:</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#CMakeLists.txt</span></span><br><span class=\"line\"><span class=\"keyword\">cmake_minimum_required</span>(VERSION <span class=\"number\">2.8</span>)                    <span class=\"comment\"># stuff not directly</span></span><br><span class=\"line\"><span class=\"keyword\">project</span>(example)                                       <span class=\"comment\"># related to building</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include_directories</span>(<span class=\"variable\">$&#123;CMAKE_SOURCE_DIR&#125;</span>/stuff/<span class=\"keyword\">include</span>) <span class=\"comment\"># -I flags for compiler</span></span><br><span class=\"line\"><span class=\"keyword\">link_directories</span>(<span class=\"variable\">$&#123;CMAKE_SOURCE_DIR&#125;</span>/stuff/lib)        <span class=\"comment\"># -L flags for linker</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span>(PROGSRC prog1.c prog2.c prog3.c)                   <span class=\"comment\"># define variable</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">add_executable</span>(prog main.c <span class=\"variable\">$&#123;PROGSRC&#125;</span>)                 <span class=\"comment\"># define executable target prog, specify sources</span></span><br><span class=\"line\"><span class=\"keyword\">target_link_libraries</span>(prog mystatlib mydynlib stuff)   <span class=\"comment\"># -l flags for linking prog target</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">add_library</span>(mystatlib STATIC mystatlib.c)              <span class=\"comment\"># define static library target mystatlib, specify sources</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">add_library</span>(mydynlib SHARED mydynlib.cpp)              <span class=\"comment\"># define shared library target mydynlib, specify sources</span></span><br><span class=\"line\"><span class=\"comment\">#extra flags for linking mydynlib</span></span><br><span class=\"line\"><span class=\"keyword\">set_target_properties</span>(mydynlib PROPERTIES POSITION_INDEPENDENT_CODE <span class=\"keyword\">TRUE</span>)</span><br><span class=\"line\"><span class=\"comment\">#alternatively:</span></span><br><span class=\"line\"><span class=\"comment\">#set_target_properties(mydynlib PROPERTIES COMPILE_FLAGS \"-fPIC\")</span></span><br></pre></td></tr></table></figure>\n<p>In this simple example, the most important differences are:</p>\n<p>CMake recognizes which compilers to use for which kind of source. Also, it invokes the right sequence of commands for each type of target. Therefore, there is no explicit specification of commands like $(CC)…, $(RANLIB)… and so on.<br>All usual compiler/linker flags dealing with inclusion of header files, libraries, etc. are replaced by platform independent / build system independent commands.<br>Debugging flags are included by either setting the variable CMAKE_BUILD_TYPE to “Debug”, or by passing it to CMake when invoking the program: cmake -DCMAKE_BUILD_TYPE:STRING=Debug.<br>CMake offers also the platform independent inclusion of the ‘-fPIC’ flag (via the POSITION_INDEPENDENT_CODE property) and many others. Still, more obscure settings can be implemented by hand in CMake just as well as in a Makefile (by using COMPILE_FLAGS and similar properties). Of course CMake really starts to shine when third party libraries (like OpenGL) are included in a portable manner.<br>The build process has one step if you use a Makefile, namely typing<br>make at the command line. For CMake, there are two steps: First, you need to setup your build environment (either by typing cmake <source_dir> in your build directory or by running some GUI client). This creates a Makefile or something equivalent, depending on the build system of your choice (e.g. make on Unixes or VC++ or MinGW + Msys on Windows). The build system can be passed to CMake as a parameter; however, CMake makes reasonable default choices depending on your system configuration. Second, you perform the actual build in the selected build system.<br>Sources and build instructions are available at <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Job2VsemVsL21ha2VfY21ha2U=\">https://github.com/rhoelzel/make_cmake<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<h1 id=\"設定變數範例\"><a href=\"#設定變數範例\" class=\"headerlink\" title=\"設定變數範例\"></a>設定變數範例</h1><pre><code>set(MYLIBPATH &quot;C:\\\\Documents and\n        Settings\\\\Jing\\\\Desktop\\\\opencv_bin\\\\lib\\\\release\\\\&quot;)</code></pre><h1 id=\"使用變數範例\"><a href=\"#使用變數範例\" class=\"headerlink\" title=\"使用變數範例\"></a>使用變數範例</h1><pre><code>target_link_libraries(${name} ${MYLIBPATH}cv200.lib)</code></pre><h1 id=\"建立-macro-範例\"><a href=\"#建立-macro-範例\" class=\"headerlink\" title=\"建立 macro 範例\"></a>建立 macro 範例</h1><pre><code>MACRO(MY_DEFINE_EXAMPLE name srcs)\n      add_executable(${name} ${srcs})\nENDMACRO(MY_DEFINE_EXAMPLE)</code></pre><h1 id=\"使用-macro-範例\"><a href=\"#使用-macro-範例\" class=\"headerlink\" title=\"使用 macro 範例\"></a>使用 macro 範例</h1><pre><code>MY_DEFINE_EXAMPLE(demo     demo.cpp)</code></pre><h1 id=\"存取環境變數的範例\"><a href=\"#存取環境變數的範例\" class=\"headerlink\" title=\"存取環境變數的範例\"></a>存取環境變數的範例</h1><pre><code>MESSAGE(&quot;$ENV{PATH}&quot;)</code></pre><h1 id=\"加入-Post-Build-的範例\"><a href=\"#加入-Post-Build-的範例\" class=\"headerlink\" title=\"加入 Post Build 的範例\"></a>加入 Post Build 的範例</h1><pre><code>add_custom_command(\n        TARGET ${MyPluginTarget}\n        POST_BUILD\n        COMMAND copy\n                       ${CMAKE_CFG_INTDIR}\\\\${MyPluginTarget}.dll\n                       &quot;C:\\\\Program Files\\\\Mozilla Firefox\\\\\n                         plugins\\\\${MyPluginTarget}.dll&quot;\n    )</code></pre><p>若你的執行檔是 Windows 程式, 請加入 Win32<br><code>add_executable(demo WIN32 ${SOURCE})</code></p>\n<h2 id=\"MFC-設定\"><a href=\"#MFC-設定\" class=\"headerlink\" title=\"MFC 設定\"></a>MFC 設定</h2><figure class=\"highlight sqf\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span>(CMAKE_MFC_FLAG <span class=\"number\">2</span>)</span><br><span class=\"line\">set_target_properties(MyApp      PROPERTIES</span><br><span class=\"line\">COMPILE_DEFINITIONS</span><br><span class=\"line\"><span class=\"variable\">_AFXDLL</span>, <span class=\"variable\">_UNICODE</span>, UNICODE,</span><br><span class=\"line\"><span class=\"variable\">_BIND_TO_CURRENT_CRT_VERSION</span>,</span><br><span class=\"line\"><span class=\"variable\">_BIND_TO_CURRENT_MFC_VERSION</span></span><br><span class=\"line\">LINK_FLAGS</span><br><span class=\"line\"><span class=\"string\">\" /ENTRY:\\\"</span>wWinMainCRTStartup\\<span class=\"string\">\"    \"</span>)</span><br></pre></td></tr></table></figure>\n\n<p>add_executable(demo WIN32 ${SOURCE})</p>\n<h1 id=\"設定-source-code-群組範例\"><a href=\"#設定-source-code-群組範例\" class=\"headerlink\" title=\"設定 source code 群組範例\"></a>設定 source code 群組範例</h1><figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ex1:</span></span><br><span class=\"line\"><span class=\"keyword\">file</span>(GLOB_RECURSE myRESOURCE_FILE 「*.def」 「*.rc」)</span><br><span class=\"line\"><span class=\"keyword\">source_group</span>(Resource FILES <span class=\"variable\">$&#123;myRESOURCE_FILE &#125;</span>)</span><br><span class=\"line\"><span class=\"comment\"># ex2:</span></span><br><span class=\"line\"><span class=\"keyword\">source_group</span>(abc_group REGULAR_EXPRESSION <span class=\"string\">\"abc.*\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">source_group</span>(<span class=\"number\">123</span>_group REGULAR_EXPRESSION <span class=\"string\">\"123.*\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">set</span>(SOURCE abc.cpp abc.h <span class=\"number\">123</span>.cpp <span class=\"number\">123</span>.h abc.rc main.cpp main.h</span><br><span class=\"line\">resource.h stdafx.cpp  stdafx.h</span><br><span class=\"line\">./res/<span class=\"number\">123</span>.ico ./res/<span class=\"number\">123</span>.rc2)</span><br><span class=\"line\"><span class=\"keyword\">add_executable</span>(demo WIN32 <span class=\"variable\">$&#123;SOURCE&#125;</span>)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"建立-dll-範例\"><a href=\"#建立-dll-範例\" class=\"headerlink\" title=\"建立 dll 範例\"></a>建立 dll 範例</h1><figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">add_library</span>( <span class=\"keyword\">target</span> SHARED a.c b.c);</span><br></pre></td></tr></table></figure>\n<p>#console 與 windows (/SUBSYSTEM:CONSOLE or /SUBSYSTEM:WINDOWS)<br>a. 如果你的程式是 Windows.<br>=&gt; 則 add_executable(demo WIN32 ${SOURCE})<br>b. 如果是 console, 則<br>=&gt; 則 add_executable(demo ${SOURCE})</p>\n<p>好用的變數 (more)<br><code>PROJECT_SOURCE_DIR</code>:  包含 project 命令的 CMakeFile.txt 完整路徑. (ex: c:\\abc)</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span>(PROJECT_HOME <span class=\"variable\">$&#123;PROJECT_SOURCE_DIR&#125;</span>\\\\..\\\\)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI3NDU1OTYzL2Fuc3dlci8zNjcyMjk5Mg==\">make makefile cmake qmake都是什麼，有什麼區別？-玟清的回答-知乎<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnNpbXBseXBhdHJpY2suY29tL3Bvc3RzLzIwMTUvMDYtMTktY21ha2Utbm90ZXMv\">CMake筆記<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1RoZUVyay9DTWFrZS10dXRvcmlhbA==\">Eric Noulard - CMake tutorial<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpYm9va3Mub3JnL3dpa2kvQ01ha2VfJUU1JTg1JUE1JUU5JTk2JTgw\">CMake 入門 - 維基教科書，自由的教學讀本<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMDg4MjAzMC9jbWFrZS12cy1tYWtlLXNhbXBsZS1jb2Rlcw==\">stackoverflow - Cmake vs make sample codes?<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMDA4NTk0NS9jbWFrZS1jZmxhZ3MtY3h4ZmxhZ3MtbW9kaWZpY2F0aW9u\">stackoverflow - cmake CFLAGS CXXFLAGS modification<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTY2NTA4MjUvY29udmVydGluZy1vbGQtbWFrZWZpbGUtdG8tY21ha2U=\">stackoverflow - Converting old makefile to CMake<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvOTk4NTgzOS9jcmVhdGluZy1jbWFrZWxpc3RzLWZpbGUtZnJvbS1leGlzdGluZy1tYWtlZmlsZQ==\">stackoverflow - Creating CMakeLists file from existing Makefile<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "CMake",
                "Makefile",
                "Linux"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/economics2/",
            "url": "http://gitqwerty777.github.io/economics2/",
            "title": "經濟學二",
            "date_published": "2016-03-07T21:31:00.000Z",
            "content_html": "<!-- RENEW: -->\n\n<h2 id=\"Chap23-國民所得的衡量\"><a href=\"#Chap23-國民所得的衡量\" class=\"headerlink\" title=\"Chap23 國民所得的衡量\"></a>Chap23 國民所得的衡量</h2><ul>\n<li>Microeconomics<ul>\n<li>Study of how households and firms<ul>\n<li>Make decisions</li>\n<li>Interact in markets</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Macroeconomics<ul>\n<li>Study of economy-wide phenomena<ul>\n<li>Including inflation, unemployment, and economic growth</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Gross Domestic Product (GDP)</p>\n<ul>\n<li>Measures the total expenditure on the economy’s output of goods and services</li>\n<li>Market value of all <strong>final goods and services</strong> produced within a country in a given period of time<ul>\n<li>Value of intermediate goods is already included in the prices of the final goods</li>\n</ul>\n</li>\n</ul>\n<p>Circular-flow diagram</p>\n<ul>\n<li><p>Households</p>\n<ul>\n<li>buy goods and services from firms</li>\n</ul>\n</li>\n<li><p>Firms</p>\n<ul>\n<li>use revenue from sales to pay wages to workers, rent to landowners, and profit to firm owners</li>\n</ul>\n</li>\n<li><p>GDP</p>\n<ul>\n<li>= total amount households spent for goods and services</li>\n<li>= total wages, rent, and profit paid by firms in the markets for the factors of production</li>\n</ul>\n</li>\n<li><p>GNP: 國民生產毛額＝國內生產毛額＋國外要素所得收入淨額</p>\n<ul>\n<li>民國103年11月為與聯合國國民經濟會計制度一致，使用詞更能表達經濟內涵將國民生產毛額改為國民所得毛額（Gross National Income, GNI)<ul>\n<li>GNP = GNI</li>\n</ul>\n</li>\n<li>NNP(國民生產淨額): GNP-折舊</li>\n</ul>\n</li>\n<li><p>NI(國民所得):工資+租金+利息+利潤</p>\n<ul>\n<li>扣除統計誤差後，<strong>國民所得(NI)應等於國民生產淨額(GNP)</strong></li>\n<li>分為按要素成本（所得）計算者與按市價計算者<ul>\n<li>要素成本: 國民生產毛額減固定資本折耗、間接稅淨額及統計差異</li>\n<li>市價: 國民生產毛額減固定資本折耗及統計差異</li>\n</ul>\n</li>\n<li>凡非由生產而發生之所得，均不可計入國民所得之內<ul>\n<li>資產重估之增值</li>\n<li>國際間之贈與等</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>PI(個人所得)???</p>\n<ul>\n<li>國民所得－(營利事業所得稅＋企業間接稅＋未分配盈餘＋政府財產與企業所得＋社會安全捐)＋國內外對家計單位的移轉支付</li>\n</ul>\n</li>\n<li><p>DPI(Disposable Personal Income, 個人可支配所得)???</p>\n<ul>\n<li>個人所得－直接稅與非稅支付(如交通罰單)</li>\n</ul>\n</li>\n</ul>\n<p>GDP的計算方式改變</p>\n<ul>\n<li><p>2014年11月20日行政院主計總處國民所得統計評審會決議，將研發支出由中間消費改列固定投資(配合聯合國最新版國民經濟會計制度2008 SNA修正編算原則)</p>\n</li>\n<li><p>以連鎖法取代定基法衡量實質GDP及經濟成長率<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdGF0Lmdvdi50dy9wdWJsaWMvQXR0YWNobWVudC80MTIyOTE2NDE1ODVMRzZMSDVULnBkZg==\">以連鎖法衡量經濟成長率\n<i class=\"fa fa-external-link-alt\"></i></span>  <span class=\"exturl\" data-url=\"aHR0cDovL25ld3MubHRuLmNvbS50dy9uZXdzL2J1c2luZXNzL2JyZWFraW5nbmV3cy8xMTI0NjM3\">GDP編制50年來首度改革 經濟成長率恐下修<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>GDP = C + I + G + NX</p>\n<ul>\n<li>Consumption<ul>\n<li>Spending by households on goods and services</li>\n<li><strong>Exception: purchases of new housing</strong></li>\n</ul>\n</li>\n<li>Investment<ul>\n<li>Household purchases of new housing</li>\n<li>Inventory accumulation</li>\n</ul>\n</li>\n<li>Government purchases<ul>\n<li>Does not include transfer payments(轉移支付)<ul>\n<li>政府或企業的一種不以購買本年的商品和勞務而作的支付，即政府或企業無償地支付給個人或下級政府，以增加其收入和購買力的費用。它是一種收入再分配的形式<ul>\n<li>包括養老金、失業救濟金、退伍軍人補助金、農產品價格補貼、公債利息</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Net exports<ul>\n<li>Exports - Imports</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>2012, GDP of the U.S. - over $15 trillion</p>\n<ul>\n<li>GDP per person = $49,923</li>\n<li>Consumption = $35,411 per person</li>\n<li>Investment = $6,557 per person</li>\n<li>Government purchases = $9,758 per person</li>\n<li>Net exports = –$1,806 per person</li>\n</ul>\n<p>GDP and it’s construction</p>\n<ul>\n<li><img data-src=\"/img/eco2/gdpus.jpg\" alt=\"\"></li>\n<li><img data-src=\"/img/eco2/gdptw.jpg\" alt=\"\"></li>\n</ul>\n<p>Real and Nominal GDP</p>\n<ul>\n<li>goods and services are being sold at higher prices</li>\n<li>Nominal(名義) GDP<ul>\n<li>Production of goods and services Valued at current prices</li>\n</ul>\n</li>\n<li>Real GDP<ul>\n<li>將名義GDP調整物價水平因素</li>\n<li>price remain the same as in base year</li>\n<li>For the base year, Nominal GDP = Real GDP</li>\n</ul>\n</li>\n<li>GDP deflator<ul>\n<li>100 for the base year</li>\n<li>Measures the current level of prices relative to the level of prices in the base year</li>\n</ul>\n</li>\n<li>Inflation rate<ul>\n<li><strong>use deflater to calculate</strong></li>\n<li>(GDP2-GDP1)/GDP1*100</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/gdp-formula.png\" alt=\"\"></li>\n</ul>\n<p>GDP data</p>\n<ul>\n<li>Growth – average 3% per year since 1965</li>\n<li>now is the best single measure of the economic well-being of a society</li>\n<li>still not a perfect measure of well-being<ul>\n<li>Doesn’t include<ul>\n<li>Leisure</li>\n<li>Value of almost all activity that takes place outside markets</li>\n<li>Quality of the environment</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Gross Domestic Product does not allow for the health of our children, the quality of their education, or the joy of their play.  It does not include the beauty of our poetry or the strength of our marriages, the intelligence of our public debate or the integrity of our public officials. It measures neither our courage, nor our wisdom, nor our devotion to our country.  It measures everything, in short, except that which makes life worthwhile, and it can tell us everything about America except why we are proud that we are Americans. - Senator Robert Kennedy, 1968</p>\n</blockquote>\n<h2 id=\"Chap24-Measuring-the-Cost-of-Living\"><a href=\"#Chap24-Measuring-the-Cost-of-Living\" class=\"headerlink\" title=\"Chap24 Measuring the Cost of Living\"></a>Chap24 Measuring the Cost of Living</h2><p>Consumer price index (CPI)</p>\n<ul>\n<li>overall level of prices</li>\n<li>overall cost of goods and services ought by a typical consumer</li>\n</ul>\n<p>Caluclating CPI</p>\n<ol>\n<li>Fix the basket<ul>\n<li>assign different weight for goods and services for typical consumer</li>\n</ul>\n</li>\n<li>Find the prices</li>\n<li>Choose a base year</li>\n<li>Compute CPI and inflation rate</li>\n</ol>\n<ul>\n<li>Inflation rate<ul>\n<li>Percentage change in the price index</li>\n</ul>\n</li>\n<li>Producer price index(PPI)<ul>\n<li>Measure of the cost of a basket of goods and services bought <strong>by firms</strong></li>\n<li>can simulate the change in CPI</li>\n</ul>\n</li>\n</ul>\n<p>Problems in measuring the cost of living</p>\n<ul>\n<li><p>Substitution bias</p>\n<ul>\n<li>Prices do not change proportionately</li>\n<li>Consumers substitute toward goods that have become relatively less expensive<ul>\n<li>尋找替代品</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>New type of goods</p>\n</li>\n<li><p>Unmeasured quality change</p>\n<ul>\n<li>If quality increase/decrease, CPI doesn’t change</li>\n</ul>\n</li>\n<li><p>Billion Prices Project: 根據70個國家300個線上零售商所銷售的5佰萬個項目(美國大約50萬個項目)編製通膨指標</p>\n<ul>\n<li>他們發現零售價格並不常改變，但一旦改變，幅度較過去經濟學家的認知為大</li>\n</ul>\n</li>\n<li><p>Google Price Index: Hal Varian採用Google網站大量資料庫建立</p>\n<ul>\n<li>此通膨指標與官方CPI指標走勢接近，但近來反映出通縮的情形</li>\n</ul>\n</li>\n<li><p>核心物價 (Core Inflation)：消費者物價指數扣除蔬果及能源部份又稱核心CPI</p>\n<ul>\n<li>因為蔬果及能源的物價波動大</li>\n</ul>\n</li>\n<li><p>通縮（Deflation）：通貨膨脹率低於0%的情形</p>\n<ul>\n<li>為何人們所感受的通膨與CPI所顯示的有所差異?<ul>\n<li>CPI的計算誤差</li>\n<li>日用品變貴→物價變高的錯覺</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"GDP-deflator-versus-CPI\"><a href=\"#GDP-deflator-versus-CPI\" class=\"headerlink\" title=\"GDP deflator versus CPI\"></a>GDP deflator versus CPI</h3><ul>\n<li>GDP deflator<ul>\n<li>nominal GDP / real GDP</li>\n<li>反映國內的<strong>生產</strong>價值變動</li>\n</ul>\n</li>\n<li>CPI<ul>\n<li>反映<strong>消費</strong>物價的變動(包含權重)</li>\n</ul>\n</li>\n</ul>\n<p>目前的物價變動 <img data-src=\"/img/eco2/inflation-rate.png\" alt=\"\"></p>\n<ul>\n<li>有跟據物價波動來付費的合約(如房租)</li>\n<li>COLA(Cost of living allowance)<ul>\n<li>adjusts salaries based on changes in CPI</li>\n<li>Salaries are typically adjusted annually. They may also be tied to a cost-of-living index that varies by geographic location if the employee moves. In this later case, the expatriate employee will likely see only the discretionary income part of their salary indexed by a differential CPI between the new and old employment locations, leaving the non-discretionary part of the salary (e.g., mortgage payments, insurance, car payments) unmodified.</li>\n</ul>\n</li>\n</ul>\n<p>Salary Comparison by CPI</p>\n<ul>\n<li>Babe Ruth 只有A.Rodriguez 的4％</li>\n<li>President Hoover 1931年的薪資比Obama高了許多</li>\n</ul>\n<p>總票房若以通膨調整</p>\n<ul>\n<li><p>Gone with the Wind（飄）在1939年發片，每個星期有9仟萬美國人到戲院觀看，票價才0.25美元</p>\n<ul>\n<li>調整後16億零4佰萬美元，躍居第1</li>\n</ul>\n</li>\n<li><p>Star War（星際戰爭）14億1仟4佰萬美元居第2</p>\n</li>\n<li><p>Avatar降為第4</p>\n</li>\n<li><p>Real interest rate</p>\n<ul>\n<li>Nominal interest rate – Inflation rate</li>\n</ul>\n</li>\n<li><p><img data-src=\"/img/eco2/interest-rate.png\" alt=\"\"> <img data-src=\"/img/eco2/taiwan-interest-rate.png\" alt=\"\"></p>\n<ul>\n<li>197x: 石油危機</li>\n<li>2008: 金融海嘯</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap25-Production-and-Growth\"><a href=\"#Chap25-Production-and-Growth\" class=\"headerlink\" title=\"Chap25 Production and Growth\"></a>Chap25 Production and Growth</h2><ul>\n<li>根據American heritage雜誌的報導，石油企業家John D. Rockefeller是美國最富有的人，以目前的價值估算，其財高達2,000億美元，是微軟創辦人Bill Gate的三倍<ul>\n<li>但是在他的年代裏，並沒有電視、冷氣空調，大多數時間沒有汽車或飛機，缺乏電訊、冰箱</li>\n<li>請問您願意以目前所享有的方便性換取他的財富嗎？</li>\n</ul>\n</li>\n</ul>\n<p>Productivity</p>\n<ul>\n<li>Amount of goods and services produced from <strong>each unit of labor input</strong></li>\n</ul>\n<p>Why productivity is so important</p>\n<ul>\n<li>Key determinant(判定) of <strong>living standards</strong></li>\n<li>An economy’s income is the economy’s output</li>\n</ul>\n<p>Determinants of productivity</p>\n<ul>\n<li>Physical capital(物質資本) per worker<ul>\n<li>equipment and structures</li>\n<li>The things used to produce goods and services</li>\n</ul>\n</li>\n<li>Human capital per worker<ul>\n<li>Knowledge and skills aquired through education, training, and experience<ul>\n<li><strong>total effort</strong> of acquiring knowledge</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Natural resources per worker<ul>\n<li>Total <strong>inputs</strong> for the production</li>\n<li>土地、河流、礦產</li>\n</ul>\n</li>\n<li>Technological knowledge<ul>\n<li><strong>Society’s understanding</strong> of the best ways to produce goods and services</li>\n<li>專利、技術、know-how</li>\n</ul>\n</li>\n</ul>\n<p>Limit</p>\n<ul>\n<li><strong>Natural resources set the limit of world’s economy</strong></li>\n<li>Fixed supply of nonrenewable natural resources will run out<ul>\n<li>Will Force living standards to fall</li>\n</ul>\n</li>\n<li>Technological progress yields ways to avoid these limits<ul>\n<li>Improved use of natural resources over time</li>\n<li>Recycling</li>\n<li>New materials</li>\n</ul>\n</li>\n</ul>\n<p>Prices of natural resources</p>\n<ul>\n<li>因具有稀少性 → 貴<ul>\n<li>常有短期波動</li>\n<li>長期價格平穩</li>\n<li>經濟增長愈快，使用愈多，其供給就愈少</li>\n</ul>\n</li>\n</ul>\n<p>Production function</p>\n<ul>\n<li>Y = A times F(L, K, H, N)<ul>\n<li>F is a function<ul>\n<li>Doubling <strong>all inputs</strong> causes output to double<ul>\n<li>2Y  =  A F(2L, 2K, 2H, 2N)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>A is the level of technology<ul>\n<li>Relatively important</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Raise future productivity</p>\n<ul>\n<li>Invest more to produce capital<ul>\n<li>But fewer resources to produce goods and services for current consumption</li>\n</ul>\n</li>\n<li>Higher savings rate<ul>\n<li>In the long run<ul>\n<li>Capital stock increases</li>\n<li><strong>Higher level of productivity</strong></li>\n<li><strong>Higher level of income</strong></li>\n<li><strong>More rapid growth in GDP</strong></li>\n<li><strong>Not higher growth in productivity or income</strong><ul>\n<li>邊際效益遞減</li>\n<li>沒辦法無限增加生產力</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Catch-up effect(追趕效應)</p>\n<ul>\n<li>指在其他條件相同的情況下，如果一國開始時較貧窮，它就更傾向於比開始時就富裕的國家經濟增長更快<ul>\n<li>少量的資本投資就會大大提高這些工人的生產率</li>\n</ul>\n</li>\n</ul>\n<p>Investment from abroad</p>\n<ul>\n<li>Foreign direct investment<ul>\n<li>Capital investment that is owned and operated by a foreign entity</li>\n</ul>\n</li>\n<li>Foreign portfolio investment(間接投資)<ul>\n<li>投資者以其資本購買公司債券、金融債券或公司股票等各種有價債券，以預期獲取一定收益的投資</li>\n</ul>\n</li>\n<li>Benefits from investment<ul>\n<li>Some benefit flow back to the foreign capital owners</li>\n<li>Increase the economy’s stock of capital<ul>\n<li>Higher productivity</li>\n<li>Higher wages</li>\n<li>State-of-the-art technologies</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>World Bank and International Monetary Fund(IMF)</p>\n<ul>\n<li>Encourages investment to poor countries</li>\n<li>Funds from rich countries(Why?)</li>\n<li>Advice about how the funds might best be used(Why?)</li>\n<li>Becuase Economic distress leads to bad consequence<ul>\n<li>Political turmoil, international tensions, and military conflict<ul>\n<li>ISIS, North Korea</li>\n</ul>\n</li>\n<li>Every country want to promoting economic prosperity(繁榮) around the world</li>\n</ul>\n</li>\n</ul>\n<p>Education</p>\n<ul>\n<li>can be considered as both consumption and investment</li>\n<li>Investment in human capital</li>\n<li>Opportunity cost: wages forgone(接受教育而不工作的機會成本，即薪水的損失)</li>\n<li>Problem for poor countries: Brain drain(人才外流)</li>\n</ul>\n<p>Human capital</p>\n<ul>\n<li>Education cost</li>\n<li>Health cost<ul>\n<li>cause long-run economic growth<ul>\n<li>Improved health – better nutrition</li>\n<li>Taller workers – higher wages – better productivity</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Wages<ul>\n<li>Reflect a worker’s productivity</li>\n</ul>\n</li>\n</ul>\n<p>Vicious circle in poor countries</p>\n<ul>\n<li>Poor countries are poor<ul>\n<li>Because their populations are not healthy</li>\n</ul>\n</li>\n<li>Populations are not healthy<ul>\n<li>Because they are poor and cannot afford better health care and nutrition</li>\n</ul>\n</li>\n</ul>\n<p>determinents of economic growth</p>\n<ul>\n<li>Political stability</li>\n<li>Government<ul>\n<li>encourages research and development<ul>\n<li>Research grants</li>\n</ul>\n</li>\n<li>Tax breaks</li>\n<li>Patent system</li>\n<li>Protect property rights(財產權)</li>\n<li>Corruption<ul>\n<li>Impedes the coordinating power of markets</li>\n<li>Discourages domestic saving</li>\n<li>Discourages investment from abroad</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Large population<ul>\n<li>Advantages<ul>\n<li>More workers → More Output</li>\n<li>More consumers</li>\n<li>Promoting technological progress<ul>\n<li>More people → More scientists, more inventors, more engineers</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Disadvantages<ul>\n<li>But average natural resources decrease<ul>\n<li>Theory of Malthus<ul>\n<li>natural resources cannot affrod the growth of popolation</li>\n<li>doomed to forever live in poverty</li>\n<li>In fact, by technology growth, we can break this assumption</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Diluting(稀釋) the capital<ul>\n<li>Lower productivity per worker</li>\n<li>Lower GDP per worker</li>\n</ul>\n</li>\n<li>Reducing the rate of population growth<ul>\n<li>Government regulation</li>\n<li>Give More work opportunities for women with no child</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Inward-oriented policies(內部導向政策)</p>\n<ul>\n<li>Avoid interaction with the rest of the world</li>\n<li>Infant-industry argument(保護產業)<ul>\n<li>Tariffs(關稅)</li>\n</ul>\n</li>\n<li>Not good for economic growth</li>\n</ul>\n<p>Amount of trade – determined by</p>\n<ul>\n<li>Government policy</li>\n<li>Geography</li>\n<li>過去有些論點認為國家間所得的不均是因為<ul>\n<li>法國政治學者Montesquieu：在熱帶地區的人比較懶？(比較熱的原因？)</li>\n<li>Max Weber：道德？</li>\n<li>Jeffery Sachs：地理與氣候因素。貧窮國家土壤貧瘠，熱帶瘟疫，尤其是瘧疾。</li>\n<li>Jared Diamond：歷史既有植物與動物品種以及技術的進步。</li>\n<li>人們需要誘因去投資與繁榮。他們需確定辛勤工作的成果會被確保，即法律、安全與管理體制來確保工作成果與創新。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap26-Saving-Investment-and-the-Financial-System-投資、儲蓄與金融體系\"><a href=\"#Chap26-Saving-Investment-and-the-Financial-System-投資、儲蓄與金融體系\" class=\"headerlink\" title=\"Chap26 Saving, Investment, and the Financial System 投資、儲蓄與金融體系\"></a>Chap26 Saving, Investment, and the Financial System 投資、儲蓄與金融體系</h2><ul>\n<li><p>from an employee’s point of view, owning stock in the company can be risky</p>\n</li>\n<li><p>The employee’s wages or salary is already tied to how well the firm performs</p>\n<ul>\n<li>put eggs to the same bucket</li>\n</ul>\n</li>\n<li><p>If households believe that greater government borrowing today implies higher taxes to pay off the government debt in the future</p>\n<ul>\n<li>will save more so they can pay the higher future taxes</li>\n<li>private saving ↑ , supply of loanable funds ↑<ul>\n<li>reducing quantity of investment<ul>\n<li>national saving decline</li>\n</ul>\n</li>\n<li>reducing the amount interest rate rises</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>investment can be increased by</p>\n<ul>\n<li>reducing taxes on private saving<ul>\n<li>which increase the government budget deficit</li>\n</ul>\n</li>\n<li>reducing the government budget deficit</li>\n</ul>\n</li>\n</ul>\n<p>Financial Institutions</p>\n<ul>\n<li>Financial system<ul>\n<li>Moves the economy’s scarce resources from savers to borrowers</li>\n</ul>\n</li>\n<li>Financial institutions<ul>\n<li>Financial markets<ul>\n<li>Savers can directly provide funds to borrowers<ul>\n<li>bond market</li>\n<li>stock market</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Financial intermediaries</li>\n</ul>\n</li>\n</ul>\n<p>The bond market(債券市場)</p>\n<ul>\n<li>Terms<ul>\n<li>Date of maturity: when the loan will be repaid</li>\n<li>Term: length of time until maturity</li>\n<li>interest will be paid periodically until the date of maturity</li>\n<li>Principal: amount borrowed</li>\n</ul>\n</li>\n<li>Credit risk<ul>\n<li>Probability that the borrower will fail to pay some of the interest or principal<ul>\n<li>U.S. government bonds tend to pay low interest rates</li>\n<li>Junk bonds, very high interest rates Issued by financially shaky corporations</li>\n</ul>\n</li>\n<li>Long-term bonds are riskier than short-term bonds and have higher interest rate</li>\n</ul>\n</li>\n<li>Borrowing from the public<ul>\n<li>Used by large corporations, the federal government, or state and local governments</li>\n</ul>\n</li>\n<li>Tax treatment<ul>\n<li>Interest usually is taxable income</li>\n<li>Municipal bonds(市政債券)<ul>\n<li>Issued by state and local governments</li>\n<li>Owners are not required to pay federal income tax on the interest income</li>\n<li>Lower interest rate</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Stock market</p>\n<ul>\n<li>Stock: claim to partial ownership and profits in a firm</li>\n<li>Stock prices: demand and supply</li>\n<li>Equity finance(股權融資)<ul>\n<li>Sell stock to raise money</li>\n</ul>\n</li>\n<li>Stock index<ul>\n<li>Average of a group of stock prices</li>\n</ul>\n</li>\n</ul>\n<p>Financial intermediaries(金融中介)</p>\n<ul>\n<li>金融市場上資金融通過程中,在資金供求者之間起媒介或橋樑作用的人或機構(indirectly)</li>\n<li>Banks<ul>\n<li>Take in deposits from savers</li>\n<li>Make loans to borrowers</li>\n<li>Facilitate(使有效率) purchasing of goods and services</li>\n</ul>\n</li>\n<li>Mutual funds(共同基金)<ul>\n<li>sells shares(股份) to the public</li>\n<li>then buy a portfolio of stocks and bonds</li>\n<li>Advantages<ul>\n<li>Diversification(多樣化)</li>\n<li>professional money managers</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>National Income Accounts</p>\n<ul>\n<li>identities that calculate national income</li>\n<li>Y = C + I + G + NX<ul>\n<li>Clarify how different variables are related to one another</li>\n<li>Assume closed economy: NX = 0<ul>\n<li>Y = C + I + G</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>National saving (saving), S<ul>\n<li>Total income in the economy that remains after paying for consumption and government purchases</li>\n<li>S = Y - C - G = I</li>\n</ul>\n</li>\n<li>S = (Y – T – C) + (T – G)<ul>\n<li>T = taxes - transfer payments</li>\n<li>Private saving: Y – T – C<ul>\n<li><strong>revenue households have left</strong> after paying for taxes and consumption</li>\n</ul>\n</li>\n<li>Public saving: T – G<ul>\n<li><strong>revenue of government</strong><ul>\n<li>Budget surplus: T – G &gt; 0<ul>\n<li>支出 &lt; 收入</li>\n</ul>\n</li>\n<li>Budget deficit: T – G &lt; 0<ul>\n<li>支出 &gt; 收入</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Accounting identity: S = I</p>\n<ul>\n<li>Saving = Investment For the economy as a whole<ul>\n<li>doesn’t account foreign economy</li>\n</ul>\n</li>\n<li>One person’s savings is another person’s investment</li>\n</ul>\n<p>Market for loanable funds</p>\n<ul>\n<li>Market<ul>\n<li>savers and borrowers</li>\n</ul>\n</li>\n<li>cost of borrowing = real interest rate</li>\n<li>Assumption<ul>\n<li>Only one financial market</li>\n</ul>\n</li>\n</ul>\n<p>Supply and demand of loanable funds(可貸資金)</p>\n<ul>\n<li>supply of loanable funds: National Saving<ul>\n<li>利率愈高，可借資金愈多</li>\n</ul>\n</li>\n<li>demand for loanable funds: Investment<ul>\n<li>利率愈高，借貸資金需求愈少</li>\n<li>Firms: new equipment, factories…</li>\n<li>Households: new houses</li>\n</ul>\n</li>\n</ul>\n<p>Government policies</p>\n<ul>\n<li>Can affect the economy’s saving and investment</li>\n<li>Saving incentives(刺激；鼓勵)<ul>\n<li>raise tax rate to encourage to save more<ul>\n<li>Increase supply</li>\n<li>→ Supply curve shifts right</li>\n<li>→ Lower interest rate and Higher quantity of loanable funds</li>\n<li>Greater investment</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Investment incentives(刺激；鼓勵)<ul>\n<li>tax credit(退稅) encouraged firms to invest more</li>\n<li>Demand ↑: Demand curve shifts right</li>\n<li>→ Higher interest rate</li>\n<li>→ Higher quantity of loanable funds</li>\n<li>Greater saving</li>\n</ul>\n</li>\n<li>Conclusion: Saving incentives and Investment incentives have the same effect for saving and investment, but interest rate changed is different</li>\n</ul>\n<p>Government revenue</p>\n<ul>\n<li>Budget deficit<ul>\n<li>supply ↓</li>\n<li>→ Supply curve shifts left</li>\n<li>→ Higher interest rate</li>\n<li>→ Smaller quantity of loanable funds</li>\n<li>→ Investment falls</li>\n<li>Crowding out(擠出效應)<ul>\n<li>investment↓ because of government borrowing</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Budget surplus<ul>\n<li>Increase supply</li>\n<li>Reduce interest rate</li>\n<li>Stimulates investment</li>\n</ul>\n</li>\n</ul>\n<p>Debt of U.S. federal government</p>\n<ul>\n<li>As a percentage of U.S. GDP<ul>\n<li>0% of GDP in 1836</li>\n<li>107% of GDP in 1945</li>\n</ul>\n</li>\n<li>負債的增減和稅收能力有關<ul>\n<li>Fiscal policy(財政政策) cannot be sustained forever at current levels<ul>\n<li>debt-to-GDP ratio will finally increase <img data-src=\"/img/eco2/debt-to-gdp-us.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>War: 負債變動主因</li>\n</ul>\n<h3 id=\"Debt-History-in-USA\"><a href=\"#Debt-History-in-USA\" class=\"headerlink\" title=\"Debt History in USA\"></a>Debt History in USA</h3><p>President Ronald Reagan, 1981</p>\n<ul>\n<li>Large increase in government debt – not explained by war</li>\n<li>Committed to smaller government and lower taxes</li>\n<li>Cutting government spending - more difficult politically than cutting taxes</li>\n<li>Period of <strong>large budget deficits</strong></li>\n<li>Government debt: 26% of GDP in 1980 to 50% of GDP in 1993</li>\n</ul>\n<p>President Bill Clinton, 1993</p>\n<ul>\n<li>Major goal - deficit reduction</li>\n<li>Booming economy in the late 1990s brought in even more tax revenue</li>\n<li>Eventually: surplus (federal budget)</li>\n<li>By the late 1990s: debt-to-GDP ratio – declining for several years</li>\n</ul>\n<p>President George W. Bush</p>\n<ul>\n<li>Debt-to-GDP ratio started rising again</li>\n<li>Budget deficit<ul>\n<li>Several major tax cuts</li>\n<li>2001 recession - decreased tax revenue and increased government spending</li>\n</ul>\n</li>\n<li>Increased government spending on homeland security<ul>\n<li>Following the September 11, 2001 attacks</li>\n<li>Subsequent wars in Iraq and Afghanistan</li>\n</ul>\n</li>\n</ul>\n<p>2008, financial crisis and deep recession</p>\n<ul>\n<li>Dramatic increase in the debt-to-GDP ratio</li>\n<li>Increased budget deficit2008, financial crisis and deep recession</li>\n<li>Several policy measures passed by the Bush and Obama administrations<ul>\n<li>Aimed at combating the recession</li>\n<li>Reduced tax revenue</li>\n<li>Increased government spending</li>\n</ul>\n</li>\n</ul>\n<p>From 2009 to 2012</p>\n<ul>\n<li>The federal government’s budget deficit averaged about 9% of GDP <img data-src=\"/img/eco2/debt-to-gdp-2008.png\" alt=\"\"><ul>\n<li>Levels not seen since World War II</li>\n</ul>\n</li>\n<li>The borrowing to finance these deficits Led to the substantial increase in the debt-to-GDP ratio</li>\n</ul>\n<p>2008 financial crisis</p>\n<ul>\n<li>Large decline in some asset prices<ul>\n<li>2008–2009: Housing prices fell 30%</li>\n</ul>\n</li>\n<li>Insolvencies at financial institutions<ul>\n<li>2008–2009: Banks and other institutions failed when many homeowners stopped paying their mortgages(房地產)</li>\n</ul>\n</li>\n<li>Decline in confidence in financial institutions<ul>\n<li>2008–2009: Customers with uninsured deposits(超額保險存戶) began pulling their funds out of financial institutions</li>\n</ul>\n</li>\n<li>Credit crunch(緊縮信貸)<ul>\n<li>難以取得投資資金的經濟環境</li>\n<li>2008–2009:  Borrowers unable to get loans because troubled lenders not confident in borrowers’ credit-worthiness</li>\n</ul>\n</li>\n<li>Economic downturn<ul>\n<li>2008–2009: Failing financial institutions(制度) and a fall in investment caused GDP to fall and unemployment to rise</li>\n</ul>\n</li>\n<li>Vicious circle<ul>\n<li>2008–2009: The downturn reduced profits and asset values, which worsened the crisis</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h3><p>Financial markets link the present to the future</p>\n<ul>\n<li>savers convert current income into future purchasing power</li>\n<li>borrowers acquire capital to produce goods and services in the future</li>\n</ul>\n<h2 id=\"Chap27-The-Basic-Tools-of-Finance-財務金融分析的基本工具\"><a href=\"#Chap27-The-Basic-Tools-of-Finance-財務金融分析的基本工具\" class=\"headerlink\" title=\"Chap27 The Basic Tools of Finance 財務金融分析的基本工具\"></a>Chap27 The Basic Tools of Finance 財務金融分析的基本工具</h2><p>The financial system: saving and investment</p>\n<ul>\n<li>Two related elements: Time and Risk<ul>\n<li>Participants in the financial system make decisions regarding the allocation of resources over time and the handling of risk</li>\n</ul>\n</li>\n<li>Finance is the field that studies such decision making</li>\n</ul>\n<p>Present Value: The Time Value of Money</p>\n<ul>\n<li>To compare sums from different times<ul>\n<li>The present value of future sum: future value - interest from now to the future</li>\n<li>The future value of a sum: value at a given future date = now value + interest in the future</li>\n</ul>\n</li>\n<li>Present value formula:  PV = FV/(1 + r )^N</li>\n<li>Present value helps explain why <strong>investment falls when the interest rate rises</strong></li>\n</ul>\n<p>Compounding(複利): the accumulation of a sum of money where the interest earned on the sum earns additional interest</p>\n<ul>\n<li>Because of compounding, small differences in interest rates lead to big differences over time</li>\n<li>Albert Einstein called compounding “the greatest mathematical discovery of all time”</li>\n<li>The Rule of 70<ul>\n<li>If a variable grows at a rate of x percent per year, that variable will double in about 70/x years</li>\n<li>If interest rate is 5%, a deposit will double in about 14 years</li>\n<li>If interest rate is 7%, a deposit will double in about 10 years</li>\n</ul>\n</li>\n</ul>\n<p>Risk Aversion(風險迴避)</p>\n<ul>\n<li>Most people are risk averse: they dislike uncertainty</li>\n<li>You are offered the following gamble. Toss a fair coin. If heads, you win $1000. If tails, you lose $1000<ul>\n<li>Should you take this gamble?</li>\n<li>If you are risk averse, the pain of losing $1000 would exceed the pleasure of winning $1000, so you should not take this gamble</li>\n</ul>\n</li>\n<li>Utility Function<ul>\n<li>measure of well-being that depends on wealth</li>\n<li>As wealth rises, the curve becomes flatter due to diminishing marginal utility(邊際效用遞減)<ul>\n<li>the more wealth a person has, the less extra utility he would get from an extra dollar</li>\n<li><img data-src=\"/img/eco2/utility-function.jpg\" alt=\"\"></li>\n<li><img data-src=\"/img/eco2/utility-function-slope.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Managing Risk With Insurance</p>\n<ul>\n<li>A person facing a risk pays a fee to the insurance company, which in return accepts part or all of the risk</li>\n<li>Insurance allows risks to be pooled, and can make risk averse people better off<ul>\n<li>E.g., it is easier for 10,000 people to each bear 1/10,000 of the risk of a house burning down than for one person to bear the entire risk alone</li>\n</ul>\n</li>\n<li>Not to eliminate the risks<ul>\n<li>Spread the risks around more efficiently</li>\n</ul>\n</li>\n</ul>\n<p>Two Problems in Insurance Markets</p>\n<ol>\n<li>Adverse selection<ul>\n<li>A high-risk person benefits more from insurance, so is more likely to purchase it</li>\n</ul>\n</li>\n<li>Moral hazard<ul>\n<li>People with insurance have less incentive to avoid risky behavior</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>Insurance companies cannot fully guard against these problems, so they must charge higher prices</li>\n<li>As a result, low-risk people sometimes doesn’t join insurance and lose the benefits of risk-pooling</li>\n</ul>\n<p>We can measure risk by standard deviation</p>\n<ul>\n<li>which means how likely it is to fluctuate(變動)</li>\n<li>The higher the standard deviation of the asset’s return, the greater the risk</li>\n</ul>\n<p>Diversification reduces risk by replacing a single risk with a large number of smaller, unrelated risks</p>\n<ul>\n<li>A diversified portfolio contains assets whose <strong>returns are not strongly related</strong></li>\n<li>Some assets will realize high returns, others low returns</li>\n<li>The high and low returns average out, so the portfolio is likely to earn an intermediate return more consistently than any of the assets it contains</li>\n<li>Diversification can reduce firm-specific risk, which affects only a single company</li>\n<li>Diversification cannot reduce market risk, which affects all companies in the stock market</li>\n<li><img data-src=\"/img/eco2/diversification.jpg\" alt=\"\"></li>\n<li>Suppose you are dividing your portfolio between two asset classes<ul>\n<li>A diversified group of risky stocks<ul>\n<li>average return = 8%, standard dev. = 20%</li>\n</ul>\n</li>\n<li>A safe asset<ul>\n<li>return = 3%, standard dev. = 0%</li>\n</ul>\n</li>\n<li>The risk and return on the portfolio(投資組合) depends on the percentage of two asset</li>\n</ul>\n</li>\n</ul>\n<p>Tradeoff Between Risk and Return</p>\n<ul>\n<li>Riskier assets pay a higher return, on average, to compensate for the extra risk of holding them</li>\n<li>E.g., over past 200 years, average real return on stocks, 8%.  On short-term govt bonds, 3%.</li>\n</ul>\n<p>Value of a share = (PV of any dividends(股息) the stock will pay) + (PV of the price you get when you sell the share)</p>\n<ul>\n<li>Problem: When you buy the share, you don’t know what future dividends or prices will be</li>\n<li>One way to value a stock:  fundamental analysis<ul>\n<li>the study of a company’s accounting statements and future prospects to determine its value</li>\n</ul>\n</li>\n<li>Buy a mutual fund<ul>\n<li>A manager conducts fundamental analysis and makes the decision for you</li>\n</ul>\n</li>\n</ul>\n<p>Your broker calls you with a hot tip about a stock: new information suggests that the company will be highly profitable. Should you buy stock in the company?</p>\n<ul>\n<li>No!<ul>\n<li>EVERYONE knows this stock is good</li>\n<li>You are late</li>\n</ul>\n</li>\n<li>you can only earns when new information is not spreading yet</li>\n<li>everyone believes will experience big profits in the future, the price-earnings ratio is likely to be high. The price is high because it reflects everyone’s expectations about the firm’s future earnings. The largest disadvantage in buying these stocks is that they may be currently overvalued and may not pay off in the future</li>\n</ul>\n<p>Efficient Markets Hypothesis (EMH)</p>\n<ul>\n<li>the theory that each asset price reflects all publicly available information about the value of the asset</li>\n<li>衡量證券市場是否具有外在效率有兩個標誌：一是價格是否能自由地根據有關信息而變動；二是證券的有關信息能否充分地披露和均勻地分佈，使每個投資者在同一時間內得到等量等質的信息。根據這一假設，投資者在買賣股票時會迅速有效地利用可能的信息.所有已知的影響一種股票價格的因素都已經反映在股票的價格中，因此根據這一理論，股票的技術分析是無效的</li>\n<li>Stock market is informationally efficient<ul>\n<li>Each stock price reflects all available information about the value of the company</li>\n</ul>\n</li>\n<li>Stock prices follow a <strong>random walk</strong><ul>\n<li>A stock price only changes in response to new information (“news”) about the company’s value</li>\n<li>News cannot be predicted, so stock price movements should be impossible to predict</li>\n</ul>\n</li>\n<li>It is impossible to systematically beat the market<ul>\n<li>By the time the news reaches you, mutual fund managers will have already acted on it</li>\n</ul>\n</li>\n</ul>\n<p>Index Funds vs. Managed Funds</p>\n<ul>\n<li>An index fund is a mutual fund that buys all the stocks in a given stock index</li>\n<li>An actively managed mutual fund aims to buy only the best stocks<ul>\n<li>have higher expenses than index funds</li>\n</ul>\n</li>\n<li>EMH implies that returns on actively managed funds should not consistently exceed the returns on index funds</li>\n<li><img data-src=\"/img/eco2/index-managed-funds.jpg\" alt=\"\"></li>\n<li>Active portfolio managers<ul>\n<li>Lower return than index funds</li>\n<li>Trade more frequently</li>\n<li>Incur more trading costs</li>\n<li>Charge greater fees</li>\n<li>Only 25% of managers beat the market</li>\n</ul>\n</li>\n</ul>\n<p>Efficient markets hypothesis</p>\n<ul>\n<li>Assumes that people buying and selling stock are rational<ul>\n<li>In fact, Partly psychological(irrational)<ul>\n<li>J.M. Keynes:  stock prices driven by “animal spirits,” “waves of pessimism and optimism”</li>\n<li>Alan Greenspan:  1990s stock market boom due to “irrational exuberance”</li>\n<li>Bubbles occur when speculators buy overvalued assets expecting prices to rise further</li>\n<li>The importance of departures from rational pricing is not known</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>When price of an asset above its fundamental value</p>\n<ul>\n<li>experiencing a speculative(投機) bubble<ul>\n<li>Value of the stock to a stockholder depends on<ul>\n<li>Stream of dividend payments</li>\n<li>Final sale price</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Debate: frequency and importance of departures from rational pricing</li>\n<li>Market irrationality</li>\n<li>Movement in stock market is hard to explain<ul>\n<li>news that alter a rational valuation</li>\n</ul>\n</li>\n<li>BREAK Efficient markets hypothesis</li>\n</ul>\n<h2 id=\"Chap28-Unemployment\"><a href=\"#Chap28-Unemployment\" class=\"headerlink\" title=\"Chap28 Unemployment\"></a>Chap28 Unemployment</h2><p>Based on adult population (16 yrs or older)</p>\n<ul>\n<li><p>Labor force = employed + unemployed</p>\n<ul>\n<li>Employed: paid employees, <strong>self-employed</strong>, and <strong>unpaid workers in a family business</strong>, part-time workers</li>\n<li>Unemployed: people not working who have <strong>looked for work</strong> during previous 1 month</li>\n</ul>\n</li>\n<li><p>Not in the labor force</p>\n<ul>\n<li><strong>full-time student, homemakers, and retirees</strong></li>\n</ul>\n</li>\n<li><p>Unemployment rate</p>\n<ul>\n<li>Fluctuates(變動) around the natural rate of unemployment</li>\n</ul>\n</li>\n<li><p>Labor-force participation rate</p>\n<ul>\n<li>= labor force / adult population</li>\n<li>ratio choose to participate in the labor market</li>\n</ul>\n</li>\n</ul>\n<p>Labor markets Analysis</p>\n<ul>\n<li>Race: black have higher rates of unemployment<ul>\n<li><img data-src=\"/img/eco2/race-unemployment-rate.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>Gender: women have lower rates of labor force participation<ul>\n<li><img data-src=\"/img/eco2/gender-participation-rate.png\" alt=\"\"><ul>\n<li>similar rates of unemployment</li>\n</ul>\n</li>\n<li>Women: Growing participation rate<ul>\n<li>New technologies reduced time for routine household tasks</li>\n<li>Improved birth control reduced the number of children born</li>\n<li>Changing political and social attitudes</li>\n</ul>\n</li>\n<li>Men: Falling labor-force participation<ul>\n<li>Young men stay in school longer</li>\n<li>Older men retire earlier and live longer</li>\n<li>More fathers now stay at home to raise their children</li>\n<li>More women employed</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Age<ul>\n<li>Much higher rates of unemployment than older workers</li>\n</ul>\n</li>\n<li>Countries<ul>\n<li>Taiwan <img data-src=\"/img/eco2/taiwan-labor-data.png\" alt=\"\"></li>\n<li>USA <img data-src=\"/img/eco2/us-labor-data.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>Property</p>\n<ul>\n<li>More than one-third of unemployed are new labor force</li>\n<li>Not all unemployment ends with finding a job<ul>\n<li>Half of unemployment end when the unemployed leaves the labor force</li>\n</ul>\n</li>\n<li>Some People reported unemployed<ul>\n<li>May not be trying hard to find a job<ul>\n<li>Want to qualify for a government help</li>\n</ul>\n</li>\n<li>Working but paid “under the table”</li>\n</ul>\n</li>\n<li>Some People out of labor force<ul>\n<li>Discouraged workers<ul>\n<li>give up looking for a job</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Most unemployment are short<ul>\n<li>Frictional(摩擦) unemployment<ul>\n<li>It takes time for workers to search for suitable jobs</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Most unemployment observed at any given time is long-term<ul>\n<li>Structural unemployment<ul>\n<li>insufficient to provide a job for everyone who wants</li>\n<li>When wages are set above the equilibrium by Minimum-wage laws, unions, and efficiency wages</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Job search</p>\n<ul>\n<li>Information about job is disseminated(散佈) slowly</li>\n<li>frictional unemployment is inevitable</li>\n</ul>\n<p>Government: facilitate job search</p>\n<ul>\n<li>Employment agencies</li>\n<li>Public training programs</li>\n<li>Unemployment insurance<ul>\n<li>protects workers’ incomes when they become unemployed</li>\n<li>Reduces the hardship of unemployment<ul>\n<li>Increases frictional unemployment</li>\n</ul>\n</li>\n<li>More likely to turn down unattractive job offers</li>\n<li>Less likely to seek guarantees of job security</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Three-reasons-for-above-equilibrium-wages\"><a href=\"#Three-reasons-for-above-equilibrium-wages\" class=\"headerlink\" title=\"Three reasons for above-equilibrium wages\"></a>Three reasons for above-equilibrium wages</h3><ul>\n<li>minimum wage laws</li>\n<li>unions</li>\n<li>efficiency wages</li>\n</ul>\n<p>Minimum-Wage Laws</p>\n<ul>\n<li>Structural unemployment<ul>\n<li>Number of jobs is insufficient</li>\n</ul>\n</li>\n<li>Can cause unemployment</li>\n<li>Forces the wage to remain above the equilibrium level</li>\n<li><img data-src=\"/img/eco2/minimum-wage.jpg\" alt=\"\"></li>\n</ul>\n<p>Union</p>\n<ul>\n<li>Worker association to bargain Wages, benefits, and working conditions</li>\n<li>11% of U.S. workers</li>\n<li>Type of <strong>cartel</strong><ul>\n<li>Collective bargaining(集體協商)</li>\n<li>Strike(罷工)</li>\n</ul>\n</li>\n<li>Earn 10-20% more than similar workers who do not belong to unions</li>\n<li>raises the wage above the equilibrium level<ul>\n<li>Workers in unions get the benefit of collective bargaining</li>\n<li>Workers not in unions bear some of the cost</li>\n</ul>\n</li>\n<li>Critics<ul>\n<li>Inefficient - high union wages reduce employment in unionized firms below the efficient level</li>\n<li>Inequitable - some workers benefit at the expense of other workers</li>\n</ul>\n</li>\n<li>Advocate<ul>\n<li>necessary antidote(解毒劑) to the market power</li>\n<li>help firms respond efficiently to workers’ concerns<ul>\n<li>Keep a happy and productive workforce</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Efficiency wages</p>\n<ul>\n<li>效率工資(Efficiency-wage）是指企業付給員工的高於市場出清水平的工資，這樣的工資能夠起到有效激勵專業人員的作用，可以提高生產率與企業經營績效，因此，這樣的高工資就是效率工資，也就是在這樣的工資水平支付下，勞動力成本的相對收益是最高的</li>\n</ul>\n<h2 id=\"Chap29-The-Monetary-System\"><a href=\"#Chap29-The-Monetary-System\" class=\"headerlink\" title=\"Chap29 The Monetary System\"></a>Chap29 The Monetary System</h2><p>Why money is important</p>\n<ul>\n<li>Without money, trade would require barter(以物易物)<ul>\n<li>a huge waste of additional resources</li>\n<li>This searching is unnecessary with money</li>\n</ul>\n</li>\n<li>Money<ul>\n<li>Set of assets in an economy that people regularly use to buy goods and services from other people</li>\n</ul>\n</li>\n</ul>\n<p>functions of money</p>\n<ul>\n<li>Medium of exchange:  an item buyers give to sellers</li>\n<li>Unit of account:  use to post prices and record debts</li>\n<li>Store of value:  transfer purchasing power from the present to the future</li>\n<li>Liquidity: asset can be converted into medium of exchange</li>\n</ul>\n<p>kinds of money</p>\n<ul>\n<li>Commodity(日用品) money<ul>\n<li>commodity with intrinsic value</li>\n<li>Examples: gold coins, cigarettes</li>\n</ul>\n</li>\n<li>Fiat(許可) money  <ul>\n<li>money without intrinsic value, used as money because of government decree</li>\n<li>Example:  the U.S. dollar</li>\n</ul>\n</li>\n</ul>\n<p>money supply (money stock): the quantity of money available in the economy</p>\n<ul>\n<li>M1: currency, demand deposits, traveler’s checks, and other <strong>checkable deposits</strong><ul>\n<li>M1 = $3.0 trillion (March 2015)</li>\n<li>Currency: the paper bills and coins</li>\n<li>Demand deposits(活期存款): balances in bank accounts that depositors can access on demand by writing a check</li>\n</ul>\n</li>\n<li>M2: M1 + savings deposits, small time deposits, money market mutual funds…<ul>\n<li>M2 = $11.9 trillion (March 2015)</li>\n</ul>\n</li>\n</ul>\n<p>Currency</p>\n<ul>\n<li>Much of the currency is held abroad</li>\n<li>Much of the currency is held by criminals</li>\n<li>Currency is not a particularly good way to hold wealth<ul>\n<li>Can be lost or stolen</li>\n<li>doesn’t earn interest</li>\n</ul>\n</li>\n</ul>\n<p>The Federal Reserve(Fed)</p>\n<ul>\n<li>central bank of the United States</li>\n<li>Purpose: to ensure the health of the nation’s banking system<ul>\n<li>Regulate banks</li>\n<li>Monitors each bank’s financial condition</li>\n<li>Facilitates bank transactions - clearing checks</li>\n</ul>\n</li>\n<li>Acts as a bank’s bank<ul>\n<li>lender of last resort(救助)</li>\n</ul>\n</li>\n<li><strong>Control the money supply</strong></li>\n</ul>\n<p>Federal Open Market Committee</p>\n<ul>\n<li>Setting of the money supply<ul>\n<li>primary tool: open-market operation<ul>\n<li>Purchase &amp; sale of U.S. government bonds</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>reserves</p>\n<ul>\n<li>Deposits that banks have received but have not loaned out<ul>\n<li>100% reserve banking: All deposits are held as reserves</li>\n</ul>\n</li>\n<li>Banks hold only a fraction of deposits as reserves<ul>\n<li>Reserve ratio: Fraction of deposits that banks hold as reserves</li>\n<li>Minimum amount of reserves is set by the Fed</li>\n</ul>\n</li>\n</ul>\n<p>Money multiplier</p>\n<ul>\n<li>Original deposit = $100.00</li>\n<li>First National lending = $ 90.00 [= .9 × $100.00]</li>\n<li>Second National lending = $ 81.00 [= .9 × $90.00]</li>\n<li>Third National lending = $ 72.90 [= .9 × $81.00]</li>\n<li>Total money supply = 100/0.1 = $1,000.00<ul>\n<li>Reciprocal of the reserve ratio = 1/R</li>\n</ul>\n</li>\n<li>The higher the reserve ratio, The smaller the money multiplier</li>\n<li>Increase in money supply<ul>\n<li>But Does not create wealth</li>\n</ul>\n</li>\n</ul>\n<p>Bank capital</p>\n<ul>\n<li>Resources a bank’s owners have put into the institution<ul>\n<li>generate profit</li>\n</ul>\n</li>\n</ul>\n<p>Banks create money by</p>\n<ul>\n<li>Assets(資產): Besides reserves and loans, banks also hold securities.  </li>\n<li>Liabilities(負債): Besides deposits, banks also obtain funds from issuing debt and equity(股東權益).</li>\n<li>Bank capital: the resources a bank obtains by issuing equity to its owners</li>\n<li>Leverage(槓杆): the use of borrowed funds to supplement existing funds for investment purposes<ul>\n<li>Leverage ratio: assets / bank capital<ul>\n<li>If ratio = 20, for every $20 in assets, $1 is from the bank’s owners, $19 is financed with borrowed money</li>\n<li>suppose bank assets appreciate by 5%, from $1000 to $1050.  This increases bank capital from $50 to $100, doubling owners’ equity</li>\n<li>Instead, if bank assets decrease by 5%, bank capital falls from $50 to $0.</li>\n<li>If bank assets decrease more than 5%, bank capital is negative and bank is insolvent<ul>\n<li>government set minimum amount of capital to ensure banks will be able to pay off depositors and debts</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Many banks in 2008 and 2009</p>\n<ul>\n<li>losses on some of their assets</li>\n<li>Shortage of capital induced the banks to reduce lending<ul>\n<li>Credit crunch(信用緊縮)<ul>\n<li>Contributed to a severe downturn in economic activity</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Put public funds into the banking system to increase bank capital<ul>\n<li>Temporarily made the U.S. taxpayer a part owner of many banks</li>\n<li>Goal: to recapitalize the banking system</li>\n</ul>\n</li>\n</ul>\n<p>Monetary Control</p>\n<ul>\n<li>Influences the quantity of reserves<ul>\n<li>Open-market operations<ul>\n<li>Purchase and sale of U.S. government bonds by the Fed</li>\n<li>Easy to conduct</li>\n<li>Used more often</li>\n</ul>\n</li>\n<li>Fed lending to banks<ul>\n<li>Discount window<ul>\n<li>At the discount rate<ul>\n<li>Interest rate on the loans that the Fed makes to banks</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Term Auction Facility<ul>\n<li>lend highest bidder money</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Influences the reserve ratio<ul>\n<li>Reserve requirements<ul>\n<li>Minimum amount of reserves that banks must hold against deposits</li>\n<li>Used rarely – disrupt business of banking</li>\n<li>Less effective in recent years<ul>\n<li>Many banks hold excess reserves</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Paying interest on reserves<ul>\n<li>Since October 2008</li>\n<li>Increase the reserve ratio</li>\n<li>Lower the money supply</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Problem</p>\n<ul>\n<li>Not precise to control money supply</li>\n<li>The Fed does not control<ul>\n<li>The amount of money that households hold as deposits</li>\n<li>The amount that bankers choose to lend</li>\n</ul>\n</li>\n</ul>\n<p>Bank runs(擠兌)</p>\n<ul>\n<li>Depositors suspect that a bank may go bankrupt</li>\n<li>Problem for banks under fractional-reserve banking<ul>\n<li>Cannot satisfy withdraw requests from all depositors</li>\n</ul>\n</li>\n<li>Great Depression, early 1930s<ul>\n<li>Wave of bank runs and bank closings</li>\n<li>Households and bankers - more cautious</li>\n</ul>\n</li>\n<li>Federal Deposit Insurance Corporation (FDIC)<ul>\n<li>Guarantees the safety of deposits at most banks</li>\n<li>No bank runs today</li>\n</ul>\n</li>\n</ul>\n<p>The federal funds rate(隔夜貸款的利率)</p>\n<ul>\n<li>Interest rate of overnight loans between banks</li>\n<li>change federal funds rate will also change other interest rates</li>\n</ul>\n<p>Open-market operations</p>\n<ul>\n<li>The Fed buys bonds<ul>\n<li>Decrease in the federal funds rate</li>\n<li>Increase in money supply</li>\n</ul>\n</li>\n<li>The Fed sells bonds<ul>\n<li>Increase in the federal funds rate</li>\n<li>Decrease in money supply</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/eco2/interest-rates.png\" alt=\"\"><br><img data-src=\"/img/eco2/interest-rate-tw.png\" alt=\"\"></p>\n<p>Summary<br>Because banks are highly leveraged, a small change in the value of a bank’s assets causes a large change in bank capital. To protect depositors from bank insolvency, regulators impose minimum capital requirements.</p>\n<h2 id=\"Chap30-Money-Growth-and-Inflation\"><a href=\"#Chap30-Money-Growth-and-Inflation\" class=\"headerlink\" title=\"Chap30 Money Growth and Inflation\"></a>Chap30 Money Growth and Inflation</h2><ul>\n<li>2002 to 2012<ul>\n<li>Prices rose at an average rate of 2.5% per year</li>\n</ul>\n</li>\n<li>The 1970s<ul>\n<li>Prices rose by 7.8% per year</li>\n<li>The price level more than doubled over the decade</li>\n</ul>\n</li>\n</ul>\n<p>International data, 2012, inflation rate</p>\n<ul>\n<li>-0.1% in Japan</li>\n<li>2.1% in the U.S</li>\n<li>5.1% in Russia</li>\n<li>9.3% in India</li>\n<li>21.1% in Venezuela</li>\n<li>24,000 percent in February 2008, Zimbabwe</li>\n</ul>\n<p>Money demand</p>\n<ul>\n<li>how much wealth people want to hold in liquid form</li>\n<li>Depends on<ul>\n<li>Credit cards</li>\n<li>Availability of ATM</li>\n<li>Interest rate</li>\n<li>Average price level</li>\n</ul>\n</li>\n</ul>\n<p>Money supply</p>\n<ul>\n<li>Determined by the Fed and the banking system</li>\n<li>If the Fed doubles the supply of money<ul>\n<li>Supply curve shifts right</li>\n<li>Value of money decreases</li>\n<li>Price level increases</li>\n</ul>\n</li>\n</ul>\n<p>Inflation</p>\n<ul>\n<li><p>Excess supply of money</p>\n</li>\n<li><p>Increase demand of goods and services</p>\n</li>\n<li><p>Increase price level</p>\n</li>\n<li><p>Increase in quantity of money demanded</p>\n</li>\n<li><p>New equilibrium</p>\n</li>\n<li><p><img data-src=\"/img/eco2/money-supply-curve.jpg\" alt=\"\"></p>\n</li>\n<li><p>Nominal variables</p>\n<ul>\n<li>Variables measured in monetary units</li>\n</ul>\n</li>\n<li><p>Real variables</p>\n<ul>\n<li>Variables measured in physical units<ul>\n<li>Relative prices, real wages, real interest rate</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Comparison</p>\n<ul>\n<li>Principle of Monetary neutrality<ul>\n<li>Changes in money supply don’t affect real variables<ul>\n<li>Not true in short run</li>\n<li>Correct in long run</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Velocity of money (V)</p>\n<ul>\n<li>rate of money flows</li>\n<li>V = (P × Y) / M<ul>\n<li>P = price level (GDP deflator)</li>\n<li>Y = real GDP</li>\n<li>M = quantity of money</li>\n</ul>\n</li>\n<li>P x Y : Nominal GDP</li>\n<li>velocity doesn’t change a lot <img data-src=\"/img/eco2/money-velocity.png\" alt=\"\"></li>\n</ul>\n<p>Hyperinflation</p>\n<ul>\n<li>Inflation that exceeds 50% per month</li>\n<li>Four classic hyperinflation, 1920s<ul>\n<li>Austria, Hungary, Germany, and Poland</li>\n</ul>\n</li>\n</ul>\n<p>The inflation tax</p>\n<ul>\n<li>government Revenue by printing money</li>\n<li>= Tax on everyone who holds money</li>\n<li>The price level rises<ul>\n<li>dollars in your wallet are less valuable</li>\n</ul>\n</li>\n</ul>\n<p>Fisher effect</p>\n<ul>\n<li>One-for-one adjustment of nominal interest rate to inflation rate<ul>\n<li>如果預期通貨膨脹率提高1%，長期來看，名義利率也將提高1%，也就是說，這種效應是一對一的</li>\n</ul>\n</li>\n<li>When the Fed increases the rate of money growth<ul>\n<li>Long-run result<ul>\n<li>Higher inflation rate</li>\n<li>Higher nominal interest rate</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"http://wiki.mbalib.com/zh-tw/%E8%B4%B9%E9%9B%AA%E6%95%88%E5%BA%94\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\"></a></li>\n<li><img data-src=\"/img/eco2/fisher-effect.png\" alt=\"\"></li>\n</ul>\n<p>Inflation fallacy</p>\n<ul>\n<li><p>Inflation robs people of the purchasing power of his hard-earned dollars</p>\n<ul>\n<li>inflation doesn’t change real purchasing power</li>\n</ul>\n</li>\n<li><p>Shoeleather costs</p>\n<ul>\n<li>Resources wasted when inflation encourages people to reduce their money holdings</li>\n<li>在通貨膨脹時，貨幣的購買力在下降，為了減少損失，人們會更傾向於持有更少的現金而將更多的錢存入銀行，如此當要使用現金時，就需要去銀行取款，持有現金少了就意味著需要增加跑銀行的次數，這種多去幾次銀行所花費的時間和精力被經濟學家稱為皮鞋成本</li>\n</ul>\n</li>\n<li><p>Menu costs</p>\n<ul>\n<li>Costs of changing prices</li>\n<li>企業不經常改變價格是因為改變價格有成本。調整價格的成本被稱為菜單成本</li>\n</ul>\n</li>\n<li><p>Inflation distorts relative prices</p>\n<ul>\n<li>Consumer decisions are distorted</li>\n<li>Markets are less able to allocate resources to their best use</li>\n</ul>\n</li>\n<li><p>Taxes distort incentives(?)</p>\n<ul>\n<li>Inflation discourages saving  <ul>\n<li>Exaggerates the size of capital gains</li>\n<li>Increases the tax burden</li>\n</ul>\n</li>\n<li>How Inflation Raises the Tax Burden on Saving <img data-src=\"/img/eco2/inflation-interest-rate.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>Unexpected inflation</p>\n<ul>\n<li>Redistributes wealth among the population<ul>\n<li>debtors and creditors</li>\n</ul>\n</li>\n<li>Inflation: volatile(不穩定) and uncertain<ul>\n<li>When the average rate of inflation is high</li>\n</ul>\n</li>\n</ul>\n<p>The Friedman rule</p>\n<ul>\n<li>moderate(適度的) deflation will<ul>\n<li>Lower the nominal interest rate</li>\n<li>Reduce the cost of holding money</li>\n<li>Shoeleather costs of holding money<ul>\n<li>minimized by a nominal interest rate close to zero</li>\n<li>Deflation equal to the real interest rate</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Deflation May be worse<ul>\n<li>Menu costs</li>\n<li>Relative-price variability</li>\n<li>Arises because of broader macroeconomic difficulties(???)<ul>\n<li>Symptom of deeper economic problems</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>貨幣發行增長率要保持一個恆定的速度，讓經濟中的個體對通貨膨脹有完全的預期<ul>\n<li>通膨導因於貨幣供給率高於經濟成長率</li>\n</ul>\n</li>\n</ul>\n<p>The Wizard of Oz</p>\n<ul>\n<li>1880-1896, price level fell by 23%<ul>\n<li>Real value of debts increased</li>\n</ul>\n</li>\n<li>Major redistribution of wealth<ul>\n<li>Farmers in west were debtors</li>\n<li>Bankers in east were creditors<br>Possible solution to the farmers’ problem</li>\n</ul>\n</li>\n<li>Free coinage of silver</li>\n<li>gold standard</li>\n<li>Free-silver(自由鑄造銀幣運動) advocates<ul>\n<li>Silver and gold - to be used as money</li>\n<li>Increase money supply</li>\n<li>Pushed up the price level</li>\n<li>Reduced real burden of the farmers’ debts</li>\n</ul>\n</li>\n</ul>\n<p>Characters</p>\n<ul>\n<li>Dorothy: Traditional American values</li>\n<li>Toto: Prohibitionist(禁酒主義者) party</li>\n<li>Scarecrow: Farmers</li>\n<li>Tin Woodsman: Industrial workers</li>\n<li>Cowardly Lion: William Jennings Bryan - prominent advocate of free silver</li>\n<li>Munchkins: Citizens of the East (creditors)</li>\n<li>Wicked Witch of the East: Grover Cleveland</li>\n<li>Wiicked Witch of the West: William McKinley (1896 president; gold standard)</li>\n<li>Wizard: Marcus Alonzo Hanna, chairman of the Republican Party</li>\n<li>Oz: Abbreviation for ounce of gold</li>\n<li>Yellow Brick Road: Gold standard</li>\n</ul>\n<p>民粹主義Populists</p>\n<ul>\n<li>Lost the debate over the free coinage of silver</li>\n<li>Get the monetary expansion and inflation that they wanted<ul>\n<li>Increased supply of gold<ul>\n<li>New discoveries - Klondike River in the Canadian Yukon</li>\n<li>Mines of South Africa</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Money supply and price level started to rise</li>\n</ul>\n<h2 id=\"Chap31-Open-Economy-Macroeconomics-Basic-Concepts\"><a href=\"#Chap31-Open-Economy-Macroeconomics-Basic-Concepts\" class=\"headerlink\" title=\"Chap31 Open-Economy Macroeconomics: Basic Concepts\"></a>Chap31 Open-Economy Macroeconomics: Basic Concepts</h2><ul>\n<li>Net exports (Trade balance)<ul>\n<li>exports - imports</li>\n</ul>\n</li>\n<li>Trade surplus (Positive net exports)</li>\n<li>Trade deficit (Negative net exports)</li>\n</ul>\n<p>For Example of US</p>\n<ul>\n<li>Increasing importance of international trade and finance<ul>\n<li>1950s, imports and exports: 4-5% of GDP</li>\n<li>Recent years – about three times that level</li>\n</ul>\n</li>\n<li>Largest trading partner, 2012 (imports and exports combined)<ul>\n<li>Canada, China, Mexico, Japan, Germany, and the United Kingdom</li>\n</ul>\n</li>\n<li>Technology Improvement<ul>\n<li>Improvements in transportation and telecommunications</li>\n<li>easy to transport goods</li>\n</ul>\n</li>\n<li>Government’s trade policies<ul>\n<li>NAFTA, GATT</li>\n</ul>\n</li>\n<li>precentage of US GDP <img data-src=\"/img/eco2/US-gdp-percent.png\" alt=\"\"></li>\n</ul>\n<p>Net capital outflow(淨資本流出)</p>\n<ul>\n<li><p>本國居民購買的外國資產減外國人購買的本國資產，用於兩個市場（可貸資金市場和外匯市場）之間的聯繫，其關鍵決定因素是真實利率</p>\n</li>\n<li><p>Variables that influence net capital outflow</p>\n<ul>\n<li>Real interest rates paid on foreign/domestic assets</li>\n<li>Economic and political risks of holding assets abroad</li>\n</ul>\n</li>\n<li><p>Net exports (NX)</p>\n<ul>\n<li>Imbalance between a country’s exports and its imports</li>\n</ul>\n</li>\n<li><p>Net capital outflow (NCO)</p>\n<ul>\n<li>Imbalance between Amount of foreign assets bought by domestic residents And the amount of domestic assets bought by foreigners</li>\n</ul>\n</li>\n<li><p>NCO = NX</p>\n<ul>\n<li>Every international transaction involves the exchange of an asset for a good or service, so net exports equal net capital outflow</li>\n</ul>\n</li>\n</ul>\n<p>When NX &gt; 0 (trade surplus)</p>\n<ul>\n<li><p>Selling more goods and services to foreigners</p>\n</li>\n<li><p>Receives foreign currency</p>\n</li>\n<li><p>Buy foreign assets</p>\n<ul>\n<li>Capital is flowing out of the country: NCO &gt; 0<br>When NX &lt; 0 (trade deficit)</li>\n</ul>\n</li>\n<li><p>Buying more goods and services from foreigners</p>\n</li>\n<li><p>Net purchase of goods needs financed</p>\n<ul>\n<li>Selling assets abroad</li>\n<li>Capital is flowing into the country: NCO &lt; 0</li>\n</ul>\n</li>\n<li><p>Open economy: Y = C + I + G + NX</p>\n</li>\n<li><p>National saving: S = Y – C – G</p>\n<ul>\n<li>Y – C – G = I + NX</li>\n<li>S = I + NX</li>\n</ul>\n</li>\n<li><p>NX = NCO</p>\n<ul>\n<li>S = I + NCO</li>\n<li>Saving = Domestic investment + Net capital outflow</li>\n<li>存款 = 國內投資 + 淨資本流出</li>\n</ul>\n</li>\n<li><p>Saving can be used to finance domestic investment or to buy assets abroad</p>\n<ul>\n<li>saving = domestic investment +  net capital outflow</li>\n</ul>\n</li>\n</ul>\n<p>The United States</p>\n<ul>\n<li>The world’s largest debtor</li>\n<li>Borrowing heavily in world financial markets during the past three decades<ul>\n<li>large trade deficits</li>\n</ul>\n</li>\n<li>Before 1980<ul>\n<li>National saving and domestic investment were close</li>\n</ul>\n</li>\n<li>After 1980<ul>\n<li>National saving &lt; domestic investment</li>\n<li>Net capital outflow is negative</li>\n</ul>\n</li>\n</ul>\n<p>Unbalanced policy: 1980 to 1987</p>\n<ul>\n<li><p>Flow of capital into the U.S. declines</p>\n<ul>\n<li>3.1 → 0.5% of GDP</li>\n</ul>\n</li>\n<li><p>fall in national saving of 3.2 percentage points</p>\n<ul>\n<li>Increase government budget deficit</li>\n<li>President Ronald Reagan cut taxes and increased defense spending</li>\n</ul>\n</li>\n<li><p>An investment boom: 1991 to 2000</p>\n<ul>\n<li>Increase flow of capital (from 0.5 to 3.9% of GDP)</li>\n<li>Saving increased</li>\n<li>Government budget surplus</li>\n<li>Investment increased from 13.4 to 17.8% of GDP</li>\n</ul>\n</li>\n<li><p>An economic downturn: 2000 to 2012</p>\n<ul>\n<li>Large capital flow into the U.S.</li>\n<li>Investment fell 4.5 percentage points</li>\n<li>Tough economic times starting in 2008 made additional capital less profitable</li>\n<li>National saving fell 4.5 percentage points</li>\n<li>Extraordinarily large budget deficits</li>\n</ul>\n</li>\n<li><p>At the end of the economic downturn</p>\n<ul>\n<li>National saving 2/3 domestic investment + 1/3 NCO</li>\n<li>Are these trade deficits and international capital flows a problem for the U.S. economy?<ul>\n<li>No easy answer to this question</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Trade deficit induced by an investment boom (1990s)</p>\n<ul>\n<li>Borrowing from abroad to finance the purchase of new capital goods</li>\n<li>For good return on investment - Can handle the debts</li>\n<li>For lower return on investment - debts will look less desirable</li>\n</ul>\n</li>\n<li><p><img data-src=\"/img/eco2/saving-investment-gdp.png\" alt=\"\"></p>\n</li>\n<li><p><img data-src=\"/img/eco2/net-capital-outflow.png\" alt=\"\"></p>\n</li>\n<li><p>Appreciation(strengthen)</p>\n<ul>\n<li>Increase in the value of a currency compared to foreign currency<ul>\n<li>Buy more foreign currency</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Depreciation (weaken)</p>\n<ul>\n<li>Decrease in the value of a currency</li>\n</ul>\n</li>\n</ul>\n<p>Real exchange rate</p>\n<ul>\n<li>= (e * P) / P_f<ul>\n<li>e: nominal exchange rate</li>\n<li>P: local price index</li>\n<li>P_f: foreign price index</li>\n<li>= Nominal exchange rate x Domestic price / Foreign price</li>\n</ul>\n</li>\n</ul>\n<p>fall in the U.S. real exchange rate</p>\n<ul>\n<li><p>U.S. goods: cheaper relative to foreign goods</p>\n</li>\n<li><p>Consumers buy more U.S. goods</p>\n<ul>\n<li>Higher exports</li>\n<li>Lower imports</li>\n<li>Higher net exports</li>\n</ul>\n</li>\n<li><p>Purchasing-power parity, PPP(購買力平價)</p>\n<ul>\n<li>A unit of any given currency should be able to buy the same quantity of goods in all countries</li>\n<li>Parity: Equality</li>\n<li>Based on the <strong>law of one price</strong>: A good must sell for the same price in all locations</li>\n<li><strong>Nominal exchange rate</strong> between two countries = price levels in those countries</li>\n<li>does not always hold in practice<ul>\n<li>Many goods are not easily traded</li>\n<li>Even tradable goods are not always perfect substitutes</li>\n<li>Not a perfect theory of exchange-rate determination</li>\n<li>Real exchange rates fluctuate over time</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Arbitrage(套利交易)</p>\n<ul>\n<li>Take advantage of price differences for the same item in different markets</li>\n<li>Result: the law of one price</li>\n</ul>\n</li>\n<li><p><img data-src=\"/img/eco2/money-supply-exchange-rate.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>hamburger standard</p>\n<ul>\n<li>According to purchasing power parity<ul>\n<li>Real Cost of “Big Mac” is same in both countries</li>\n<li>Predicted exchange rate = Price in U.S. / Price in foreign country (in foreign currency)</li>\n</ul>\n</li>\n<li>reasonable prediction <img data-src=\"/img/eco2/big-mac-exchange-rate.png\" alt=\"\"></li>\n</ul>\n<h2 id=\"Chap32-A-Macroeconomic-Theory-of-the-Open-Economy\"><a href=\"#Chap32-A-Macroeconomic-Theory-of-the-Open-Economy\" class=\"headerlink\" title=\"Chap32: A Macroeconomic Theory of the Open Economy\"></a>Chap32: A Macroeconomic Theory of the Open Economy</h2><p>可貸資金(loanable funds)</p>\n<ul>\n<li>Definition<ul>\n<li>Domestically generated flow of resources</li>\n</ul>\n</li>\n<li>Supply of loanable funds<ul>\n<li>From national saving (S)</li>\n</ul>\n</li>\n<li>Demand for loanable funds<ul>\n<li>domestic investment (I)</li>\n<li>net capital outflow (NCO)</li>\n</ul>\n</li>\n<li>When NCO &gt; 0<ul>\n<li>Adds demand for loanable fund</li>\n<li>資本流入，國內資金需求增加</li>\n</ul>\n</li>\n</ul>\n<p>Higher real interest rate</p>\n<ul>\n<li>Encourages people to save<ul>\n<li>Increases loanable funds supplied</li>\n</ul>\n</li>\n<li>Discourages investment<ul>\n<li>Decreases loanable funds demanded</li>\n</ul>\n</li>\n<li>Domestic assets more attractive<ul>\n<li>Increases demand of domestic capital</li>\n<li>Reduces net capital outflow</li>\n<li>Decrease loanable funds demanded</li>\n</ul>\n</li>\n</ul>\n<p>可貸資金和利率的關係</p>\n<ul>\n<li>利率增加 需求減少 供給增加</li>\n<li><img data-src=\"/img/eco2/loanable-funds.png\" alt=\"\"></li>\n</ul>\n<p>The real exchange rate</p>\n<ul>\n<li>determined by the supply and demand for foreign-currency exchange</li>\n</ul>\n<p>Supply of foreign-currency exchange</p>\n<ul>\n<li>Net capital outflow<ul>\n<li>Quantity of dollars supplied to buy foreign assets</li>\n<li>Supply curve is vertical<ul>\n<li>Does not depend on the real exchange rate</li>\n<li>供给曲线是垂直的，因为净国外投资(nco)的供给数量与实际汇率无关<br>Demand for foreign-currency exchange</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Net exports<ul>\n<li>Quantity of dollars demanded to buy U.S. goods and services</li>\n<li>出超→他國需要用美金買東西→需求上升</li>\n</ul>\n</li>\n<li>A higher real exchange rate<ul>\n<li>Makes U.S. goods more expensive and reduces dollar demanded</li>\n</ul>\n</li>\n</ul>\n<p>Equilibrium real exchange rate</p>\n<ul>\n<li>Demand for dollars<ul>\n<li>from foreigners</li>\n<li>from U.S. net exports</li>\n</ul>\n</li>\n<li>Supply of dollars<ul>\n<li>From Americans</li>\n<li>from U.S. net capital outflow</li>\n</ul>\n</li>\n<li><img data-src=\"img/eco2/foreign-currency-exchange.png\" alt=\"\"></li>\n</ul>\n<p>Comparison</p>\n<ul>\n<li><p>Market for loanable funds: S = I + NCO</p>\n</li>\n<li><p>Market for foreign-currency exchange: NCO = NX</p>\n</li>\n<li><p><img data-src=\"/img/eco2/nco-interest.png\" alt=\"\"></p>\n</li>\n<li><p>Equilibrium real interest rate, r</p>\n<ul>\n<li>present Price of goods and services</li>\n<li>Relative to future price of goods and services</li>\n</ul>\n</li>\n<li><p>Equilibrium real exchange rate, E</p>\n<ul>\n<li>Price of domestic goods and services</li>\n<li>Relative to foreign goods and services<br><img data-src=\"/img/eco2/open-economy-equilibrium.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>Government budget deficits</p>\n<ul>\n<li>Reduces national saving</li>\n<li>Reduces supply of loanable funds</li>\n<li>Increase in interest rate</li>\n<li>Reduces net capital outflow(tends to save instead buy)</li>\n<li>Decrease in supply of foreign-currency exchange</li>\n<li>Currency appreciates</li>\n<li>Net exports fall</li>\n<li>trade tends to deficit</li>\n<li><img data-src=\"/img/eco2/open-economy-deficit.png\" alt=\"\"></li>\n</ul>\n<p>Trade policy</p>\n<ul>\n<li>Tariff(關稅)</li>\n<li>Import quota(進口配額)</li>\n<li>Voluntary export restrictions(自動出口配額制)</li>\n</ul>\n<p>Macroeconomic impact of trade policy</p>\n<ul>\n<li><strong>Decrease imports</strong></li>\n<li>Increase demand for local currency<ul>\n<li>Real exchange rate appreciates<ul>\n<li><strong>Decrease exports</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>No change in net exports<ul>\n<li>Macro<ul>\n<li>No change in real interest rate<ul>\n<li>No change in net capital outflow</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Micro<ul>\n<li>Decrease in imports and exports</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/open-economy-import-quota.png\" alt=\"\"></li>\n<li>Trade policies only affect specific<ul>\n<li>Firms</li>\n<li>Industries</li>\n<li>Countries</li>\n</ul>\n</li>\n<li>A policy that restricts imports does not affect net capital outflow, so it cannot affect net exports or improve a country’s trade deficit.  Instead, it drives up the exchange rate and reduces exports and imports</li>\n</ul>\n<p>capital flight in Mexico</p>\n<ul>\n<li>NCO increase<ul>\n<li>Reduce domestic investment(saving is the same)</li>\n<li>Slows capital accumulations</li>\n<li>Slows economic growth</li>\n</ul>\n</li>\n<li>Loanable Funds Market<ul>\n<li>NCO increase</li>\n<li>demand of loanable funds increases</li>\n<li>Interest rate increases</li>\n</ul>\n</li>\n<li>Foreign-Currency Market<ul>\n<li>NCO increase</li>\n<li>peso supply increase</li>\n<li>peso depreciate</li>\n</ul>\n</li>\n<li>The peso depreciates<ul>\n<li>Exports – cheaper</li>\n<li>Imports – more expensive</li>\n<li>Trade balance moves toward surplus</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/open-economy-capital-flight.png\" alt=\"\"></li>\n<li>influence of U.S. market<ul>\n<li>Fall in U.S. net capital outflow</li>\n<li>The dollar appreciates</li>\n<li>U.S. interest rates fall</li>\n<li>only a little influence</li>\n</ul>\n</li>\n</ul>\n<p>Ongoing policy disputes: U.S. and China<br>China – tried to depreciate renminbi</p>\n<ul>\n<li>Chinese goods - less expensive</li>\n<li>Promote its export industries<ul>\n<li>Accumulate foreign assets($3 trillion, 2012)<ul>\n<li>Including U.S. government bonds</li>\n</ul>\n</li>\n<li>wants to accumulate a reserve of foreign assets - national “rainy-day fund”<ul>\n<li>Misguided policy</li>\n</ul>\n</li>\n<li>Contributes to the U.S. trade deficit</li>\n</ul>\n</li>\n<li>Inflow of capital from China<ul>\n<li>Lowers U.S. interest rates</li>\n<li>Increases investment in the U.S.</li>\n</ul>\n</li>\n<li>Creates winners and losers among Americans<ul>\n<li>Hurts American producers</li>\n<li>American consumers benefit from lower prices</li>\n</ul>\n</li>\n</ul>\n<p>For US</p>\n<ul>\n<li>trade deficit is not caused by  other countries’ “unfair” trade practices,  but by low saving</li>\n<li>Stagnant(停滯的) living standards are not caused by imports, but by low productivity growth</li>\n</ul>\n<h2 id=\"Chap33-Aggregate-Demand-and-Aggregate-Supply\"><a href=\"#Chap33-Aggregate-Demand-and-Aggregate-Supply\" class=\"headerlink\" title=\"Chap33: Aggregate Demand and Aggregate Supply\"></a>Chap33: Aggregate Demand and Aggregate Supply</h2><ul>\n<li>real GDP grows about  3% per year on average in the world in the long run</li>\n<li>Business cycles: Short-run economic fluctuations<ol>\n<li>irregular and unpredictable</li>\n<li>Most macroeconomic values fluctuate together</li>\n</ol>\n</li>\n</ul>\n<p>classical theory describes the world <strong>in the long run</strong>,  but not the short run</p>\n<ul>\n<li>use <strong>model of  aggregate demand and aggregate supply</strong></li>\n</ul>\n<p>In the short run</p>\n<ul>\n<li><p>changes in nominal variables can <strong>affect  real variables</strong></p>\n</li>\n<li><p><strong>Can’t assume monetary neutrality</strong></p>\n</li>\n<li><p>The model determines price level(nominal) and output (real)</p>\n<ul>\n<li><img data-src=\"/img/eco2/aggregate-model.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>Demand Curve</p>\n<ul>\n<li>Affected by Y = C + I + G + NX<ul>\n<li>Wealth effect (C)</li>\n<li>Interest-rate effect (I)</li>\n<li>Exchange-rate effect (NX)</li>\n</ul>\n</li>\n</ul>\n<p>Price level and consumption (C): the wealth effect</p>\n<ul>\n<li>Changes in taxes</li>\n<li>Decrease in price level<ul>\n<li>Increase real value of money</li>\n<li>Consumers are wealthier</li>\n<li>Increase consumer spending</li>\n<li>Increase demanded of goods and services</li>\n</ul>\n</li>\n</ul>\n<p>Price level and investment (I): the interest-rate effect</p>\n<ul>\n<li>Technology, Tax policy, Money supply</li>\n<li>Decrease in price level<ul>\n<li>Decrease in the interest rate</li>\n<li>Increase spending on investment</li>\n<li>Increase in demanded of goods and services</li>\n</ul>\n</li>\n</ul>\n<p>Price level and net exports (NX): the exchange-rate effect</p>\n<ul>\n<li><p>Recession in other country</p>\n</li>\n<li><p>International speculators(國際炒家)</p>\n<ul>\n<li>change in exchange rate</li>\n</ul>\n</li>\n<li><p>Decrease in U.S. price level</p>\n<ul>\n<li>Decrease in the interest rate</li>\n<li>U.S. dollar depreciates</li>\n<li>Stimulates U.S. net exports</li>\n<li>Increase in demanded of goods and services</li>\n</ul>\n</li>\n<li><p>Long Run Aggregate-supply(LRAS) curve is vertical</p>\n<ul>\n<li>Price level does not affect the long-run GDP</li>\n<li>LRAS curve only shift by output(labor, capital, natural resources, techonology)</li>\n</ul>\n</li>\n<li><p>In long run: both AD and LRAS curve shift right</p>\n<ul>\n<li>LRAS curve shift by technological progress</li>\n<li>AD curve shifts to right by Fed increases money supply</li>\n<li>Result<ul>\n<li><strong>Continuing growth in output</strong></li>\n<li><strong>Continuing inflation</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><img data-src=\"/img/eco2/longrun-growth-inflation.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>In the short run</p>\n<ul>\n<li><p>price level increase, supply increase <img data-src=\"/img/eco2/short-run-supply.png\" alt=\"\"></p>\n</li>\n<li><p>Explanation</p>\n<ul>\n<li>Sticky-wage theory<ul>\n<li>Nominal wages: slow to adjust<ul>\n<li>Long-term contracts: workers and firms</li>\n<li>based on expected prices</li>\n<li>Don’t respond immediately when actual price level different from what was expected</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Sticky-price theory<ul>\n<li>Prices of some goods and services: Slow to adjust<ul>\n<li>Menu costs: Costs to adjusting prices</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Misperceptions theory<ul>\n<li>Changes in the overall price level can temporarily mislead suppliers</li>\n<li>supply more goods and services because nominal price up</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>output = Natural level of output + a(Actual price level – Expected price level)</p>\n<ul>\n<li>a: degree of output responds to unexpected price level changes</li>\n</ul>\n</li>\n<li><p><img data-src=\"/img/eco2/longrun-shortrun-supply.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>Long-run equilibrium</p>\n<ul>\n<li>Intersection of AD and LRAS curves<ul>\n<li>Natural level of output</li>\n<li>Actual price level</li>\n</ul>\n</li>\n<li>Intersection of AD and short-run AS curve<ul>\n<li>when Expected price level = Actual price level</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/lr-sr-ad.png\" alt=\"\"><ul>\n<li>三線會交於一點</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Analyze-Macroeconomic-fluctuations\"><a href=\"#Analyze-Macroeconomic-fluctuations\" class=\"headerlink\" title=\"Analyze Macroeconomic fluctuations\"></a>Analyze Macroeconomic fluctuations</h3><ol>\n<li>Decide the curve and direction to shift</li>\n<li>determine the impact in the short run</li>\n<li>analyze movement from new short-run equilibrium to long-run equilibrium</li>\n</ol>\n<p><img data-src=\"/img/eco2/ad-decrease-lr-sr.png\" alt=\"\"></p>\n<ul>\n<li>Early 1930s: large drop in real GDP<ul>\n<li>Cause: decrease in aggregate demand<ul>\n<li>Decline in money supply (by 28%)</li>\n<li>Decrease C and I</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Early 1940s: large increase in real GDP<ul>\n<li>World War II<ul>\n<li>Government purchases increased</li>\n<li>Doubled production of goods and services</li>\n<li>20% increase in the price level</li>\n<li>Unemployment fell from 17 to 1%</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/gdp-change.png\" alt=\"\"></li>\n</ul>\n<p>2008-2009, financial crisis, severe downturn in economic activity</p>\n<ul>\n<li>low interest rates<ul>\n<li>rise in housing prices</li>\n</ul>\n</li>\n<li>Misguided government policy<ul>\n<li>Encouraged this high-risk lending</li>\n</ul>\n</li>\n<li>2006-2009, housing prices fell 30%<ul>\n<li>Financial institutions losses huge</li>\n</ul>\n</li>\n<li>Large contractionary shift in AD<ul>\n<li>By 4% between the forth quarter of 2007 and the second quarter of 2009</li>\n<li>Unemployment rate rose from 4.4% in May 2007 to 10.1% in October 2009</li>\n</ul>\n</li>\n<li>Three actions to resume AD<ul>\n<li>The Fed<ul>\n<li>Cut federal funds rate<ul>\n<li>From 5.25% in September 2007 to about zero in December 2008</li>\n</ul>\n</li>\n<li>Started buying mortgage-backed securities and other private loans<ul>\n<li>Provided banks with additional funds</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>October 2008, Congress appropriated $700 billion<ul>\n<li>rescue the financial system</li>\n<li>make loans<ul>\n<li>U.S. government – temporarily became a part owner of these banks</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>January 2009, Barack Obama<ul>\n<li>Large increase in government spending</li>\n<li>$787 billion stimulus bill, February 17, 2009</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>From 2010 through 2012<ul>\n<li>Real GDP growth averaged 2.1% per year</li>\n</ul>\n</li>\n<li>Unemployment fell, but remained high<ul>\n<li>7.5% in April 2013</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/eco2/supply-shift.png\" alt=\"\"><br><img data-src=\"/img/eco2/supply-ad-shift.png\" alt=\"\"></p>\n<ul>\n<li>1970 Oil crysis<ul>\n<li>reduces the supply of crude oil flowing from Middle East</li>\n<li>Price of oil rises<ul>\n<li>Aggregate-supply curve shifts left</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>John Maynard Keynes, 1883–1946</p>\n<ul>\n<li>Argued recessions and depressions  can result from <strong>inadequate demand</strong></li>\n<li>policymakers <strong>should shift AD</strong></li>\n<li>Famous critique of classical theory</li>\n<li>The long run is a misleading guide to current affairs. In the long run, we are all dead. Economists set themselves too easy, too useless a task if in tempestuous seasons they can only tell us when the storm is long past,  the ocean will be flat</li>\n</ul>\n<h2 id=\"Chap34-The-Influence-of-Monetary-and-Fiscal-Policy-on-Aggregate-Demand\"><a href=\"#Chap34-The-Influence-of-Monetary-and-Fiscal-Policy-on-Aggregate-Demand\" class=\"headerlink\" title=\"Chap34: The Influence of Monetary and Fiscal Policy on Aggregate Demand\"></a>Chap34: The Influence of Monetary and Fiscal Policy on Aggregate Demand</h2><p>For U.S. economy</p>\n<ul>\n<li>The wealth effect - least important<ul>\n<li>Money holdings – a small part of household wealth</li>\n</ul>\n</li>\n<li>The exchange-rate effect - not large<ul>\n<li>Exports and imports – small fraction of GDP</li>\n</ul>\n</li>\n<li>The interest-rate effect<ul>\n<li><strong>The most important</strong></li>\n</ul>\n</li>\n</ul>\n<p>liquidity preference</p>\n<ul>\n<li>Keynes’s theory</li>\n<li>Assumption: expected rate of inflation is constant</li>\n<li>If interest rate &gt; equilibrium<ul>\n<li>money demand &lt; supply</li>\n<li>People holding the surplus<ul>\n<li>Buy assets</li>\n<li>Lowers the interest rate</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/money-demand-relation.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>Money supply</p>\n<ul>\n<li>Controlled by the Fed<ul>\n<li>Changing reserves</li>\n<li>open-market operations</li>\n</ul>\n</li>\n</ul>\n<p>Money Demand</p>\n<ul>\n<li>Interest rate – opportunity cost of holding money</li>\n<li>Increase in the interest rate<ul>\n<li>Raises the cost of holding money</li>\n<li>Reduces the quantity of money demanded</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Monetary-policies-to-AD\"><a href=\"#Monetary-policies-to-AD\" class=\"headerlink\" title=\"Monetary policies to AD\"></a>Monetary policies to AD</h3><ul>\n<li><p><strong>If price level ↓</strong></p>\n<ul>\n<li>→ money demand ↑</li>\n<li>→ interest rate ↑</li>\n<li>→ <strong>product demand ↓</strong></li>\n</ul>\n</li>\n<li><p>increases money supply</p>\n<ul>\n<li>Money-supply curve shifts right</li>\n<li>Interest rate falls</li>\n<li>Increase demanded of goods and services</li>\n<li>Aggregate-demand curve shifts right</li>\n<li><img data-src=\"/img/eco2/money-supply-AD.png\" alt=\"\"></li>\n</ul>\n</li>\n<li><p>Summary</p>\n<ul>\n<li>expanding aggregate demand<ul>\n<li>Increasing the money supply</li>\n<li>Lowering the interest rate</li>\n</ul>\n</li>\n<li>contracting aggregate demand<ul>\n<li>Decreasing the money supply</li>\n<li>Raising the interest rate</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Stock market boom expands the AD</p>\n<ul>\n<li>Households – wealthier<ul>\n<li>Stimulates consumer spending</li>\n</ul>\n</li>\n<li>Firms – want to sell new shares of stock<ul>\n<li>Stimulates investment spending</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>The Fed’s goal: stabilize AD</p>\n<ul>\n<li>The Fed’s response to a stock-market boom<ul>\n<li>Keep money supply lower</li>\n<li>Keep interest rates higher</li>\n</ul>\n</li>\n<li>The Fed’s response to a stock-market fall<ul>\n<li>Increase money supply</li>\n<li>Lower interest rates</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Liquidity trap: when the interest rate is zero</p>\n<ul>\n<li>nominal interest rates cannot be reduced further</li>\n<li>Solution<ul>\n<li>make real interest rates negative by raising inflation expectations</li>\n<li>open market operations: provide assets to lower rates<ul>\n<li>Fed pursued this option in 2008–2009</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Fiscal-Policies-to-AD\"><a href=\"#Fiscal-Policies-to-AD\" class=\"headerlink\" title=\"Fiscal Policies to AD\"></a>Fiscal Policies to AD</h3><p>Fiscal policy: about government spending and taxation</p>\n<ul>\n<li>Multiplier effect<ul>\n<li>Additional shifts in aggregate demand<ul>\n<li>Investment accelerator</li>\n<li>Higher government demand<ul>\n<li>Higher demand for investment</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Positive feedback from demand to investment</li>\n<li>Spending multiplier<ul>\n<li>Marginal propensity to consume(MPC, 邊際消費傾向)<ul>\n<li>percentage of extra income that consumers spend</li>\n<li>Size of the multiplier depends on the MPC</li>\n</ul>\n</li>\n<li>Spending multiplier = 1/(1 – MPC)<ul>\n<li>(1 + MPC + MPC2 + MPC3 … )</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Crowding-out effect <img data-src=\"/img/eco2/crowding-out-effect.png\" alt=\"\"><ul>\n<li>when expansionary fiscal policy raises the interest rate</li>\n<li>reduces investment spending</li>\n<li>擠出效應是指增加政府投資對私人投資產生的擠佔效應，從而導致增加政府投資所增加的國民收入可能因為私人投資減少而被全部或部分地抵消<ul>\n<li>AD shifts right</li>\n<li>Interest rate – increases</li>\n<li>AD shifts left</li>\n</ul>\n</li>\n<li>Decrease in personal income taxes<ul>\n<li>Households income – increases</li>\n<li>Multiplier effect<ul>\n<li>Aggregate demand – increases</li>\n</ul>\n</li>\n<li>Crowding-out effect<ul>\n<li>Aggregate demand – decreases</li>\n</ul>\n</li>\n<li>Permanent tax cut – large impact on AD</li>\n<li>Temporary tax cut – small impact on AD</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>stabilize the economy</p>\n<ul>\n<li><p>The government</p>\n<ul>\n<li>Use fiscal policy</li>\n</ul>\n</li>\n<li><p>The Fed</p>\n<ul>\n<li>Use monetary policy</li>\n</ul>\n</li>\n<li><p>Respond to changes in the private economy(Ex. stock) to stabilize</p>\n</li>\n<li><p>Keynes</p>\n<ul>\n<li>government should actively stimulate aggregate demand<ul>\n<li>When AD insufficient to full-employment level</li>\n</ul>\n</li>\n<li>1964, President John F. Kennedy<ul>\n<li>Advocated a tax cut to stimulate the economy</li>\n<li>Tax break to firms that invest in new capital<ul>\n<li>Higher investment</li>\n</ul>\n</li>\n<li>Fiscal policy<ul>\n<li>Short-run: increase production through higher aggregate demand</li>\n<li>Long-run: increase production through higher aggregate supply</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>2009, President Barak Obama<ul>\n<li>Substantial increase in government spending</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Automatic stabilizers</p>\n<ul>\n<li>Without policymakers having to take any deliberate action<ul>\n<li>The tax system</li>\n<li>Government spending</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Conclusion</p>\n<ul>\n<li>Policymakers need to consider all the effects of their actions<ul>\n<li>Congress cuts taxes, it should consider the short-run effects on AD and employment, and the long-run effects  on saving and growth</li>\n<li>When the Fed reduces the rate of money growth, it must take into account not only the long-run effects on inflation but the short-run effects on output and employment</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap35-The-Short-Run-Trade-off-between-Inflation-and-Unemployment\"><a href=\"#Chap35-The-Short-Run-Trade-off-between-Inflation-and-Unemployment\" class=\"headerlink\" title=\"Chap35: The Short-Run Trade-off between Inflation and Unemployment\"></a>Chap35: The Short-Run Trade-off between Inflation and Unemployment</h2><p>One of the Ten Principles</p>\n<ul>\n<li>In the short run, society faces a trade-off  between inflation and unemployment</li>\n</ul>\n<p>Phillips curve</p>\n<ul>\n<li><p>short-run trade-off between inflation and unemployment</p>\n</li>\n<li><p>nominal wage growth was negatively correlated with unemployment</p>\n<ul>\n<li>High unemployment and low inflation</li>\n<li>low unemployment and high inflation</li>\n</ul>\n</li>\n<li><p>That arise in the short run</p>\n<ul>\n<li>As shifts in the AD curve</li>\n</ul>\n</li>\n<li><p><img data-src=\"/img/eco2/AD-inflat-unemployment.png\" alt=\"\"></p>\n</li>\n<li><p>1968: Milton Friedman and Edmund Phelps</p>\n<ul>\n<li>tradeoff was temporary</li>\n<li>Natural-rate hypothesis: unemployment eventually returns to its natural rate</li>\n</ul>\n</li>\n<li><p>In the long run: Increase in money supply</p>\n<ul>\n<li>AD shifts right</li>\n<li>Price level – increases</li>\n<li>Output – natural rate</li>\n<li>Philip Curve<ul>\n<li>Inflation rate increases</li>\n<li>natural rate of Unemployment</li>\n<li>vertical in the long run</li>\n<li><img data-src=\"/img/eco2/philips-curve.png\" alt=\"\"></li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/AD-philip-curve.png\" alt=\"\"></li>\n<li>If reduce the natural rate of unemployment<ul>\n<li>Long-run Phillips curve shifts left</li>\n<li>Long-run aggregate-supply shifts right</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Use new variable to prove</p>\n<ul>\n<li>expected inflation<ul>\n<li>how much people expect the price level to change</li>\n</ul>\n</li>\n<li>Unemployment rate = natural unemployment rate - a (actual inflation - expected inflation)<ul>\n<li>short run: Fed can reduce u-rate by making inflation &gt; expected</li>\n<li>long run: expectations catch up reality inflation<ul>\n<li>u-rate become natural</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Expected inflation determines short-run AS curve</li>\n</ul>\n<p>Natural-rate hypothesis</p>\n<ul>\n<li>Unemployment - eventually returns to its normal/natural rate</li>\n<li>Late 1960s (short-run)<ul>\n<li>Vietnam War<ul>\n<li>Expansionary fiscal policy<ul>\n<li>Government spending rose</li>\n<li>Expand AD for goods and services</li>\n</ul>\n</li>\n<li>The Fed try to hold down interest rates<ul>\n<li>Money supply – rose 13% per year</li>\n<li>High inflation (5-6% per year)</li>\n<li>Unemployment increased</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>late 1970s (long-run)<ul>\n<li>Inflation – stayed high<ul>\n<li>People’s expectations of inflation caught up with reality</li>\n</ul>\n</li>\n<li>Unemployment – natural rate</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Supply shock</p>\n<ul>\n<li><p>firms’ costs and prices directly change</p>\n<ul>\n<li>Shifts economy’s aggregate-supply curve</li>\n<li>Shifts the Phillips curve</li>\n</ul>\n</li>\n<li><p>Increase in oil price</p>\n<ul>\n<li>Aggregate-supply curve shifts left</li>\n<li>Stagflation<ul>\n<li>Lower output</li>\n<li>Higher prices</li>\n</ul>\n</li>\n<li>Short-run Phillips curve shifts right<ul>\n<li>Higher unemployment</li>\n<li>Higher inflation</li>\n<li>If temporary – revert back</li>\n<li>If permanent – needs government intervention</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><img data-src=\"/img/eco2/supply-shock.png\" alt=\"\"></p>\n</li>\n<li><p><img data-src=\"/img/eco2/1970pc.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>Reducing Inflation</p>\n<ul>\n<li>Contractionary monetary policy<ul>\n<li>Aggregate demand – contracts<ul>\n<li>Higher unemployment</li>\n<li>Lower inflation</li>\n</ul>\n</li>\n<li>Over time<ul>\n<li>Phillips curve shifts left<ul>\n<li>Lower inflation</li>\n<li>Unemployment – natural rate</li>\n<li><img data-src=\"/img/eco2/reduce-inflation-cost.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Sacrifice ratio</p>\n<ul>\n<li>Number of percentage points of annual output</li>\n<li>Lost in the process of reducing inflation by 1 percentage point</li>\n<li>Typical estimate: 5<ul>\n<li>For each percentage point that inflation is reduced</li>\n<li>5 percent of annual output must be sacrificed in the transition</li>\n</ul>\n</li>\n</ul>\n<p>Rational expectations - smaller sacrifice ratio</p>\n<ul>\n<li>Government - credible commitment to a policy of low inflation</li>\n<li>People: lower their expectations of inflation</li>\n<li>Short-run Phillips curve - shift downward</li>\n<li>Economy - low inflation quickly</li>\n<li>Without temporarily high unemployment &amp; low output!</li>\n<li>volcker-disinflation<br><img data-src=\"/img/eco2/volcker-disinflation.png\" alt=\"\"><br><img data-src=\"/img/eco2/greenspan-pc.png\" alt=\"\"></li>\n</ul>\n<p>2006 – 2009</p>\n<ul>\n<li>House prices fell by about one third<ul>\n<li>Financial institutions – difficulties</li>\n</ul>\n</li>\n<li>Expansionary monetary and fiscal policy<ul>\n<li>Goal: increase aggregate demand</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/recession-pc.png\" alt=\"\"></li>\n</ul>\n<p>Supply shocks and changes in expected inflation shift the short-run Phillips curve, making the tradeoff more or less favorable<br>Some economists argue that a credible commitment to reducing inflation can lower the costs of disinflation by inducing a rapid adjustment of expectations.</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li>WCS講義</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dlbmt1LmJhaWR1LmNvbS92aWV3L2Y1ZTgxZmU4YjhmNjdjMWNmYWQ2YjgwNg==\">http://wenku.baidu.com/view/f5e81fe8b8f67c1cfad6b806<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "經濟學"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/Emacs-introduction/",
            "url": "http://gitqwerty777.github.io/Emacs-introduction/",
            "title": "Emacs觀念",
            "date_published": "2015-09-18T10:49:50.000Z",
            "content_html": "<p>參考 <span class=\"exturl\" data-url=\"aHR0cDovL3Nob3Aub3JlaWxseS5jb20vcHJvZHVjdC85NzgwNTk2MDA2NDg4LmRv\">Learning GNU Emacs<i class=\"fa fa-external-link-alt\"></i></span></p>\n<a id=\"more\"></a>\n\n<h2 id=\"Major-Mode\"><a href=\"#Major-Mode\" class=\"headerlink\" title=\"Major Mode\"></a>Major Mode</h2><ul>\n<li>一次只能有一個</li>\n<li>主要針對不同語言</li>\n<li>Example<ul>\n<li>Fundamental Mode</li>\n<li>Text Mode</li>\n<li>C Mode</li>\n<li>Lisp Mode</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Minor-Mode\"><a href=\"#Minor-Mode\" class=\"headerlink\" title=\"Minor Mode\"></a>Minor Mode</h2><ul>\n<li>相關功能</li>\n<li>Example<ul>\n<li>Abbrev Mode<ul>\n<li>能自訂簡寫，並由emacs自動展開</li>\n<li><code>add-global-abbrev</code></li>\n</ul>\n</li>\n<li>Fill Mode<ul>\n<li>文字超出空間時自動換行(加上<code>\\n</code>)</li>\n</ul>\n</li>\n<li>Auto-save Mode<ul>\n<li>產生自動儲存檔(名為 <code>#檔名#</code>)</li>\n<li>用 <code>revert-buffer</code> 指令將檔案還原成自動儲存時的狀態</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>最常用的指令是 <code>C-[something]</code>，次常用的指令是 <code>M-[something]</code>，更不常用的指令是 <code>C-x [something]</code>，更不常用的指令是 <code>C-c [something]</code></p>\n<p><code>C-u 4 [command]</code>: 重複4次<br><code>C-u 1 6 [command]</code>: 重複16次</p>\n<p><code>M--</code>, <code>C--</code> : <code>negative-argument</code></p>\n<h2 id=\"搜尋\"><a href=\"#搜尋\" class=\"headerlink\" title=\"搜尋\"></a>搜尋</h2><ul>\n<li>Incremental Search(每輸入一個字元，就尋找符合的文字)</li>\n<li>Non-Incremental Search(輸入完畢後才開始尋找, <code>nonincremental-search-forward</code>)</li>\n<li>Word Search(找一個字，例如找hat，不會找到that, <code>word-search-forward</code>)</li>\n</ul>\n<p>正規表示式搜尋</p>\n<ul>\n<li><code>\\&lt;</code> 字首</li>\n<li><code>\\&gt;</code> 字尾</li>\n</ul>\n<p>拼字檢查</p>\n<ul>\n<li><code>M-$</code> 檢查目前所在單字</li>\n<li><code>ispell-buffer</code>, <code>ispell-region</code></li>\n<li><code>M-x</code> ispell-change-dictionary</li>\n</ul>\n",
            "tags": [
                "Emacs",
                "編輯器"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/git-introduction/",
            "url": "http://gitqwerty777.github.io/git-introduction/",
            "title": "Git觀念",
            "date_published": "2015-07-19T06:03:11.000Z",
            "content_html": "<h2 id=\"Git的特點\"><a href=\"#Git的特點\" class=\"headerlink\" title=\"Git的特點\"></a>Git的特點</h2><ul>\n<li>分散式開發<ul>\n<li>每個人都有完整的容器，各自獨立</li>\n<li>不需要中央管理</li>\n</ul>\n</li>\n<li>非擠壓合併<ul>\n<li>合併後仍包含所有被合併分支的記錄</li>\n<li><code>git merge/pull --squash</code> 強迫擠壓</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n\n<p><img data-src=\"https://image.slidesharecdn.com/git-getreadytouseit-140228043813-phpapp02/95/git-get-ready-to-use-it-5-638.jpg?cb=1393562489\" alt=\"\"></p>\n<h2 id=\"Git安裝\"><a href=\"#Git安裝\" class=\"headerlink\" title=\"Git安裝\"></a>Git安裝</h2><ul>\n<li>Debian/Ubuntu: 主要: <code>git-core</code> 和 <code>git-doc</code><ul>\n<li>選擇性: <code>git-gui</code>, <code>gitk</code>(圖形化), <code>gitweb</code> …</li>\n</ul>\n</li>\n<li>Windows: <code>Cygwin</code>, <code>msysGit</code>, <code>github on windows</code></li>\n</ul>\n<h2 id=\"Git常用名稱\"><a href=\"#Git常用名稱\" class=\"headerlink\" title=\"Git常用名稱\"></a>Git常用名稱</h2><ul>\n<li>origin： 遠端(remote) Repository 的別稱，預設即為origin/master分支<ul>\n<li><code>git clone</code>的時候會自動設定origin</li>\n</ul>\n</li>\n<li>master： 本地(local) Repository 的 master分支<ul>\n<li>名為master的分支通常是專案中的主要分支</li>\n</ul>\n</li>\n<li>HEAD<ul>\n<li>目前分支的最新一個提交</li>\n</ul>\n</li>\n<li>相對名稱<ul>\n<li>HEAD/HEAD^/HEAD^^/HEAD~4<ul>\n<li>代表目前版本/前一版/前二版/前四版的提交</li>\n</ul>\n</li>\n<li>HEAD^1/HEAD^2/ …<ul>\n<li>代表第一個父提交，第二個父提交 ……</li>\n</ul>\n</li>\n<li>A…B<ul>\n<li>A和B的相對差異</li>\n<li>列出A和B的祖先，直到A和B的分歧點</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>git rev-parse HEAD</code>: 取得代稱(HEAD^, HEAD~1, tag)的辨識碼</li>\n</ul>\n<ul>\n<li>ORIG_HEAD：合併或重設前的HEAD</li>\n<li>FETCH_HEAD：fetch所抓取的HEAD</li>\n<li>MERGE_HEAD：合併時，另一個分支的HEAD</li>\n</ul>\n<h2 id=\"設定檔\"><a href=\"#設定檔\" class=\"headerlink\" title=\"設定檔\"></a>設定檔</h2><ol>\n<li>容器的設定檔 <code>.git/config</code></li>\n<li>使用者的設定檔 <code>~/.gitconfig</code></li>\n<li>全系統的設定檔 <code>/etc/gitconfig</code></li>\n</ol>\n<p>優先級： 1 &gt; 2 &gt; 3</p>\n<h2 id=\"Git資料結構\"><a href=\"#Git資料結構\" class=\"headerlink\" title=\"Git資料結構\"></a>Git資料結構</h2><p>Index 和 Data:[Blobs, Tree, Commits, Tags]</p>\n<ul>\n<li>Data<ul>\n<li>Blob(binary large object): 檔案本身<ul>\n<li>新增檔案時，看的是檔案的sha1，而不是檔名<ul>\n<li>若有兩個檔案sha1相同，則git只會有一份blob</li>\n</ul>\n</li>\n<li>打包機制(pack file)：找內容相似的檔案，只儲存一份+差異的部分</li>\n</ul>\n</li>\n<li>Tree: 目錄資訊，指向Blobs<ul>\n<li>記錄Blob的辨識碼，檔案的資訊(如檔名)，子Tree(子資料夾)等</li>\n<li>Git可以用Tree快速產生兩個版本間的差異</li>\n</ul>\n</li>\n<li>Commit: 更動資訊，新的Commit會指向前一個Commit<ul>\n<li>包含作者，時間，commit對應的目錄(Tree)，commit message</li>\n</ul>\n</li>\n<li>Tag: 記錄commit的別名<ul>\n<li>lightweight tag<ul>\n<li>容器私有的</li>\n</ul>\n</li>\n<li>annotated tag<ul>\n<li>正式的tag，以物件方向儲存</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Index<ul>\n<li>即為Staging area(暫存區)</li>\n<li>可視為一顆Tree，在<code>git add</code>之後就將新檔案加入Tree中</li>\n<li>commit時，commit的Tree就是目前的index</li>\n</ul>\n</li>\n</ul>\n<p>版本和Tag都是指標，指向某個commit <img data-src=\"/img/Other/artist-test.png\" alt=\"\"></p>\n<h2 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h2><ul>\n<li>可視為指向某個commit的指標</li>\n<li>切換的時候工作目錄(容器所在的資料夾)會被改變</li>\n<li>用途<ul>\n<li>分隔 測試、開發、穩定的版本<pre><code>- debug分支\n- feature分支</code></pre></li>\n</ul>\n</li>\n<li>命名時可以分層<ul>\n<li><code>bug/...</code></li>\n<li><code>release/...</code></li>\n</ul>\n</li>\n<li>開發時用branch(pointer)，完成後可用tag取代(const pointer)</li>\n<li>分支是local的資訊<ul>\n<li>平常上傳只會將目前的HEAD和遠端分支的HEAD同步</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"分支種類\"><a href=\"#分支種類\" class=\"headerlink\" title=\"分支種類\"></a>分支種類</h3><ul>\n<li>唯讀<ul>\n<li>遠端追蹤分支：蒐集遠端每個分支的變更</li>\n<li>本地追蹤分支：蒐集本地分支和遠端追蹤分支的變更</li>\n</ul>\n</li>\n<li>本地分支：即平常使用的分支</li>\n<li>遠端分支</li>\n</ul>\n<h2 id=\"合併\"><a href=\"#合併\" class=\"headerlink\" title=\"合併\"></a>合併</h2><p>每次提交和合併的時間間隔愈短，每次的衝突愈少，愈容易實作。</p>\n<p>同一條線上的合併  </p>\n<ul>\n<li>不會有新提交，只會移動branch指標</li>\n<li>目前版本比被合併版本新 → Already up to date</li>\n<li>目前版本比被合併版本舊 → fast-forward(快轉)<ul>\n<li>將目前版本移動到被合併版本的HEAD</li>\n<li><strong>git只允許fast-forward的push</strong></li>\n</ul>\n</li>\n</ul>\n<p>正常的合併</p>\n<ol>\n<li>Resolve(直觀的方法)<ul>\n<li>只能用在兩個分支的合併</li>\n<li>以共同的祖先為基礎，套用被合併版本的變更到目前版本</li>\n</ul>\n</li>\n<li>Recursive(預設方法)<ul>\n<li>只能用在兩個分支的合併</li>\n<li>兩個版本有多個共同祖先的時候，先將所有祖先合併成一個暫時性的版本，再以此版本為基礎用Resolve方法<ul>\n<li>在多個祖先合併時可能也有相同的問題，此時用同方法遞迴</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Octopus<ul>\n<li>多次呼叫Recursive，每次處理一個分支</li>\n<li>可用在多分支的合併</li>\n</ul>\n</li>\n</ol>\n<p>特殊合併 <!-- investigate further --></p>\n<ul>\n<li>Ours<ul>\n<li>合併時只採用現在版本的變更<pre><code>- 但留下歷史記錄(即其他版本的樹仍存在於父節點)</code></pre>  <img data-src=\"https://image.slidesharecdn.com/paolucci-git-power-routines-150722082712-lva1-app6891/95/git-power-routines-30-638.jpg?cb=1437553811\" alt=\"\"></li>\n<li>通常用於<ul>\n<li>已經有其他版本的變更時</li>\n<li>只想要別人的歷史記錄，不想要其他人的變更</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"修改提交\"><a href=\"#修改提交\" class=\"headerlink\" title=\"修改提交\"></a>修改提交</h2><p>理由</p>\n<ul>\n<li>大小適當<ul>\n<li>將大範圍的提交拆解成小的，有主題的變更</li>\n<li>結合相似的變更成為一個大的提交</li>\n</ul>\n</li>\n<li>步驟分明<ul>\n<li>排序使其更合理</li>\n<li>移除不必要的提交</li>\n</ul>\n</li>\n<li>註：需要在其他開發者取得你的repository之前(git push之前)，以避免歷史不同步</li>\n</ul>\n<p>方法  </p>\n<ul>\n<li><code>git rebase</code></li>\n</ul>\n<h3 id=\"回復-git-reset\"><a href=\"#回復-git-reset\" class=\"headerlink\" title=\"回復(git reset)\"></a>回復(git reset)</h3><ul>\n<li>–soft: 將HEAD還原至指定commit</li>\n<li>–mixed: 將HEAD和Index(staging area)還原至指定commit，工作目錄不變</li>\n<li>–hard: 將HEAD和Index和工作目錄還原至指定commit</li>\n<li>被取代的HEAD會放在ORIG_HEAD</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git reset [--soft/mixed/hard] [commit] <span class=\"comment\"># default is mixed</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 變更上一次的提交</span></span><br><span class=\"line\">git reset HEAD^ <span class=\"comment\"># 此時上一次的提交已經不存在，但是工作目錄中的資料相同</span></span><br><span class=\"line\"><span class=\"comment\"># do some modification</span></span><br><span class=\"line\">git commit <span class=\"comment\"># 會覆蓋上一次的commit</span></span><br></pre></td></tr></table></figure>\n<p>通常用於清除錯誤</p>\n<ul>\n<li>cherry-pick<ul>\n<li>拿取指定commit到目前分支</li>\n<li><code>git cherry-pick [commit]</code></li>\n<li>使用時機<ul>\n<li>若有多個branch都找到相同的bug，可以在每個branch都cherry-pick debug的commit<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git checkout release</span><br><span class=\"line\">git cherry-pick develop~2 <span class=\"comment\"># get debug commit from develop branch</span></span><br></pre></td></tr></table></figure></li>\n<li>將某個分支的commit移植到另一個branch<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># in develop: W → X → Y → Z</span></span><br><span class=\"line\">git checkout master</span><br><span class=\"line\">git cherry-pick develop^ <span class=\"comment\"># Y</span></span><br><span class=\"line\">git cherry-pick develop~3 <span class=\"comment\"># W</span></span><br><span class=\"line\">git cherry-pick develop~2 <span class=\"comment\"># X</span></span><br><span class=\"line\">git cherry-pick develop <span class=\"comment\"># Z</span></span><br><span class=\"line\"><span class=\"comment\"># alternative</span></span><br><span class=\"line\">git cherry-pick develop^3..develop</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>如果要合併多個，可以加上 -n 指令就不會先幫你 commit，這樣可以多選幾個要合併的commit，最後再 git commit即可 <!-- ??? --></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"容器\"><a href=\"#容器\" class=\"headerlink\" title=\"容器\"></a>容器</h2><ul>\n<li>裸容器(bare)<ul>\n<li>沒有工作目錄、目前分支</li>\n<li>其他人可以用clone及fetch取得資料，push更新</li>\n<li>如github</li>\n<li>產生: <code>git init --bare</code></li>\n</ul>\n</li>\n<li>開發容器</li>\n</ul>\n<h2 id=\"建立備份\"><a href=\"#建立備份\" class=\"headerlink\" title=\"建立備份\"></a>建立備份</h2><p>自行建立裸容器，並加入remote，即可push, pull了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># assume mygitrepository is already a git repository</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/Backup <span class=\"comment\"># for example, you may want to put on server</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> --bare mygitrepository mygitrepository.git <span class=\"comment\"># create bare repository</span></span><br><span class=\"line\"><span class=\"comment\"># backup repository often use .git suffix</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> mygitrepository</span><br><span class=\"line\">git remote add origin /tmp/Backup/mygitrepository</span><br><span class=\"line\"><span class=\"comment\"># can use other name to replace \"origin\"</span></span><br><span class=\"line\">git remote update <span class=\"comment\"># 建立遠端追蹤分支(update remote information)</span></span><br></pre></td></tr></table></figure>\n<!--try it at workstation-->\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh myhost.com <span class=\"comment\"># build it on server</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /git</span><br><span class=\"line\">mkdir newrepo.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> newrepo.git</span><br><span class=\"line\">git init --shared --bare</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Git-tag\"><a href=\"#Git-tag\" class=\"headerlink\" title=\"Git tag\"></a>Git tag</h2><ul>\n<li>輕量級(lightweight)<ul>\n<li>像是沒有更動的分支</li>\n<li>指到特定commit的指標</li>\n<li>臨時加註標籤</li>\n<li><code>git tag [tagname] [commit]</code></li>\n</ul>\n</li>\n<li>含附註(annotated)<ul>\n<li>實際存在Git資料庫上的完整物件</li>\n<li>具備檢查碼、e-mail和日期，也包含標籤訊息</li>\n<li>可以被GNU Privacy Guard (GPG)簽署和驗證</li>\n<li><code>git tag -a [tagname] -m [tag message]</code></li>\n<li><code>git tag -a [tagname] [commit]</code></li>\n</ul>\n</li>\n<li>顯示詳細資訊: <code>git show [tagname]</code></li>\n<li><code>git push</code>指令並不會將標籤傳到遠端伺服器上。必須透過<code>git push origin [tagname]</code>指令<ul>\n<li>push 所有標籤: <code>git push origin --tags</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Git-Submodule\"><a href=\"#Git-Submodule\" class=\"headerlink\" title=\"Git Submodule\"></a>Git Submodule</h2><ul>\n<li>新增 submodule<ul>\n<li><code>git submodule add [repository path] [local path]</code></li>\n<li>產生 <code>.gitmodules</code> 文件。這是一個設定檔，保存了專案 URL 和你拉取到的本地子目錄</li>\n</ul>\n</li>\n<li><code>git clone</code>後，submodule並不會一起下載，需要自己更新</li>\n<li><code>git submodule init</code><ul>\n<li>根據 <code>.gitmodules</code> 的名稱和 URL，將這些資訊註冊到 <code>.git/config</code> 內</li>\n</ul>\n</li>\n<li>更新submodule <ul>\n<li><code>git submodule update</code></li>\n<li>根據已註冊（也就是 <code>.git/config</code> ）的 submodule 進行更新，例如 clone 遺失的 submodule，所以執行這個指令前最好加上 –init</li>\n<li>update並不一定是submodule的最新版，而是在主repository的目前版本中，submodule所在的版本</li>\n</ul>\n</li>\n<li>將submodule更新到最新版<ul>\n<li><code>git submodule foreach --recursive git pull origin master</code></li>\n</ul>\n</li>\n<li><code>git submodule sync</code><ul>\n<li>如果 submodule 的 remote URL 有變動，可以在 <code>.gitmodules</code> 修正 URL，然後執行這個指令，便會將 submodule 的 remote URL 更正。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Git-Server-Hosting\"><a href=\"#Git-Server-Hosting\" class=\"headerlink\" title=\"Git Server Hosting\"></a>Git Server Hosting</h2><ul>\n<li>gitlab<ul>\n<li>功能齊全</li>\n<li>需要登入</li>\n</ul>\n</li>\n<li>cgit<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQuengyYzQuY29tL2NnaXQvYWJvdXQv\">cgit主網站<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>需開啟cgi功能<ul>\n<li><code>./cgit.cgi</code> 可觀看產生的html</li>\n</ul>\n</li>\n<li>安裝成功後在<code>/etc/cgitrc</code>中修改設定，否則404</li>\n<li>參考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xhbnR3NDQvY29uZmlnZmlsZS9ibG9iL21hc3Rlci9jZ2l0L2NnaXRyYw==\">lantw44的設定檔<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vYXJ0aWNsZXMvZHVwbGljYXRpbmctYS1yZXBvc2l0b3J5Lw==\">複製git裸容器<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJpc2Rvd24ubmFtZS8yMDEzLzA3LzA1L3NldHRpbmctdXAtbG9jYWwtZ2l0aHViLW1pcnJvci13aXRoLWNnaXQtZ2l0LWRhZW1vbi5odG1s\">快速複製github中的repository<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xpbnV4LmRpZS5uZXQvbWFuLzUvY2dpdHJj\">cgitrc詳細設定<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他工具\"><a href=\"#其他工具\" class=\"headerlink\" title=\"其他工具\"></a>其他工具</h2><ul>\n<li>gitstats<ul>\n<li>產生容器的分析資料</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poLXR3L3YxL0dpdC3ln7rnpI4t5qiZ57Gk\">Git-基礎-標籤<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ib29rcy5jb20udHcvcHJvZHVjdHMvMDAxMDU3NDA5MA==\">版本控制：使用Git<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9paG93ZXIudHcvYmxvZy9hcmNoaXZlcy81NDM2\">git 設定集<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3RibG9ncy5jb20udHcvaGF0ZWxvdmUvYXJjaGl2ZS8yMDExLzEyLzI1L2ludHJvZHVjaW5nLWNvbnRpbnVvdXMtaW50ZWdyYXRpb24uYXNweA==\">https://dotblogs.com.tw/hatelove/archive/2011/12/25/introducing-continuous-integration.aspx<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvb3JpZ2FtaWFkZGljdC9naXQtZ2V0LXJlYWR5LXRvLXVzZS1pdA==\">git: get ready to use it<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY2hoLnR3L3Bvc3RzL2dpdC1zdWJtb2R1bGUv\">Git Submodule 用法筆記<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poLXR3L3YxL0dpdC0lRTUlQjclQTUlRTUlODUlQjctJUU1JUFEJTkwJUU2JUE4JUExJUU3JUI1JTg0LVN1Ym1vZHVsZXM=\">Git 工具 - 子模組 (Submodules)<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "git"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/Emacs-tips/",
            "url": "http://gitqwerty777.github.io/Emacs-tips/",
            "title": "Emacs常用指令表",
            "date_published": "2015-05-02T09:49:50.000Z",
            "content_html": "<blockquote>\n<p>Emacs快捷鍵是可以修改的，所以不一定要全部記住，只需要熟悉基本功能和知道有其他方便的擴充功能即可</p>\n</blockquote>\n<h2 id=\"Emacs基本\"><a href=\"#Emacs基本\" class=\"headerlink\" title=\"Emacs基本\"></a>Emacs基本</h2><ul>\n<li>C → Ctrl</li>\n<li>M → Alt 或 esc</li>\n<li>S → Shift</li>\n<li>Ret → return(enter)</li>\n<li>範例<ul>\n<li><code>C-c</code> → Ctrl + c</li>\n<li><code>C-c C-f</code> → Ctrl + c, 放開c, 按下f，也可以分開來按，但較慢</li>\n</ul>\n</li>\n<li><code>hello.c</code>的自動儲存檔案的檔名就是<code>#hello.c#</code><ul>\n<li>儲存檔案後，自動儲存檔就會被刪除</li>\n</ul>\n</li>\n<li>Ctrl 通常是對一個字操作， Alt 通常是對一個詞，或一個句子操作</li>\n<li>每一個Emacs的指令都有名稱，可以用<code>M-x [command]</code>來執行指令</li>\n</ul>\n<h3 id=\"Emacs移動\"><a href=\"#Emacs移動\" class=\"headerlink\" title=\"Emacs移動\"></a>Emacs移動</h3><p><img data-src=\"/img/Other/emacs-move.png\" alt=\"\"></p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>M-v, C-v</td>\n<td>上翻/下翻一頁</td>\n</tr>\n<tr>\n<td>M-b, M-f</td>\n<td>往前/往後 移動一個詞</td>\n</tr>\n<tr>\n<td>M-a, M-e</td>\n<td>移動到一句的開始/結尾(程式碼的一個段落)</td>\n</tr>\n<tr>\n<td>C-l</td>\n<td>移動視窗(遊標所在的行移動至最上方、最下方、中間)</td>\n</tr>\n<tr>\n<td>M-g M-g</td>\n<td>跳至指定行(= M-g g)</td>\n</tr>\n<tr>\n<td>M-m</td>\n<td>將游標移到該行第一個字元(大多數情況下，等同C-a)</td>\n</tr>\n</tbody></table>\n<h3 id=\"Emacs編輯\"><a href=\"#Emacs編輯\" class=\"headerlink\" title=\"Emacs編輯\"></a>Emacs編輯</h3><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-j</td>\n<td>換行並自動縮排(<code>newline-and-indent</code>)</td>\n</tr>\n<tr>\n<td>C-SPACE</td>\n<td>開始選取文字(再按一次結束選取)</td>\n</tr>\n<tr>\n<td>C-x C-x</td>\n<td>改變選取的方向</td>\n</tr>\n<tr>\n<td>C-x h</td>\n<td>全選</td>\n</tr>\n<tr>\n<td>M-h</td>\n<td>選擇遊標所在的段落</td>\n</tr>\n<tr>\n<td>C-w/M-w</td>\n<td>剪下/複製 選取文字</td>\n</tr>\n<tr>\n<td>C-y</td>\n<td>貼上選取文字</td>\n</tr>\n<tr>\n<td>M-y</td>\n<td>改變貼上的文字(從之前剪下/複製過的文字中，由新到舊出現)</td>\n</tr>\n<tr>\n<td>C-d</td>\n<td>同<code>delete</code>鍵(刪除後一個字)</td>\n</tr>\n<tr>\n<td>M-d</td>\n<td>刪除後一個詞</td>\n</tr>\n<tr>\n<td>M-del</td>\n<td>刪除前一個詞</td>\n</tr>\n<tr>\n<td>C-g</td>\n<td>取消尚未完成的指令(如選擇遊標)</td>\n</tr>\n<tr>\n<td>C-x C-;</td>\n<td>註釋/取消註釋</td>\n</tr>\n</tbody></table>\n<p><code>C-k</code>: 刪除從游標到「行尾」間的字元</p>\n<ul>\n<li>單獨的 C-k 會把一行的內容殺掉</li>\n<li>而第二個 C-k 則會殺掉那一行本身(‘\\n’)。使所有其他的行向上移動</li>\n</ul>\n<p><code>C-x u</code>: 還原</p>\n<ul>\n<li>不會還原沒有改變文字的指令（移動游標和視窗等）</li>\n<li>自行鍵入的字元 一次最多還原20個</li>\n</ul>\n<h3 id=\"重複\"><a href=\"#重複\" class=\"headerlink\" title=\"重複\"></a>重複</h3><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n<th>示範</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-u [數字] [指令or字元]</td>\n<td>重複執行</td>\n<td>C-u 8 a → aaaaaaaa</td>\n</tr>\n<tr>\n<td>M-[數字] [指令or字元]</td>\n<td>重複執行</td>\n<td>M-8 a → aaaaaaaa</td>\n</tr>\n</tbody></table>\n<h3 id=\"Emacs搜尋\"><a href=\"#Emacs搜尋\" class=\"headerlink\" title=\"Emacs搜尋\"></a>Emacs搜尋</h3><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-s</td>\n<td>往後搜尋(再按一次：找下一個)</td>\n</tr>\n<tr>\n<td>C-r</td>\n<td>往前搜尋</td>\n</tr>\n<tr>\n<td>M-C-s</td>\n<td>正規表示式搜尋</td>\n</tr>\n<tr>\n<td>M-%</td>\n<td>取代</td>\n</tr>\n</tbody></table>\n<p>取代模式的操作</p>\n<ul>\n<li><code>y</code>或space：置換目前游標所在的字串，並且移到下一個可被置換的字串</li>\n<li><code>n</code>：跳過目前游標所在的字串。移到下一個可被置換的字串</li>\n<li><code>ESC</code>：結束置換模式</li>\n<li><code>.</code>：置換目前的字串，並離開置換模式</li>\n<li><code>!</code>：將整個檔案一次置換完畢，不進行任何詢問</li>\n<li><code>^</code>：回到前一個符合置換的地方</li>\n<li><code>C-r</code>: 進入recursive-edit模式<ul>\n<li><code>M-C-c</code>: 結束recursive-edit模式</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Emacs分割-window\"><a href=\"#Emacs分割-window\" class=\"headerlink\" title=\"Emacs分割(window)\"></a>Emacs分割(window)</h3><p>在螢幕上同時顯示的多個編輯區，稱為分割</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-x 0</td>\n<td>關閉目前分割</td>\n</tr>\n<tr>\n<td>C-x 1</td>\n<td>關閉其他分割(只留下目前的分割)</td>\n</tr>\n<tr>\n<td>C-x 2</td>\n<td>新增水平分割</td>\n</tr>\n<tr>\n<td>C-x 3</td>\n<td>新增垂直分割</td>\n</tr>\n<tr>\n<td>C-x o</td>\n<td>跳到別的分割(在現有的分割循環)</td>\n</tr>\n<tr>\n<td>M-C-v</td>\n<td>捲動另一個分割</td>\n</tr>\n<tr>\n<td>C-x 5 2</td>\n<td>開新視窗(frame)</td>\n</tr>\n</tbody></table>\n<h3 id=\"Emacs檔案\"><a href=\"#Emacs檔案\" class=\"headerlink\" title=\"Emacs檔案\"></a>Emacs檔案</h3><h4 id=\"Emacs檔案切換\"><a href=\"#Emacs檔案切換\" class=\"headerlink\" title=\"Emacs檔案切換\"></a>Emacs檔案切換</h4><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-x C-b</td>\n<td>列出開啟的檔案清單(<code>Buffer List</code>)</td>\n</tr>\n<tr>\n<td>C-x b</td>\n<td>切換至其他開啟的檔案</td>\n</tr>\n<tr>\n<td>C-x k</td>\n<td>關閉目前編輯的檔案</td>\n</tr>\n</tbody></table>\n<h4 id=\"Emacs檔案指令\"><a href=\"#Emacs檔案指令\" class=\"headerlink\" title=\"Emacs檔案指令\"></a>Emacs檔案指令</h4><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-x C-f</td>\n<td>開新檔案/開啟舊檔</td>\n</tr>\n<tr>\n<td>C-x 4 f</td>\n<td>在新分割開啟檔案</td>\n</tr>\n<tr>\n<td>C-x C-s</td>\n<td>儲存檔案</td>\n</tr>\n<tr>\n<td>C-x s</td>\n<td>全部檔案儲存</td>\n</tr>\n<tr>\n<td>C-x C-w</td>\n<td>另存新檔</td>\n</tr>\n<tr>\n<td>C-x d</td>\n<td>開啟資料夾模式(Dired Mode)</td>\n</tr>\n<tr>\n<td>C-x C-v</td>\n<td>開啟檔案取代目前的工作區(<code>find-alternate-file</code>, 開錯檔案的時候用)</td>\n</tr>\n</tbody></table>\n<h3 id=\"Emacs系統\"><a href=\"#Emacs系統\" class=\"headerlink\" title=\"Emacs系統\"></a>Emacs系統</h3><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-x C-c</td>\n<td>結束 Emacs</td>\n</tr>\n<tr>\n<td>C-z</td>\n<td>暫時離開Emacs(Suspend)</td>\n</tr>\n</tbody></table>\n<p>用<code>fg</code>或<code>%emacs</code>恢復 Emacs</p>\n<h3 id=\"Emacs函式\"><a href=\"#Emacs函式\" class=\"headerlink\" title=\"Emacs函式\"></a>Emacs函式</h3><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>M-x [function]</td>\n<td>執行名為[function]的指令</td>\n</tr>\n<tr>\n<td>M-x compile</td>\n<td>編譯(會開啟<code>*compilation*</code>分割)</td>\n</tr>\n<tr>\n<td>M-x recompile</td>\n<td>重覆執行上次執行過的compile指令</td>\n</tr>\n<tr>\n<td>C-x `</td>\n<td>跳到下一個有編譯錯誤的地方</td>\n</tr>\n<tr>\n<td>M-x gdb</td>\n<td>用gdb除錯</td>\n</tr>\n<tr>\n<td>M-x shell</td>\n<td>開啟<code>shell</code>分割</td>\n</tr>\n</tbody></table>\n<p>在Shell分割中，需要在Shell指令前加上 <code>C-c</code><br>如 <code>C-c C-c</code> 為中止程式; <code>C-c C-z</code> 為暫停程式等</p>\n<h3 id=\"Emacs幫助\"><a href=\"#Emacs幫助\" class=\"headerlink\" title=\"Emacs幫助\"></a>Emacs幫助</h3><!-- TODO: -->\n\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-h ?</td>\n<td>開啟 <code>*Help*</code> 分割</td>\n</tr>\n<tr>\n<td>C-h c [指令]</td>\n<td>在命令列顯示簡短解釋</td>\n</tr>\n<tr>\n<td>C-h k [指令]</td>\n<td>在新分割顯示詳細解釋</td>\n</tr>\n<tr>\n<td>C-h f [函數]</td>\n<td>在新分割顯示函數說明</td>\n</tr>\n<tr>\n<td>C-h w [函數]</td>\n<td>查詢此函數的快捷鍵</td>\n</tr>\n<tr>\n<td>C-h m</td>\n<td>瀏覽現在模式的文件(C, C++, text…)</td>\n</tr>\n<tr>\n<td>C-h a</td>\n<td>列出所有「含有此關鍵字」的全部函數(Command Apropos)</td>\n</tr>\n<tr>\n<td>C-h i</td>\n<td>開啟 <code>*info*</code> 分割</td>\n</tr>\n</tbody></table>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><!-- TODO: -->\n\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>M-C-\\</td>\n<td>選擇區塊自動縮排(<code>indent-region</code>)</td>\n</tr>\n<tr>\n<td>M-;</td>\n<td>在句尾加入註解</td>\n</tr>\n<tr>\n<td>M-^</td>\n<td>將此行併入上一行</td>\n</tr>\n<tr>\n<td>C-t</td>\n<td>對調兩字元</td>\n</tr>\n<tr>\n<td>M-t</td>\n<td>對調兩單字</td>\n</tr>\n<tr>\n<td>C-x C-t</td>\n<td>對調兩行</td>\n</tr>\n<tr>\n<td>M-c</td>\n<td>將字的第一個字母改為大寫(Capitalize)</td>\n</tr>\n<tr>\n<td>M-u</td>\n<td>將單字改為大寫(Upper)</td>\n</tr>\n<tr>\n<td>M-l</td>\n<td>將單字改為小寫(Lower)</td>\n</tr>\n<tr>\n<td>C-x i</td>\n<td>插入其他檔案的內容(insert-file)</td>\n</tr>\n</tbody></table>\n<h2 id=\"Emacs技巧\"><a href=\"#Emacs技巧\" class=\"headerlink\" title=\"Emacs技巧\"></a>Emacs技巧</h2><h3 id=\"自動完成\"><a href=\"#自動完成\" class=\"headerlink\" title=\"自動完成\"></a>自動完成</h3><p><code>M-/</code> 可重複輸入以改變建議字串</p>\n<h3 id=\"移動至定義-goto-declaration\"><a href=\"#移動至定義-goto-declaration\" class=\"headerlink\" title=\"移動至定義(goto declaration)\"></a>移動至定義(goto declaration)</h3><ol>\n<li>建立tag檔<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># for c, c++ file</span></span><br><span class=\"line\">find . | grep <span class=\"string\">&quot;.*\\.\\(c\\|h\\|cpp\\)&quot;</span> | xargs etags -f tags <span class=\"comment\"># output filename &quot;tags&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># for python file</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -name <span class=\"string\">&#x27;*.py&#x27;</span> | xargs etags -f tags</span><br></pre></td></tr></table></figure></li>\n<li>在Emacs中用<code>M-.</code>進行搜尋</li>\n<li><code>C-x 4 .</code>: 在另一個分割開啟定義</li>\n</ol>\n<p><code>M-*</code> 回到前一個定義的位置  </p>\n<p>使用<code>autocomplete</code>套件 </p>\n<!-- TODO: -->\n\n<h3 id=\"回到之前的遊標位置\"><a href=\"#回到之前的遊標位置\" class=\"headerlink\" title=\"回到之前的遊標位置\"></a>回到之前的遊標位置</h3><p>在搜尋或尋找定義之後很好用<br><code>C-u C-space</code></p>\n<h3 id=\"Emacs作為IDE使用\"><a href=\"#Emacs作為IDE使用\" class=\"headerlink\" title=\"Emacs作為IDE使用\"></a>Emacs作為IDE使用</h3><p><a href=\"http://stackoverflow.com/questions/11043004/emacs-compile-buffer-auto-close\">編譯成功後自動關閉<em>compilnation</em>分割</a><br><span class=\"exturl\" data-url=\"aHR0cDovL2xpZmVnb28ucGx1c2tpZC5vcmcvd2lraS9FbWFjc1NtYXJ0Q29tcGlsZS5odG1s\">智慧編譯：自動偵測檔名或makefile並編譯<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"Emacs巨集-Macro\"><a href=\"#Emacs巨集-Macro\" class=\"headerlink\" title=\"Emacs巨集(Macro)\"></a>Emacs巨集(Macro)</h3><!-- TODO: -->\n\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-x (</td>\n<td>開始定義巨集</td>\n</tr>\n<tr>\n<td>C-x )</td>\n<td>結束巨集定義</td>\n</tr>\n<tr>\n<td>C-x e</td>\n<td>執行上一個定義的巨集</td>\n</tr>\n<tr>\n<td>M-[Num] C-x e</td>\n<td>將上一個定義的巨集執行 Num 次</td>\n</tr>\n<tr>\n<td>C-u C-x (</td>\n<td>執行上一個定義的巨集，然後可以加上按鍵以重新定義巨集</td>\n</tr>\n<tr>\n<td>C-x q</td>\n<td>將巨集定義中插入查詢</td>\n</tr>\n<tr>\n<td>C-u C-x q</td>\n<td>將巨集定義中插入遞迴編輯</td>\n</tr>\n<tr>\n<td>M-C-c</td>\n<td>跳出遞迴編輯</td>\n</tr>\n</tbody></table>\n<p><code>name-last-kbd-macro</code>: 將上一個定義的巨集存檔之前予以命名<br><code>load-file</code>: 載入儲存的lisp程式碼巨集<br><code>macroname</code>: 執行儲存過的”macroname”巨集<br><code>insert-kbd-macro</code>: 將命名過的巨集以lisp程式碼印出</p>\n<p>應用：在<code>EmacsMacro.el</code>中儲存巨集程式碼，並在<code>.emacs</code>中寫入</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">;;load my macro file</span></span><br><span class=\"line\">(<span class=\"name\">load</span> <span class=\"string\">&quot;~/EmacsMacro&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<!--\nTODO:\n### hippie\n\n### 书签\n\n### 快速切換到 shell 並 cd 到當前文件所在的目錄\n-->\n\n<h3 id=\"Emacs-Latex\"><a href=\"#Emacs-Latex\" class=\"headerlink\" title=\"Emacs + Latex\"></a>Emacs + Latex</h3><p><span class=\"exturl\" data-url=\"aHR0cDovL2JiczMubnN5c3UuZWR1LnR3L3R4dFZlcnNpb24vdHJlYXN1cmUvSVVUL00uMTAwNjg2ODM1Mi5BL00uMTAwNjk1MjY3OC5HLmh0bWw=\">參考資料<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>安裝: <code>sudo apt-get install texlive-full</code></p>\n<p>M-x validate-tex-region：檢查每一段文稿是否有不平衡的大括號或錢字號。<br>C-c {：插入 <code>&#123;&#125;&#39; 並將游標移至左右大括號之間\nC-c &#125;：將游標移至下一個右大括號的右端\nC-c C-o：插入 LaTeX 區段標記</code>\\begin’ 及\\end’ 並將游標移至<br>二者間的空行<br>C-c C-e：為前一個不平衡的 `\\begin’ 加上\\end’</p>\n<p>編譯</p>\n<ul>\n<li><p>C-c C-f：對目前所在的檔案執行 TeX/LaTeX 的編譯</p>\n</li>\n<li><p>C-c C-r：對一段區域 (region) 執行 TeX/LaTeX 的編譯</p>\n<ul>\n<li>不論是 TeX 或 LaTeX都包含了一段有關全文的訊息在整篇文稿的開端，若是僅僅編譯所指定的區域而忽略了這段訊息的話，將會產生錯誤的結果。為了解決這個問題，必需在文稿中標明header 的位置，然後在 用  C-c C-r 命令時  emacs 會自動將header中的訊息讀入處理。在 TeX 中標明 header 的方法是在 header段落前後插入 <code>%start of header&#39; 和</code> %end of header}’</li>\n</ul>\n</li>\n<li><p>C-c C-b：對整個目前所在的緩衝區 (buffer) 執行 TeX/LaTeX 的編譯</p>\n</li>\n<li><p>C-c C-r 和  C-c C-b 並不會產生如  *.aux等的附屬檔，因此無法執行cross-reference等工作。如果需要產生附屬檔則必需使用 C-c C-f</p>\n</li>\n<li><p>C-c TAB：對目前所在的檔案執行 BibTeX 的編譯</p>\n</li>\n<li><p>C-c C-v：預覽 C-c C-r, C-c C-b 或  C-c C-f 編譯的結果</p>\n</li>\n<li><p>C-c C-k：終結 (kill) 目前進行中的 TeX/LaTeX 程序(process)</p>\n</li>\n<li><p>C-c C-p：列印 C-c C-r、C-c C-b 或 C-cC-f 編譯的結果</p>\n</li>\n<li><p>C-c C-q：顯示目前的 printer queue</p>\n</li>\n</ul>\n<h3 id=\"Emacs-Git\"><a href=\"#Emacs-Git\" class=\"headerlink\" title=\"Emacs + Git\"></a>Emacs + Git</h3><p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9ob2xicm9vay9hcmNoaXZlLzIwMTIvMDQvMjYvMjQ3MDkyMy5odG1s\">使用git-emacs套件<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"畫簡單的ASCII圖\"><a href=\"#畫簡單的ASCII圖\" class=\"headerlink\" title=\"畫簡單的ASCII圖\"></a>畫簡單的ASCII圖</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2VtYWNzZXIuY29tL2FydGlzdC1tb2RlLmh0bQ==\">Artist Mode<i class=\"fa fa-external-link-alt\"></i></span>    </li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2VtYWNzZXIuY29tL2VtYWNzLWRpdGFhLmh0bWw=\">輸出成圖片檔<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h3 id=\"Emacs-Markdown\"><a href=\"#Emacs-Markdown\" class=\"headerlink\" title=\"Emacs + Markdown\"></a>Emacs + Markdown</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eHRveS5vcmcvYXJjaGl2ZXMvZW1hY3MtbWFya2Rvd24tbW9kZS5odG1s\">Emacs Markdown模式<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>有些指令直接輸入比較快…</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>C-c C-t [N]</td>\n<td>插入第N級的標題</td>\n</tr>\n<tr>\n<td>C-c C-a l</td>\n<td>插入鏈接，格式為 <code>[text](url)</code></td>\n</tr>\n<tr>\n<td>C-c C-i i</td>\n<td>插入圖像，格式為 <code>![text](url)</code></td>\n</tr>\n<tr>\n<td>C-c -</td>\n<td>插入水平線</td>\n</tr>\n<tr>\n<td>S-Tab</td>\n<td>在大綱視圖、目錄視圖、及正常視圖間切換</td>\n</tr>\n<tr>\n<td>C-c C-c m</td>\n<td>預覽HTML</td>\n</tr>\n<tr>\n<td>C-c C-c p</td>\n<td>在瀏覽器中預覽</td>\n</tr>\n</tbody></table>\n<h3 id=\"Emacs-Screen\"><a href=\"#Emacs-Screen\" class=\"headerlink\" title=\"Emacs + Screen\"></a>Emacs + Screen</h3><p><span class=\"exturl\" data-url=\"aHR0cDovL2xhZ3VuYXdhbmcucGl4bmV0Lm5ldC9ibG9nL3Bvc3QvMjgzNjgyNS1saW51eC1zY3JlZW4lRTYlOEMlODclRTQlQkIlQTQ=\">Screen 指令表<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>因為Emacs的快捷鍵和Screen重複，要自己在<code>.screenrc</code>設定檔修改</p>\n<ul>\n<li>在 <code>.screenrc</code> 中新增 <code>escape ^tt</code><br>即可將 所有 C-a 改為 C-t</li>\n<li>在 <code>.screenrc</code> 中新增 <code>escape ^l^l</code><br>即可將 所有 <code>C-a</code> 改為 <code>C-l</code>，且在輸入 <code>C-l C-l</code> 時可以跳脫screen指令(等同在terminal輸入<code>C-l</code>)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xpZmVnb28ucGx1c2tpZC5vcmcvd2lraS9TY3JlZW4uaHRtbA==\">修改教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<p>在使用Emacs時，適合bind到screen的key:<br><code>C-v</code>(scroll-up-command), <code>C-space</code>(set-mark-command), <code>C-t</code>(transpose-chars), <code>C-d</code>(delete char), C-l(recenter-top-bottom)<br>其他都太常用或是不能bind(<code>C-z</code>, <code>C-q</code>, <code>C-m</code>, <code>C-i</code>)，不然就要用 C-S 系列</p>\n<!-- ### Dired Mode\n\nTODO:\n\n### 套件安裝\n\nTODO: -->\n\n<h3 id=\"其他功能\"><a href=\"#其他功能\" class=\"headerlink\" title=\"其他功能\"></a>其他功能</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ251Lm9yZy9zb2Z0d2FyZS9lbWFjcy9tYW51YWwvaHRtbF9ub2RlL2VmYXEvUmVwbGFjaW5nLXRleHQtYWNyb3NzLW11bHRpcGxlLWZpbGVzLmh0bWw=\">多檔案取代字串<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"字體大小\"><a href=\"#字體大小\" class=\"headerlink\" title=\"字體大小\"></a>字體大小</h3><ul>\n<li>放大字體: C-x C-+ 或 C-x C-=</li>\n<li>縮小字體: C-x C-–</li>\n<li>重置字體: C-x C-0</li>\n</ul>\n<h3 id=\"Emacs-Server\"><a href=\"#Emacs-Server\" class=\"headerlink\" title=\"Emacs Server\"></a>Emacs Server</h3><p>若Emacs設定檔太大，開啟時會需要花很長時間，所以可以持續開啟server，需要的時候再使用client連接至server，即可省下讀取設定的時間。</p>\n<!-- TODO: 測試 -->\n<ul>\n<li>開啟server: <code>emacs --daemon</code></li>\n<li>連線至server: <code>emacsclient</code></li>\n</ul>\n<h3 id=\"解決Windows上C-Space被中文輸入法佔用的問題\"><a href=\"#解決Windows上C-Space被中文輸入法佔用的問題\" class=\"headerlink\" title=\"解決Windows上C-Space被中文輸入法佔用的問題\"></a>解決Windows上C-Space被中文輸入法佔用的問題</h3><ol>\n<li>上策：移除輸入法的<code>C-space</code>綁定(失敗)<ol>\n<li>語言列選項 → 輸入語言快捷鍵 → 將<code>C-Space</code>取消或改成別的</li>\n</ol>\n</li>\n<li>中策：比輸入法更優先綁定<code>C-space</code>(成功)<ol>\n<li>使用AutoHotKey<ol>\n<li><code>^Space::^+2</code>: 將 <code>C-Space</code> 映射至 <code>C-S-2</code></li>\n</ol>\n</li>\n</ol>\n</li>\n<li>下策：換別的快捷鍵<ol>\n<li><code>C-S-2</code>(Emacs內建，不過很難按)</li>\n<li><code>M-space</code>(在VSCode不適用)</li>\n<li><code>C-t</code></li>\n<li><code>C-m</code></li>\n<li><code>C-h</code></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Emacs知識\"><a href=\"#Emacs知識\" class=\"headerlink\" title=\"Emacs知識\"></a>Emacs知識</h2><p><span class=\"exturl\" data-url=\"aHR0cDovL2xpZmVnb28ucGx1c2tpZC5vcmcvd2lraS9FbWFjcy5odG1s\">參考資料<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"名稱\"><a href=\"#名稱\" class=\"headerlink\" title=\"名稱\"></a>名稱</h3><p>Emacs 是 「編輯巨集」[Editing MACroS]的簡稱</p>\n<h3 id=\"前綴\"><a href=\"#前綴\" class=\"headerlink\" title=\"前綴\"></a>前綴</h3><ul>\n<li>一些不是特別常用的函數綁定到前綴 C-x 上。例如 C-x C-c 退出 Emacs， C-x 2 水平分割當前 window</li>\n<li>與某個 mode 相關的的函數被綁定到前綴 C-c 上</li>\n<li>最不常用的函數根本沒有鍵綁定，而是使用 M-x 然後輸入函數名來調用他們</li>\n<li>前綴 C-x 4 被保留作操作另外一個 window 用的函數，例如 C-x 4 C-f 在另 外一個 window 裡面打開文件</li>\n<li>前綴 C-x 5 被綁定到操縱其他frame 的 函數上面</li>\n</ul>\n<h3 id=\"殺掉-kill\"><a href=\"#殺掉-kill\" class=\"headerlink\" title=\"殺掉(kill)\"></a>殺掉(kill)</h3><!-- - TODO: kill-ring -->\n<ul>\n<li>被殺掉的可以拉回，而被刪除的則不能<ul>\n<li><code>delete</code>, <code>backspace</code>都是刪除</li>\n<li><code>C-k</code>, <code>C-w</code>, <code>M-w</code> 等指令都是殺掉<ul>\n<li>如果連續地做了數次 C-k，所有被殺掉的文字都會被儲存在一起，因此做一次C-y 就會把所有這些行都拉回來</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>將被殺掉的文字回復的動作稱為「拉回（ yanking ）」<ul>\n<li>即為貼上的意思<ul>\n<li><code>C-y</code> 會把最近殺掉的拉回來，前幾次殺掉的文字可以用 <code>M-y</code> 來回復</li>\n<li>可以給 <code>M-y</code> 正的或是負的參數來回到之前殺掉的東西</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"搜尋\"><a href=\"#搜尋\" class=\"headerlink\" title=\"搜尋\"></a>搜尋</h3><ul>\n<li>Emacs 搜尋指令是「漸進的（ incremental ）」，搜尋發生在遊標後<ul>\n<li>如果鍵入『u』，游標會移動到「cu」的第一次出現位置。將「u」從s搜尋字串中消除，游標會移回到「c」的第一次出現位置</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"設定檔位置\"><a href=\"#設定檔位置\" class=\"headerlink\" title=\"設定檔位置\"></a>設定檔位置</h3><p>家目錄的<code>.emacs</code>檔案和<code>.emacs.d</code>資料夾，可修改Emacs設定</p>\n<h3 id=\"Shell\"><a href=\"#Shell\" class=\"headerlink\" title=\"Shell\"></a>Shell</h3><ul>\n<li>Bash上預設的控制模式是Emacs，也就是說可以使用 C-a, C-f, C-b 等移動鍵，C-r搜尋歷史指令，C-n, C-p 切換歷史指令，C-k 殺掉文字，C-y貼上文字，C-j 執行指令等等。</li>\n<li>和Emacs不一樣的地方有 <code>C-h</code>往前刪除一字元, <code>C-w</code>清除游標以前的一個單字, <code>C-u</code>清除游標以前所有的字元。</li>\n</ul>\n<h3 id=\"其他-1\"><a href=\"#其他-1\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>Emacs即為Lisp語言直譯器，所以理論上可以做到任何Lisp能做到的事，所以也被稱為「神之編輯器」。</p>\n<!-- (https://www.facebook.com/pangfeng.liu/posts/696258720389410?match=ZW1hY3M%3D) -->\n<blockquote>\n<p>我完全同意 emacs 和管風琴一樣。配合 Cherry 機械鍵盤寫論文寫程式有如彈琴。Ctrl 鍵有如和弦，空白鍵宛如音符之間的暫停，而最後重重敲下 Return 鍵時，右手宛如指揮家劃下最後一個節拍的爽快。<br>– 劉邦鋒</p>\n</blockquote>\n<h3 id=\"軼事\"><a href=\"#軼事\" class=\"headerlink\" title=\"軼事\"></a>軼事</h3><p>Tim O’relly 原本使用 Emacs，直到他弄丟 <code>.emacs</code> 檔案</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMDkxMDAzMDExMjAwL2h0dHA6Ly93d3cub3JlaWxseW5ldC5jb20vcHViL2Evb3JlaWxseS9hc2tfdGltLzE5OTkvdW5peF9lZGl0b3IuaHRtbA==\">原文<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"快速設定\"><a href=\"#快速設定\" class=\"headerlink\" title=\"快速設定\"></a>快速設定</h2><p>使用現成的設定檔</p>\n<ul>\n<li><p>優點</p>\n<ul>\n<li>不用寫lisp</li>\n<li>經過優化</li>\n<li>較完整</li>\n</ul>\n</li>\n<li><p>缺點</p>\n<ul>\n<li>不夠客製化</li>\n<li>功能太多，搞不清</li>\n<li>難以修改</li>\n</ul>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JiYXRzb3YvcHJlbHVkZQ==\">Prelude<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B1cmNlbGwvZW1hY3MuZA==\">Purcell<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N5bDIwYm5yL3NwYWNlbWFjcw==\">Spacemacs<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n</ul>\n<h2 id=\"CheatSheet\"><a href=\"#CheatSheet\" class=\"headerlink\" title=\"CheatSheet\"></a>CheatSheet</h2><p><img data-src=\"/img/emacs/cheatsheet.png\" alt=\"\"></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3N0ZXZlbmNoYW4udXMvZW1hY3MtdmlzdWFsLWNoZWF0LXNoZWV0\">Cheat Sheet<i class=\"fa fa-external-link-alt\"></i></span></p>\n<!--\n## Mode Line\n\n TODO: -->\n\n<!-- ## Org Mode\n\nhttps://github.com/pbesedm/Oh-My-Editors/blob/master/doc/emacs%E6%93%8D%E4%BD%9C%E6%B1%87%E6%80%BB.org -->\n\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NsaXB0aGF0LmJsb2dzcG90LnR3LzIwMTAvMDEvZW1hY3MuaHRtbA==\">指令大全<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5lbWFjcy51bml5YXIuYWMucnUvZG9jL2VtMjRoLw==\">Sams Teach Yourself Emacs in 24 Hours<i class=\"fa fa-external-link-alt\"></i></span> <!-- 未讀--></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcmVkZ3VhcmR0b28vYXJ0aWNsZS9kZXRhaWxzLzcyMjI1MDE=\">一年成為Emacs高手<i class=\"fa fa-external-link-alt\"></i></span><ul>\n<li>有常用套件推薦</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "Emacs",
                "指令"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/natural-language-processing2/",
            "url": "http://gitqwerty777.github.io/natural-language-processing2/",
            "title": "自然語言處理(下)",
            "date_published": "2015-05-01T04:37:47.000Z",
            "content_html": "<h2 id=\"Chap08-Syntax-and-Grammars\"><a href=\"#Chap08-Syntax-and-Grammars\" class=\"headerlink\" title=\"Chap08 Syntax and Grammars\"></a>Chap08 Syntax and Grammars</h2><p>Grammar    </p>\n<ul>\n<li>represent certain knowledges of what we know about a language</li>\n<li>General criteria<ul>\n<li>linguistic naturalness</li>\n<li>mathematical power</li>\n<li>computational effectiveness</li>\n</ul>\n</li>\n</ul>\n<p>Context-free grammars(CFG)</p>\n<ul>\n<li>Alias<ul>\n<li>Phrase structure grammars</li>\n<li>Backus-Naur form</li>\n</ul>\n</li>\n<li>More powerful than finite state machine</li>\n<li>Rules <ul>\n<li>Terminals <ul>\n<li>words</li>\n</ul>\n</li>\n<li>Non-terminals <ul>\n<li>Noun phrase, Verb phrase …</li>\n</ul>\n</li>\n<li>Generate strings in the language</li>\n<li>Reject strings not in the language  </li>\n<li>LHS → RHS<ul>\n<li>LHS: Non-terminals </li>\n<li>RHS: Non-terminals or Terminals</li>\n</ul>\n</li>\n<li>Context Free<ul>\n<li>probability of a subtree does not depend on words not dominated by the subtree(subtree出現的機率和上下文無關)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n\n<p>Evaluation  </p>\n<ol>\n<li>Does it undergenerate?<ul>\n<li>rules cannot completely explain language</li>\n<li>not a problem if the goal is to produce a language</li>\n</ul>\n</li>\n<li>Does it overgenerate?<ul>\n<li>rules overly explain the language</li>\n<li>not a problem if the goal is to recognize or understand well-formed(correct) language</li>\n</ul>\n</li>\n<li>Does it assign appropriate structures to the strings that it generates?</li>\n</ol>\n<p>Parsing  </p>\n<ul>\n<li>take a string and a grammar</li>\n<li>assigning trees that covers all and only words in input strings</li>\n<li>return parse tree for that string</li>\n</ul>\n<p>English Grammar Fragment  </p>\n<ul>\n<li>Sentences</li>\n<li>Noun Phrases<ul>\n<li>Ex. NP → det Nominal</li>\n<li><strong>head: central criticial noun in NP</strong><ul>\n<li>important in statistical parsing</li>\n<li>after det(冠詞), before pp(介系詞片語) <img data-src=\"/img/NLP/np-parse.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>Agreement<ul>\n<li>a part of overgenerate</li>\n<li>This flight(○)</li>\n<li>This flights(×)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Verb Phrases<ul>\n<li>head verb with arguments</li>\n<li>Subcategorization(分類)<ul>\n<li>categorize according to VP rules</li>\n<li>a part of overgenerate</li>\n<li>Prefer<ul>\n<li>I prefer [to leave earlier]TO-VP</li>\n</ul>\n</li>\n<li>Told<ul>\n<li>I was told [United has a flight]S</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Overgenerate Solution<br>    - transform into multiple rules<br>        - NP → Single_Det Single_Nominal<br>        - NP → 複數_Det 複數_Nominal<br>        - Will generate a lot of rules!<br>    - out of CFG framework<br>        - Chomsky hierarchy of languages <img data-src=\"/img/NLP/modelclass.png\" alt=\"\"></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3poLndpa2lwZWRpYS5vcmcvd2lraS8lRTklOTklODQlRTYlQTAlODclRTglQUYlQUQlRTglQTglODA=\">Indexed Grammar<i class=\"fa fa-external-link-alt\"></i></span>  </p>\n<ul>\n<li>Indexed grammars and languages problem <img data-src=\"/img/NLP/index-example.png\" alt=\"\"> </li>\n<li>recognized by nested stack automata <img data-src=\"/img/NLP/index-grammar.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"Treebanks-and-headfinding\"><a href=\"#Treebanks-and-headfinding\" class=\"headerlink\" title=\"Treebanks and headfinding\"></a>Treebanks and headfinding</h3><p>critical to the development of statistical parsers</p>\n<p>Treebanks  </p>\n<ul>\n<li>corpora with parse trees<ul>\n<li>created by automatic parser and human annotators</li>\n</ul>\n</li>\n<li>Ex. Penn Treebank</li>\n<li>Grammar<ul>\n<li>Treebanks implicitly define a grammar<ul>\n<li>Simply make all subtrees fit the rules</li>\n</ul>\n</li>\n<li>parse tree tend to be very flat to avoid recursion<ul>\n<li>Penn Treebank has ~4500 different rules for VPs</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Head Finding  </p>\n<ul>\n<li>use tree traversal rules specific to each non-terminal in the grammar</li>\n<li>先向右再向左 <img data-src=\"/img/NLP/head-np.png\" alt=\"\"><!--重要--></li>\n</ul>\n<h3 id=\"Dependency-Grammars\"><a href=\"#Dependency-Grammars\" class=\"headerlink\" title=\"Dependency Grammars\"></a>Dependency Grammars</h3><ul>\n<li>every possible parse is a tree <img data-src=\"/img/NLP/dependency-parse.png\" alt=\"\"><ul>\n<li>every node is a word </li>\n<li>every link is dependency relations between words </li>\n</ul>\n</li>\n<li>Advantage<ul>\n<li>Deals well with long-distance word order languages <ul>\n<li>structure is flexible</li>\n</ul>\n</li>\n<li>Parsing is much faster than CFG</li>\n<li>Tree can be used by later applications</li>\n</ul>\n</li>\n<li>Approaches<!--重要--><ul>\n<li>Optimization-based approaches <ul>\n<li>search for the tree that matches some criteria the best</li>\n<li>spanning tree algorithms</li>\n</ul>\n</li>\n<li>Shift-reduce approaches<ul>\n<li>greedily take actions based on the current word and state</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Summary  </p>\n<ul>\n<li>Constituency(顧客, words that behave as a single unit) is a key phenomena easily captured with CFG rules<ul>\n<li>But agreement and subcategorization make problems</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap09-Syntactic-Parsing\"><a href=\"#Chap09-Syntactic-Parsing\" class=\"headerlink\" title=\"Chap09 Syntactic Parsing\"></a>Chap09 Syntactic Parsing</h2><ul>\n<li>Top-Down Search <img data-src=\"/img/NLP/top-down.png\" alt=\"\"><ul>\n<li>Search trees among possible answers  <!--- But suggests trees that are not consistent with words--></li>\n</ul>\n</li>\n<li>Bottom-Up Parsing<ul>\n<li>Only forms trees that can fit the words <!-- global tree may not form answer(S) --></li>\n</ul>\n</li>\n<li>Mixed parsing strategy<ul>\n<li>looks like Binomial Search</li>\n<li>The number of rules tried at each deicision of the analysis (branching factor)<ul>\n<li>top-down parsing: categories of LHS(Left Hand Side) word</li>\n<li>bottom-up parsing: categories of left most RHS(Right Hand Side) word<ul>\n<li>倒推：從最左邊可以倒推的字開始</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>backtracking methods are doomed because of two inter-related problems  </p>\n<ul>\n<li>(1)Structural and lexical ambiguity<ul>\n<li>PP(介系詞片語) attachment<ul>\n<li>PP can attach to [sentences, verb phrases, noun phrases, and adjectival phrases]</li>\n</ul>\n</li>\n<li>coordination<ul>\n<li>P and Q or R <ul>\n<li>P and (Q or R)</li>\n<li>(P and Q) or R</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>noun-noun compounding<ul>\n<li>town widget hammer<ul>\n<li>((town widget) hammer)</li>\n<li>(town (widget hammer))</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Solution<ul>\n<li>how to determine the intended structure?</li>\n<li>how to store the partial structures?</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>(2)Shared subproblems<ul>\n<li>naïve backtracking will lead to duplicated work(不一定會對，所以會一直backtrack…)</li>\n</ul>\n</li>\n</ul>\n<p>Dynamic Programming  </p>\n<ul>\n<li>Avoid doing repeated work</li>\n<li>Solve in polynomial time</li>\n<li>approaches<ul>\n<li>CKY</li>\n<li>Earley</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"CKY-bottom-up\"><a href=\"#CKY-bottom-up\" class=\"headerlink\" title=\"CKY(bottom-up)\"></a>CKY(bottom-up)</h3><ul>\n<li>transform rules into Chomsky-Normal Form <img data-src=\"/img/NLP/cnf-transform.png\" alt=\"\"></li>\n<li>build a table <ul>\n<li>A spanning from i to j in the input is in [i,j]</li>\n<li>A → BC == [i,j] → [i,k] [k,j]</li>\n<li>entire string = [0, n] <ul>\n<li>expected to be S</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>iterate all possible k <img data-src=\"/img/NLP/CKY-table2.png\" alt=\"\"><ul>\n<li>[i,j] = [i,i+1]x[i+1, j], [i,i+2]x[i+2,j] ……</li>\n</ul>\n</li>\n<li>fill the table a column at a time, from left to right, bottom to top <img data-src=\"/img/NLP/CKY-table3.png\" alt=\"\"><ul>\n<li>Ex. [1,3] = [1,2]Det + [2,3] Nomimal, Noun = NP</li>\n<li>Ex. <img data-src=\"/img/NLP/CKY-ex.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>Algorithm <img data-src=\"/img/NLP/CKY-algo.png\" alt=\"\"></li>\n<li>Performance<ul>\n<li>a lot of elements unrelated to the answer</li>\n<li>can use online search to fill table (from left to right)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Earley\"><a href=\"#Earley\" class=\"headerlink\" title=\"Earley\"></a>Earley</h3><ul>\n<li>parser that exploits chart as data structure</li>\n<li>node = vertex</li>\n<li>arc = edge<ul>\n<li>active edge: (a) and (b)</li>\n<li>inactive edge: (c)</li>\n</ul>\n</li>\n</ul>\n<p>decorated grammar  </p>\n<ul>\n<li>(a) “•” in the first <img data-src=\"/img/NLP/dot-a.png\" alt=\"\"><ul>\n<li>• NP VP</li>\n<li>A hypothesis has been made, but has not been verified yet</li>\n</ul>\n</li>\n<li>(b) “•” in the middle <img data-src=\"/img/NLP/dot-b.png\" alt=\"\"><ul>\n<li>NP • VP</li>\n<li>A hypothesis has been partially confirmed</li>\n</ul>\n</li>\n<li>(c) “•” in the last<ul>\n<li>NP VP •</li>\n<li>A hypothesis has been wholly confirmed</li>\n</ul>\n</li>\n<li>representation of edge <img data-src=\"/img/NLP/chart-struct.png\" alt=\"\"></li>\n<li>initialization <img data-src=\"/img/NLP/chart-initialize.png\" alt=\"\"><ul>\n<li>for each rule A → W, if A is a category that can span a chart (typically S), add &lt;0, 0, A → •W&gt; <img data-src=\"/img/NLP/chartchart-init.png\" alt=\"\"><ul>\n<li>A implies •W from position 0 to 0</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Housekeeping<ul>\n<li>prevent duplicate rules</li>\n</ul>\n</li>\n</ul>\n<p>Fundamental rule  </p>\n<ul>\n<li>If the chart contains &lt;i, j, A → W1 •B W2&gt; and &lt;j, k, B → W3 •&gt;, then add edge &lt;i, k, A → W1 B •W2&gt; to the chart <img data-src=\"/img/NLP/chart-fund.png\" alt=\"\"></li>\n<li>Notes<ol>\n<li>New edge may be either active or inactive</li>\n<li>does not remove the active edge that has succeeded</li>\n</ol>\n</li>\n</ul>\n<p>Bottom-up rule  </p>\n<ul>\n<li>if adding edge &lt;i, j, C → W1 •&gt; to the chart, then for every rule that has the form B → C W2, add &lt;i, i, B → • C W2&gt; <img data-src=\"/img/NLP/chart-bottom.png\" alt=\"\"></li>\n</ul>\n<p>Top-down rule   </p>\n<ul>\n<li>If adding edge &lt;i, j, C → W1 •B W2&gt; to the chart, then for each rule B → W, add &lt; j, j, B →•W&gt;</li>\n</ul>\n<h3 id=\"Full-Syntactic-Parsing\"><a href=\"#Full-Syntactic-Parsing\" class=\"headerlink\" title=\"Full Syntactic Parsing\"></a>Full Syntactic Parsing</h3><ul>\n<li>necessary for deep semantic analysis of texts</li>\n<li>not practical for many applications (given typical resources)<ul>\n<li>O(n^3) for straight parsing</li>\n<li>O(n^5) for probabilistic versions</li>\n<li>Too slow for real time applications (search engines)</li>\n</ul>\n</li>\n<li>Two Alternatives<ul>\n<li>Dependency parsing<ul>\n<li>Change the underlying grammar formalism</li>\n<li>can get a lot done with just binary relations among the words</li>\n<li>詳見Chap08 dependency grammar</li>\n</ul>\n</li>\n<li>Partial parsing<ul>\n<li>Approximate phrase-structure parsing with finite-state and statistical approaches</li>\n</ul>\n</li>\n<li>Both of these approaches give up something (syntactic, structure) in return for more robust and efficient parsing</li>\n</ul>\n</li>\n</ul>\n<p>Partial parsing</p>\n<ul>\n<li>For many applications you don’t really need full parse</li>\n<li>For example, if you’re interested in locating all the people, places and organizations  <ul>\n<li>base-NP chunking <ul>\n<li>[NP The morning flight] from [NP Denvar] has arrived </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Two approaches<ul>\n<li>Rule-based (hierarchical) transduction(轉導) <!--???--><ul>\n<li>Restrict recursive rules (make the rules flat)<ul>\n<li>like NP → NP VP</li>\n</ul>\n</li>\n<li>Group the rules so that RHS of the rules can refer to non-terminals introduced in earlier transducers, but not later ones</li>\n<li>Combine the rules in a group in the same way we did with the rules for spelling changes</li>\n<li>Combine the groups into a cascade<ul>\n<li>can be used to find the sequence of flat chunks you’re interested in</li>\n<li>or approximate hierarchical trees you get from full parsing with a CFG</li>\n</ul>\n</li>\n<li>Typical Architecture ![](/img/NLP/Cascaded Transducers.png)<ul>\n<li>Phase 1: Part of speech tags</li>\n<li>Phase 2: Base syntactic phrases</li>\n<li>Phase 3: Larger verb and noun groups</li>\n<li>Phase 4: Sentential level rules</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Statistical sequence labeling<ul>\n<li>HMMs</li>\n<li>MEMMs</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap10-Statistical-Parsing\"><a href=\"#Chap10-Statistical-Parsing\" class=\"headerlink\" title=\"Chap10 Statistical Parsing\"></a>Chap10 Statistical Parsing</h2><p>Motivation  </p>\n<ul>\n<li>N-gram models and HMM Tagging only allowed us to process sentences linearly</li>\n<li><strong>Probabilistic Context Free Grammars</strong>(PCFG)<ul>\n<li>alias: Stochastic context-free grammar(SCFG)</li>\n<li>simplest and most natural probabilistic model for tree structures</li>\n<li>closely related to those for HMMs</li>\n<li>為每一個CFG的規則標示其發生的可能性</li>\n</ul>\n</li>\n</ul>\n<p>Idea  </p>\n<ul>\n<li>reduce “right” parse to “most probable parse”<ul>\n<li>Argmax P(Parse|Sentence)</li>\n</ul>\n</li>\n</ul>\n<p>A PCFG consists of  </p>\n<ul>\n<li>set of terminals, {wk}</li>\n<li>set of nonterminals, {Ni}</li>\n<li>start symbol N1</li>\n<li>set of rules<ul>\n<li>{Ni –&gt; ξj}(ξj is a sequence of terminals and nonterminals)</li>\n</ul>\n</li>\n<li>probabilities of rules<ul>\n<li>total probability of imply Ni to other sequence ξj is 1 </li>\n<li>∀i Σj P(Ni → ξj) = 1</li>\n</ul>\n</li>\n<li>Probability of sentence according to grammar G <ul>\n<li>P($w_{1m}$) = sum of P($w_{1m}$, t) for every possible tree t</li>\n</ul>\n</li>\n<li>Nj dominates the words wa … wb<ul>\n<li>Nj → wa … wb</li>\n</ul>\n</li>\n</ul>\n<p>Assumptions of the Model  </p>\n<ul>\n<li>Place Invariance<ul>\n<li>probability of a subtree does not depend on its position in the string</li>\n<li>similar to time invariance in HMMs</li>\n</ul>\n</li>\n<li>Ancestor Free<ul>\n<li>probability of a subtree does not depend on nodes in the derivation outside the subtree(subtree的機率只和subtree內的node有關)</li>\n<li>can simplify probability calculation <img data-src=\"/img/NLP/after-assump.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>Questions of PCFGs(similar to three questions of HMM)    </p>\n<ul>\n<li>Assign probabilities to parse trees<ul>\n<li>What is the probability of a sentence $w_{1m}$ according to a grammar G<ul>\n<li>P(w1m|G)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Parsing with probabilities(Decoding)<ul>\n<li>What is the most likely parse for a sentence<ul>\n<li>argmax_t P(t|w1m,G) </li>\n<li>How to efficiently find the best (or N best) trees </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Training the model (Learning) <ul>\n<li>How to set rule probabilities(parameter of grammar model) that maximize the probability of a sentence<ul>\n<li>argmax_G P(w1m|G)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Simple Probability Model  </p>\n<ul>\n<li>probability of a tree is the product of the probabilities of rules in derivation</li>\n<li>Rule Probabilities<ul>\n<li>S → NP </li>\n<li>P(NP | S)</li>\n</ul>\n</li>\n<li>Training the Model<ul>\n<li>estimate probability from data</li>\n<li>P(α → β | α) = Count(α→β) / Count(α) = Count(α→β) / Σγ Count(α→γ)</li>\n</ul>\n</li>\n<li>Parsing (Decoding)<ul>\n<li>trees with highest probability in the model</li>\n</ul>\n</li>\n<li>Example: Book the dinner flight<ul>\n<li><img data-src=\"/img/NLP/pm-ex.png\" alt=\"\"></li>\n<li><img data-src=\"/img/NLP/pm-ex2.png\" alt=\"\"></li>\n<li>too slow!</li>\n</ul>\n</li>\n</ul>\n<p>Dynamic Programming again  </p>\n<ul>\n<li>use CKY and Earley to <strong>parse</strong></li>\n<li>Viterbi and HMMs to <strong>get the best parse</strong></li>\n<li>Parameters of a PCFG in Chomsky Normal Form<ul>\n<li>P(Nj→NrNs | G) , $n^3$ matrix of parameters</li>\n<li>P(Nj→wk | G), $nV$ parameters</li>\n<li>n is the number of nonterminals </li>\n<li>V is the number of terminals</li>\n</ul>\n</li>\n<li>Σr,s P(Nj→NrNs) + ΣkP(Nj→wk) = 1<ul>\n<li>所有由Nj導出的rule，機率總和必為1</li>\n</ul>\n</li>\n</ul>\n<p>Probabilistic Regular Grammars (PRG)    </p>\n<ul>\n<li>start state N1 </li>\n<li>rules<ul>\n<li>Ni → wjNk</li>\n<li>Ni → wj</li>\n</ul>\n</li>\n<li>PRG is a HMM with [start state] and [finish(sink) state] <img data-src=\"/img/NLP/prg-sink.png\" alt=\"\"></li>\n</ul>\n<p>Inside and Outside probability <img data-src=\"/img/NLP/prg-graph.png\" alt=\"\"> <img data-src=\"/img/NLP/prg-bf.png\" alt=\"\"> <img data-src=\"/img/NLP/prg-bf2.png\" alt=\"\">  </p>\n<ul>\n<li>Forward(Outside) probability<ul>\n<li>$ α<em>i(t) = P(w</em>{1(t-1)}, X_t = i)$</li>\n<li>everything above a certain node(include the node)</li>\n</ul>\n</li>\n<li>Backward(Inside) probability<ul>\n<li>$ β<em>i(t, T) = P(w</em>{tT} | X_t = i)$</li>\n<li>everything below a certain node</li>\n<li>total probability of generating words $w_t \\cdots w_T$, given the root nonterminal $N^i$ and a grammar G</li>\n</ul>\n</li>\n</ul>\n<p>Inside Algorithm (bottom-up)      </p>\n<ul>\n<li>$P(w_{1m} | G) = P(N_1 → w_{1m} | G) = P(w_{1m} | N^1_{1m}, G) = B_1(1,m)$<ul>\n<li>$B_1(1,m)$ is Inside probability<ul>\n<li>P(w1~wm are below N1(start symbol))</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>base rule<ul>\n<li>$ B_j(k, k) = P(w_k | N^j_{kk}, G) = P(N^j → w_k | G)$</li>\n</ul>\n</li>\n<li>$ B_j(p, q) = P(w_{pq} | N^j_{pq}, G) = $ <img data-src=\"/img/NLP/inside-induction.png\" alt=\"\"><ul>\n<li>try every possible rules to split Nj, product of *<em>rule probabilty and segments’ inside probabilities *</em> </li>\n</ul>\n</li>\n<li>use grid to solve again<ul>\n<li><img data-src=\"/img/NLP/inside-grid.png\" alt=\"\"><ul>\n<li>X軸代表起始座標，Y軸代表長度<ul>\n<li>(2,3) → flies like ants</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Outside Algorithm (top-down)     </p>\n<ul>\n<li>$ P(w_{1m} | G) = Σ_j α_j(k, k)P(N^j → w_k$ <img data-src=\"/img/NLP/outside-graph.png\" alt=\"\"> <!--為何是sum...--><ul>\n<li>outside probability of wk x (inside) probability of wk  of every Nj</li>\n</ul>\n</li>\n<li>basecase <ul>\n<li>$ α_1(1, m) = 1, α_j(1,m) = $</li>\n<li>P(N1) = 1, P(Nj outside w1 to wm) = 0</li>\n</ul>\n</li>\n<li>自己的outside probability 等於 <ul>\n<li>爸爸的outside probability 乘以 爸爸的inside probability 除以 自己的inside probability<ul>\n<li>inside x outside 是固定值？</li>\n</ul>\n</li>\n<li>爸爸的inside probabiliity 除以 自己的inside probability 就是其兄弟的inside probability</li>\n<li>使用此公式計算 <img data-src=\"/img/NLP/inout.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>$ α<em>j(p, q)β_j(p, q) = P(w</em>{1m}, N^j_{pq} | G) $<ul>\n<li>某個點的inside 乘 outside = 在某grammar中，出現此句子，且包含此點的機率 </li>\n<li>所有點的總和：在某grammar下，某parse tree(包含所有node)的機率 <img data-src=\"/img/NLP/parse-probability.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>Outside example: 這些數字理論上算起來會一樣… <img data-src=\"/img/NLP/outside-forward.png\" alt=\"\"></li>\n</ul>\n<p>Finding the Most Likely Parse for a Sentence     </p>\n<ul>\n<li>δi(p,q)= the highest inside probability parse of a subtree $N_{pq}^i$</li>\n<li>Initialization <ul>\n<li>δi(p,p)= P(Ni → wp)</li>\n</ul>\n</li>\n<li>Induction and Store backtrace<ul>\n<li>δi(p,q)= $argmax(j,k,r)P(Ni→NjNk)δj(p,r)δk(r+1,q)$</li>\n<li>找所有可能的切法</li>\n</ul>\n</li>\n<li>Termination<ul>\n<li>answer = δ1(1,m)</li>\n</ul>\n</li>\n</ul>\n<p>Training a PCFG</p>\n<ul>\n<li>find the optimal probabilities among grammar rules</li>\n<li>use EM Training Algorithm to seek the grammar that maximizes the likelihood of the training data<ul>\n<li>Inside-Outside Algorithm </li>\n</ul>\n</li>\n<li><img data-src=\"/img/NLP/inoutagain.png\" alt=\"\"></li>\n<li>將產生句子的機率視為π，為Nj產生pq的機率 <img data-src=\"/img/NLP/pi.png\" alt=\"\"></li>\n<li>Nj被使用的機率 <img data-src=\"/img/NLP/pi2.png\" alt=\"\"></li>\n<li>Nj被使用，且Nj→NrNs的機率 <img data-src=\"/img/NLP/pi3.png\" alt=\"\"></li>\n<li>Nj→NrNs這條rule被使用的機率=前兩式相除 <img data-src=\"/img/NLP/pi4.png\" alt=\"\"></li>\n<li>Nj→wk <img data-src=\"/img/NLP/pi5.png\" alt=\"\"><ul>\n<li>僅分子差異 <img data-src=\"/img/NLP/pi6.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>Problems with the Inside-Outside Algorithm    </p>\n<ul>\n<li>Extremely Slow<ul>\n<li>For each sentence, each iteration of training is $O(m^3n^3)$</li>\n</ul>\n</li>\n<li>Local Maxima</li>\n<li>Satisfactory learning requires many more nonterminals than are theoretically needed to describe the language</li>\n<li>There is no guarantee that the learned nonterminals will be linguistically motivated</li>\n</ul>\n<h2 id=\"Chap11-Dependency-Parsing\"><a href=\"#Chap11-Dependency-Parsing\" class=\"headerlink\" title=\"Chap11 Dependency Parsing\"></a>Chap11 Dependency Parsing</h2><p><span class=\"exturl\" data-url=\"aHR0cDovL3N0cC5saW5nZmlsLnV1LnNlL35uaXZyZS9kb2NzL0FDTHNsaWRlcy5wZGY=\">COLING-ACL 2006, Dependency Parsing, by Joachim Nivre and Sandra Kuebler<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cDovL25hYWNsaGx0MjAxMC5pc2kuZWR1L3R1dG9yaWFscy90Ny1zbGlkZXMucGRm\">NAACL 2010, Recent Advances in Dependency Parsing, by Qin Iris. Wang and YueZhang<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3NpdGUvemhlbmdodWFubHAvcHVibGljYXRpb25zL0lKQ05MUDIwMTMtdHV0b3JpYWwtRFAucGRmP2F0dHJlZGlyZWN0cz0wJmQ9MQ==\">IJCNLP 2013, Dependency Parsing: Past, Present, and Future, by Zhenghua Li, Wenliang Chen, Min Zhang<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Dependency Structure vs. Constituency Structure <img data-src=\"/img/NLP/parse.png\" alt=\"\"><br>Parsing is one way to deal with the ambiguity problem in<br>natural language<br>dependency syntax is syntactic relations (dependencies) </p>\n<p>Constraint: between word pairs  <img data-src=\"/img/NLP/depend.png\" alt=\"\"><br>    Projective: No crossing links(a word and its dependents form a contiguous substring of the sentence)<br>    An arc (wi , r ,wj ) ∈ A is projective iff wi →∗ wk for all:<br>    i &lt; k &lt; j when i &lt; j<br>    j &lt; k &lt; i when j &lt; i<br>    射出去的那一方也可以射到兩個字中間的任何一字<br><img data-src=\"/img/NLP/depend-ex.png\" alt=\"\"></p>\n<p>Non-projective Dependency Trees  </p>\n<ul>\n<li>Long-distance dependencies  </li>\n<li>With crossing links</li>\n<li>Not so frequent in English<ul>\n<li>All the dependency trees from Penn Treebank are projective</li>\n</ul>\n</li>\n<li>Common in other languages with free word order<ul>\n<li>Prague(23%) and Czech, German and Dutch</li>\n</ul>\n</li>\n</ul>\n<p>Data Driven Dependency Parsing  </p>\n<ul>\n<li>Data-driven parsing<ul>\n<li>No grammar / rules needed</li>\n<li>Parsing decisions are made based on learned models</li>\n<li>deal with ambiguities well</li>\n<li><img data-src=\"/img/NLP/data-driven.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>Three approaches<ul>\n<li>Graph-based models</li>\n<li>Transition-based models(good in practice)<ul>\n<li>Define a transition system for <strong>mapping a sentence to its dependency tree</strong></li>\n<li>Predefine some transition actions</li>\n<li>Learning: predicting the next state transition, by transition history</li>\n<li>Parsing: construct the optimal transition sequence</li>\n<li>Greedy search / beam search</li>\n<li>Features are defined over a richer parsing history</li>\n</ul>\n</li>\n<li>Hybrid models</li>\n</ul>\n</li>\n</ul>\n<p>Comparison   </p>\n<ul>\n<li>Graph-based models<ul>\n<li>Find the optimal tree from all the possible ones</li>\n<li>Global, exhaustive</li>\n</ul>\n</li>\n<li>Transition-based models<ul>\n<li>Predefine some actions (shift and reduce)</li>\n<li>use stack to hold partially built parses</li>\n<li><strong>Find the optimal action sequence</strong></li>\n<li>Local, Greedy or beam search</li>\n</ul>\n</li>\n<li>The two models produce different types of errors</li>\n</ul>\n<p>Hybrid Models  </p>\n<ul>\n<li>Three integration methods<ul>\n<li>Ensemble approach: parsing time integration (Sagae &amp; Lavie 2006)</li>\n<li>Feature-based integration (Nivre &amp; Mcdonald 2008)</li>\n<li>Single model combination (Zhang &amp; Clark 2008)</li>\n</ul>\n</li>\n<li>Gain benefits from both models</li>\n</ul>\n<p><img data-src=\"/img/NLP/parse-algo.png\" alt=\"\"></p>\n<h3 id=\"Graph-based-dependency-parsing-models\"><a href=\"#Graph-based-dependency-parsing-models\" class=\"headerlink\" title=\"Graph-based dependency parsing models\"></a>Graph-based dependency parsing models</h3><ul>\n<li>Search for a tree with the highest score</li>\n<li>Define search space<ul>\n<li>Exhaustive search</li>\n<li>Features are defined over a limited parsing history</li>\n</ul>\n</li>\n<li>The score is linear combination of features <ul>\n<li>What features we can use? (later)</li>\n<li>What learning approaches can lead us to find the best tree with the highest score (later)</li>\n</ul>\n</li>\n<li>Applicable to both probabilistic and nonprobabilistic models </li>\n</ul>\n<p>Features  </p>\n<ul>\n<li>dynamic features<ul>\n<li>Take into account the link labels of the surrounding word-pairs when predicting the label of current pair</li>\n<li>Commonly used in sequential labeling</li>\n<li>A word’s children are generated first(先生child, 再找parent), before it modifies another word</li>\n</ul>\n</li>\n</ul>\n<p>Learning Approaches   </p>\n<ul>\n<li>Local learning approaches<ul>\n<li>Learn a local link classifier given of features defined on training data</li>\n<li>example <img data-src=\"/img/NLP/local-feature-example.png\" alt=\"\"><ul>\n<li>3-class classification: No link, left link or right link</li>\n<li>Efficient O(n) local training</li>\n</ul>\n</li>\n<li>local training and parsing <img data-src=\"/img/NLP/local-train-with-parse.png\" alt=\"\"></li>\n<li>Learn the weights of features<ul>\n<li>Maximum entropy models (Ratnaparkhi 99, Charniak 00)</li>\n<li>Support vector machines (Yamada &amp; Matsumoto 03)</li>\n<li>Use a richer feature set!</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Global learning approaches</li>\n<li>Unsupervised/Semi-supervised learning approaches<ul>\n<li>Use both annotated training data and un-annotated raw text</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Transition-based-model\"><a href=\"#Transition-based-model\" class=\"headerlink\" title=\"Transition-based model\"></a>Transition-based model</h3><ul>\n<li>Stack holds partially built parses</li>\n<li>Queue holds unprocessed words</li>\n<li>Actions<ul>\n<li>use input words to build output parse</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"parsing-processes\"><a href=\"#parsing-processes\" class=\"headerlink\" title=\"parsing processes\"></a>parsing processes</h4><p>Arc-eager parser  </p>\n<ul>\n<li>4 tranition actions<ul>\n<li>SHIFT: push stack</li>\n<li>REDUCE: pop stack</li>\n<li>ARC-LEFT: pop stack and add link</li>\n<li>ARC-RIGHT: push stack and add link</li>\n</ul>\n</li>\n<li><img data-src=\"/img/NLP/arc-eager-example.png\" alt=\"\"></li>\n<li>Time complexity: linear<ul>\n<li>every word will be pushed once and popped once(except root)</li>\n</ul>\n</li>\n<li>parse<ul>\n<li>by actions: arcleft → arclect subject, noun, …</li>\n</ul>\n</li>\n</ul>\n<p>Arc-standard parser  </p>\n<ul>\n<li>3 actions<ul>\n<li>SHIFT: push</li>\n<li>LEFT: pop leftmost stack element and add</li>\n<li>RIGHT: pop rightmost stack element and add</li>\n</ul>\n</li>\n<li>Also linear time</li>\n</ul>\n<p>Non-projectivity  </p>\n<ul>\n<li>neither of parser can solve it<ul>\n<li>online reorder<ul>\n<li>add extra action: swap</li>\n<li>not linear: $N^2$, but expect to belinear</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Decoding-algorithms\"><a href=\"#Decoding-algorithms\" class=\"headerlink\" title=\"Decoding algorithms\"></a>Decoding algorithms</h4><p>search action sequence to build the parse<br>scoring action given context<br>Candidate item &lt;S, G, Q&gt;</p>\n<ul>\n<li>greedy local search<ul>\n<li>initialize: Q = input</li>\n<li>goal: S=[root], G=tree, Q=[]</li>\n</ul>\n</li>\n<li>problem: one error leads to incorrect parse<ul>\n<li>Beam search: keep N highest partial states<ul>\n<li>use total score of all actions to rank a parse</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Score-Models\"><a href=\"#Score-Models\" class=\"headerlink\" title=\"Score Models\"></a>Score Models</h4><ul>\n<li>linear model</li>\n<li>SVM</li>\n</ul>\n<h2 id=\"Chap12-Semantic-Representation-and-Computational-Semantics\"><a href=\"#Chap12-Semantic-Representation-and-Computational-Semantics\" class=\"headerlink\" title=\"Chap12 Semantic Representation and Computational Semantics\"></a>Chap12 Semantic Representation and Computational Semantics</h2><p>Semantic aren’t primarily descriptions of inputs</p>\n<p>Semantic Processing  </p>\n<ul>\n<li>reason about the truth</li>\n<li>answer questions based on content<ul>\n<li>Touchstone application is often question answering</li>\n</ul>\n</li>\n<li>inference to determine the truth that isn’t actually know</li>\n</ul>\n<p>Method    </p>\n<ul>\n<li>principled, theoretically motivated approach<ul>\n<li>Computational/Compositional Semantics</li>\n</ul>\n</li>\n<li>limited, practical approaches that have some hope of being useful<ul>\n<li>Information extraction</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Information-Extraction\"><a href=\"#Information-Extraction\" class=\"headerlink\" title=\"Information Extraction\"></a>Information Extraction</h3><p>Information Extraction = segmentation + classification +  association + clustering <img data-src=\"/img/NLP/IE.png\" alt=\"\"></p>\n<ul>\n<li>superficial analysis <ul>\n<li>pulls out only the entities, relations and roles related to consuming application</li>\n</ul>\n</li>\n<li>Similar to chunking</li>\n</ul>\n<h3 id=\"Compositional-Semantics\"><a href=\"#Compositional-Semantics\" class=\"headerlink\" title=\"Compositional Semantics\"></a>Compositional Semantics</h3><ul>\n<li>Use First-Order Logic(FOL) representation that accounts for all the entities, roles and relations present in a sentence</li>\n<li>Similar to our approach to full parsing</li>\n<li>Compositional: The meaning of a whole is derived from the meanings of the parts(syntatic) <img data-src=\"/img/NLP/syntax-semantic.png\" alt=\"\"></li>\n<li>Syntax-Driven Semantic Analysis<ul>\n<li>The composition of meaning representations is guided by the <strong>syntactic</strong> components and relations provided by the  grammars</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"FOL\"><a href=\"#FOL\" class=\"headerlink\" title=\"FOL\"></a>FOL</h4><ul>\n<li>allow to answer yes/no questions</li>\n<li>allow variable</li>\n<li>allow inference</li>\n</ul>\n<p>Events, actions and relationships can be captured with representations that consist of predicates with arguments  </p>\n<ul>\n<li>Predicates<ul>\n<li>Primarily Verbs, VPs, Sentences</li>\n<li>Verbs introduce/refer to events and processes</li>\n</ul>\n</li>\n<li>Arguments <ul>\n<li>Primarily Nouns, Nominals, NPs, PPs</li>\n<li>Nouns introduce the things that play roles in those events</li>\n</ul>\n</li>\n<li>Example: Mary gave a list to John <ul>\n<li>Giving(Mary, John, List)</li>\n<li>Gave: Predicate</li>\n<li>Mary, John, List: Argument</li>\n<li>better representation <img data-src=\"/img/NLP/FOL-better.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>Lambda Forms<ul>\n<li>Allow variables to be bound</li>\n<li>λxP(x)(Sally) = P(Sally)</li>\n</ul>\n</li>\n</ul>\n<p>Ambiguation  </p>\n<ul>\n<li>mismatch between syntax and semantics<ul>\n<li>displaced arguments</li>\n<li>complex NPs with quantifiers<ul>\n<li>A menu</li>\n<li>Every restaurant <img data-src=\"/img/NLP/complicate-NP.png\" alt=\"\"></li>\n<li>Not every waiter</li>\n<li>Most restaurants</li>\n<li><img data-src=\"/img/NLP/complicate-NP-induction.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>still preserving strict compositionality</li>\n</ul>\n</li>\n<li>Two (syntax) rules to revise<ul>\n<li>The S rule<ul>\n<li>S → NP VP, NP.Sem(VP.Sem)</li>\n<li>NP and VP swapped, because S is NP</li>\n</ul>\n</li>\n<li>Simple NP’s like proper nouns<ul>\n<li>λx.Franco(x)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Store and Retrieve  <ul>\n<li><img data-src=\"/img/NLP/ambiguity-of-same-POS.png\" alt=\"\"></li>\n<li>Retrieving the quantifiers one at a time and placing them in front</li>\n<li>The order determines the meaning <img data-src=\"/img/NLP/store.png\" alt=\"\"></li>\n<li>retrieve <img data-src=\"/img/NLP/retrieve.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Set-Based-Models\"><a href=\"#Set-Based-Models\" class=\"headerlink\" title=\"Set-Based Models\"></a>Set-Based Models</h3><ul>\n<li>domain: the set of elements</li>\n<li>entity: elements of domain</li>\n<li>Properties of the elements: sets of elements from the domain</li>\n<li>Relations: sets of tuples of elements from the domain</li>\n<li>FOL<ul>\n<li>FOL Terms → elements of the domain<ul>\n<li>Med -&gt; “f”</li>\n</ul>\n</li>\n<li>FOL atomic formula → sets, or sets of tuples<ul>\n<li>Noisy(Med) is true if “f is in the set of elements that corresponds to the noisy relation</li>\n<li>Near(Med, Rio) is true if “the tuple &lt;f,g&gt; is in the set of tuples that corresponds to “Near” in the interpretation</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Example: Everyone likes a noisy restaurant <img data-src=\"/img/NLP/set-based-model.png\" alt=\"\"><ul>\n<li>There is a particular restaurant out there; it’s a noisy place; everybody likes it 有一家吵雜的餐廳大家都喜歡</li>\n<li>Everybody has at least one noisy restaurant that they like 大家都喜歡一家吵雜的餐廳</li>\n<li>Everybody likes noisy restaurants (i.e., there is no noisy restaurant out there that is disliked by anyone) 大家都喜歡吵雜的餐廳</li>\n<li>Using predicates to create <strong>categories</strong> of concepts <ul>\n<li>people and restaurants</li>\n<li>basis for OWL (Web Ontology Language)網絡本體語言</li>\n</ul>\n</li>\n<li>before <img data-src=\"/img/NLP/uncategories.png\" alt=\"\"></li>\n<li>after <img data-src=\"/img/NLP/categories.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap13-Lexical-Semantics\"><a href=\"#Chap13-Lexical-Semantics\" class=\"headerlink\" title=\"Chap13 Lexical Semantics\"></a>Chap13 Lexical Semantics</h2><p>we didn’t do word meaning in compositional semantics</p>\n<p>WordNet  </p>\n<ul>\n<li>meaning and relationship about words<ul>\n<li>hypernym(上位詞)<ul>\n<li>breakfast → meal</li>\n</ul>\n</li>\n<li>hierarchies <img data-src=\"/img/NLP/wordnet-hierarchy.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>In our semantics examples, we used various FOL predicates to capture various aspects of events, including the notion of roles<br>Havers, takers, givers, servers, etc.</p>\n<p>Thematic roles(語義關係) <img data-src=\"/img/NLP/thematic-roles.png\" alt=\"\"></p>\n<ul>\n<li>semantic generalizations over the specific roles that occur with specific verbs<ul>\n<li>provide a shallow level of semantic analysis</li>\n<li>tied to syntactic analysis</li>\n</ul>\n</li>\n<li>i.e. Takers, givers, eaters, makers, doers, killers<ul>\n<li>They’re all the agents of the actions</li>\n</ul>\n</li>\n<li>AGENTS are often subjects</li>\n<li>In a VP-&gt;V NP rule, the NP is often a THEME</li>\n</ul>\n<p>2 major English resources using thematic data</p>\n<ul>\n<li>PropBank<ul>\n<li>Layered on the Penn TreeBank</li>\n<li>Small number (25ish) labels</li>\n</ul>\n</li>\n<li>FrameNet<ul>\n<li>Based on frame semantics</li>\n<li>Large number of frame-specific labels</li>\n</ul>\n</li>\n</ul>\n<p>Example  </p>\n<ul>\n<li>[McAdams and crew] covered [the floors] with [checked linoleum].格子花紋油毯<ul>\n<li>Arg0 (agent: the causer of the smearing)</li>\n<li>Arg1 (theme: “thing covered”)</li>\n<li>Arg2 (covering: “stuff being smeared”)</li>\n</ul>\n</li>\n<li>including agent and theme, remaining args are verb specific</li>\n</ul>\n<p>Logical Statements  </p>\n<ul>\n<li>Example: EAT – Eating(e) ^Agent(e,x)^ Theme(e,y)^Food(y)<ul>\n<li>(adding in all the right quantifiers and lambdas)</li>\n</ul>\n</li>\n<li>Use WordNet to encode the selection restrictions</li>\n<li>Unfortunately, language is creative<ul>\n<li>… ate glass on an empty stomach accompanied only by water and tea</li>\n<li>you <strong>can’t eat gold</strong> for lunch if you’re hungry</li>\n</ul>\n</li>\n</ul>\n<p>can we discover a verb’s restrictions by using a corpus and WordNet?    </p>\n<ol>\n<li>Parse sentences and find heads</li>\n<li>Label the thematic roles</li>\n<li>Collect statistics on the co-occurrence of particular headwords with particular thematic roles</li>\n<li>Use the WordNet hypernym structure to <strong>find the most meaningful level to use as a restriction</strong></li>\n</ol>\n<h3 id=\"WSD\"><a href=\"#WSD\" class=\"headerlink\" title=\"WSD\"></a>WSD</h3><p>Word sense disambiguation  </p>\n<ul>\n<li>select right sense for a word </li>\n<li>Semantic selection restrictions can be used to disambiguate<ul>\n<li>Ambiguous arguments to unambiguous predicates</li>\n<li>Ambiguous predicates with unambiguous arguments</li>\n</ul>\n</li>\n<li>Ambiguous arguments<ul>\n<li>Prepare a dish(菜餚)</li>\n<li>Wash a dish(盤子)</li>\n</ul>\n</li>\n<li>Ambiguous predicates<ul>\n<li>Serve (任職/服務) Denver</li>\n<li>Serve (供應) breakfast</li>\n</ul>\n</li>\n</ul>\n<p>Methodology   </p>\n<ul>\n<li>Supervised Disambiguation<ul>\n<li>based on a labeled training set</li>\n</ul>\n</li>\n<li>Dictionary-Based Disambiguation<ul>\n<li>based on lexical resource like dictionaries</li>\n</ul>\n</li>\n<li>Unsupervised Disambiguation<ul>\n<li>label training data is expensive </li>\n<li>based on unlabeled corpora</li>\n</ul>\n</li>\n<li>Upper(human) and Lower(simple model) Bounds</li>\n<li>Pseudoword<ul>\n<li>Generate artificial evaluation data for comparison and improvement of text processing algorithms</li>\n</ul>\n</li>\n</ul>\n<p>Supervised ML Approaches  </p>\n<ul>\n<li>What’s a tag?<ul>\n<li>In WordNet, “bass” in a text has 8 possible tags or labels (bass1 through bass8)</li>\n</ul>\n</li>\n<li>require very simple representation for training data<ul>\n<li>Vectors of sets of feature/value pairs</li>\n<li>need to extract training data by characterization of text surrounding the target</li>\n</ul>\n</li>\n<li>If you decide to use features that require more analysis (say parse trees) then the ML part may be doing less work (relatively) if these features are truly informative</li>\n<li>Classification<ul>\n<li>Naïve Bayes (the right thing to try first)</li>\n<li>Decision lists</li>\n<li>Decision trees</li>\n<li>MaxEnt</li>\n<li>Support vector machines</li>\n<li>Nearest neighbor methods…</li>\n<li>choice of technique depends on features that have been used</li>\n</ul>\n</li>\n<li>Bootstrapping<ul>\n<li>Use when don’t have enough data to train a system…</li>\n<li>集中有放回的均勻抽樣</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Naive-Bayes\"><a href=\"#Naive-Bayes\" class=\"headerlink\" title=\"Naive Bayes\"></a>Naive Bayes</h4><ul>\n<li>Argmax P(sense|feature vector) <img data-src=\"/img/NLP/bayesian-decision.png\" alt=\"\"> </li>\n<li>find maximum probabilty of words given possible sk <img data-src=\"/img/NLP/bayesian-decision2.png\" alt=\"\"></li>\n<li><img data-src=\"/img/NLP/bayesian-classifier.png\" alt=\"\"></li>\n<li>assumption<ul>\n<li>bag of words model<ul>\n<li>structure and order of words is ignored</li>\n<li>each pair of words in the bag is independent</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>73% correct</li>\n</ul>\n<h4 id=\"Dictionary-Based-Disambiguation\"><a href=\"#Dictionary-Based-Disambiguation\" class=\"headerlink\" title=\"Dictionary-Based Disambiguation\"></a>Dictionary-Based Disambiguation</h4><ol>\n<li>Disambiguation based on sense definitions</li>\n<li>Thesaurus-Based Disambiguation</li>\n<li>Disambiguation based on translations in a second-language corpus</li>\n</ol>\n<p>sense definition</p>\n<ul>\n<li>find keywords in definition of a word<ul>\n<li>cone<ul>\n<li>… pollen-bearing scales or bracts in <strong>trees</strong></li>\n<li>shape for holding <strong>ice cream</strong></li>\n</ul>\n</li>\n<li>50%~70% accuracies</li>\n<li>Alternatives<ul>\n<li>Several iterations to determine correct sense</li>\n<li>Combine the dictionary-based and thesaurus-based disambiguation</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JUI0JUEyJUU1JUJDJTk1JUU1JTg1JUI4\">Thesaurus-Based(索引典)<i class=\"fa fa-external-link-alt\"></i></span> Disambiguation    </p>\n<ul>\n<li>Category can determine which word senses are used</li>\n<li>Each word is assigned one or more subject codes which correspond to its different meanings<ul>\n<li>select the most often subject code</li>\n<li>考慮w的context，有多少words的senses與w相同</li>\n</ul>\n</li>\n<li>Walker’s Algorithm<ul>\n<li>50% accuracy for “interest, point, power, state, and terms”</li>\n</ul>\n</li>\n<li>Problems<ul>\n<li>general topic categorization, e.g., mouse in computer</li>\n<li>coverage, e.g., Navratilova</li>\n</ul>\n</li>\n<li>Yarowsky’s Algorithm <img data-src=\"/img/NLP/yarowsky-algo.png\" alt=\"\"> <img data-src=\"/img/NLP/yarowsky-algo2.png\" alt=\"\"> <img data-src=\"/img/NLP/yarowsky-algo3.png\" alt=\"\"><ul>\n<li><ol>\n<li>categorize sentences</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>categorize words</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>disambiguate by decision rule for Naïve Bayes</li>\n</ol>\n</li>\n<li>result <img data-src=\"/img/NLP/yarowsky-result.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>Disambiguation based on translations in a second-language corpus  </p>\n<ul>\n<li>the word “interest” has two translations in German<ul>\n<li>“Beteiligung” (legal share–50% a interest in the company)</li>\n<li>“Interesse” (attention, concern–her interest in Mathematics)</li>\n</ul>\n</li>\n<li>Example: … showed interest …<ul>\n<li>Look up English-German dictionary, show → zeigen</li>\n<li>Compute R(Interesse, zeigen) and R(Beteiligung, zeigen)</li>\n<li>R(Interesse, zeigen) &gt; R(Beteiligung, zeigen)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Unsupervised-Disambiguation\"><a href=\"#Unsupervised-Disambiguation\" class=\"headerlink\" title=\"Unsupervised Disambiguation\"></a>Unsupervised Disambiguation</h4><p>P(vj|sk) are estimated using the EM algorithm  </p>\n<ol>\n<li>Random initialization of P(vj|sk)(word)</li>\n<li>For each context ci of w, compute P(ci|sk)(sentence)</li>\n<li>Use P(ci|sk) as training data</li>\n<li>Reestimate P(vj|sk)(word)</li>\n</ol>\n<p>Surface Representations(features)   </p>\n<ul>\n<li>Collocational<ul>\n<li>words that appear in specific positions to the right and left of the target word</li>\n<li>limited to the words themselves as well as part of speech</li>\n<li>Example: guitar and bassplayer stand<ul>\n<li>[guitar, NN, and, CJC, player, NN, stand, VVB]</li>\n<li>In other words, a vector consisting of [position n word, position n part-of-speech…]</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Co-occurrence<ul>\n<li>words that occur regardless of position</li>\n<li>Typically limited to frequency counts</li>\n<li>Assume we’ve settled on a possible vocabulary of 12 words that includes guitarand playerbut not andand stand</li>\n<li>Example: guitar and bassplayer stand<ul>\n<li>Assume a 12-word sentence includes guitar and player but not “and” and stand</li>\n<li>[0,0,0,1,0,0,0,0,0,1,0,0]</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Applications  </p>\n<ul>\n<li>tagging<ul>\n<li>translation</li>\n<li>information retrieval</li>\n</ul>\n</li>\n</ul>\n<p>different label  </p>\n<ul>\n<li>Generic thematic roles (aka case roles)<ul>\n<li>Agent, instrument, source, goal, etc.</li>\n</ul>\n</li>\n<li>Propbank labels<ul>\n<li>Common set of labels ARG0-ARG4, ARGM</li>\n<li>specific to verb semantics</li>\n</ul>\n</li>\n<li>FrameNet frame elements<ul>\n<li>Conceptual and frame-specific </li>\n</ul>\n</li>\n<li>Example: [Ochocinco] bought [Burke] [a diamond ring]<ul>\n<li>generic: Agent, Goal, Theme</li>\n<li>propbank: ARG0, ARG2, ARG1</li>\n<li>framenet: Customer, Recipe, Goods</li>\n</ul>\n</li>\n</ul>\n<p>Semantic Role Labeling  </p>\n<ul>\n<li>automatically identify and label thematic roles<ul>\n<li>For each verb in a sentence<ul>\n<li>For each constituent<ul>\n<li>Decide if it is an argument to that verb</li>\n<li>if it is an argument, determine what kind</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>feature<ul>\n<li>from parse and lexical item</li>\n<li>“path” </li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Lexical-Acquisition\"><a href=\"#Lexical-Acquisition\" class=\"headerlink\" title=\"Lexical Acquisition\"></a>Lexical Acquisition</h3><ul>\n<li>Verb Subcategorization<ul>\n<li>the syntactic means by which verbs express their arguments</li>\n</ul>\n</li>\n<li>Attachment Ambiguity<ul>\n<li>The children ate the cake with their hands</li>\n<li>The children ate the cake with blue icing</li>\n</ul>\n</li>\n<li>SelectionalPreferences<ul>\n<li>The semantic categorization of a verb’s arguments</li>\n</ul>\n</li>\n<li>Semantic Similarity (refer to IR course)<ul>\n<li>Semantic similarity between words</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Verb-Subcategorization\"><a href=\"#Verb-Subcategorization\" class=\"headerlink\" title=\"Verb Subcategorization\"></a>Verb Subcategorization</h4><p>a particular set of syntactic categories that a verb can appear with is called a <strong>subcategorization frame</strong> <img data-src=\"/img/NLP/subcategorization.png\" alt=\"\"></p>\n<p>Brent’s subcategorization frame learner  </p>\n<ol>\n<li>Cues: Define a regular pattern of words and syntactic categories<ol>\n<li>ε: error rate of assigning frame f to verb v based on cue cj</li>\n</ol>\n</li>\n<li>Hypothesis Testing: Define null hypothesis H0: “the frame is not appropriate for the verb” <ol>\n<li>Reject this hypothesis if the cue cj indicates with high probability that our H0 is wrong</li>\n</ol>\n</li>\n</ol>\n<p>Example<br>Cues  </p>\n<ul>\n<li><p>regular pattern for subcategorization frame “NP NP”</p>\n<ul>\n<li>(OBJ | SUBJ_OBJ | CAP) (PUNC |CC)<br>Null hypothesis testing</li>\n</ul>\n</li>\n<li><p>Verb vi occurs a total of n times in the corpus and there are m &lt; n occurrences with a cue for frame fj</p>\n</li>\n<li><p>Reject the null hypothesis H0 that vi does not accept fj with the following probability of error <img data-src=\"/img/NLP/brent-null-hypothesis.png\" alt=\"\"></p>\n</li>\n<li><p>Brent’s system does well at precision, but not well at recall</p>\n</li>\n<li><p>Manning’s system</p>\n<ul>\n<li>solve this problem by using a tagger and running the cue detection on the output of the tagger</li>\n<li>learn a lot of subcategorization frames, even those it is low-reliability</li>\n<li>still low performance </li>\n<li>improve : use prior knowledge</li>\n</ul>\n</li>\n</ul>\n<p>PCFG prefers to parse common construction  </p>\n<ul>\n<li>P(A|prep, verb, np1, np2, w) ~= P(A|prep, verb, np1, np2)<ul>\n<li>Do not count the word outside of frame</li>\n<li>w: words outside of “verb np1(prep np2)”</li>\n<li>A: random variable representing attachment decision</li>\n<li>V(A): verb or np1</li>\n<li>Counter example<ul>\n<li>Fred saw a movie with Arnold Schwarzenegger</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>P(A|prep, verb, np1, np2, noun1, noun2) ~= P(A|prep, verb, noun1, noun2)<ul>\n<li>noun1 = head of np1, noun2 = head of np2</li>\n<li>total parameters: $10^{13}$ = #(prep) x #(verb) x #(noun) x #(noun) </li>\n</ul>\n</li>\n<li>P(A= noun | prep, verb, noun1) vs. P(A= verb | prep, verb, noun1)<ul>\n<li>compare probability to be verb and probability to be noun</li>\n</ul>\n</li>\n</ul>\n<p>Technique: Alternative to reduce parameters   </p>\n<ul>\n<li>Condition probabilities on fewer things</li>\n<li>Condition probabilities on more general things</li>\n</ul>\n<p>The model asks the following questions  </p>\n<ul>\n<li>VAp: Is there a PP headed by p and following the verb v which attaches to v(VAp=1) or not (VAp=0)?</li>\n<li>NAp: Is there a PP headed by p and following the noun n which attaches to n (NAp=1) or not (NAp=0)?</li>\n<li>(1) Determine the attachment of a PP that is immediately following an object noun, i.e. compute the probability of NAp=1</li>\n<li>In order for the first PP headed by the preposition p to attach to the verb, both VAp=1 and NAp=0<ul>\n<li>calculate likelihood ratio between V and N <img data-src=\"/img/NLP/likelihood-ratio-vn.png\" alt=\"\"></li>\n<li>maximum estimation<ul>\n<li>P(VA = 1 | v) = C(v, p) / C(v)</li>\n<li>P(NA = 1 | n) = C(n, p) / C(n)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Estimation of PP attachment counts<ul>\n<li>Sure Noun Attach<ul>\n<li>If a noun is followed by a PP but no preceding verb, increment C(prep attached to noun) </li>\n</ul>\n</li>\n<li>Sure Verb Attach<ul>\n<li>if a passive verb is followed by a PP other than a “by” phrase, increment C(prep attached to verb) </li>\n<li>if a PP follows both a noun phrase and a verb but the noun phrase is a pronoun, increment C(prep attached to verb)</li>\n</ul>\n</li>\n<li>Ambiguous Attach<ul>\n<li>if a PP follows both a noun and a verb, see if the probabilities based on the attachment decided by previous way</li>\n<li>otherwise increment both attachment counters by 0.5</li>\n</ul>\n</li>\n<li><img data-src=\"/img/NLP/attach-example.png\" alt=\"\"></li>\n<li>Sparse data is a major cause of the difference between the human and program performance(attachment indeterminacy不確定性)</li>\n</ul>\n</li>\n</ul>\n<p>Using Semantic Information  </p>\n<ul>\n<li>condition on semantic tags of verb &amp; noun<ul>\n<li>Sue bought a plant with Jane(human)</li>\n<li>Sue bought a plant with yellow leaves(object)</li>\n</ul>\n</li>\n</ul>\n<p>Assumption<br>The noun phrase serves as the subject of the relative clause</p>\n<ul>\n<li>collect “ subject-verb” and “verb-object” pairs.(training part)  </li>\n<li>compute t-score (testing part) <ul>\n<li>t-score &gt; 0.10 (significant)</li>\n</ul>\n</li>\n</ul>\n<p>P (relative clause attaches to x | main verb of clause =v) &gt; P (relative clause attaches to y | main verb of clause=v)<br>↔ P (x= subject/object | v) &gt; P (y= subject/ object|v)</p>\n<p>Selectional Preferences  </p>\n<ul>\n<li>Most verbs prefer particular type of arguments<ul>\n<li>eat → object (food item)</li>\n<li>think → subject (people)</li>\n<li>bark → subject (dog)</li>\n</ul>\n</li>\n<li>Aspects of meaning of a word can be inferred<ul>\n<li>Susan had never eaten a fresh <strong>durian</strong> before (food item)</li>\n</ul>\n</li>\n<li>Selectional preferences can be used to rank different parses of a sentence</li>\n<li>Selectional preference strength<ul>\n<li>how strongly the verb constrains its direct object</li>\n<li><img data-src=\"/img/NLP/selection-strength.png\" alt=\"\"></li>\n<li>KL divergence between the prior distribution of direct objects of general verb and the distribution of direct objects of specific verb</li>\n<li>2 assumptions<ul>\n<li>only the head noun of the object is considered</li>\n<li>rather than dealing with individual nouns, we look at classes of nouns</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Selectional association<ul>\n<li>Selectional Association between a verb and a class is this class’s contribution to S(v) / the overall preference strength S(v) <img data-src=\"/img/NLP/selectional-association.png\" alt=\"\"></li>\n<li>There is also a rule for assigning association strengths to nouns instead of noun classes<ul>\n<li>If noun belongs to several classes, then its choose the highest association strength among all classes </li>\n</ul>\n</li>\n<li>estimating the probability that a direct object in noun class c occurs given a verb v<ul>\n<li>A(interrupt, chair) = max(A(interrupt, people), A(interrupt, furniture)) = A(interrupt, people)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Example <img data-src=\"/img/NLP/selectional-example.png\" alt=\"\"><ul>\n<li>eat prefers fooditem <ul>\n<li>A(eat, food)=1.08 → very specific</li>\n</ul>\n</li>\n<li>seehas a uniform distribution<ul>\n<li>A(see, people)=A(see, furniture)=A(see, food)=A(see, action)=0 → no selectional preference</li>\n</ul>\n</li>\n<li>find disprefers action item<ul>\n<li>A(find, action)=-0.13 → less specific</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Semantic Similarity  </p>\n<ul>\n<li>assessing semantic similarity between a new word and other already known words</li>\n<li>Vector Space vs Probabilistic</li>\n<li>Vector Space<ul>\n<li>Words can be expressed in different spaces: document space, word spaceand modifier space</li>\n<li>Similarity measures for binary vectors: matching coefficient, Dice coefficient, Jaccard(or Tanimoto) coefficient, Overlap coefficientand cosine</li>\n<li>Similarity measures for the real-valued vector space: cosine, Euclidean Distance, normalized correlation coefficient<ul>\n<li>cosine assumes a Euclidean space which is not well-motivated when dealing with word counts</li>\n</ul>\n</li>\n<li><img data-src=\"/img/NLP/similarity-measure.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>Probabilistic Measures<ul>\n<li>viewing word counts by representing them as probability distributions</li>\n<li>compare two probability distributions using<ul>\n<li>KL Divergence</li>\n<li>Information Radius(Irad)</li>\n<li>L1Norm</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap14-Computational-Discourse\"><a href=\"#Chap14-Computational-Discourse\" class=\"headerlink\" title=\"Chap14 Computational Discourse\"></a>Chap14 Computational Discourse</h2><table>\n<thead>\n<tr>\n<th>Level</th>\n<th>Well-formedness constraints</th>\n<th>Types of ambiguity</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Lexical</td>\n<td>Rules of inflection and derivation</td>\n<td></td>\n</tr>\n<tr>\n<td>structural, morpheme boundaries, morpheme identity</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Syntactic</td>\n<td>Grammar rules</td>\n<td>structural, POS</td>\n</tr>\n<tr>\n<td>Semantic</td>\n<td>Selection restrictions</td>\n<td>word sense, quantifier scope</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU4JUFGJUFEJUU3JTk0JUE4JUU1JUFEJUE2\">Pragmatic<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td>conversation principles</td>\n<td>pragmatic function</td>\n</tr>\n</tbody></table>\n<p>Computational Discourse  </p>\n<ul>\n<li>Discourse(語篇)<ul>\n<li>A group of sentences with the same coherence relation</li>\n</ul>\n</li>\n<li>Coherence relation<ul>\n<li>the 2nd sentence offers the reader an explaination or cause for the 1st sentence</li>\n</ul>\n</li>\n<li>Entity-based Coherence<ul>\n<li>relationships with the entities, introducing them and following them in a focused way</li>\n<li>Discourse Segmentation<ul>\n<li>Divide a document into a linear sequence of multiparagraph passages</li>\n<li>Academic article<ul>\n<li>Abstract</li>\n<li>Introduction</li>\n<li>Methodology</li>\n<li>Results</li>\n<li>Conclusion</li>\n</ul>\n</li>\n<li><img data-src=\"http://www.wannabehacks.co.uk/images/Inverted_pyramid_in_comprehensive_form.jpg\" alt=\"Inverted Pyramid\"></li>\n<li>Applications<ul>\n<li>News</li>\n<li>Summarize different segments of a document</li>\n<li>Extract information from inside a single discourse segment</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>TextTiling (Hearst,1997)  </p>\n<ul>\n<li>Tokenization<ul>\n<li>Each space-delimited word in the input is converted to lower-case</li>\n<li>Words in a stop list of function words are thrown out</li>\n<li>The remaining words are morphologically stemmed</li>\n<li>The stemmed words are grouped into pseudo-sentencesof length w = 20</li>\n</ul>\n</li>\n<li>Lexical score determination<ul>\n<li>compute a lexical cohesion(結合) score between pseudo-sentences<ul>\n<li>score: average similarity of words in the pseudo-sentences before gap to pseudo-sentences after the gap(??)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Boundary identification    <ul>\n<li>Compute a depth score for each gap</li>\n<li>Boundaries are assigned at any valley which is deeper than a cutoff</li>\n</ul>\n</li>\n</ul>\n<p>Coherence Relations  </p>\n<ul>\n<li>Result<ul>\n<li>The Tin Woodman was caught in the rain. His joints rusted</li>\n</ul>\n</li>\n<li>Explanation<ul>\n<li>John hid Bill’s car keys. He was drunk</li>\n</ul>\n</li>\n<li>Parallel<ul>\n<li>The Scarecrow wanted some brains</li>\n<li>The Tin Woodman wanted a heart</li>\n</ul>\n</li>\n<li>Elaboration(詳細論述)<ul>\n<li>Dorothy was from Kansas</li>\n<li>She lived in the midst of the great Kansas prairies</li>\n</ul>\n</li>\n<li>Occasion(起因)<ul>\n<li>Dorothy picked up the oil-can</li>\n<li>She oiled the Tin Woodman’s joints</li>\n</ul>\n</li>\n</ul>\n<p>Coherence Relation Assignment  </p>\n<ul>\n<li>Discourse parsing</li>\n<li>Open problems</li>\n</ul>\n<p>Cue-Phrase-Based Algorithm  </p>\n<ul>\n<li><p>Using cue phrases</p>\n<ul>\n<li>Segment the text into discourse segments</li>\n<li>Classify the relationship between each consecutive discourse</li>\n</ul>\n</li>\n<li><p>Cue phrase</p>\n<ul>\n<li>connectives, which are often conjunctions or adverbs <ul>\n<li>because, although, but, for example, yet, with, and</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>discourse uses vs. sentential uses</p>\n<ul>\n<li><strong>With</strong> its distant orbit, Mars exhibits frigid weather conditions. (因為長距離的運行軌道，火星天氣酷寒)</li>\n<li>We can see Mars <strong>with</strong> an ordinary telescope</li>\n</ul>\n</li>\n<li><p><img data-src=\"/img/NLP/discourse-relation.png\" alt=\"\"></p>\n</li>\n<li><p>Temporal Relation  </p>\n<ul>\n<li>ordered in time (Asynchronous)<ul>\n<li>before, after …</li>\n</ul>\n</li>\n<li>overlapped (Synchronous)<ul>\n<li>at the same time</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Contingency Relation</p>\n<ul>\n<li>因果關係，附帶條件</li>\n</ul>\n</li>\n<li><p>Comparison Relation</p>\n<ul>\n<li>difference between two arguments</li>\n</ul>\n</li>\n<li><p>Expansion Relation</p>\n<ul>\n<li>expands the information for one argument in the other one or continues the narrative flow</li>\n</ul>\n</li>\n<li><p>Implicit Relation</p>\n<ul>\n<li>Discourse marker is absent</li>\n<li>颱風來襲，學校停止上課</li>\n</ul>\n</li>\n<li><p>Chinese Relation Words <img data-src=\"/img/NLP/chinese-coherence-relation.png\" alt=\"\"> </p>\n<ul>\n<li>Ambiguous Discourse Markers <ul>\n<li>而：而且, 然而, 因而</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Reference-Resolution\"><a href=\"#Reference-Resolution\" class=\"headerlink\" title=\"Reference Resolution\"></a>Reference Resolution</h3><p><img data-src=\"/img/NLP/reference-resolution.png\" alt=\"\">  </p>\n<ul>\n<li>Evoke<ul>\n<li>When a referent is first mentioned in a discourse, we say that a representation for it is <strong>evoked into</strong> the model</li>\n</ul>\n</li>\n<li>Access<ul>\n<li>Upon subsequent mention, this representation is <strong>accessed from</strong> the model</li>\n</ul>\n</li>\n</ul>\n<p>Five Types of Referring Expressions  </p>\n<ul>\n<li>Indefinite Noun Phrases(不定名詞)<ul>\n<li>marked with the determiner a, some, this …</li>\n<li>Create a new internal symbol and add to the current world model<ul>\n<li>Mayumi has bought a new automobile</li>\n<li>automobile(g123)</li>\n<li>new(g123)</li>\n<li>owns(mayumi, g123)</li>\n</ul>\n</li>\n<li>non-specific sense to describe an object<ul>\n<li>Mayumi wantsto buy a new XJE</li>\n</ul>\n</li>\n<li>whole classes of objects<ul>\n<li>A new automobiletypically requires repair twice in the first 12 months</li>\n</ul>\n</li>\n<li>collect one or more properties<ul>\n<li>The Macho GTE XL is a new automobile</li>\n</ul>\n</li>\n<li>Question and commands<ul>\n<li>Is her automobile in a parking placenear the exit?</li>\n<li>Put her automobile into a parking placenear the exit!</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Definite Noun Phrases(定名詞)<ul>\n<li>simple referential and generic uses(the same as indefinite)</li>\n<li>indicate an individual by description that they satisfy<ul>\n<li>The manufacturer <strong>of this automobile</strong> should be indicted</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Pronouns(代名詞)<ul>\n<li>reference backs to entities that have been introduced by previous nounphrases in a discourse</li>\n<li>non-referential noun phrase<ul>\n<li>non-exist object</li>\n</ul>\n</li>\n<li>logical variable<ul>\n<li>No male driveradmits that heis incompetent </li>\n</ul>\n</li>\n<li>something that is available from the context of utterance, but has not been explicitly mentioned before<ul>\n<li>Here they come, late again!</li>\n<li>Can’t easily know who are “they”</li>\n</ul>\n</li>\n<li>Anaphora<ul>\n<li>Number Agreements<ul>\n<li>John has a Ford Falcon. It is red</li>\n<li>John has three Ford Falcons. They are red</li>\n</ul>\n</li>\n<li>Person Agreement(人稱)</li>\n<li>Gender Agreement</li>\n<li>Selection Restrictions<ul>\n<li>verb and its arguments</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Demonstratives (指示詞)<ul>\n<li>this, that</li>\n</ul>\n</li>\n<li>Names<ul>\n<li>Full name &gt; long definite description &gt; short definite description &gt; last name&gt; first name &gt; distal demonstrative &gt; proximate demonstrative &gt; NP &gt; stressed pronoun &gt; unstressed pronoun</li>\n</ul>\n</li>\n</ul>\n<p>Information Status  </p>\n<ul>\n<li>Referential forms used to provide new or old information</li>\n<li>givenness hierarchy <img data-src=\"/img/NLP/givenness-hierarchy.png\" alt=\"\"></li>\n<li>Definite-indefinite is a clue to given-new status<ul>\n<li>The sales managere(given) employed a foreign distributor(new)</li>\n</ul>\n</li>\n<li>If there are ambiguous noun phrases in a sentence, then it extracts the presuppositions to provide extra constraints</li>\n<li>When some new information is added to knowledge base, check if it is consistent with what we already know</li>\n</ul>\n<p>Active model of understanding  </p>\n<ul>\n<li>Given a text, build up predictions or expectations about new information and actively compare these with successive input to resolve ambiguities</li>\n<li>Construct a proof of the information provided in a sentence from the existing world knowledge and plausible inference rules illustrated</li>\n<li>the inference are not sensitive to the order<ul>\n<li>if the proposition that the disc is heavy is inferred, then it is not changed after the discourse has finished</li>\n<li>Solution: describe the propositions in temporal order</li>\n</ul>\n</li>\n<li>Script: encapsulate a sequence of actions that belong together into a script<figure class=\"highlight dns\"><table><tr><td class=\"code\"><pre><span class=\"line\">automobile_buying:</span><br><span class=\"line\">&lt;&#123;customer(C), automobile(<span class=\"keyword\">A</span>), dealer(D), garage(G)&#125;,</span><br><span class=\"line\">\t&lt;</span><br><span class=\"line\">\t\tgoes(C, G),</span><br><span class=\"line\">\t\ttest_drives(C, <span class=\"keyword\">A</span>),</span><br><span class=\"line\">\t\torders(C, <span class=\"keyword\">A</span>, D),</span><br><span class=\"line\">\t\tdelivers(D, <span class=\"keyword\">A</span>, C),</span><br><span class=\"line\">\t\tdrives(C, <span class=\"keyword\">A</span>)</span><br><span class=\"line\">\t&gt;</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li>HHChen 課堂講義</li>\n</ul>\n",
            "tags": [
                "機器學習",
                "自然語言處理",
                "統計"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/natural-language-processing/",
            "url": "http://gitqwerty777.github.io/natural-language-processing/",
            "title": "自然語言處理(上)",
            "date_published": "2015-03-07T03:00:47.000Z",
            "content_html": "<h2 id=\"Chap01-Introduction\"><a href=\"#Chap01-Introduction\" class=\"headerlink\" title=\"Chap01 Introduction\"></a>Chap01 Introduction</h2><h3 id=\"Applications-of-NLP\"><a href=\"#Applications-of-NLP\" class=\"headerlink\" title=\"Applications of NLP\"></a>Applications of NLP</h3><ul>\n<li>Machine translation<ul>\n<li>google translate</li>\n</ul>\n</li>\n<li>Speech recognition<ul>\n<li>Siri</li>\n</ul>\n</li>\n<li>Smart input method<ul>\n<li>ㄐㄅㄈㄏ → 加倍奉還</li>\n</ul>\n</li>\n<li>Sentiment(情感) analysis</li>\n<li>Information retrieval</li>\n<li>Question Anwering<ul>\n<li>Turing Test</li>\n</ul>\n</li>\n<li>Optical character recognition (OCR)<a id=\"more\"></a>\n\n</li>\n</ul>\n<h3 id=\"Critical-Problems-in-NLP\"><a href=\"#Critical-Problems-in-NLP\" class=\"headerlink\" title=\"Critical Problems in NLP\"></a>Critical Problems in NLP</h3><ul>\n<li>Ambiguity(不明確性)<ul>\n<li><strong>The most important thing in NLP</strong></li>\n<li>Lexical(字辭)<ul>\n<li><code>current</code>: noun or adjective</li>\n<li><code>bank</code> (noun): money or river</li>\n</ul>\n</li>\n<li>Syntactic(語法)<ul>\n<li><code>[saw [the boy] [in the park]]</code></li>\n<li><code>[saw [the boy in the park]]</code></li>\n</ul>\n</li>\n<li>Semantic(語義)<ul>\n<li>“John kissed his wife, and so did Sam”. (Sam kissed John’s wife or his own?)</li>\n<li>agent(施事) vs. patient(受事)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ill-form(bad form)<ul>\n<li>typo</li>\n<li>grammatical errors</li>\n</ul>\n</li>\n<li>Robustness<ul>\n<li>various domain</li>\n<li>網路語言：取材於方言俗語、各門外語、縮略語、諧音、甚至以符號合併以達至象形效果等等<ul>\n<li>emoticon(表情符號)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Main-Topics-in-Large-Scale-NLP-Design\"><a href=\"#Main-Topics-in-Large-Scale-NLP-Design\" class=\"headerlink\" title=\"Main Topics in Large-Scale NLP Design\"></a>Main Topics in Large-Scale NLP Design</h3><ul>\n<li>Knowledge representation<ul>\n<li>organize and describe linguistic knowledge</li>\n</ul>\n</li>\n<li>Knowledge strategies<ul>\n<li>use knowledge for efficient parsing, ambiguity resolution, ill-formed recovery</li>\n</ul>\n</li>\n<li>Knowledge acquisition<ul>\n<li>setup and maintain knowledge base systematically and cost-effectively</li>\n</ul>\n</li>\n<li>Knowledge integration<ul>\n<li>consider various knowledge sources effectively</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Models\"><a href=\"#Models\" class=\"headerlink\" title=\"Models\"></a>Models</h3><p>用演算法來轉換文字結構，以產生最後結果   </p>\n<ul>\n<li>State machines</li>\n<li>Rule-based approaches</li>\n<li>Logical formalisms</li>\n<li>Probabilistic models</li>\n</ul>\n<h3 id=\"Approaches\"><a href=\"#Approaches\" class=\"headerlink\" title=\"Approaches\"></a>Approaches</h3><p>NLP start from 1960, <strong>statictics method</strong> wins after 1995</p>\n<p>Rule-based approach</p>\n<ul>\n<li>Advantages<ul>\n<li>No need database</li>\n<li>Easy to incorporate with knowledge</li>\n<li>Better generalization to a unseen domain</li>\n<li>Explainable and traceable<ul>\n<li>easy to understand</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Disadvantages<ul>\n<li>Hard to maintain consistency (at different situation)</li>\n<li>Hard to handle uncertain knowledge (define uncertainty factor)<ul>\n<li>irregular information</li>\n</ul>\n</li>\n<li>Not easy to avoid redundancy</li>\n<li>Knowledge acquisition is time consuming</li>\n</ul>\n</li>\n</ul>\n<p>Corpus(語料庫)-based approach  </p>\n<ul>\n<li>Advantages<ul>\n<li>Knowledge acquisition can be automatically achieved by the computer</li>\n<li>Uncertain knowledge can be objectively quantified(知識可被量化)</li>\n<li><strong>Consistency and completeness</strong> are easy to obtain</li>\n<li>Well established statistical theories and technique are available</li>\n</ul>\n</li>\n<li>Disadvantages<ul>\n<li>Generalization is poor for small-size database</li>\n<li>Unable to reasoning</li>\n<li>Hard to identify the effect of each parameter</li>\n<li>Build database is time consuming</li>\n</ul>\n</li>\n<li>Corpus<ul>\n<li>Brown Corpus (1M words),Birmingham Corpus (7.5M words), LOB Corpus (1M words), etc</li>\n<li>Corpora(語料庫(複數)) of special domains or style<ul>\n<li>Newspaper, Bible, etc</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Information in Corpora<ul>\n<li>pure-text corpus<ul>\n<li>language usage of real world, word distribution, co-occurrence</li>\n</ul>\n</li>\n<li>tagged corpus<ul>\n<li>parts of speech, structures, features</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Hybrid approach   </p>\n<ul>\n<li>Use rule-based approach when <ul>\n<li>there are rules that have good coverage<ul>\n<li>it can be governed by a small number of rules</li>\n</ul>\n</li>\n<li>extensional knowledge is important to the system</li>\n</ul>\n</li>\n<li>Use corpus-based approach when<ul>\n<li>Knowledge needed to solve the problem is huge and intricate</li>\n<li>A good model or formulation exists</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h3><p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ubHRrLm9yZy8=\">Natural Language Toolkit(NLTK)<i class=\"fa fa-external-link-alt\"></i></span>: Open source Python modules, linguistic data and documentation for research and development in natural language processing</p>\n<p>features  </p>\n<ul>\n<li>Corpus readers</li>\n<li>Tokenizers<ul>\n<li>whitespace, newline, blankline, word, treebank, sexpr, regexp, Punkt sentence segmenter</li>\n</ul>\n</li>\n<li>Stemmers<ul>\n<li>Porter, Lancaster, regexp</li>\n</ul>\n</li>\n<li>Taggers<ul>\n<li>regexp, n-gram, backoff, Brill, HMM, TnT</li>\n</ul>\n</li>\n<li>Chunkers<ul>\n<li>regexp, n-gram, named-entity</li>\n</ul>\n</li>\n<li>Metrics<ul>\n<li>accuracy, precision, recall, windowdiff, distance metrics, inter-annotator agreement coefficients, word association measures, rank correlation</li>\n</ul>\n</li>\n<li>Estimation<ul>\n<li>uniform, maximum likelihood, Lidstone, Laplace, expected likelihood, heldout, cross-validation, Good-Turing, Witten-Bell</li>\n</ul>\n</li>\n<li>Miscellaneous<ul>\n<li>unification, chatbots, many utilities</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap02-Overall-Pictures\"><a href=\"#Chap02-Overall-Pictures\" class=\"headerlink\" title=\"Chap02 Overall Pictures\"></a>Chap02 Overall Pictures</h2><p><img data-src=\"/img/NLP/overview.png\" alt=\"overview\"></p>\n<p>Knowledge Categories     </p>\n<ul>\n<li>Phonology(聲音，資料來源)</li>\n<li>Morphology(詞性)</li>\n<li>Syntax(句構)</li>\n<li>Semantics(語義)</li>\n<li>Pragmatics(句子關聯，語用學)</li>\n<li>Discourse(篇章分析，話語)</li>\n</ul>\n<h3 id=\"Morphology-Structure-of-words\"><a href=\"#Morphology-Structure-of-words\" class=\"headerlink\" title=\"Morphology(Structure of words)\"></a>Morphology(Structure of words)</h3><ul>\n<li>part-of-speech(POS) tagging(詞性標註, lexical category)</li>\n<li>find the roots of words<ul>\n<li>e.g., going → go, cats → cat</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Syntax-structure-of-sentences\"><a href=\"#Syntax-structure-of-sentences\" class=\"headerlink\" title=\"Syntax(structure of sentences)\"></a>Syntax(structure of sentences)</h3><ul>\n<li>Context-Free Grammars(CFG) <img data-src=\"/img/NLP/cfg.png\" alt=\"parse tree\"></li>\n<li>Chomsky Normal Form(CNF)<ul>\n<li>can only use following two rules <ol>\n<li><code>non-terminal → terminal</code></li>\n<li><code>non-terminal → non-terminal non-terminal</code></li>\n</ol>\n</li>\n</ul>\n</li>\n<li>dependency<ul>\n<li>local dependency<ul>\n<li>words near together would probably have the same syntax rule</li>\n</ul>\n</li>\n<li>long-distance dependency <ul>\n<li>wh-movement(疑問詞移位)<ul>\n<li>What did Jennifer buy? → 什麼 (助動詞) 珍妮佛 買了</li>\n</ul>\n</li>\n<li>分裂句 Right-node raising<ul>\n<li>[[she would have bought] and [he might sell]] shares</li>\n</ul>\n</li>\n<li>Argument-cluster coordination<ul>\n<li>I give [[you an apple] and [him a pear]]</li>\n</ul>\n</li>\n<li><strong>challenge for some statistical NLP approaches (like n-grams)</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Semantics-meaning-of-individual-sentences\"><a href=\"#Semantics-meaning-of-individual-sentences\" class=\"headerlink\" title=\"Semantics(meaning of individual sentences)\"></a>Semantics(meaning of individual sentences)</h3><ul>\n<li>semantic roles  <ul>\n<li>agent(主詞)</li>\n<li>patient(受詞)</li>\n<li>instrument(工具)</li>\n<li>goal(目標)</li>\n<li>Beneficiary(受益)</li>\n<li>He threw the book(patient) at me(goal)</li>\n<li>John sold the car for a friend(beneficiary)</li>\n</ul>\n</li>\n<li>Subcategorizations(次分類)<ul>\n<li>及物、不及物動詞</li>\n</ul>\n</li>\n<li>Semantics can be divided into two parts<ul>\n<li>Lexical Semantics<ul>\n<li>上下位，同義(反義)，部分-整體</li>\n</ul>\n</li>\n<li>Composition Semantics<ul>\n<li>合起來的意義與單一字意義不同</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Implementation<ul>\n<li>WordNet®(large lexical database of English)</li>\n<li>Thesaurus(索引典)</li>\n<li>同義詞詞林</li>\n<li>廣義知網中文詞知識庫(E-HowNet)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mcmFtZW5ldC5pY3NpLmJlcmtlbGV5LmVkdS9mbmRydXBhbC9hYm91dA==\">FrameNet<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"FrameNet\"><a href=\"#FrameNet\" class=\"headerlink\" title=\"FrameNet\"></a>FrameNet</h4><p>A dictionary of more than 10,000 word senses, 170,000 manually annotated sentences</p>\n<p>Frame Semantics(Charles J. Fillmore)  </p>\n<ul>\n<li>the meanings of most words can be more understood by semantic frame</li>\n<li>Including description of a type of event, relation, or entity and the participants in it</li>\n<li>Example: <code>apply_heat</code> frame<ul>\n<li>When one of these words appear, this frame will be applied<ul>\n<li><code>Fry(炸)</code>, <code>bake(烘)</code>, <code>boil(煮)</code>, a`nd broil(烤)</li>\n</ul>\n</li>\n<li>Frame elements: Cook, Food, Heating_instrument and Container<ul>\n<li>a person doing the cooking (Cook)</li>\n<li>the food that is to be cooked (Food)</li>\n<li>something to hold the food while cooking (Container)</li>\n<li>a source of heat (Heating_instrument)</li>\n</ul>\n</li>\n<li>[<code>Cook</code> the boys] … GRILL [<code>Food</code> fish] [<code>Heating_instrument</code> on an open fire]</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Pragmatics-how-sentences-relate-to-each-other\"><a href=\"#Pragmatics-how-sentences-relate-to-each-other\" class=\"headerlink\" title=\"Pragmatics(how sentences relate to each other)\"></a>Pragmatics(how sentences relate to each other)</h3><ul>\n<li>explain what the speaker really expressed</li>\n<li>Understand the scope of <ul>\n<li>quantifiers</li>\n<li>speech acts</li>\n<li>discourse analysis</li>\n<li>anaphoric relations(首語重複)</li>\n</ul>\n</li>\n<li>Anaphora(首語重複) and Coreference(指代)<ul>\n<li>張三是老師,他教學很認真,同時,他也是一個好爸爸。</li>\n<li>Type/Instance: “老師”/“張三”, “一個好爸爸”/“張三”</li>\n</ul>\n</li>\n<li>crucial to <strong>information extraction</strong></li>\n<li>Dialogue Tagging <img data-src=\"/img/NLP/dialogue_tag.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"Discourse-Analysis\"><a href=\"#Discourse-Analysis\" class=\"headerlink\" title=\"Discourse Analysis\"></a>Discourse Analysis</h3><p>Example  </p>\n<ul>\n<li>1a: 佛羅倫斯哪個博物館在1993年的爆炸事件中受到破壞？</li>\n<li>1b: 這個事件哪一天發生？<ul>\n<li>問句1b「這個事件」，指的是問句1a「1993年的爆炸事件」</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h3><p>From <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5paXMuc2luaWNhLmVkdS50dy9wYWdlL2V2ZW50cy9GSUxFLzEyMDMxMzEwMTA3U2xpZGVzLnBkZg==\">The Three (and a Half) Futures of NLP<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>NLP is <strong>Notation Transformation</strong>(e.g. English → Chinese), with some information(POS, syntatic, senmatic…) added</li>\n<li>Much NLP is engineering<ul>\n<li>select and tuning learning performance</li>\n</ul>\n</li>\n<li>Knowledge is crucial in language-related research areas, but providing a large scaleknowledge base is difficult and costly<ul>\n<li>Knowledge Base<ul>\n<li>WordNet</li>\n<li>FrameNet</li>\n<li>Wikipedia</li>\n<li>Dbpedia</li>\n<li>Freebase</li>\n<li>Siri</li>\n<li>Google Knowledge Graph</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Hierarchy of transformations(由深至淺)<ul>\n<li>pragmatics, writing style<ul>\n<li>deeper semantics, discourse<ul>\n<li>shallow semantics, co-reference<ul>\n<li>syntax, POS(part-of-speech)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>分析時由淺至深</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis\"></a>Analysis</h4><p><img data-src=\"/img/NLP/layer.png\" alt=\"Layer\"><br><img data-src=\"/img/NLP/l1.png\" alt=\"L1\"><br><img data-src=\"/img/NLP/l2.png\" alt=\"L2\"><br><img data-src=\"/img/NLP/l3.png\" alt=\"L3\"><br><img data-src=\"/img/NLP/l4.png\" alt=\"L4\"></p>\n<h4 id=\"NLP-progress-by-now\"><a href=\"#NLP-progress-by-now\" class=\"headerlink\" title=\"NLP progress by now\"></a>NLP progress by now</h4><p><img data-src=\"/img/NLP/sub.png\" alt=\"NLP subclass\"><br><img data-src=\"/img/NLP/dowell.png\" alt=\"NLP do today\"><br><img data-src=\"/img/NLP/cantdo.png\" alt=\"NLP can&#39;t do today\">  </p>\n<h2 id=\"Chap03-Collocations-搭配詞\"><a href=\"#Chap03-Collocations-搭配詞\" class=\"headerlink\" title=\"Chap03 Collocations(搭配詞)\"></a>Chap03 Collocations(搭配詞)</h2><ul>\n<li>多個單字組合成一個有意義的語詞，其意義無法從各個單字中推得<ul>\n<li>e.g. black market</li>\n</ul>\n</li>\n<li>Subclasses of Collocations<ul>\n<li>compound nouns<ul>\n<li>telephone box and post office</li>\n</ul>\n</li>\n<li>idioms<ul>\n<li>kick the bucket(氣絕)  </li>\n</ul>\n</li>\n<li>Light verbs(輕動詞)<ul>\n<li>動詞失去其意義，需要和其他有實質意義的詞作搭配</li>\n<li>e.g. The man took a walk(walk, not take) vs The man took a radio(take)</li>\n</ul>\n</li>\n<li>Verb particle constructions(語助詞) or Phrasal Verbs(詞組動詞, 短語動詞, V + 介系詞)<ul>\n<li>take in = deceive, look sth. up</li>\n</ul>\n</li>\n<li>proper names<ul>\n<li>San Francisco</li>\n</ul>\n</li>\n<li>Terminology(專有名詞)</li>\n</ul>\n</li>\n<li>Classification<ul>\n<li>Fixed expressions<ul>\n<li>in short (O)</li>\n<li>in shorter or in very short(X)</li>\n</ul>\n</li>\n<li>Semi-fixed expressions(可用變化形)<ul>\n<li>non-decomposable idioms<ul>\n<li>kick the bucket (O)</li>\n<li>he kicks the bucket(O)</li>\n<li>the bucket was kicked (X)</li>\n</ul>\n</li>\n<li>compound nominals<ul>\n<li>car park, car parks</li>\n</ul>\n</li>\n<li>Proper names</li>\n</ul>\n</li>\n<li>Syntactically-Flexible Expressions<ul>\n<li>decomposable idioms<ul>\n<li>let the cat out of the bag</li>\n</ul>\n</li>\n<li>verb-particle constructions</li>\n<li>light verbs</li>\n</ul>\n</li>\n<li>Institutionalized Phrases (習慣用法)<ul>\n<li>salt and pepper(○) pepper and salt(×)</li>\n<li>traffic light</li>\n<li>kindle excitement(點燃激情)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Collocation-detection\"><a href=\"#Collocation-detection\" class=\"headerlink\" title=\"Collocation detection\"></a>Collocation detection</h3><ul>\n<li>by Frequency</li>\n<li>by Mean and Variance of the distance between focal word (焦點詞) and collocating word(搭配詞)</li>\n<li>Hypothesis Testing</li>\n<li>Mutual Information</li>\n</ul>\n<h4 id=\"By-Frequency\"><a href=\"#By-Frequency\" class=\"headerlink\" title=\"By Frequency\"></a>By Frequency</h4><ul>\n<li>找出現機率大的bigrams<ul>\n<li>not always significant</li>\n<li>篩選可能為組合詞的詞性組合(Ex. adj+N) </li>\n</ul>\n</li>\n<li>The collocations found <img data-src=\"/img/NLP/freandtag.png\" alt=\"\"></li>\n<li>What if a word have two possible collocations?(strong force, powerful force) <img data-src=\"/img/NLP/frecomp.png\" alt=\"\"></li>\n</ul>\n<h4 id=\"By-Mean-and-Variance-of-the-distance-between-focal-word-焦點詞-and-collocating-word-搭配詞\"><a href=\"#By-Mean-and-Variance-of-the-distance-between-focal-word-焦點詞-and-collocating-word-搭配詞\" class=\"headerlink\" title=\"By Mean and Variance of the distance between focal word(焦點詞) and collocating word(搭配詞)\"></a>By Mean and Variance of the distance between focal word(焦點詞) and collocating word(搭配詞)</h4><ul>\n<li>many collocations consist of more flexible relationships<ul>\n<li>frequency is not suitable</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>Define a collocational window<ol>\n<li>e.g., 3-4 words before/after</li>\n</ol>\n</li>\n<li>assemble every word pair as a bigram<ol>\n<li>e.g., A B C D → AB, AC, AD, BC, BD, CD</li>\n</ol>\n</li>\n<li>computes the mean and variance of the offset between the two words<ol>\n<li>變異數愈低，代表兩個字之間的位置關聯愈固定 <img data-src=\"/img/NLP/meanvar.png\" alt=\"\"></li>\n</ol>\n</li>\n</ol>\n<ul>\n<li>z-score $z = {freq - \\mu \\over \\sigma}$: the strength of a word pair</li>\n</ul>\n<h4 id=\"Hypothesis-Testing-假設檢定\"><a href=\"#Hypothesis-Testing-假設檢定\" class=\"headerlink\" title=\"Hypothesis Testing(假設檢定)\"></a>Hypothesis Testing(假設檢定)</h4><ul>\n<li>Even high frequency and low variance can be accidental</li>\n<li>null hypothesis(虛無假設, H0) <ul>\n<li>設 w1 and w2 is completely independent → w1 and w2 不是搭配詞<ul>\n<li>P(w1w2) = P(w1)P(w2) </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>假設H0為真，計算這兩個字符合H0的機率P<ul>\n<li>若P太低則否決H0(→ 是搭配詞)</li>\n</ul>\n</li>\n<li>Two issues<ul>\n<li>Look for particular patterns in the data</li>\n<li>How much data we have seen</li>\n</ul>\n</li>\n<li>種類包括：t檢驗，Z檢驗，卡方檢驗，F檢驗      </li>\n</ul>\n<h5 id=\"t-test\"><a href=\"#t-test\" class=\"headerlink\" title=\"t-test\"></a>t-test</h5><ul>\n<li>Test whether <strong>distributions of two groups</strong> are <strong>statistically different</strong> or not<ul>\n<li>H0 → (w1, w2) has no differnece with normal distribution</li>\n<li>considering <strong>variance</strong> of the data <img data-src=\"/img/NLP/ttest.png\" alt=\"\"></li>\n<li>formula <img data-src=\"/img/NLP/ttest2.png\" alt=\"\"> <img data-src=\"/img/NLP/ttest3.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>Calculate t by alpha level and degree of freedom<ul>\n<li>alpha level <code>α</code>: confidence<ul>\n<li>in normal distribution，α = 95%落在mean±1.96std之間, α = 99%落在mean±2.576std之間</li>\n<li>If t-value is larger than 2.576, we say the two groups <strong>are different</strong> with 99% confidence</li>\n</ul>\n</li>\n<li>degree of freedom: number of sample-1<ul>\n<li>total = number of two groups-2</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>t↑ → more difference → more possible to reject null hypothesis → more possible to be collocation</strong></li>\n<li>Example: “new” occurs 15,828 times, “companies” 4,675 times, “new companies” 8 times, total 14,307,668 tokens<ul>\n<li><strong>Null hypothesis: the occurrences of new and companies are independent(not collocation)</strong></li>\n<li>H0 mean = P(new, companies) = P(new) x P(companies) = $\\frac{15828 \\times 4678}{14307668^2} = 3.615 \\times 10^{-7}$</li>\n<li>H0 var = p(1-p) ~= p when p is small</li>\n<li>tvalue = $\\frac{5.591 \\times 10^7 - 3.615\\times 10^7}{\\sqrt{\\frac{5.591 \\times 10^7}{14307668}}} = 0.999932$</li>\n<li>0.999932 &lt; 2.576, we cannot reject the null hypothesis<ul>\n<li>new company are not collocation</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>the above words are possible collocations <img data-src=\"/img/NLP/ttest4.png\" alt=\"\"></li>\n</ul>\n<!--???????-->\n<p>Hypothesis testing of differences    </p>\n<ul>\n<li>useful for lexicography <ul>\n<li>which word(strong, powerful) is suitable to modify “computer”?</li>\n</ul>\n</li>\n<li>T-test can be used for <strong>comparison of the means of two normal populations</strong> <ul>\n<li>H0 is that the average difference is 0 (u = 0)</li>\n<li>v1 and v2 are the words we are comparing (e.g., powerful and strong), and w is the collocate of interest(e.g., computers)</li>\n<li><img data-src=\"/img/NLP/ttest5.png\" alt=\"\">)<img data-src=\"/img/NLP/ttest6.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<h5 id=\"Chi-Square-test\"><a href=\"#Chi-Square-test\" class=\"headerlink\" title=\"Chi-Square test\"></a>Chi-Square test</h5><ul>\n<li>T-test assumes that probabilities are normally distributed<ul>\n<li>not really</li>\n</ul>\n</li>\n<li>Chi-Square: compare <strong>observed frequencies</strong> with <strong>expected frequencies</strong><ul>\n<li>If <strong>difference between observed and expected frequencies</strong> is large, we can reject H0</li>\n</ul>\n</li>\n<li>Example<ul>\n<li>expected frequency of “new companies”: $\\frac{8+4667}{14307668} \\times \\frac{8+15820}{14307668} \\times 14307668$ = 5.2 <img data-src=\"/img/NLP/chi1.png\" alt=\"\"></li>\n<li>chi-square value = χ^2 <img data-src=\"/img/NLP/chi3.png\" alt=\"\"> <img data-src=\"/img/NLP/chi2.png\" alt=\"\"></li>\n<li>When α=0.05, χ^2=3.841</li>\n<li>Because 1.55&lt;3.841, we cannot reject the null hypothesis. new companies is not a good candidate for a collocation</li>\n</ul>\n</li>\n<li>Comparison with T-test<ul>\n<li>The 20 bigrams with the highest t scores in the test corpus are also the 20 bigrams with the highest χ^2 scores</li>\n<li>χ^2 is appropriate for large probabilities(t-test is not because of normality assumption)</li>\n</ul>\n</li>\n<li>Application: Translation<ul>\n<li>find similarity of word pairs</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Likelihood-Ratios\"><a href=\"#Likelihood-Ratios\" class=\"headerlink\" title=\"Likelihood Ratios\"></a>Likelihood Ratios</h3><ul>\n<li>Advantage compared with Chi-Square test  <ul>\n<li>more appropriate for sparse data</li>\n<li>easier to interpret</li>\n</ul>\n</li>\n</ul>\n<p>Likelihood Ratios within single corpus  </p>\n<ul>\n<li>examine two hypothesis<ul>\n<li>H1: occurrence of w2 is independent of the previous occurrence of w1(null hypothesis)</li>\n<li>H2: occurrence of w2 is dependent of the previous occurrence of w1 </li>\n</ul>\n</li>\n<li>maximum likelihood estimate <img data-src=\"/img/NLP/like1.png\" alt=\"\"></li>\n<li>using binomial distribution<ul>\n<li>$b(k;n, x) = \\binom nk x^k \\times (1-x)^{n-k}$</li>\n<li>only different at probability<ul>\n<li>$L(H_1) = b(c_{12};c_1, p)b(c_2-c_{12}; N-c_1, p)$</li>\n<li>$L(H_2) = b(c_{12};c_1, p_1)b(c_2-c_{12}; N-c_1, p_2)$</li>\n</ul>\n</li>\n<li><img data-src=\"/img/NLP/likew.png\" alt=\"likely probability\"></li>\n<li>log of likelihood ratio λ <img data-src=\"/img/NLP/like2.png\" alt=\"log likelihood ratio\"></li>\n<li>use D = -2logλ to examine the significance of two words, which can asymptotically(漸近) chi-square distributed</li>\n</ul>\n</li>\n</ul>\n<p>Likelihood Ratios between two or more corpora   </p>\n<ul>\n<li>useful for the discovery of <strong>subject-specific collocations</strong></li>\n</ul>\n<h3 id=\"Mutual-Information\"><a href=\"#Mutual-Information\" class=\"headerlink\" title=\"Mutual Information\"></a>Mutual Information</h3><ul>\n<li>measure of <strong>how much one word tells us about the other</strong>(information theory)   </li>\n<li>pointwise mutual information(PMI) <img data-src=\"/img/NLP/mutual.png\" alt=\"PMI formula\"><ul>\n<li>MI是在獲得一個隨機變數的資訊之後，觀察另一個隨機變數所獲得的「資訊量」（單位通常為位元）</li>\n</ul>\n</li>\n<li>mutual information = Expection(PMI) <img data-src=\"/img/NLP/newMI.png\" alt=\"\"></li>\n<li>works bad in sparse environments<ul>\n<li>As the perfectly dependent bigrams get rarer, their mutual information increases → <strong>bad measure of dependence</strong> <img data-src=\"/img/NLP/pmi-depend.png\" alt=\"\"></li>\n</ul>\n</li>\n<li><strong>good measure of independence</strong><ul>\n<li>when perfect independence, I(x, y) = 0</li>\n<li><img data-src=\"/img/NLP/pmi-independ.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>New formula: $C(w1w2)I(w1w2)$<ul>\n<li>With MI, bigrams composed of low-frequency words will receive a higher score than bigrams composed of high-frequency words</li>\n</ul>\n</li>\n</ul>\n<p>Chain rule for entropy   </p>\n<ul>\n<li>$H(X,Y) = H(Y|X) + H(X) = H(X|Y) + H(Y)$</li>\n<li>Conditional entropy $H(Y|X)$ expresses how much <strong>extra information</strong> you still need to supply on average to communicate Y when X is known <img data-src=\"/img/NLP/conditional.png\" alt=\"\"></li>\n<li>$H(X)-H(X|Y) = H(Y)-H(Y|X)$<ul>\n<li>This difference is called the <strong>mutual information between X and Y</strong>(X, Y共同擁有的information)</li>\n<li>MI is not similar to chi-square <img data-src=\"/img/NLP/wrongMI.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>Entropy  </p>\n<ul>\n<li>Entropy: uncertainty of a variable <img data-src=\"/img/NLP/entropy1.png\" alt=\"\">  </li>\n<li>Incorrect model’s cross entropy is larger than correct model’s <img data-src=\"/img/NLP/entropy2.png\" alt=\"\"><ul>\n<li>正確model和猜測model的差別：P(X)logP(X) ↔ P(X)logPM(X)</li>\n</ul>\n</li>\n<li>Entropy Rate: Per-word entropy(= sentence entropy / N) <img data-src=\"/img/NLP/entropy_rate.png\" alt=\"\"></li>\n<li>Cross Entropy: <strong>average informaton</strong> needed to <strong>identify an event drawn from the set</strong> between two probability distributions<ul>\n<li>交叉熵的意義是用該模型對文本識別的難度，或者從壓縮的角度來看，每個詞平均要用幾個位來編碼</li>\n<li><img data-src=\"/img/NLP/entropy_cross.png\" alt=\"\">  </li>\n</ul>\n</li>\n<li>Joint entropy H(X, Y): average information needed to <strong>specify both values</strong> <img data-src=\"/img/NLP/joint.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"Case-Study\"><a href=\"#Case-Study\" class=\"headerlink\" title=\"Case Study\"></a>Case Study</h3><p>Emotion Analysis  </p>\n<ul>\n<li>Non-verbal Emotional Expressions</li>\n<li>text (raw) and emoticons(表情符號) (tag) form collection</li>\n<li>appearance of an emoticon is a good emotion indicator to sentences</li>\n<li>check the dependency of each word in sentences</li>\n<li>Evaluation<ul>\n<li>Use top 200 lexiconentries as features</li>\n<li>Tag={Positive, Negative}</li>\n<li>LIBSVM</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap04-N-gram-Model\"><a href=\"#Chap04-N-gram-Model\" class=\"headerlink\" title=\"Chap04 N-gram Model\"></a>Chap04 N-gram Model</h2><p>N-grams are token sequences of length N</p>\n<p>applications   </p>\n<ul>\n<li>Automatic speech recognition</li>\n<li>Author Identification</li>\n<li>Spelling correction</li>\n<li>Grammatical Error Diagnosis</li>\n<li>Machine translation</li>\n</ul>\n<h3 id=\"Counting\"><a href=\"#Counting\" class=\"headerlink\" title=\"Counting\"></a>Counting</h3><ul>\n<li>Example: <em>I do uh main-mainly business data processing</em><ul>\n<li>Should we count “uh”(pause) as tokens?</li>\n<li>What about the repetition of “mainly”? Should such do-overs count twice or just once?(重複)</li>\n<li>The answers depend on the application<ul>\n<li>“uh” is not needed for query </li>\n<li>“uh” is very useful in dialog management</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Corpora: Google Web Crawl<ul>\n<li>1,024,908,267,229 English tokens</li>\n<li>13,588,391 wordform types</li>\n<li>even large dictionaries of English have only around 500k types. Why so many here?<ul>\n<li>Numbers</li>\n<li>Misspellings</li>\n<li>Names</li>\n<li>Acronyms(縮寫)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Language-model\"><a href=\"#Language-model\" class=\"headerlink\" title=\"Language model\"></a>Language model</h3><p>Language models assign a probability to a word sequence<br>Ex. <code>P(the mythical unicorn) = P(the) * P(mythical | the) * P(unicorn | the mythical)</code></p>\n<ul>\n<li>Markov assumption: the probability of a word depends only on <strong>limited previous words</strong>     <ul>\n<li>Generalization: n previous words, like bigram, trigrams, 4-grams……</li>\n<li>As we increase the value of N, the accuracy of model increases</li>\n</ul>\n</li>\n</ul>\n<p>N-Gram probabilities come from a training corpus<br>overly narrow corpus: probabilities don’t generalize<br>overly general corpus: probabilities don’t reflect task or domain  </p>\n<p>maximum likelihood estimate  </p>\n<ul>\n<li>maximizes the probability of the training set T given the model M</li>\n<li>Suppose the word “Chinese” occurs 400 times in a corpus<ul>\n<li>MLE estimate is 400/1000000 = .004</li>\n<li>makes it most likely that “Chinese” will occur 400 times in a million word corpus</li>\n</ul>\n</li>\n<li>P([s] I want englishfood [s]) = P(I|[s]) x P(want|I) x P(english|want) x P(food|english) x P([s]|food) = 0.000031$</li>\n</ul>\n<p>Usage</p>\n<ul>\n<li><p>capture some knowledge about language</p>\n<ul>\n<li>World Knowledge<ul>\n<li>P(english food|want) = .0011</li>\n<li>P(chinese food|want) = .0065</li>\n</ul>\n</li>\n<li>syntax<ul>\n<li>P(to|want) = .66</li>\n<li>P(eat| to) = .28</li>\n<li>P(food| to) = 0</li>\n</ul>\n</li>\n<li>discourse<ul>\n<li><code>P(i|&lt;s&gt;)</code> = .25</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Shannon’s Method: use language model to generate random sentences</p>\n<ul>\n<li>Shakespeare as a Corpus  <ul>\n<li>99.96% of the possible bigrams were never seen (have zero entries in the table)</li>\n</ul>\n</li>\n<li>This is the biggest problem in language modeling</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Evaluating-N-Gram-Models\"><a href=\"#Evaluating-N-Gram-Models\" class=\"headerlink\" title=\"Evaluating N-Gram Models\"></a>Evaluating N-Gram Models</h3><ul>\n<li>Extrinsic(外在的) evaluation<ul>\n<li>Compare performance of the application within two models</li>\n<li>time-consuming</li>\n</ul>\n</li>\n<li>Intrinsic evaluation<ul>\n<li>perplexity<ul>\n<li>But get poor approximation unless the test data looks just like the training data</li>\n</ul>\n</li>\n<li>not sufficient to publish</li>\n</ul>\n</li>\n</ul>\n<p>Standard Method</p>\n<ul>\n<li>Train → Test </li>\n<li>A dataset which is different from our training set, but both drawn from the same source</li>\n<li>use evaluation metric(Ex. perplexity)</li>\n<li>Example <ul>\n<li>Create a fixed lexicon L, of size V<ul>\n<li>At text normalization phase, <strong>any training word not in L changed to UNK</strong>(unknown word token)</li>\n<li><strong>count UNK like a normal word</strong></li>\n</ul>\n</li>\n<li>When testing, also use UNK counts for any word not in training</li>\n<li>The best language model is one that best predicts an unseen test set</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"perplexity-複雜度\"><a href=\"#perplexity-複雜度\" class=\"headerlink\" title=\"perplexity(複雜度)\"></a>perplexity(複雜度)</h3><ul>\n<li>Definition  <ul>\n<li>notion of surprise<ul>\n<li>The more surprised the model is, the lower probability it assigned to the test set</li>\n<li><strong>Minimizing perplexity is the same as maximizing probability</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>probability of a test set, as normalized by the number of words <img data-src=\"/img/NLP/perplexity.png\" alt=\"\"></li>\n<li>物理意義是單詞的編碼大小<ul>\n<li>如果在某個測試語句上，語言模型的perplexity值為2^190，說明該句子的編碼需要190bits</li>\n</ul>\n</li>\n<li>relate to entropy<ul>\n<li>Perplexity(p, q) = $2^{H(p,q)}$   </li>\n<li>p is the test sample distribution, and q is the distribution of language model</li>\n<li>do everything in log space to avoid underflow and calculate faster</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"word-entropy\"><a href=\"#word-entropy\" class=\"headerlink\" title=\"word entropy\"></a>word entropy</h3><ul>\n<li>word entropy for English<ul>\n<li>11.82 bits per word [Shannon, 1951]</li>\n<li>9.8 bits per word [Grignetti, 1964]</li>\n</ul>\n</li>\n<li>word entropy in medical language<ul>\n<li>11.15 bits per word</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap05-Statistical-Inference\"><a href=\"#Chap05-Statistical-Inference\" class=\"headerlink\" title=\"Chap05 Statistical Inference\"></a>Chap05 Statistical Inference</h2><ul>\n<li>Statistical Inference：<strong>taking some data</strong> (generated by unknown distribution) and then <strong>making some inferences(推理，推測)</strong> about this distribution</li>\n<li>three issues<ul>\n<li><strong>Dividing the training data into equivalence classes</strong></li>\n<li><strong>Finding a good statistical estimator for each equivalence class</strong></li>\n<li><strong>Combining multiple estimators</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Form-Equivalence-Class\"><a href=\"#Form-Equivalence-Class\" class=\"headerlink\" title=\"Form Equivalence Class\"></a>Form Equivalence Class</h3><ul>\n<li>Classification Problem<ul>\n<li><strong>predict target feature</strong> based on various <strong>classificatory features</strong></li>\n<li>reliability v.s. discrimination<ul>\n<li>The more classes, the more discrimination, but estimation feature is not reliable</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Independent assumption<ul>\n<li>assume data is nearly independent</li>\n</ul>\n</li>\n<li>Statistical Language Modeling<ul>\n<li><img data-src=\"/img/NLP/smodel.png\" alt=\"\"></li>\n<li>Language Model: P(W)</li>\n<li>LM does not depend on acoustics<ul>\n<li>the acoutstics probability is constant(calculated by data)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>n-gram model<ul>\n<li>assume equivalence classes are previous n-1 words</li>\n<li>Markov Assumption: Only the prior n-1 local context affects the next entry<ul>\n<li>(n-1)th Markov Model or n-gram</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Building n-grams</strong><ol>\n<li>Remove punctuation(標點) and normalize text</li>\n<li>Map out-of-vocabulary words to unknown symbol(UNK)</li>\n<li>Estimate conditional probabilities by joint probabilities<ul>\n<li>P(n | n-2, n-1) = P(n-2, n-1, n) / P(n-2, n-1)</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"Finding-statistical-estimator\"><a href=\"#Finding-statistical-estimator\" class=\"headerlink\" title=\"Finding statistical estimator\"></a>Finding statistical estimator</h3><ul>\n<li>Goal: derive <strong>probability estimate of target feature</strong> based on observed data</li>\n<li>Running Example<ul>\n<li>From n-gram data P(w1,..,wn), predict P(wn|w1,..,wn-1)</li>\n</ul>\n</li>\n<li>Solutions<ul>\n<li>Maximum Likelihood Estimation</li>\n<li>Laplace’s, Lidstone’s and Jeffreys-Perks’ Laws</li>\n<li>Held Out Estimation</li>\n<li>Cross-Validation</li>\n<li>Good-Turing Estimation</li>\n</ul>\n</li>\n<li>Model combination<ul>\n<li>Combine models (unigram, bigram, trigram, …) to use the most precise model available</li>\n<li>interpolation(內插) and back-off(後退)</li>\n<li>use higher order models when model has enough data</li>\n<li>back off to lower order models when there isn’t enough data</li>\n</ul>\n</li>\n</ul>\n<p>Terminology  </p>\n<ul>\n<li>Ex. <code>[s] a b a b a</code><ul>\n<li>N = 5 (<code>[s]a,ab,ba,ab,ba</code>)</li>\n<li>B = 3 (<code>[s]a,ab,ba</code>)</li>\n<li>C(w1, w2…) = 某N-gram(Ex. ab)出現次數</li>\n<li>r =  某N-gram出現頻率</li>\n<li>Nr = 有幾個「出現r次的N-gram」</li>\n<li>Tr = 出現r次的N-gram，在test data出現的總次數</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-Maximum-Likelihood-Estimation\"><a href=\"#1-Maximum-Likelihood-Estimation\" class=\"headerlink\" title=\"(1) Maximum Likelihood Estimation\"></a>(1) Maximum Likelihood Estimation</h4><ul>\n<li>usually unsuitable for NLP <ul>\n<li>sparseness of the data(a lot of word sequences with zero probabilities)</li>\n</ul>\n</li>\n<li>Use Discounting or Smoothing technique to improve<ul>\n<li>Smoothing<ul>\n<li>Smoothing is like Robin Hood: Steal from the rich and give to the poor</li>\n<li>no word sequences has 0 probability <img data-src=\"/img/NLP/fBBrh6P.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>Discounting<ul>\n<li>assign some probability to unseen events</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-Laplace’s-Lidstone’s-and-Jeffreys-Perks’-Laws\"><a href=\"#2-Laplace’s-Lidstone’s-and-Jeffreys-Perks’-Laws\" class=\"headerlink\" title=\"(2) Laplace’s, Lidstone’s and Jeffreys-Perks’ Laws\"></a>(2) Laplace’s, Lidstone’s and Jeffreys-Perks’ Laws</h4><ul>\n<li>Laplace: add 1 to every count <ul>\n<li>gives far too much probabilities to unseen events</li>\n<li>Usage: In domains where the number of zeros isn’t so huge<ul>\n<li>pilot studies</li>\n<li>document classification</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Lidstone and Jeffreys-Perks: add a smaller value λ &lt; 1<ul>\n<li>B:number of bins <img data-src=\"/img/NLP/lidstone.png\" alt=\"lid\"></li>\n<li>Expected Likelihood Estimation (ELE)(Jeffreys-Perks Law)<ul>\n<li>λ=1/2</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-Held-Out-Estimation\"><a href=\"#3-Held-Out-Estimation\" class=\"headerlink\" title=\"(3) Held Out Estimation\"></a>(3) Held Out Estimation</h4><ul>\n<li>compute frequencies in training data and held out data</li>\n<li><img data-src=\"/img/NLP/heldout.png\" alt=\"\"><ul>\n<li>Tr / Nr = Average frequency of training frequency r N-grams<ul>\n<li>estimate frequency(value for validation)</li>\n<li>計算出現在training corpus r次的bigrams，在held-out corpus出現的次數稱為Tr。 因為這種bigrams有Nr個，因此平均為Tr / Nr</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Validation<ul>\n<li>if the probabilities estimated on training data are close to those on held-out data, it’s a good language model</li>\n<li><a href=\"http://gitqwerty777.github.io/MLfoundation2/#chap15-validation\">參考資料–validation in machine learning</a></li>\n</ul>\n</li>\n<li>Prevent Overtraining(overfit)<ul>\n<li>test on different data</li>\n</ul>\n</li>\n</ul>\n<p>Training portion and testing portion (5-10% of total data)  </p>\n<ul>\n<li>Held out data (validation data)<ul>\n<li>available training data: real training data(90%) + held out data(10%)</li>\n</ul>\n</li>\n<li>Instead of presenting a single performance figure, testing result on each smaller sample<ul>\n<li>Using t-test to reject the possibility of an accidental difference</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-Cross-Validation\"><a href=\"#4-Cross-Validation\" class=\"headerlink\" title=\"(4) Cross-Validation\"></a>(4) Cross-Validation</h4><p>If data is not enough, use each part of the data both as training data and held out data  </p>\n<ul>\n<li>Deleted Estimation<ul>\n<li>$N_r^a$ = number of n-grams occurring r times in the <strong>a th part</strong> of the training data</li>\n<li>$T_r^{ab}$ = number of occurs in part b of 「bigrams occurs r times in part a」</li>\n<li><img data-src=\"/img/NLP/deleted_estimate.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>Split the training data into K sections</li>\n<li>For each section k: hold-out section k and compute counts from remaining K-1 sections; compute Tr(k) </li>\n<li>Estimate probabilities by averaging over all sections</li>\n</ol>\n<p>estimate frequency of deleted estimation <img data-src=\"/img/NLP/del-estimate.png\" alt=\"\"></p>\n<h4 id=\"5-Good-Turing-Estimation\"><a href=\"#5-Good-Turing-Estimation\" class=\"headerlink\" title=\"(5) Good-Turing Estimation\"></a>(5) Good-Turing Estimation</h4><ul>\n<li>用出現一次的來預測沒出現過的</li>\n<li>若出現次數&gt;k，不變，否則套用公式</li>\n<li><img data-src=\"/img/NLP/goodturing.png\" alt=\"\"><ul>\n<li>renormalize to sum = 1</li>\n</ul>\n</li>\n<li>Simple Good-Turing<ul>\n<li>replace any zeros in the sequence by linear regression: <code>log(Nc) = a+blog(c)</code></li>\n</ul>\n</li>\n<li>after good-turing <img data-src=\"/img/NLP/gttable.png\" alt=\"\"></li>\n</ul>\n<p>explaination from stanford NLP course   </p>\n<ul>\n<li>when use leave-one-out validation, the possibilities of unseen validation data is $\\frac{N_1}{N}$(when thing-saw-once is the validation data), the possibilities of validation data have been seen K times is $\\frac{(k+1)N_{k+1}}{N}$ </li>\n<li>Josh Goodman’s intuition: assume You are fishing, and caught 10 carp,3 perch,2 whitefish, 1 trout, 1 salmon, 1 eel = 18 fish<ul>\n<li>P(unseen) = N1/N0 = N1/N = 3/18</li>\n<li>C(trout) = $2 \\times N_2/N_1$ = $2 \\times (1/3)$ = 2/3<ul>\n<li>P(trout) = 2/3 / 18 = 1/27</li>\n</ul>\n</li>\n<li>for large k, often get zero estimate, so do not change the count<ul>\n<li>C(the) = 200000, C(a) = 190000, $C*(the) = (200001)N_{200001} / N_{200000} = 0 (because N_{200001} = 0)$</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"6-Absolute-Discounting\"><a href=\"#6-Absolute-Discounting\" class=\"headerlink\" title=\"(6) Absolute Discounting\"></a>(6) Absolute Discounting</h4><p>從所有非零N-gram中拿出λ，平均分配給所有未出現過的N-gram  </p>\n<h3 id=\"Combining-Estimator\"><a href=\"#Combining-Estimator\" class=\"headerlink\" title=\"Combining Estimator\"></a>Combining Estimator</h3><p>Combination Methods   </p>\n<ul>\n<li>Simple Linear Interpolation(內插)(finite mixture models)<ul>\n<li>Ex. trigram, bigram and unigram <img data-src=\"/img/NLP/linearde.png\" alt=\"\"><ul>\n<li>More generally, λ can be a function of (wn-2, wn-1, wn)</li>\n</ul>\n</li>\n<li>use <a href=\"#backward-forward\">Expectation-Maximization (EM) algorithm</a> to get weights</li>\n</ul>\n</li>\n<li>General Linear Interpolation<ul>\n<li>general form for a linear interpolation model</li>\n<li>weights are a function of the history <img data-src=\"/img/NLP/gli.png\" alt=\"\"> </li>\n</ul>\n</li>\n<li>Katz’s Backing-Off<ul>\n<li>choose proper order to train model (base on training data)<ul>\n<li>If the n-gram appeared more than k times<ul>\n<li>use MLE estimate and discount it</li>\n</ul>\n</li>\n<li>If the n-gram appeared k times or less<ul>\n<li>use an estimate from <strong>lower-order n-gram</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>back-off probability <img data-src=\"/img/NLP/pbo.png\" alt=\"\"><ul>\n<li>$P_{Dis}(w_n|w_{n-2},w_{n-1})$ is specific discounted estimate. e.g., Good-Turing or Absolute Discounting </li>\n<li>unseen trigram is estimated by bigram and β <img data-src=\"/img/NLP/bosmooth.png\" alt=\"\"></li>\n<li><strong>β(wn-2, wn-1)</strong> and <strong>α</strong> are chosen so that sum of probabilities = 1</li>\n</ul>\n</li>\n<li>more genereal form <img data-src=\"/img/NLP/botable.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Most usual approach in large speech recognition: trigram language model, Good-Turing discounting, back-off combination</p>\n</blockquote>\n<h2 id=\"Chap06-Hidden-Markov-Models-HMM\"><a href=\"#Chap06-Hidden-Markov-Models-HMM\" class=\"headerlink\" title=\"Chap06 Hidden Markov Models(HMM)\"></a>Chap06 Hidden Markov Models(HMM)</h2><ul>\n<li>statistical tools that are useful for NLP<ul>\n<li><strong>part-of-speech-tagging</strong> </li>\n<li>We construct “Visible” Markov Models in training, but treat them as Hidden Markov Models when tagging new corpora  </li>\n</ul>\n</li>\n<li>model a <strong>state sequence</strong> (perhaps through time) <strong>of random variables</strong> that have dependencies<ul>\n<li>狀態(state)並不是直接可見的，但受狀態影響的某些變量(output symbol)則是可見的</li>\n<li>known value<ul>\n<li><strong>output symbols(words)</strong> 字詞</li>\n<li>probabilistic function of state relation 和state相關的機率函式</li>\n</ul>\n</li>\n<li>unknown value<ul>\n<li><strong>state(part-of-speech tags)</strong> 目前的state，即POS tag</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>rely on 2 assumptions<ul>\n<li>Let X=(X1, …, XT) be a sequence of random variables, X is markov chain if</li>\n</ul>\n<ol>\n<li>Limited Horizon<ul>\n<li>a word’s tag only depends on <strong>previous</strong> tag(state只受前一個state影響)</li>\n</ul>\n</li>\n<li>Time Invariant<ul>\n<li>the dependency does not change over time(轉移矩陣不變)</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<p>Description   </p>\n<ul>\n<li>initial state π, state = Q, Observations = O, transition matrix = A, output(observation) matrix = B  </li>\n<li><img data-src=\"/img/NLP/hmm1.png\" alt=\"\"><ul>\n<li>$a_{ij}$ = probability of state $q_i$ transition to state $q_j$ </li>\n<li>$b_i(k)$ = probability of observe output symbol $O_k$ when state = $q_i$  </li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-problems-of-HMM\"><a href=\"#3-problems-of-HMM\" class=\"headerlink\" title=\"3 problems of HMM\"></a>3 problems of HMM</h3><p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy41Mm5scC5jbi9obW0tbGVhcm4tYmVzdC1wcmFjdGljZXMtZm91ci1oaWRkZW4tbWFya292LW1vZGVscw==\">中文解說：隱馬可夫鏈<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li>評估（Evaluation）：what is probability of the observation sequence given a model? (P(Observes|Model))<ul>\n<li>Used in model improvement</li>\n<li>Used in classification<ul>\n<li>Word spotting in speech recognition, language identification, speaker identification, author identification……</li>\n<li>Given an observation, compute P(O|model) for all models</li>\n</ul>\n</li>\n<li>Use <strong>Forward algorithm</strong> to solve it</li>\n</ul>\n</li>\n<li>解碼（Decoding）：Given an observation sequence and model, what is the <strong>most likely state sequence</strong>? (P(States|Observes, Model)) 下一個state是什麼<ul>\n<li>Used in tagging (tags=hidden states)</li>\n<li>Use <strong>Viterbi algorithm</strong> to solve it</li>\n</ul>\n</li>\n<li>學習（Learning）：Given an observation sequence, infer the best model parameters (argmax(Model) P(Model|Observes))<ul>\n<li>「fill in model parameters that make the observation sequence most likely」</li>\n<li>Used for building HMM Model from data</li>\n<li>Use <strong>EM(Baum-Welch, backward-forward algorithm)</strong> to solve it</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Solutions-of-HMM-problem\"><a href=\"#Solutions-of-HMM-problem\" class=\"headerlink\" title=\"Solutions of HMM problem\"></a>Solutions of HMM problem</h3><h4 id=\"Forward\"><a href=\"#Forward\" class=\"headerlink\" title=\"Forward\"></a>Forward</h4><p><a href=\"http://www.52nlp.cn/hmm-learn-best-practices-five-forward-algorithm-1\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\"></a></p>\n<ul>\n<li><img data-src=\"/img/NLP/fwformula.png\" alt=\"\"></li>\n<li>simply sum of the probability of each possible state sequence </li>\n<li>Direct evaluation<ul>\n<li>time complexity = $(2T+1) \\times N^{T+1}$ -&gt; too big <img data-src=\"/img/NLP/fw.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>Use dynamic programming<ul>\n<li>record the probability of subpaths of the HMM</li>\n<li>The probability of longer subpaths can be calculated from shorter subpaths</li>\n<li>similar to Viterbi: viterbi use MAX() instead of SUM()</li>\n</ul>\n</li>\n</ul>\n<!-- Description:DP  \n- ![dp](/img/NLP/dp.png)\n- ![dp](/img/NLP/dptable.png)\n    - 選最高機率的路徑(將其他路徑的機率加入最高機率) \n    - 例：p(qqqq) = 0.01, p(qrrq) = 0.007 → P(qqqq) = 0.017\n-->\n\n<p>Forward Algorithm  </p>\n<ul>\n<li>$α_t(i)$ = probability of state = qi at time = t <img data-src=\"/img/NLP/forwardalgo.png\" alt=\"dp\"></li>\n<li>α的求法：將time = t-1 的 α 值，乘上在time = t時會在qi state的機率，並加總 <img data-src=\"/img/NLP/forwardfex.png\" alt=\"dp\"></li>\n<li>順向推出所有可能的state sequence會產生此observation的機率和, 即為此model會產生此observation的機率 <img data-src=\"/img/NLP/forwardexample.png\" alt=\"dp\"><ul>\n<li>Σ P($O_1, O_2, O_3$ | possible state sequence) = P($O_1, O_2, O_3$ | Model)</li>\n</ul>\n</li>\n<li><img data-src=\"/img/NLP/forwardpseudo.png\" alt=\"dp\"></li>\n</ul>\n<p>Example:Urn(甕)  </p>\n<ul>\n<li>genie has two urns filled with red and blue balls</li>\n<li>genie selects an urn and then draws a ball from it<ul>\n<li>The urns are hidden</li>\n<li>The balls are observed</li>\n</ul>\n</li>\n<li>After a lot of draws<ul>\n<li>know the distribution of colors of balls in each urn(B matrix) </li>\n<li>know the genie’s preferences in draw from one urn or the next(A matrix)</li>\n</ul>\n</li>\n<li>assume output (observation) is Blue Blue Red (BBR)<ul>\n<li>Forward: P(BBR|model) = 0.0792 (SUM of all possible states’ probability) <img data-src=\"/img/NLP/forward-urn.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>Viterbi</p>\n<ul>\n<li>compute <strong>the most possible path</strong></li>\n<li>$v_t(i)$ = <strong>most possible path probability</strong> from time = 0 to time = t, and state = qi at time = t <img data-src=\"/img/NLP/viterbi.png\" alt=\"\"></li>\n<li><img data-src=\"/img/NLP/viterbi-graph.png\" alt=\"\"></li>\n<li><img data-src=\"/img/NLP/viterbi-algo.png\" alt=\"\"></li>\n<li>Viterbi in Urn example <img data-src=\"/img/NLP/urn-cal.png\" alt=\"\"></li>\n</ul>\n<pre><code>def viterbi(obs, states, start_p, trans_p, emit_p):\n    V = [{}]\n    path = {}\n\n    # Initialize base cases (t == 0)\n    for y in states:\n        V[0][y] = start_p[y] * emit_p[y][obs[0]]\n        path[y] = [y]\n\n    # Run Viterbi for t &gt; 0\n    for t in range(1,len(obs)):\n        V.append({})\n        newpath = {}\n\n        for y in states:\n            (prob, state) = max([(V[t-1][y0] * trans_p[y0][y] * emit_p[y][obs[t]], y0) for y0 in states]) \n            # ↑ find the most possible state transitting to given state y at time=t\n            V[t][y] = prob\n            newpath[y] = path[state] + [y] \n\n        # newpath(at time t) can overwrite path(at time t-1) \n        path = newpath\n\n    (prob, state) = max([(V[len(obs) - 1][y], y) for y in states])\n    return (prob, path[state])</code></pre><h4 id=\"Backward\"><a href=\"#Backward\" class=\"headerlink\" title=\"Backward\"></a>Backward</h4><ul>\n<li>Useful for parameter estimation</li>\n</ul>\n<p>Description  </p>\n<ul>\n<li>Backward variables β, which are the total probability of seeing the rest of the observation sequence($O_t to O_T$) given state qi at time t <img data-src=\"/img/NLP/bw-procedure.png\" alt=\"\"><ul>\n<li><img data-src=\"/img/NLP/bw-f.png\" alt=\"\"></li>\n<li>初始化β：令t=T時刻所有狀態的β為1</li>\n</ul>\n</li>\n<li>由後往前計算 <img data-src=\"/img/NLP/bw-graph.png\" alt=\"\"></li>\n<li>如果要計算某observation的概率，只需將t=1的後向變量相加</li>\n</ul>\n<h4 id=\"Backward-Forward\"><a href=\"#Backward-Forward\" class=\"headerlink\" title=\"Backward-Forward\"></a>Backward-Forward</h4><ul>\n<li>We can locally maximize model parameter λ, by an iterative hill-climbing known as Baum-Welch algorithm(=Forward-Backward) (by EM Algorithm structure)</li>\n</ul>\n<p>Forward-Backward Algorithm    </p>\n<ul>\n<li>find which** state transitions(A matrix)** and <strong>symbol observaions(B matrix)</strong> were <strong>probably used the most</strong></li>\n<li>By <strong>increasing the probability of those</strong>, we can get a better model which gives a higher probability to the observation sequence</li>\n<li>transition probabilities and path probabilities are both require each other to calculate<ul>\n<li>use A matrix to calculate path probabilities</li>\n<li>need path probabilities to update A matrix</li>\n<li>use EM algorithm</li>\n</ul>\n</li>\n</ul>\n<p>EM algorithm (Expectation-Maximization)    </p>\n<ul>\n<li>迭代算法，它的最大優點是簡單和穩定，但容易陷入局部最優</li>\n<li>(隨機)選擇參數λ0，找出在λ0下最可能的狀態，計算每個訓練樣本的可能結果的概率，再<strong>重新估計新的參數λ</strong>。經過多次的迭代，直至某個收斂條件滿足為止</li>\n<li>Urn Example<ul>\n<li>update transition matrix A ($a_{12}, a_{11}$ … ) <img data-src=\"/img/NLP/newtrans.png\" alt=\"\"><ul>\n<li>P(1→2) = 0.0414 <img data-src=\"/img/NLP/1-2.png\" alt=\"1→2\"></li>\n<li>P(1→1) = 0.0537 <img data-src=\"/img/NLP/1-1.png\" alt=\"1→1\"></li>\n<li>normalize: P(1→2)+P(1→1) = 1, P(1→2) = 0.435 …</li>\n</ul>\n</li>\n<li>若state數目多的時候，計算量過大…<ul>\n<li>用backward, forward</li>\n<li>前面用forward, 後面用backward <img data-src=\"/img/NLP/bf-graph.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Combine forward and backward  </p>\n<ul>\n<li>Let ξt be the probability of being in state i at time t and state j at time t+1, <strong>given observation and model λ</strong><img data-src=\"/img/NLP/kesin.png\" alt=\"\"></li>\n<li>use not-quite-ξ to get ξ <img data-src=\"/img/NLP/nqkesin.png\" alt=\"\"> because <img data-src=\"/img/NLP/kesin-formula.png\" alt=\"\"><ul>\n<li>P(O|λ) → problem1 of HMM 的答案 → 用forward解</li>\n</ul>\n</li>\n<li>見上方backward, forward同時使用之圖 <img data-src=\"/img/NLP/nqkesin-formula.png\" alt=\"\"></li>\n<li>ξ可用來計算transition matrix <img data-src=\"/img/NLP/newtrans-final.png\" alt=\"\"></li>\n</ul>\n<p>Summary of Forward-Backward <img data-src=\"/img/NLP/fb-algo.png\" alt=\"\"> </p>\n<ol>\n<li>Initialize λ=(A,B)</li>\n<li>Compute α, β, ξ using observations</li>\n<li>Estimate new λ’=(A,B)</li>\n<li>Replace λ with λ’</li>\n<li>If not converged go to 2</li>\n</ol>\n<h2 id=\"Chap07-Part-of-Speech-Tagging\"><a href=\"#Chap07-Part-of-Speech-Tagging\" class=\"headerlink\" title=\"Chap07 Part-of-Speech Tagging\"></a>Chap07 Part-of-Speech Tagging</h2><p>alias: <strong>parts-of-speech</strong>, <strong>lexical categories</strong>, <strong>word classes</strong>, <strong>morphological classes</strong>, <strong>lexical tags</strong></p>\n<ul>\n<li>Noun, verb, adjective, preposition, adverb, article, interjection, pronoun, conjunction</li>\n<li>preposition(P)<ul>\n<li>of, by, to</li>\n</ul>\n</li>\n<li>pronoun(PRO)<ul>\n<li>I, me, mine</li>\n</ul>\n</li>\n<li>determiner(DET)<ul>\n<li>the, a, that, those</li>\n</ul>\n</li>\n</ul>\n<p>Usage  </p>\n<ul>\n<li><p>Speech synthesis</p>\n</li>\n<li><p>Tag before parsing</p>\n</li>\n<li><p>Information extraction</p>\n</li>\n<li><p>Finding names, relations, etc.</p>\n</li>\n<li><p>Machine Translation</p>\n</li>\n<li><p>Closed class</p>\n<ul>\n<li>the class that is hard to add new words</li>\n<li>Usually function words (short common words which play a role in grammar)<ul>\n<li>prepositions: on, under, over,…</li>\n<li>particles: up, down, on, off, …</li>\n<li>determiners: a, an, the, …</li>\n<li>pronouns: she, who, I, …</li>\n<li>conjunctions: and, but, or, …</li>\n<li>auxiliary verbs: can, may should, …</li>\n<li>numerals: one, two, three, third, …</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Open class</p>\n<ul>\n<li>new ones can be created all the time</li>\n<li>For English: Nouns, Verbs, Adjectives, Adverbs</li>\n</ul>\n</li>\n</ul>\n<p>Choosing Tagset: Ex. “Penn TreeBank tagset”, 45 tag<br><img data-src=\"/img/NLP/tagset.png\" alt=\"\"></p>\n<p>Methods for POS Tagging  </p>\n<ol>\n<li>Rule-based tagging<ul>\n<li>ENGTWOL: ENGlish TWO Level analysis</li>\n</ul>\n</li>\n<li>Stochastic: Probabilistic sequence models<ul>\n<li>HMM (Hidden Markov Model)</li>\n<li>MEMMs (Maximum Entropy Markov Models)</li>\n</ul>\n</li>\n<li>Transformation-Based Tagger (Brill)</li>\n</ol>\n<h3 id=\"Rule-Based-Tagging\"><a href=\"#Rule-Based-Tagging\" class=\"headerlink\" title=\"Rule-Based Tagging\"></a>Rule-Based Tagging</h3><ol>\n<li>Assign all possible tags to each word</li>\n<li>Remove tags according to set of rules<ol>\n<li>Typically more than 1000 hand-written rules</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"Hidden-Markov-Model-tagging\"><a href=\"#Hidden-Markov-Model-tagging\" class=\"headerlink\" title=\"Hidden Markov Model tagging\"></a>Hidden Markov Model tagging</h3><ul>\n<li>special case of Bayesian inference<ul>\n<li>Foundational work in computational linguistics</li>\n</ul>\n</li>\n<li>related to the “noisy channel” model that’s the basis for ASR, OCR and MT</li>\n<li>Decoding view  <ul>\n<li>Consider all possible sequences of tags</li>\n<li>choose the tag sequence which is most possible given the observation sequence of n words w1…wn</li>\n</ul>\n</li>\n<li>Generative view<ul>\n<li>This sequence of words must have resulted from some hidden process</li>\n<li>A sequence of tags (states), each of which emitted a word</li>\n</ul>\n</li>\n<li>$t^n_1$(t hat), which is the most possible tag <img data-src=\"/img/NLP/best-t.png\" alt=\"\"></li>\n<li>use viterbi to get tag <img data-src=\"/img/NLP/viterbi-ex.png\" alt=\"\"></li>\n</ul>\n<p>Evaluation  </p>\n<ul>\n<li>Overall error rate with respect to a gold-standard test set</li>\n<li>Error rates on particular tags/words</li>\n<li>Tag confusions, Unknown words…</li>\n<li>Typically accuracy reaches 96~97%</li>\n</ul>\n<p>Unknown Words</p>\n<ul>\n<li>Simplest model<ul>\n<li>Unknown words can be of any part of speech, or only in any open class</li>\n</ul>\n</li>\n<li>Morphological and other cues<ul>\n<li>~ed: past tense forms or past participles</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Maximum-entropy-Markov-model-MEMM\"><a href=\"#Maximum-entropy-Markov-model-MEMM\" class=\"headerlink\" title=\"Maximum entropy Markov model (MEMM)\"></a>Maximum entropy Markov model (MEMM)</h3><p>Maximum Entropy Model  </p>\n<ul>\n<li>MaxEnt: multinomial(多項式) logistic regression</li>\n<li>Used for sequence classification/sequence labeling</li>\n<li>Maximum entropy Markov model (MEMM)<ul>\n<li>a common MaxEnt classifier</li>\n</ul>\n</li>\n</ul>\n<!-- Classification\n- Task\n    - observation, Extract useful features, Classify the observation based on these features\n- Probabilistic classifier\n    - Given an observation, it gives a probability distribution over all classes\n- Non-sequential(連續的) Applications\n    - Text classification\n    - Sentiment analysis\n    - Sentence boundary detection\n-->\n\n\n<p>Exponential(log-linear) classifiers </p>\n<ul>\n<li>Combine features linearly</li>\n<li>Use the sum as an exponent <img data-src=\"/img/NLP/maxent.png\" alt=\"\"></li>\n<li>Example <img data-src=\"/img/NLP/maxent-ex.png\" alt=\"\"></li>\n</ul>\n<p>Maximum Entropy Markov Model       </p>\n<ul>\n<li>MaxEnt model<ul>\n<li>classifies <strong>a</strong> observation into <strong>one</strong> of discrete classes</li>\n</ul>\n</li>\n<li>MEMM<ul>\n<li>augmentation(增加) of the basic MaxEnt classifier</li>\n<li><strong>assign a class to each element in a sequence</strong></li>\n</ul>\n</li>\n</ul>\n<p>POS tagging from MaxExt to MEMM   </p>\n<ul>\n<li>include some source of knowledge into the tagging process</li>\n<li>The simplest approach<ul>\n<li>run the local classifier and <strong>feature is classifier from the previous word</strong></li>\n<li>Flaw<ul>\n<li>It makes a hard decision on each word before moving on the next word</li>\n<li>cannot use information from the later words</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>discriminative model</strong>(判別模型)   </p>\n<ul>\n<li>Compute the posterior P(Tag|Word) directly to decide tag <img data-src=\"/img/NLP/memm.png\" alt=\"\"></li>\n<li>求解條件機率分佈 P(y|x) 預測 y → 求P(tag|word)來取得tag </li>\n<li>不考慮聯合機率分佈 P(x, y)</li>\n<li>對於諸如分類和回歸問題，由於不考慮聯合機率分佈，採用判別模型可以取得更好的效果</li>\n</ul>\n<p>HMM and MEMM(順推和逆推的差別) <img data-src=\"/img/NLP/hmmandmemm.png\" alt=\"\">  </p>\n<ul>\n<li>Unlike HMM, MEMM can condition on any <strong>useful feature of observation</strong><ul>\n<li>HMM: state is the fiven value</li>\n<li>MEMM: observation is the given value</li>\n</ul>\n</li>\n<li>viterbi function for MEMM <img data-src=\"/img/NLP/viterbi-new.png\" alt=\"\"></li>\n<li><img data-src=\"/img/NLP/memm-ex.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"Transformation-Based-Learning-of-Tags\"><a href=\"#Transformation-Based-Learning-of-Tags\" class=\"headerlink\" title=\"Transformation-Based Learning of Tags\"></a>Transformation-Based Learning of Tags</h3><ul>\n<li>Tag each word with its most frequent tag</li>\n<li>Construct a list of transformations that <strong>improve the initial tag</strong></li>\n<li>trigger environment: at the limited number of words before/after <img data-src=\"/img/NLP/transformed-learn.png\" alt=\"\"></li>\n<li><img data-src=\"/img/NLP/transformed-algo.png\" alt=\"\"></li>\n</ul>\n<ol>\n<li>Trigger by tags </li>\n<li>Trigger by word</li>\n<li>Trigger by morphology(詞法學)</li>\n</ol>\n<p>&lt;! – ====================分水嶺：尚未分類========================== –&gt;</p>\n<h3 id=\"Zipf’s-Law-long-tail-phenomenon\"><a href=\"#Zipf’s-Law-long-tail-phenomenon\" class=\"headerlink\" title=\"Zipf’s Law (long tail phenomenon)\"></a>Zipf’s Law (long tail phenomenon)</h3><p>a word’s frequency is approximately inversely proportional to its rank in the word distribution list<br>單詞出現的頻率與它在頻率表裡的排名成反比:<br>頻率最高的單詞出現的頻率大約是出現頻率第二位的單詞的2倍</p>\n<h4 id=\"Jelinek-Mercer-Smoothing\"><a href=\"#Jelinek-Mercer-Smoothing\" class=\"headerlink\" title=\"Jelinek-Mercer Smoothing\"></a>Jelinek-Mercer Smoothing</h4><p>interpolate(插值) between bigram and unigram<br>because if p(eat the) = 0 and p(eat thou) = 0<br>it still must consider that  p(eat the) &gt; p(eat thou)<br>because p(the) &gt; p(thou)<br>so p(eat the) = N * p(the | eat) + (1-N) * p(the | thou) </p>\n<h2 id=\"Language-Model-Applications\"><a href=\"#Language-Model-Applications\" class=\"headerlink\" title=\"Language Model: Applications\"></a>Language Model: Applications</h2><h3 id=\"Query-Likelihood-Model\"><a href=\"#Query-Likelihood-Model\" class=\"headerlink\" title=\"Query Likelihood Model\"></a>Query Likelihood Model</h3><p>given a query 𝑞, rank the probability 𝑝(𝑑|q)<br><img data-src=\"/img/NLP/cfKf6I3.png\" alt=\"\"><br>So the following arguments are equivalent:<br>1.𝑝𝑑𝑞: find the document 𝑑 that is most likely to be relevant to 𝑞<br>2.𝑝𝑞𝑑: find the document 𝑑 that is most likely to generate the query 𝑞</p>\n<p>Typically, unigram LMs are used in IR(information retrieval)<br>Retrieval does not depend that much on sentence structure</p>\n<h3 id=\"Dependence-Language-Model\"><a href=\"#Dependence-Language-Model\" class=\"headerlink\" title=\"Dependence Language Model\"></a>Dependence Language Model</h3><p>Relax the independence assumption of unigram LMs<br>Do not assume that the dependency only exist between <strong>adjacent</strong> words<br>Introduce a hidden variable: “linkage” 𝐿<br>Ex.<br><img data-src=\"/img/NLP/Z8ftSRP.png\" alt=\"\"></p>\n<p>skipped….</p>\n<h3 id=\"Proximity-Language-Model\"><a href=\"#Proximity-Language-Model\" class=\"headerlink\" title=\"Proximity Language Model\"></a>Proximity Language Model</h3><p>Proximity: how close the query terms appear in a document<br>the closer they are, the more likely they are describing the same topic or concept</p>\n<h3 id=\"Positional-Language-Model\"><a href=\"#Positional-Language-Model\" class=\"headerlink\" title=\"Positional Language Model\"></a>Positional Language Model</h3><p>Position: define a LM for each position of a document, instead of the entire document<br>Words closer to a position will contribute more to the language model of this position</p>\n<h3 id=\"Speech-Recognition\"><a href=\"#Speech-Recognition\" class=\"headerlink\" title=\"Speech Recognition\"></a>Speech Recognition</h3><ul>\n<li>The “origin” of language models</li>\n<li>used to restrict the search space of possible word sequences</li>\n<li>requires higher order models: knowing previous acoustic is important!</li>\n<li>Speed is important!</li>\n<li>N-gram LM with modified Kneser-Ney smoothing is extensively used</li>\n</ul>\n<h3 id=\"Machine-Translation-MT\"><a href=\"#Machine-Translation-MT\" class=\"headerlink\" title=\"Machine Translation (MT)\"></a>Machine Translation (MT)</h3><ul>\n<li>Decoding: given the probability model(s), find the best translation</li>\n<li>Similar role as in speech recognition: <strong>eliminate unlikely word sequences</strong></li>\n<li>Higher order Kneser-Ney smoothed n-gram LM is widely used</li>\n<li>NNLM-style models tend to outperform standard back-off LMs</li>\n<li>Also significantly speeded up in (Delvin et al, 2014)</li>\n</ul>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li>HHChen 課堂講義</li>\n<li>SDLin 講義</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGFzcy5jb3Vyc2VyYS5vcmcvbmxwLw==\">Stanford NLP course<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><a href=\"www.52nlp.cn\">52nlp</a></li>\n</ul>\n",
            "tags": [
                "機器學習",
                "自然語言處理",
                "統計"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/cleancode/",
            "url": "http://gitqwerty777.github.io/cleancode/",
            "title": "Clean Code(無瑕的程式碼)心得",
            "date_published": "2015-02-26T14:02:24.000Z",
            "content_html": "<h2 id=\"Chap01-動機\"><a href=\"#Chap01-動機\" class=\"headerlink\" title=\"Chap01 動機\"></a>Chap01 動機</h2><ol>\n<li>神就藏在細節裡: 一致性的縮排是程式低錯誤率的最顯著指標</li>\n<li>Later equals NEVER: 不及時清理 → 累積愈多難看的程式碼 → 愈難清理，所以更不想清理 → 直到修改的成本太高，只好重寫</li>\n<li>不夠好的程式碼使維護成本太高(你看得懂自己寫的code嗎？)</li>\n</ol>\n<p>讓開發速度變快的方法：隨時保持clean code</p>\n<h2 id=\"Chap02-Clean-Code-的定義\"><a href=\"#Chap02-Clean-Code-的定義\" class=\"headerlink\" title=\"Chap02 Clean Code 的定義\"></a>Chap02 Clean Code 的定義</h2><p>認為自己的code<strong>應該要有的樣子</strong>  </p>\n<p>CleanCode學派(作者)對此的定義   </p>\n<ul>\n<li>每個函式、類別、模組都能表達<strong>單一意圖</strong>，降低程式相依性</li>\n<li>易讀：不該使人猜測程式的意思<ul>\n<li>因為在寫新的程式碼前，要先花時間了解舊程式碼</li>\n<li>每個看到的程式，執行結果都與你想得差不多</li>\n</ul>\n</li>\n<li>抽象化：程式碼不重複</li>\n</ul>\n<h2 id=\"Chap03-原則\"><a href=\"#Chap03-原則\" class=\"headerlink\" title=\"Chap03 原則\"></a>Chap03 原則</h2><blockquote>\n<p>任何原則在特殊情形都是可以違反的，不須過於拘泥</p>\n</blockquote>\n<ul>\n<li>童子軍規則：離開的code比剛來時更乾淨</li>\n<li>寫軟體如同寫作，先把想法寫下來，然後開始啄磨，直到讀起來很通順。第一份初稿通常是粗糙而雜亂無章的，修改之後才會改善到想要的樣子。程式設計大師在寫程式時，並不認為自己是在寫程式，而是在說故事。</li>\n<li>寫程式時，只能專注在 「讓程式運作」或「讓程式整潔」其中之一，要先程式能動再清理；或是讓程式架構明確易懂再實作都可以。</li>\n</ul>\n<h3 id=\"有意義的命名\"><a href=\"#有意義的命名\" class=\"headerlink\" title=\"有意義的命名\"></a>有意義的命名</h3><ul>\n<li>有辦法唸出來的名稱，愈具體愈好</li>\n<li>用 define, enum, const 代替 常數<ul>\n<li><code>enum color{black, white}</code></li>\n<li>86400 → <code>SECOND_PER_DAY</code></li>\n<li>容易了解的數字就不用<ul>\n<li><code>circumference = radius * Math.PI * 2</code>: 不用將2換成實際名稱 </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>class：名詞或名詞片語<ul>\n<li><code>board</code> → <code>chessGameBoard</code></li>\n<li><code>address</code> → <code>portAddress</code>, <code>EmailAddress</code></li>\n<li><code>day</code> → <code>elapsedTimeInDays</code></li>\n</ul>\n</li>\n<li>method：動詞或動詞片語<ul>\n<li><code>flag</code> → <code>isFlagged()</code></li>\n<li><code>Complex c = Complex(23.0)</code> → <code>Complex c = Complex.FromRealNumber(23.0)</code><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qYXZhd29ybGQuY29tLnR3L2p1dGUvcG9zdC92aWV3P2JpZD00NCZpZD0yNDgzMCZzdHk9MSZ0cGc9MSZhZ2U9LTE=\">使用靜態工廠<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>對特定功能使用一致的用詞<ul>\n<li><code>fetch</code>, <code>retreive</code>, <code>get</code> …</li>\n</ul>\n</li>\n<li>避免 <code>data</code>, <code>info</code>, <code>manager</code> 等意義較廣的字<ul>\n<li><code>accountList</code> → <code>accountGroup</code> (除非此變數真的是list型態)</li>\n<li><code>add()</code> → <code>insert()</code>, <code>append()</code></li>\n</ul>\n</li>\n<li>使用專有名詞<ul>\n<li><code>jobqueue</code></li>\n<li><code>timestamp</code></li>\n</ul>\n</li>\n<li>使用範圍較大的變數用較長的名稱<ul>\n<li>愈少用的函數名稱可以愈長</li>\n<li>for迴圈範圍較小，變數可以用<code>i</code>, <code>j</code><figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//which is better?</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; RowNumber; i++)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; ColumnNumber; j++)</span><br><span class=\"line\">\t\t...</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> r = <span class=\"number\">0</span>; r &lt; RowNumber; r++)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> c = <span class=\"number\">0</span>; c &lt; ColumnNumber; c++)</span><br><span class=\"line\">\t\t...</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"函式\"><a href=\"#函式\" class=\"headerlink\" title=\"函式\"></a>函式</h3><ul>\n<li>一個函式只做在<strong>同一層級</strong>上的<strong>一件</strong>事情<ul>\n<li>以「無法再分割」為標準</li>\n</ul>\n</li>\n<li>長度：小於二十行(或一個螢幕的長度)</li>\n<li>不用switch：switch容易違反<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kb3RibG9ncy5jb20udHcvaGF0ZWxvdmUvYXJjaGl2ZS8yMDEwLzEwLzE2L3NpbmdsZS1yZXNwb25zaWJpbGl0eS1wcmluY2lwbGUuYXNweA==\">單一職責原則<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9hZGFtL2FyY2hpdmUvMjAwOC8wNC8xOC8xMTU5MjgwLmh0bWw=\">開放閉合原則<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>解法：<span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cubW9ua2V5cG90aW9uLm5ldC9nYW1lcHJvZy9wYXR0ZXJuL2Fic3RyYWN0LWZhY3Rvcnk=\">抽象工廠<i class=\"fa fa-external-link-alt\"></i></span><ul>\n<li>使用switch和多型</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>參數<ul>\n<li>愈少愈好($\\leq$ 三個)<ul>\n<li>太多參數時需要記順序，像是<code>strcpy()</code></li>\n<li>例外：四維象限中的座標(只算作一個參數)，<code>printf()</code>(只算作兩個參數)</li>\n</ul>\n</li>\n<li>避免用參數當回傳值<ul>\n<li>如 <code>void saveResult(FILE* f, int* returnStatus)</code>，使用returnStatus來作為回傳</li>\n<li>解法一：呼叫擁有變數的class，用其method來修改</li>\n<li>解法二：用return</li>\n<li>用例外處理取代回傳錯誤碼</li>\n</ul>\n</li>\n<li>通常只使用一個參數<ul>\n<li>用途一：取得參數的性質<ul>\n<li><code>boolean isFileExists(&quot;MyFile&quot;)</code></li>\n</ul>\n</li>\n<li>用途二：使用參數，然後回傳操作後的結果<ul>\n<li><code>InputStream fileOpen(&quot;MyFile&quot;)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>避免flag<ul>\n<li>代表函式不只做一件事<ul>\n<li>有flag和沒有flag做的事不同</li>\n</ul>\n</li>\n<li><code>render(bool isSuite)</code> → <code>renderForSuite()</code> + <code>renderForSingleTest()</code></li>\n</ul>\n</li>\n<li>減少參數的方法<ul>\n<li>將多個參數合成一個class</li>\n<li>拆成多個函式</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>命名<ul>\n<li>以「不用重複查看函式定義」為原則<ul>\n<li><code>write(name)</code> → <code>writeNameField(name)</code></li>\n<li><code>assertEquals(expected, actual)</code> → <code>assertExpectedEqualsActual(expected, actual)</code></li>\n</ul>\n</li>\n<li>描述可能的副作用<ul>\n<li><code>getOOS()</code> → <code>createOrReturnOOS()</code>: 呼叫時若無OOS的時候，可能會create</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>指令(command)與查詢(query)分離<ul>\n<li>此函式同時有查詢和進行動作的功能: <code>if(setAttribute(&quot;username&quot;, &quot;unclebob&quot;)) ...</code></li>\n<li>改進: <code>if(attributeExists(&quot;username&quot;)) setAttribute(&quot;username&quot;, &quot;unclebob&quot;);</code></li>\n</ul>\n</li>\n<li>適當的靜態(static)宣告<ul>\n<li>靜態方法用到的資料都從參數而來，而不是從任何擁有這個方法的物件得來</li>\n</ul>\n</li>\n<li>結構化程式設計準則<ul>\n<li>每個函式的區塊都應該只有一個進入點和一個離開點(沒有break, continue, goto，只有一個return)</li>\n<li>在函式夠短的情況下<strong>沒有必要</strong></li>\n</ul>\n</li>\n<li>暴露時序耦合<ul>\n<li>必須先執行<code>A()</code>再執行<code>B()</code>的函式</li>\n<li>原本C為member，改成傳參數：<code>cls.A(); cls.B();</code> → <code>C = cls.A(); cls.B(C);</code></li>\n</ul>\n</li>\n<li>常數宣告：放在適當的層級<ul>\n<li>將預設的常數放在呼叫的參數，而非被呼叫的函式內<ul>\n<li><code>getPageNameOrDefault(request, &quot;FrontPage&quot;)</code> //default is “FrongPage”</li>\n</ul>\n</li>\n<li>放在愈高階就愈容易修改</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"註解\"><a href=\"#註解\" class=\"headerlink\" title=\"註解\"></a>註解</h3><p>註解是輔助程式碼來表達意圖的工具</p>\n<ul>\n<li><p>有註解代表程式碼不夠易懂</p>\n</li>\n<li><p>愈少愈好</p>\n</li>\n<li><p>與其寫註解，不如把程式碼弄整潔</p>\n</li>\n<li><p>註解通常缺少維護</p>\n<ul>\n<li>容易產生許多過時的註解</li>\n<li>錯誤的註解比沒有註解可怕</li>\n</ul>\n</li>\n<li><p>必要的註解</p>\n<ol>\n<li>版權宣告</li>\n<li>舉例示範</li>\n<li>解釋意圖<ul>\n<li>對某個問題的解決方法</li>\n<li>使用的演算法</li>\n<li>解釋自己無法修改的程式碼(函式庫等)</li>\n</ul>\n</li>\n<li>警告<ul>\n<li>不希望被修改的地方</li>\n</ul>\n</li>\n<li>暫時記錄：<code>TODO</code>, <code>BUG</code>…</li>\n</ol>\n</li>\n<li><p>糟糕的註解</p>\n<ul>\n<li>浪費時間看，最後被忽略<ul>\n<li>沒有提供更多資訊<ul>\n<li><code>printBoard() // print board</code></li>\n</ul>\n</li>\n<li>過多的資訊</li>\n<li>被強迫寫的(通常就是不必要的)</li>\n</ul>\n</li>\n<li>已被版本控制軟體取代的功能<ul>\n<li>版本變動記錄</li>\n<li>註解掉的程式碼</li>\n</ul>\n</li>\n<li>過度使用標誌<ul>\n<li>如 <code>// comment //////////////////</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"排版\"><a href=\"#排版\" class=\"headerlink\" title=\"排版\"></a>排版</h3><ul>\n<li>偏好小檔案(200-500行)</li>\n<li>報紙型編排：先出現標題(高階概念、演算法)，再來是內容(低階函式)<ul>\n<li>最重要的概念先出現，用最少的資訊來表達，再來才是實作細節</li>\n</ul>\n</li>\n<li>垂直距離：類似的概念應盡可能靠近<ul>\n<li>空白行用來分隔思緒，概念(類似文章分段)<ul>\n<li>做相似工作的函式愈近愈好</li>\n</ul>\n</li>\n<li>變數宣告的位置：靠近變數被使用的地方<ul>\n<li>若函式夠短，可在函式最上方宣告</li>\n</ul>\n</li>\n<li>降層準則<ul>\n<li>函式後面為其呼叫的函式，易於閱讀</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>將常數宣告放在一個大家比較容易找到的地方</li>\n<li>寬度：不要超過螢幕<ul>\n<li>通常會限制在80字<ul>\n<li>不過現在都是寬螢幕了，影響不大</li>\n</ul>\n</li>\n<li>使用空白強調運算子的優先權<ul>\n<li><code>b*b - 4*a*c</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"物件及資料結構\"><a href=\"#物件及資料結構\" class=\"headerlink\" title=\"物件及資料結構\"></a>物件及資料結構</h3><blockquote>\n<p>你知道的太多了…</p>\n</blockquote>\n<p>變數保持私有的理由，不希望有人依賴此變數，保持一個自由的空間，讓我們能自由的更改變數的型態，或是在突如其來的奇想或衝動時，能自由的變更實現內容的程式碼。</p>\n<p>那為什麼有這麼多的程式設計師，自動替他們的物件加上getter和setter，讓他們的私有度數如同公用變數呢？</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//完全暴露實現</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">double</span> x;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">double</span> y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//抽象化：無法分辨實現</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> interface Point &#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getX</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getY</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setCartesian</span><span class=\"params\">(<span class=\"keyword\">double</span> x, <span class=\"keyword\">double</span> y)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getR</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getTheta</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setPolar</span><span class=\"params\">(<span class=\"keyword\">double</span> r, <span class=\"keyword\">double</span> theta)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>利用抽象化的詞彙來表達資料。這並不是只透過介面及讀取、設定函式就能完成。想辨法找到最能詮釋「資料抽象概念」的方式。<br>而最差的作法，則是天真地加上讀取函式及設定函式而已。</p>\n<p>1.物件</p>\n<ul>\n<li>private member，public method</li>\n<li>將實現的過程隱藏(封裝)</li>\n<li>用抽象詞彙表達資料<ul>\n<li><code>getGallonsOfGasoline()</code> → <code>getPercentFuelRemaining()</code></li>\n</ul>\n</li>\n<li><strong>要讓每件事物都是一個物件是一個神話</strong>(Java表示：)</li>\n</ul>\n<p>2.資料結構: map, set, array …</p>\n<ul>\n<li>暴露資料(public member)<ul>\n<li>為資料結構設getter和setter是多此一舉</li>\n</ul>\n</li>\n</ul>\n<p>物件與資料結構的互補</p>\n<ul>\n<li>物件：新資料型態的彈性 ↔ 資料結構：新行為的彈性<ul>\n<li>資料結構容易添加函式，而不用更改現有的資料結構</li>\n<li>物件容易添加新的類別(繼承)，而不用更改現有的函式</li>\n</ul>\n</li>\n<li>混合體只會得到兩者的缺點</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3poLndpa2lwZWRpYS5vcmcvd2lraS8lRTUlQkUlOTclRTUlQTIlQTglRTUlQkYlOTIlRTglODAlQjMlRTUlQUUlOUElRTUlQkUlOEI=\">The law of Demeter<i class=\"fa fa-external-link-alt\"></i></span>  </p>\n<ul>\n<li>模組不該知道關於它所操縱<strong>物件</strong>的<strong>內部運作</strong></li>\n<li>違反原則: 火車連結<ul>\n<li><code>String outputDir = ctxt.getOptions().getScratchDir().getAbsolutePath()</code></li>\n<li>改進(仍然知道底層操作)<ul>\n<li><code>Options opts = ctxt.getOptions();</code></li>\n<li><code>File scratchDir = opts.getScratchDir();</code></li>\n<li><code>String outputDir = scratchDir.getAbsolutePath();</code></li>\n</ul>\n</li>\n<li>若 ctxt, options 為資料結構，則以下可行<ul>\n<li><code>outputDir = ctxt.options.scratchDir.absolutePath</code></li>\n</ul>\n</li>\n<li>若是物件，則我們應該要告訴 ctxt 去<strong>做某件事情</strong><ul>\n<li>和其他程式碼合併 : <code>BufferedOutputStream bos = ctxt.createScratchFileStream(classFileName)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>可調整的資料應放在高層次</p>\n<ul>\n<li>底層不應存放參數</li>\n<li>放在高階層比較好找，也比較好修改</li>\n</ul>\n<p>One Switch原則</p>\n<ul>\n<li>對於給定的變數，不應該有超過一個以上的switch敘述。在那個唯一的Switch敘述中的多個case，必須建立多型物件以取代其他case。</li>\n</ul>\n<h3 id=\"錯誤處理\"><a href=\"#錯誤處理\" class=\"headerlink\" title=\"錯誤處理\"></a>錯誤處理</h3><ul>\n<li>定義正常的流程<ul>\n<li>使用<span class=\"exturl\" data-url=\"aHR0cDovL21hcnRpbmZvd2xlci5jb20vZWFhQ2F0YWxvZy9zcGVjaWFsQ2FzZS5odG1s\">特殊情況物件(special case pattern)<i class=\"fa fa-external-link-alt\"></i></span>替代<code>if()</code>檢查<ul>\n<li>將特殊情況包在特殊情況物件</li>\n<li>特殊情況物件處理例外</li>\n</ul>\n</li>\n<li>包裹第三方程式庫<ul>\n<li>減少依頼，容易更換</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>使用 例外處理(try-catch-finally) 取代回傳error code<ul>\n<li>例外處理是「一件事」<ul>\n<li>error code 必須在呼叫結束之後立即檢查錯誤</li>\n<li>提取try和catch的內容，成為新函式</li>\n<li>用class包裹例外，此class只處理例外</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>不要傳遞NULL<ul>\n<li>要檢查值是不是NULL，很麻煩<ul>\n<li>所有函式都不return NULL → 都不用檢查</li>\n</ul>\n</li>\n<li>解決<ul>\n<li>回傳特殊情況物件<ul>\n<li>例：找不到時，回傳空list</li>\n</ul>\n</li>\n<li>使用例外處理</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Java：<span class=\"exturl\" data-url=\"aHR0cDovL3RlZGR5LWNoZW4tdHcuYmxvZ3Nwb3QudHcvMjAxMS8wNS9jaGVja2VkLW9yLXVuY2hlY2tlZC1leGNlcHRpb25zLTEuaHRtbA==\">使用不檢查型例外：<i class=\"fa fa-external-link-alt\"></i></span>，<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC90ZWRkeXNvZnQvamF2YWNoZWNrZWR1bmNoZWNrZWQtZXhjZXB0aW9ucw==\">(檢查和不檢查型例外)<i class=\"fa fa-external-link-alt\"></i></span>，因為其破壞開放閉合原則，修改低階函式時也需要修改高階函式</li>\n<li>將邊界條件的檢查放置於同一個地方，不要散佈在程式的各個角落</li>\n</ul>\n<h3 id=\"邊界\"><a href=\"#邊界\" class=\"headerlink\" title=\"邊界\"></a>邊界</h3><blockquote>\n<p>註：從這章之後大多是一章一個作者，所以頗有矛盾和重復的地方</p>\n</blockquote>\n<p>使用第三方API</p>\n<ul>\n<li>學習性測試<ul>\n<li>寫一些測試程式來了解第三方軟體</li>\n<li>第三方軟體改版後也能用來確定行為是否改變</li>\n</ul>\n</li>\n<li>包裹第三方API<ul>\n<li><code>public void open() { try{innerPort.open();} ... }</code></li>\n<li>好處<ul>\n<li>掌握控制程式的權利</li>\n<li>在API未知的情況可以繼承此interface，創造一個Fake API來測試</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"單元測試\"><a href=\"#單元測試\" class=\"headerlink\" title=\"單元測試\"></a>單元測試</h3><p>有了測試程式(和版本控制系統)就不會害怕修改程式！</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2dsaXlhby5sb2dkb3duLmNvbS9wb3N0cy8yMDE0LzAxLzE4L3NvZnR3YXJlLXRhbGstYWJvdXQtdGVzdC1kcml2ZW4tZGV2ZWxvcG1lbnQtdGVzdC1kcml2ZW4tZGV2ZWxvcG1lbnQtaQ==\">測試驅動開發(TDD)<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5idXR1bmNsZWJvYi5jb20vQXJ0aWNsZVMuVW5jbGVCb2IuVGhlVGhyZWVSdWxlc09mVGRk\">The Three Rules of TDD<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li>先寫測試程式，再寫對應的實作程式</li>\n<li>只寫<strong>剛好</strong>無法通過的單元測試<ol>\n<li>測試無法通過時，應該要修復實作程式</li>\n</ol>\n</li>\n<li>只寫<strong>剛好</strong>能通過測試的程式<ol>\n<li>測試無法通過時，只能寫和測試有關的實作程式，不能寫其他功能</li>\n</ol>\n</li>\n</ol>\n<p><strong>測試程式和產品程式一樣重要</strong></p>\n<p>測試方法</p>\n<ul>\n<li>使用涵蓋率工具(Coverage Tool)<ul>\n<li>檢查是否每行程式都有被執行過</li>\n</ul>\n</li>\n<li>測試邊界條件</li>\n</ul>\n<p>原則</p>\n<ul>\n<li>測試的程式碼也需要整潔<ul>\n<li>最重要的是可讀性，效率是其次</li>\n</ul>\n</li>\n<li>建造-操作-檢查（BUILD-OPERATE-CHECK）<ul>\n<li>產生數據，操作之，再檢查正確性</li>\n<li>GIVEN-WHEN-THEN<ul>\n<li>Given: 前提、環境</li>\n<li>When: 發生事情</li>\n<li>Then: 預期結果</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>一個測試只用一個assert</li>\n<li>在錯誤的程式碼附近進行詳盡的測試<ul>\n<li>因為Bug往往聚集</li>\n</ul>\n</li>\n</ul>\n<p>測試程式的 F.I.R.S.T. 法則</p>\n<ul>\n<li>Fast：快速(足夠快即可)</li>\n<li>Independent：可個別獨立執行</li>\n<li>Repeatable：可在任何環境重複執行</li>\n<li>Self-Validating：輸出bool值(成功/失敗)，而不是記錄檔<ul>\n<li>不用做額外的檢查</li>\n</ul>\n</li>\n<li>Timely：先寫測試再實作</li>\n</ul>\n<h3 id=\"類別\"><a href=\"#類別\" class=\"headerlink\" title=\"類別\"></a>類別</h3><ul>\n<li>凝聚性：方法內使用愈多變數，代表這個方法更屬於這個類別<ul>\n<li>為了保持凝聚性，會產生許多小類別</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>把工具放在有許多標記的小型工具箱裡，比少量的大抽屜，然後將所有的東西都丟進去好。</p>\n</blockquote>\n<p>不應該對相依的模組有預先的假設(即邏輯上的相依)，應該清楚的詢問所需的有關訊息(即實體上的相依)。<!--??--></p>\n<h3 id=\"系統\"><a href=\"#系統\" class=\"headerlink\" title=\"系統\"></a>系統</h3><p>如同建造城市，某些人負責整體規劃，其它人專注在細節執行。<br>進行抽象化和模組化，將所有關注的事分離開來</p>\n<ul>\n<li>工廠模式：<strong>將建造和使用分離</strong></li>\n</ul>\n<p>相依性注入<span class=\"exturl\" data-url=\"aHR0cDovL2h1YW4tbGluLmJsb2dzcG90LmNvbS8yMDExLzEwL2RlcGVuZGVuY3ktaW5qZWN0aW9uLTEuaHRtbA==\">(1)<i class=\"fa fa-external-link-alt\"></i></span><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMzA3OTQvd2hhdC1pcy1kZXBlbmRlbmN5LWluamVjdGlvbg==\">(2)<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>控管反轉<ul>\n<li>將第二個職責移到其它專注於該職責的物件裡</li>\n</ul>\n</li>\n</ul>\n<p>擴大</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3LyVFNSU4RCU4MSVFNSVBNCVBNyVFNSVCQiVCQSVFOCVBOCVBRCMuRTguQTkuOTUuRTUuODMuQjk=\">誰有辦法預期小鎮的成長，而在鎮上先鋪好六線道高速公路？<i class=\"fa fa-external-link-alt\"></i></span><ul>\n<li>讓系統一開始就做對，是一個神話</li>\n<li>應該只實現今天的故事(即目前的需求)，然後重構它，並且明天再進行系統的擴充</li>\n</ul>\n</li>\n<li>剖面導向程式設計AOP<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kv6Z2i5ZCR5L6n6Z2i55qE56iL5bqP6K6+6K6h\">(1)<i class=\"fa fa-external-link-alt\"></i></span><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuaG9tZS5jYy9Hb3NzaXAvU3ByaW5nR29zc2lwL0FPUENvbmNlcHQuaHRtbA==\">(2)<i class=\"fa fa-external-link-alt\"></i></span><ul>\n<li>剖面(aspect)<ul>\n<li>系統中某個關注點的行為，需要用一致性的方式修改<ul>\n<li>如日誌記錄(log)、資料庫、安全性、暫存快取</li>\n<li>紀錄檔功能往往橫跨系統中的每個業務模組，即「橫切」所有有紀錄檔需求的類及方法體</li>\n</ul>\n</li>\n<li>為應用程式基礎架構</li>\n</ul>\n</li>\n<li>保持適當的關注點分離</li>\n</ul>\n</li>\n</ul>\n<p><strong>不需要「先作大型設計」</strong>，因為不希望浪費先前的努力，這個設計會阻止你改進程式架構。</p>\n<p>有時候拖延至最後一刻是最好的作法，這讓我們得以運用最多的資訊進行選擇。</p>\n<p>系統需要特定領域的語言(Domain-Specific Language), 讓領域專家可以把程式寫得像是散文的結構，而且領域概念和實作程式碼相似，減少轉換錯誤。</p>\n<h4 id=\"剖面範例\"><a href=\"#剖面範例\" class=\"headerlink\" title=\"剖面範例\"></a>剖面範例</h4><ol>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL29wZW5ob21lLmNjL0dvc3NpcC9TcHJpbmdHb3NzaXAvRnJvbVByb3h5VG9BT1AuaHRtbA==\">Java代理機制<i class=\"fa fa-external-link-alt\"></i></span><ol>\n<li>代理可以呼叫被代理物件的函式，也可以進行剖面的行為</li>\n</ol>\n</li>\n<li>Java AOP框架<ol>\n<li>Spring AOP</li>\n<li>JBoss AOP</li>\n</ol>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemwzNDUwMzQxL2FydGljbGUvZGV0YWlscy83NjczOTM4\">AspectJ<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n<blockquote>\n<p>一個理想的架構，包含模組化的關注點，每個關注點都用一個普通物件實作。 不同領域之間利用最小侵入性的剖面工具整合。 這樣的架構就可以是測試驅動的(test-driven)，如同程式碼一樣。</p>\n</blockquote>\n<h3 id=\"簡單設計守則\"><a href=\"#簡單設計守則\" class=\"headerlink\" title=\"簡單設計守則\"></a>簡單設計守則</h3><ol>\n<li>執行完所有的測試</li>\n<li>程式重構：重要性 1 &gt; 2 &gt; 3<ol>\n<li>消除重複<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3LyVFNiVBOCVBMSVFNiU5RCVCRiVFNiU5NiVCOSVFNiVCMyU5NQ==\">樣版方法(Template Method)<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>大部份設計模式都是在提供消除重複的策略</li>\n<li>物件導向是用來組織模組和消除重複的策略</li>\n</ol>\n</li>\n<li>具表達力</li>\n<li>最小化類別及方法數量</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"平行化\"><a href=\"#平行化\" class=\"headerlink\" title=\"平行化\"></a>平行化</h3><blockquote>\n<p>物件是處理過程的抽象化，執行緒是排程的抽象化</p>\n</blockquote>\n<p>將「做什麼」和「何時做」分解開來，像是Web應用的Servlet模型<br>當獲得一個網頁請求時，servlet會以非同步方式執行，不需要管理所有的請求，每一個servlet都在其自我的小小世界裡執行。</p>\n<p>缺點</p>\n<ul>\n<li>需要修改程式碼/架構</li>\n<li>速度不一定變快(有overhead)</li>\n<li>很難寫正確，因為很難重現bug</li>\n</ul>\n<p>建議</p>\n<ul>\n<li>將平行化的程式碼和其他程式碼分開</li>\n<li>保護資料<ul>\n<li>限制共享資料的存取次數<ul>\n<li>減少critical section的使用次數</li>\n</ul>\n</li>\n<li>限制資料的視野<ul>\n<li>mutex lock(c), synchronized(java)</li>\n<li>避免在一個共享物件上使用多個方法</li>\n</ul>\n</li>\n<li>使用資料的複本<ul>\n<li>由一個執行緒負責合併結果</li>\n<li>每個執行緒盡可能獨立運行</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>測試<ul>\n<li>偽造/產生失敗以測試</li>\n<li>讓平行化的程式可以開關平行化的功能</li>\n<li>在不同的平台測試</li>\n<li>執行比處理器數量還多的執行緒<ul>\n<li>強迫進行task swapping</li>\n</ul>\n</li>\n<li>調整參數(執行緒數量、重複執行次數)</li>\n<li>正確的關閉程式<ul>\n<li>防止deadlock</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pYm0uY29tL2RldmVsb3BlcndvcmtzL2NuL2phdmEvai1jb250ZXN0Lmh0bWw=\">用IBM contest找BUG<i class=\"fa fa-external-link-alt\"></i></span><ul>\n<li>不一定會照順序執行</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>實作</p>\n<ul>\n<li>ReentrantLock<ul>\n<li>一般的鎖</li>\n</ul>\n</li>\n<li>Semaphore號誌<ul>\n<li>有計數功能的鎖</li>\n</ul>\n</li>\n<li>CountDownLatch<ul>\n<li>先等待指定數量的事件，使得所有的執行緒都有公平的機會，在同時間啟動</li>\n</ul>\n</li>\n</ul>\n<p>模型</p>\n<ul>\n<li>生產-消費<ul>\n<li>有限資源</li>\n<li>生產者放工作入queue</li>\n<li>消費者取出工作</li>\n</ul>\n</li>\n<li>讀取-寫入<ul>\n<li>平衡reader和writer的需求，避免某一方飢餓(starvation)</li>\n<li>簡單方法：writer等到沒有reader使用時再write<ul>\n<li>writer容易starve</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>哲學家用餐<ul>\n<li>雙手都拿到刀叉時才能用餐</li>\n<li>大程式的資源爭奪問題</li>\n</ul>\n</li>\n</ul>\n<p>詳見<a href=\"/parallel-programming\">平行程式設計</a></p>\n<h3 id=\"程式碼的異味\"><a href=\"#程式碼的異味\" class=\"headerlink\" title=\"程式碼的異味\"></a>程式碼的異味</h3><blockquote>\n<p>聖人見微以知萌，見端以知末，故見象箸而怖，知天下不足也。<br>韓非子．說林上</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU0JUJCJUEzJUU3JUEwJTgxJUU1JUJDJTgyJUU1JTkxJUIz\">程式碼的異味(Code Smell)<i class=\"fa fa-external-link-alt\"></i></span>:<br>程式碼中的任何可能導致深層問題的<strong>症狀</strong></p>\n<ol>\n<li>一份檔案有多種程式語言</li>\n<li>明顯該有的行為未實現</li>\n<li>在邊界條件的不正確行為<ol>\n<li>封裝邊界條件: 將邊界條件的集中處理<ol>\n<li><code>int nextLevel = level+1; //boundary condition</code></li>\n</ol>\n</li>\n</ol>\n</li>\n<li>無視編譯器警告</li>\n<li>否定的判斷式<ol start=\"2\">\n<li>改善 <code>if(!buffer.isFull())</code> → <code>if(buffer.isNotFull())</code></li>\n</ol>\n</li>\n<li>過多的資訊<ol start=\"4\">\n<li>類別擁有的變數、方法數量愈少愈好、方法擁有的變數愈少愈好</li>\n</ol>\n</li>\n<li>不一致性<ol start=\"5\">\n<li>命名的一致性：對於同一個物件，在不同函式中的實體使用相同的名稱</li>\n<li>行為的一致性：用同樣的方式來完成所有類似的事</li>\n</ol>\n</li>\n<li>特色留戀(Feature Envy)<ol start=\"7\">\n<li>使用其他物件的getter或setter</li>\n<li>有時候是必要之惡：放入別的物件會違反其他OOP的原則(此例：單一職責、開放閉合原則等)<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//demo of feature envy</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> clas HourlyEmployeeReport&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> HourlyEmployee employee;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">String <span class=\"title\">reportHours</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> String.Format(</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"Name:%s, Hours:%d.%ld\\n\"</span>,</span><br><span class=\"line\">\t\t\temployee.getName(),</span><br><span class=\"line\">\t\t\temployee.getTenthsWorked()/<span class=\"number\">10</span>,</span><br><span class=\"line\">\t\t\temployee.getTenthsWorked()%<span class=\"number\">10</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vemgtdHcvbGlicmFyeS9kbjM4NzU2OC5hc3B4\">30天快速上手 TDD<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdmVyeWl0bWFuL2FydGljbGUvZGV0YWlscy82OTM3NjA0\">The Principles of Good Programming<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n",
            "tags": [
                "程式",
                "CleanCode",
                "重構",
                "TDD",
                "設計模式"
            ]
        },
        {
            "id": "http://gitqwerty777.github.io/economics/",
            "url": "http://gitqwerty777.github.io/economics/",
            "title": "經濟學一",
            "date_published": "2015-02-25T03:49:49.000Z",
            "content_html": "<!-- RENEW: -->\n\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><h3 id=\"經濟學是什麼？\"><a href=\"#經濟學是什麼？\" class=\"headerlink\" title=\"經濟學是什麼？\"></a>經濟學是什麼？</h3><p>經濟學是理解「人的行為」的方法：<br>個人從事行為前會衡量利弊得失，有一定脈絡可循<br>個人的行為反應其自利動機，人為自己而活<br>社會由個人組成，從個人行為出發，解釋各種社會現象  </p>\n<p><strong>經濟學家的眼鏡：將每個人視為理性、自利</strong></p>\n<a id=\"more\"></a>\n<p>反駁       </p>\n<ol>\n<li>利他行為：因為可以得到回報，如滿足感、快樂而幫助別人</li>\n<li>人並非隨時理性(理性的非理性)：人因為無法隨時思考，所以大多時候是靠經驗法則做決定。但是「決定一件事是否需要思考」是理性的決定</li>\n</ol>\n<p>個人自利是好事還是壞事大部分決定於制度。</p>\n<blockquote>\n<p>我們每天有得吃喝,並非由於肉商、酒商或麵包商的仁心善行,而是由於他們關心自己的利益。<br>– 亞當．史密斯</p>\n</blockquote>\n<h3 id=\"制度與誘因\"><a href=\"#制度與誘因\" class=\"headerlink\" title=\"制度與誘因\"></a>制度與誘因</h3><p>Ex. 雲稜山屋(南湖大山)<br>食物、睡袋、像人一般高的行李、臉盆、乾燥設備、沒有廁所</p>\n<p>為什麼各國的山屋不同？</p>\n<p>日本、尼泊爾的山屋都是民間經營<br>→ 登山客愈多，山屋主人的利潤愈多<br>→ 山屋主人關心自己的利益，因此提供高品質服務</p>\n<p>台灣的山屋是由林務局或國家公園管理處經營<br>→ 在公務員眼中，登山客是來找麻煩的<br>→ 公務員關心自己的利益，所以雲稜山莊沒有廁所</p>\n<p>山屋主人和公務員都追求自己的利益<br>其因為制度不同，兩者面對的誘因不同，其行為也不同</p>\n<p>吳聰敏 (2010)，《經濟學原理》   </p>\n<blockquote>\n<p>… 上山的日本人絡繹不絕。其中，年輕人很少，絕大部分是中老年人。因為有山屋，他們只須背著自身的衣物 … 如果日本和台灣的山屋一樣，我相信這當中百分之九十的人上不到兩三千公尺的高山。南湖大山是台灣第一等好山，但台灣有多少人登過呢？</p>\n</blockquote>\n<p>理性、自利的個人 → <strong>制度</strong> → 社會現象</p>\n<p>要怎麼改善台灣的登山環境？     </p>\n<ul>\n<li>換掉不適任的公務員？</li>\n<li>花更多錢建更好的山屋？</li>\n<li><strong>改變制度 → 改變誘因 → 改變人的行為</strong></li>\n</ul>\n<p>經濟學由<strong>個人觀點</strong>出發來<strong>解釋現象</strong>，但通常並不認為社會現象是「某些個人」的「問題」<br>原子（個人）、連結方式（制度）、外貌與性質（行為）<br>如同微觀的原子，雖然都做著不同方向的運動，但是在巨觀上來看還是朝著某個方向運動的</p>\n<blockquote>\n<p>經濟學家都是法家</p>\n</blockquote>\n<h3 id=\"經濟學家的角色\"><a href=\"#經濟學家的角色\" class=\"headerlink\" title=\"經濟學家的角色\"></a>經濟學家的角色</h3><ul>\n<li>解釋現象</li>\n<li>制定政策</li>\n<li>實是性（Positive）敘述可能被證據推翻，不帶價值判斷，討論「是什麼？」<ul>\n<li>日本所得比台灣高，因此山屋比台灣的要大</li>\n</ul>\n</li>\n<li>規範性（Normative）敘述無法用證據檢驗，帶有價值判斷，討論「該如何？」<ul>\n<li>為了改善登山環境，政府應該開放民間經營山屋</li>\n</ul>\n</li>\n<li>「台灣所得分配不公平」<ul>\n<li>兩者皆有</li>\n</ul>\n</li>\n</ul>\n<p>一旦進入政策討論，就無法迴避價值判斷<br>價值判斷通常需要事實證據支持，否則難以說服別人</p>\n<h3 id=\"結論\"><a href=\"#結論\" class=\"headerlink\" title=\"結論\"></a>結論</h3><ul>\n<li>經濟學是一門「社會科學」，用科學的方法來研究社會現象  <ul>\n<li>現象 → 問題 → 解釋 → 驗證</li>\n<li>科學理論的起頭都是猜測(conjecture)。經過驗証之後, 某一個猜測比其他的猜測更有解釋能力, 這個猜測就成為眾所接受的理論(theory), 或稱為正確的理論   </li>\n<li>「整個科學不過是每日思考的精益求精罷了」–愛因斯坦</li>\n</ul>\n</li>\n<li>經濟學家的「眼鏡」和其他社會科學的不同<ul>\n<li>個人、理性、自利  </li>\n</ul>\n</li>\n<li>如果經濟學能幫助你正確認識問題，正確解釋現象，經濟學就有「經世濟民」的可能</li>\n<li>個體經濟學<ul>\n<li>家戶與廠商如何做決策，及它們如何在市場中互動</li>\n</ul>\n</li>\n<li>總體經濟學<ul>\n<li>物價膨脹，失業與經濟成長等整體經濟現象</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"經濟學十大原理\"><a href=\"#經濟學十大原理\" class=\"headerlink\" title=\"經濟學十大原理\"></a>經濟學十大原理</h3><p>經濟學是研究社會如何管理其稀少性資源的科學<br>效率：由稀少性資源中獲取最大的利益  </p>\n<ol>\n<li>人們面臨取捨</li>\n<li>天下沒有白吃的午餐(機會成本：政府稅收增加，民間支出減少)</li>\n<li>理性的人進行邊際思考</li>\n<li>誘因改變行為</li>\n<li>交易可以讓每個人更好</li>\n<li>市場<strong>通常</strong>是組織經濟活動的良好方式(價格)</li>\n<li>政府<strong>有時</strong>可以改善市場結果(執行法令，保障財產權，反例：市場失靈(無法有效率)，原因：外部性，市場影響力，公共財；也無法均等分配)</li>\n<li>一國的生活水準決定於其生產(服務和商品)的能力(一年2%成長，每三十五年會增加一倍)</li>\n<li>政府印太多鈔票時，物價會上漲(台灣在1946年到1949年，每年的物價漲幅都在500%~1200%之間，而<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU0JUJBJThDJUU0JUJBJThDJUU1JTg1JUFCJUU0JUJBJThCJUU0JUJCJUI2\">二二八事件<i class=\"fa fa-external-link-alt\"></i></span>在1947年爆發，1949年6月15日，舊台幣換新台幣)</li>\n<li>社會面臨物價膨脹與失業的短期取捨(貨幣數量增加→消費需求增加→提高產品售價，僱用更多勞工→失業率下降)</li>\n</ol>\n<h3 id=\"大多數經濟學家都同意的20個命題-節錄\"><a href=\"#大多數經濟學家都同意的20個命題-節錄\" class=\"headerlink\" title=\"大多數經濟學家都同意的20個命題(節錄)\"></a>大多數經濟學家都同意的20個命題(節錄)</h3><ol start=\"2\">\n<li>財政政策(如減稅，政府支出增加)對一個未達充分就業的經濟有顯著的刺激效果(90%)</li>\n<li>領現金比等值的實物補貼更能提高領受者的福利水準(84%)</li>\n<li>巨額的預算赤字對經濟有不利影響(83%)</li>\n<li>最低工資使青年人與低技能勞工的失業增加(79%)</li>\n<li>政府應往「負所得稅」的方向改造福利制度(79%)</li>\n</ol>\n<h2 id=\"誘因與行為\"><a href=\"#誘因與行為\" class=\"headerlink\" title=\"誘因與行為\"></a>誘因與行為</h2><h3 id=\"機會成本（opportunity-costs）\"><a href=\"#機會成本（opportunity-costs）\" class=\"headerlink\" title=\"機會成本（opportunity costs）\"></a>機會成本（opportunity costs）</h3><ul>\n<li>決策時關心的成本   </li>\n<li>某項選擇的機會成本，是指資源若改作其他用途時，所能產生的最大價值  </li>\n<li>新藥開發<ul>\n<li>不應上市卻上市</li>\n<li>應上市而未上市</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"邊際（marginal）思考\"><a href=\"#邊際（marginal）思考\" class=\"headerlink\" title=\"邊際（marginal）思考\"></a>邊際（marginal）思考</h3><ul>\n<li>只考慮成本、效益<strong>變化</strong>，即為邊際效益及<span class=\"exturl\" data-url=\"aHR0cHM6Ly90dy5rbm93bGVkZ2UueWFob28uY29tL3F1ZXN0aW9uL3F1ZXN0aW9uP3FpZD0xNjA4MDkxNzA3Mzc5\">邊際成本<i class=\"fa fa-external-link-alt\"></i></span><ul>\n<li>廠商要不要多生產一單位商品？</li>\n<li>要不要多吃一份冰淇淋？</li>\n</ul>\n</li>\n<li>不計算<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JUIyJTg5JUU2JUIyJUExJUU2JTg4JTkwJUU2JTlDJUFD\">沉沒成本<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>不計算決策無法改變的成本</li>\n</ul>\n<h2 id=\"經濟學家如何思考？\"><a href=\"#經濟學家如何思考？\" class=\"headerlink\" title=\"經濟學家如何思考？\"></a>經濟學家如何思考？</h2><p>經濟學家是一群說故事的人<br>各種經濟學理論就是一個個不同的故事，用來解釋社會現象<br>不同的故事會引申出不同的寓意（政策）</p>\n<h3 id=\"假設-Assumption-與模型-Model\"><a href=\"#假設-Assumption-與模型-Model\" class=\"headerlink\" title=\"假設(Assumption)與模型(Model)\"></a>假設(Assumption)與模型(Model)</h3><ul>\n<li>經濟學家習慣用假設和模型來說故事<ul>\n<li>個人、理性、自利</li>\n<li>依故事需要增加假設</li>\n<li>用來簡化現實</li>\n<li>依目的使用不同的假設和模型</li>\n<li>遊戲(模擬XX)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"視覺模型：經濟循環流程圖-Circular-flow-Diagram\"><a href=\"#視覺模型：經濟循環流程圖-Circular-flow-Diagram\" class=\"headerlink\" title=\"視覺模型：經濟循環流程圖 (Circular-flow Diagram)\"></a>視覺模型：經濟循環流程圖 (Circular-flow Diagram)</h3><p><img data-src=\"http://www2.hchs.hc.edu.tw/blog/gallery/20/%E7%B6%93%E6%BF%9F%E6%B4%BB%E5%8B%95%E5%BE%AA%E7%92%B0%E6%B5%81%E7%A8%8B%E5%9C%96.png\" alt=\"\"></p>\n<h3 id=\"數學與曲線：生產可能線-Production-Possibility-Frontier\"><a href=\"#數學與曲線：生產可能線-Production-Possibility-Frontier\" class=\"headerlink\" title=\"數學與曲線：生產可能線 (Production Possibility Frontier)\"></a>數學與曲線：生產可能線 (Production Possibility Frontier)</h3><p><img data-src=\"/img/ECO/ppf.png\" alt=\"\"></p>\n<ul>\n<li>生產要素（factors of production）數量和生產技術固定時，能生產的各種商品最大數量的組合</li>\n<li>生產可能線凹向原點，代表邊際成本遞增</li>\n<li>PPF 的<strong>斜率絕對值</strong>是多生產一單位米的<strong>機會成本</strong></li>\n<li>用 PPF 描述<ul>\n<li>人口增加</li>\n<li>技術進步</li>\n<li>失業增加</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相關性-relation-與因果關係-causality\"><a href=\"#相關性-relation-與因果關係-causality\" class=\"headerlink\" title=\"相關性(relation) 與因果關係(causality)\"></a>相關性(relation) 與因果關係(causality)</h3><p>相關性不代表因果關係     </p>\n<ul>\n<li>遺漏變數<ul>\n<li>裙子長度與可樂銷售量</li>\n<li>學歷和薪水</li>\n<li>出席率和學期成績(?)</li>\n</ul>\n</li>\n<li>反向因果<ul>\n<li>警察人數與犯罪率</li>\n</ul>\n</li>\n<li>時間先後不能決定誰是因，誰是果<ul>\n<li>買嬰兒用品在先，嬰兒出生在後</li>\n</ul>\n</li>\n</ul>\n<p>為何高學歷攤販的利潤較高？</p>\n<h2 id=\"生產和需求\"><a href=\"#生產和需求\" class=\"headerlink\" title=\"生產和需求\"></a>生產和需求</h2><p>交易  </p>\n<ul>\n<li>使人們專業化生產具比較利益的產品，所以交易可以使每個人獲利</li>\n<li>若雙方要能同時獲利，則價格會位於雙方的機會成本之間</li>\n<li>絕大多數經濟學家支持自由貿易  </li>\n<li>假設市場完全競爭<ul>\n<li>產品一模一樣</li>\n<li>沒有任何一個買者或賣者可以影響市場價格</li>\n</ul>\n</li>\n</ul>\n<p>生產可能線  </p>\n<ul>\n<li>斜率代表多生產一單位 X 要犧牲多少 Y</li>\n<li>生產可能線為負斜率</li>\n<li>邊際成本遞增 → PPF 凹向原點</li>\n</ul>\n<p>邊際價值  </p>\n<ul>\n<li>多消費這單位商品帶來的滿足相當於多少錢</li>\n<li>邊際價值遞減</li>\n<li>vs 需求曲線 <img data-src=\"/img/ECO/mgd.png\" alt=\"\"></li>\n<li>這兩條線意義不同，但形狀完全相同。我們無法知道邊際價值線，但我們可以觀察到消費者的需求曲線</li>\n</ul>\n<p>需求曲線移動的原因 <img data-src=\"/img/ECO/dline.png\" alt=\"需求的改變\">  </p>\n<ul>\n<li>所得</li>\n<li>相關產品價格(替代品，互補品)</li>\n<li>嗜好</li>\n<li>預期心理</li>\n<li>買者人數(市場需求由個別需求加總)</li>\n</ul>\n<p>供給曲線移動的原因  </p>\n<ul>\n<li>成本</li>\n<li>技術</li>\n<li>預期心理</li>\n<li>賣者人數</li>\n</ul>\n<p>正常財：商品需求隨所得減少而減少<br>劣等財：商品需求隨所得增加而減少(公車)  </p>\n<p>範例：<br>假設桃花源的桃子供給和需求如下<br>QS = 50P；QD = 300 - 100P<br>價格與數量的單位分別為元/公斤和萬公斤<br>均衡價格與數量為何？<br>由於今年沒有天災侵襲桃花源，使得在每個價格之下桃子的供給量均增加 150 萬公斤<br>請問桃子的供給為何？<br>桃子的均衡價格和數量各為何？<br><img data-src=\"/img/ECO/momo.png\" alt=\"政府\"></p>\n<h2 id=\"彈性\"><a href=\"#彈性\" class=\"headerlink\" title=\"彈性\"></a>彈性</h2><ul>\n<li>價格改變使量大幅變動：彈性大(斜率小)<ul>\n<li>以1為標準    </li>\n<li>無需求彈性時，價格上漲時需求量下降少，收益增加</li>\n<li>有需求彈性時，價格上漲時需求量下降多，收益減少</li>\n</ul>\n</li>\n<li>影響需求彈性的因素<ul>\n<li>替代品的多寡</li>\n<li>必需品(無彈性) vs. 奢侈品(有彈性)</li>\n<li>市場範圍<ul>\n<li>冰淇淋(無彈性) vs. 香草冰淇淋(有彈性)</li>\n</ul>\n</li>\n<li>時間長短<ul>\n<li>若油價上漲，需求會愈來愈有彈性 → 換省油車，坐捷運…</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>影響供給彈性的因素<ul>\n<li>時間長短(主要因素，生產需要時間)</li>\n<li>變動產量的難易度(豪宅)</li>\n<li>目前供給量<ul>\n<li>通常有最大產能的限制</li>\n<li>目前供給量高，彈性小</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>公式：需求彈性 = 需求量變動比 / 價格變動比</li>\n<li>公式(中點法)：需求彈性 = ((Q2-Q1)/(Q2+Q1)/2) / ((P2-P1)/(P2+P1)/2)</li>\n<li>所得彈性：所得變動時，量的變化程度</li>\n<li>彈性若不因價格改變，則需求/供給線為曲線</li>\n<li>Example<ul>\n<li>使用新品種稻米，使供給過多，價格下降，因稻米需求彈性小，收益減少</li>\n<li>政策：不要種太多<ul>\n<li>以消費者利益減少為代價</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>如何有效地讓民眾節約用水？調漲水費是否能「有效的」節約用水？<br>水是必需品，彈性小，因此提高水費對減少用水量的效果有限？</p>\n<p>誰有販毒的比較利益？為什麼黑道有販毒的比較利益？黑道為什麼不賣香菸或咖啡？<br>加強禁毒使毒販數量減少，供給減少使毒品價格上升，交易數量減少。<br>毒品的需求彈性很小，價格上升，需求量減少不多，毒販總收入（毒品總支出）增加。<br>政府又不管毒品市場的交易，黑道有很大的誘因來接管，維持交易秩序。</p>\n<p>有人說：如果需求彈性很小，調漲租金可使房東總收益提高，房東就會提高租金來彌補損失。<br>這是一種對需求彈性常見的誤解。價格上升時房東總收益會增加，並不代表房東「有辦法」提高租金。房租是由市場供需決定，而不是由房東來決定。否則，房東何必等到需求減少再來提高房租？</p>\n<h2 id=\"價格管制與數量管制\"><a href=\"#價格管制與數量管制\" class=\"headerlink\" title=\"價格管制與數量管制\"></a>價格管制與數量管制</h2><p>政府管制價格或數量的效果    </p>\n<ul>\n<li>不具約束力：沒有效果</li>\n<li>具約束力：過剩或短缺 → 排隊、黑市、濫權 …</li>\n<li>Ex. 最低工資，油價，</li>\n</ul>\n<p>數量管制</p>\n<ul>\n<li>醫師(90%↑)、律師(8%)、會計師(18%)執照考試</li>\n<li>（有效的）數量管制使交易量減少，價格上升</li>\n<li>證照制度保障了職業的薪水</li>\n</ul>\n<h2 id=\"稅負\"><a href=\"#稅負\" class=\"headerlink\" title=\"稅負\"></a>稅負</h2><p>「稅是我們為了社會文明化所付出的代價」</p>\n<ul>\n<li><p>法定稅負歸屬和實際稅負歸屬無關</p>\n<ul>\n<li>消費者和供給者各負擔部分稅金</li>\n<li>消費者（供給者）負擔稅金的比例大小與其價格彈性有關：彈性相對大者負擔比例較小<ul>\n<li>彈性小者較難離開市場</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>課稅會壓抑市場活動</p>\n<ul>\n<li>交易量減少，無法實現所有的市場利得</li>\n</ul>\n</li>\n<li><p>2005.7 勞退新制 (楊子霆、駱明慶（2008）)</p>\n<ul>\n<li>強制雇主必須按月提撥勞工薪資的 6% 作為退休金<ul>\n<li>新制實行後才取得現職工作的勞工，新制使其薪資減少 5.86%</li>\n</ul>\n</li>\n<li>新制帶來的退休金成本似乎完全轉嫁給勞工<ul>\n<li>相對於勞動需求，勞動供給彈性相對較小</li>\n<li>相對於雇主，勞工的議價能力較小</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>罰娼？罰嫖？</p>\n<ul>\n<li>誰的彈性較小？</li>\n<li>什麼才是真正需要討論的問題？</li>\n</ul>\n</li>\n<li><p>器官市場   </p>\n<ul>\n<li>金額為零的價格上限</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>價、量管制<ul>\n<li>QD＝200－5P；QS＝5P</li>\n<li>原始 P = 20, Q = 100</li>\n<li>量管制：管制數量為 80<ul>\n<li>Q=80 → P=24</li>\n<li>結果類似課8元的稅</li>\n</ul>\n</li>\n<li>價管制：管制價格為 16<ul>\n<li>P=16 → Q=80</li>\n<li>結果類似8元的補貼</li>\n</ul>\n</li>\n<li>對廠商課從量稅 T＝8<ul>\n<li>P＝24, Q＝80</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>堅定的信念、正義感等好東西應該「透過接觸各種不一樣的想法」建立，而非由某些人傳授</p>\n<h2 id=\"市場與效率\"><a href=\"#市場與效率\" class=\"headerlink\" title=\"市場與效率\"></a>市場與效率</h2><p>總剩餘最大的情形    </p>\n<ul>\n<li>願付價格較高者被消費</li>\n<li>生產成本較低者被生產</li>\n<li>總剩餘：供給曲線之上，需求曲線之下的面積</li>\n<li><img data-src=\"/img/ECO/santa.png\" alt=\"\"></li>\n<li>S_santa = 100000，等同免費提供，供給向右平移</li>\n<li><img data-src=\"/img/ECO/santa2.png\" alt=\"\"></li>\n</ul>\n<p>課稅   </p>\n<ul>\n<li>若稅過高<ul>\n<li>價格上升，某些購買者的消費者剩餘變負數，不會交易→消失的交易量及利得</li>\n<li>課稅優於價量管制：可獲得稅收，沒有分配的問題(由市場決定)</li>\n<li><img data-src=\"/img/ECO/bc.png\" alt=\"課稅 and 價量管制\"></li>\n</ul>\n</li>\n<li><strong>彈性愈大，無謂損失愈大</strong></li>\n<li>拉弗曲線(Laffer Curve)<ul>\n<li>在單位稅額增加的情況下</li>\n<li>稅收金額先增後減</li>\n<li>無謂損失與單位稅額的平方成正比</li>\n</ul>\n</li>\n<li>減稅是為了增加勞動供給(供給面經濟學)<ul>\n<li>也會影響創業意願</li>\n</ul>\n</li>\n</ul>\n<p>補貼  </p>\n<ul>\n<li>彈性相對大者受益較小</li>\n<li><img data-src=\"/img/ECO/subsidy.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"課外：如何表達想法\"><a href=\"#課外：如何表達想法\" class=\"headerlink\" title=\"課外：如何表達想法\"></a>課外：如何表達想法</h3><ul>\n<li>前置作業：澄清問題</li>\n<li>有效率的討論<ul>\n<li>議程決定</li>\n<li>先形成共識再討論細節</li>\n<li>控制討論進度</li>\n</ul>\n</li>\n<li>呈現結論<ul>\n<li>建立大綱</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"國際貿易\"><a href=\"#國際貿易\" class=\"headerlink\" title=\"國際貿易\"></a>國際貿易</h2><ul>\n<li>假設本國無法影響國際價格<ul>\n<li>出口商品：生產者獲利，消費者損失(總 獲利&gt;損失)</li>\n<li>進口商品：消費者獲利，生產者損失(總 獲利&gt;損失)</li>\n</ul>\n</li>\n<li>其他好處<ul>\n<li>消費產品種類增加</li>\n<li>規模經濟，成本減低</li>\n<li>競爭提高</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>關稅<ul>\n<li><img data-src=\"/img/ECO/guan.png\" alt=\"\"></li>\n<li>稅收：G，無謂損失：F+H</li>\n</ul>\n</li>\n<li>配額<ul>\n<li>超過配額之外的進口或出口將被禁止或被徵收高額關稅</li>\n<li>配額的發放有可能是根據申請，有可能是根據經驗分配給一些國營的外貿公司，這些外貿公司在沒有進口或出口能力的情況下就可以將配額賣給有進出口意向但是沒有獲得配額的公司，產生了配額租金(圖中F)</li>\n<li><img data-src=\"/img/ECO/payer.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>政府干預貿易的目的<ul>\n<li>保護國內產業發展<ul>\n<li>幼稚產業若值得政府介入，最佳的切入點往往不是貿易，例如：改善金融市場的效率</li>\n<li>政治勢力大的會獲選</li>\n</ul>\n</li>\n<li>保護國內就業<ul>\n<li>總就業量未必增加</li>\n<li>國與國之間相互牽動，可能導致「惡性循環」</li>\n</ul>\n</li>\n<li>貿易公平<ul>\n<li>傾銷：以不正常的低廉價格出口其產品至他國<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dpa2kubWJhbGliLmNvbS96aC10dy8lRTYlOEUlQTAlRTUlQTQlQkElRTYlODAlQTclRTUlQUUlOUElRTQlQkIlQjc=\">掠奪性定價<i class=\"fa fa-external-link-alt\"></i></span>：要成功，必須是易出難進的產業</li>\n</ul>\n</li>\n<li>環保與人權<ul>\n<li>血汗工廠、童工</li>\n<li>環保議題</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"外部性\"><a href=\"#外部性\" class=\"headerlink\" title=\"外部性\"></a>外部性</h2><ul>\n<li>如何達到效率<ul>\n<li>外部性內部化<ul>\n<li>讓私人[成本/效益]和社會[成本/效益]相等</li>\n</ul>\n</li>\n<li>正外部性：技術外溢<ul>\n<li>專利權，研發補貼</li>\n</ul>\n</li>\n<li>負外部性：汽油<ul>\n<li>車禍，汙染，交通</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>外部性內部化  </p>\n<ol>\n<li>課稅或補貼(以政府為基礎)</li>\n</ol>\n<ul>\n<li>管制，命令<ul>\n<li>法律    </li>\n</ul>\n</li>\n<li>對污染課稅(Pigouvian Tax，皮古稅) 優於對商品本身課稅<ul>\n<li>可以明顯減少外部性造成的損害</li>\n<li><img data-src=\"/img/ECO/waytotax.png\" alt=\"\"></li>\n</ul>\n</li>\n<li>汙染排放權<ul>\n<li>新的稀少性資源</li>\n<li>政府給三家廠商各 50 單位汙染許可</li>\n<li>可交易汙染排放權</li>\n</ul>\n</li>\n<li>課稅：定出汙染的價格</li>\n<li>排放權：定出汙染量</li>\n</ul>\n<p>2.私人解決方法(以市場為基礎)</p>\n<ul>\n<li>若財產權定義明確，外部性就會內部化，政府不必然需要介入  </li>\n<li>Coase Theorem  <ul>\n<li>外部性的存在和多寡取決於雙方的決定</li>\n<li>只要清楚界定財產權，使雙方能訂定和執行契約，不用管制就能得到有效率的結果</li>\n<li>問題不在外部性，而在<strong>交易成本(協議的過程)</strong></li>\n</ul>\n</li>\n<li>Ex 工廠 v. 診所    <ul>\n<li>工廠的噪音每年造成診所 80 萬元損害</li>\n<li>工廠可花 40 萬元清除汙染</li>\n<li>診所可花 20 萬元加裝隔音設備</li>\n<li>皮古: 課 80 萬元汙染稅會得到有效率的結果</li>\n<li>生產效益 X<ul>\n<li>X＞20 → 生產,不清噪音,裝隔音牆</li>\n<li>X＜20 → 不生產</li>\n</ul>\n</li>\n<li>課稅的結果<ul>\n<li>X＞40 → 生產並清除噪音</li>\n<li>X＜40 → 不生產, 居民不會裝隔音牆</li>\n<li>只要 X 大於 20 課噪音稅的結果皆無效率</li>\n</ul>\n</li>\n<li>若居民有免於噪音的權利<ul>\n<li>協商的結果：不論 X 是多少結果都有效率</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Example  </p>\n<ul>\n<li>多元成家<ul>\n<li>「伴侶制」的爭議</li>\n<li>什麼才真正影響婚姻或伴侶關係是否穩固？</li>\n</ul>\n</li>\n<li>片面離婚 v. 兩願離婚<ul>\n<li>研究的結果：離婚率沒差</li>\n<li>只要「財產權」定義明確，不會影響協商結果</li>\n<li>但財產權的歸屬會影響財富的分配</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PW53SVVmTHR0ZDBB\">餐廳禁菸<i class=\"fa fa-external-link-alt\"></i></span><ul>\n<li>外部性的觀點</li>\n<li>財產權與自由的觀點</li>\n<li>交易成本</li>\n<li>把餐廳當成「家」來看，業主可以決定是否禁煙 </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"公共財\"><a href=\"#公共財\" class=\"headerlink\" title=\"公共財\"></a>公共財</h2><ul>\n<li>排他性 Excludability</li>\n<li>消費互斥性 Rivalry<ul>\n<li>一人使用後其他人無法消費/滿足水準降低</li>\n</ul>\n</li>\n<li>準公共財：排他，不互斥<ul>\n<li>有線電視、俱樂部會員</li>\n</ul>\n</li>\n<li>公有資源：互斥，不排他<ul>\n<li>海裡的魚、乾淨的空氣、稀有動物</li>\n</ul>\n</li>\n<li>公共財：不互斥，不排他<ul>\n<li>國防、基礎科學、消除貧窮</li>\n<li>數學證明不能申請專利(真正的open source) </li>\n</ul>\n</li>\n</ul>\n<p>公共財的特性  </p>\n<ul>\n<li>搭便車(Free-rider)<ul>\n<li>不付出代價，享受利益</li>\n<li>天氣狀況會顯著的影響投票率</li>\n<li>集會遊行：就算不參加也可能獲得好處</li>\n<li>解決：外部效益內部化<ul>\n<li>補貼／課稅</li>\n<li>組成管理委員會（政府）</li>\n<li>廣播：廣告</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>共有資源的悲劇<ul>\n<li>不考慮外部性的情況下使用公共財，使大家都得不到好處</li>\n<li>若成為私有財<ul>\n<li>湖有主人時湖主得利，湖是共有資源時則沒有任何人得利</li>\n</ul>\n</li>\n<li>學生都偏好差不多，喜歡上課品質較佳的課程<ul>\n<li>選課制度：想上就上，無限加簽</li>\n<li>上課品質由老師品質和上課人數決定：上課人數愈多，上課品質愈差</li>\n<li>若 A、B 兩班人數相同但 A 班老師品質較佳，B 班學生會往 A 班移動，均衡時兩班上課品質會一樣「好」</li>\n<li>學生除了上課之外，還可以選擇宅在家裡或宿舍打 LOL。如果上課比打 LOL 快樂，學生就會出門去上課，造成上課品質下降；反之學生就會翹課打魔獸，上課品質將提高。結果：每堂課的品質大概就和學生打 LOL 的快樂程度相當</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>財產權定義明確就會有效率</strong><ul>\n<li>辛巴威如何保護大象？<ul>\n<li>讓村民擁有大象</li>\n<li>村民有誘因保護大象免於盜獵者的傷害</li>\n<li>大象數量開始增加，村民生活也得到改善</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>邊際價值線：垂直加總</li>\n</ul>\n<h2 id=\"稅制\"><a href=\"#稅制\" class=\"headerlink\" title=\"稅制\"></a>稅制</h2><p>無謂損失  </p>\n<ul>\n<li>稅扭曲生產需求決策</li>\n<li>手續成本</li>\n</ul>\n<p>消費稅：可鼓勵儲蓄，有助於投資及經濟成長  </p>\n<p>收稅的原則   </p>\n<ul>\n<li>受益原則(從政府服務獲得的利益)</li>\n<li>支付能力原則(垂直公平、水平公平)</li>\n</ul>\n<h2 id=\"生產與成本\"><a href=\"#生產與成本\" class=\"headerlink\" title=\"生產與成本\"></a>生產與成本</h2><p>會計利潤：不排除內隱成本<br>經濟利潤：排除內隱成本</p>\n<ul>\n<li><p>邊際產出先遞增再遞減(產出不可能無限增加)</p>\n</li>\n<li><p>邊際成本先遞減(規模經濟、專業化)再遞增(協調整合問題)</p>\n<ul>\n<li>邊際成本 MC＝ΔC／ΔQ</li>\n</ul>\n</li>\n<li><p>AC(單位成本)＝AFC(單位固定成本)＋AVC(單位變動成本)</p>\n<ul>\n<li>AFC 遞減</li>\n<li>AVC、AC 為 U 型</li>\n</ul>\n</li>\n<li><p>MC 通過 AVC 和 AC 的最低點</p>\n</li>\n<li><p>政府補貼漁業用油</p>\n<ul>\n<li>變動成本的變動</li>\n<li>AC、MC 皆向下移動</li>\n</ul>\n</li>\n<li><p>政府給漁夫現金補貼每人 5000 元</p>\n<ul>\n<li>固定成本減少</li>\n<li>AC 向下移動</li>\n<li>MC 不變</li>\n</ul>\n</li>\n<li><p>生產函數 $Q = \\sqrt{KL} $</p>\n</li>\n<li><p>要素價格 $P_L = 1, P_K = 100$</p>\n</li>\n<li><p>若 K＝2, Q=30，短期成本？(只能調整 L)</p>\n<ul>\n<li>Q = $\\sqrt{2L} $</li>\n<li>C = Q^2 / 2 + 200 </li>\n<li>短期邊際成本？<ul>\n<li>ΔC/ΔQ = (Q^2 / 2 + 200)dQ = Q = $\\sqrt{2L} $ </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>長期成本？(L、K 皆可變動)</p>\n<ul>\n<li>K=3, L=300</li>\n<li>C=600</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"競爭市場\"><a href=\"#競爭市場\" class=\"headerlink\" title=\"競爭市場\"></a>競爭市場</h2><p><strong>廠商極大化利潤</strong>  </p>\n<ul>\n<li><p>產量在 邊際成本MC = 邊際收入MR 時，利潤最大</p>\n</li>\n<li><p>適用於所有市場結構</p>\n</li>\n<li><p>競爭市場(包含完全競爭、獨占性競爭)</p>\n<ul>\n<li>眾多買方、賣方    </li>\n<li>長期無進入、退出障礙(短期無法退出)</li>\n<li>廠商利潤 = 0<ul>\n<li><strong>P = AC</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>完全競爭市場  </p>\n<ul>\n<li>同質商品</li>\n<li>買方、賣方均為價格接受者(不能影響價格)<ul>\n<li><strong>邊際收入MR = 市場價格P(價格固定) = 邊際成本MC</strong><ul>\n<li><strong>供給線 = 邊際成本線</strong></li>\n<li><strong>P = MC → 總剩餘最大(其他市場結構都不是)</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>個別廠商的供給    <ul>\n<li>若短期 P＜Min AVC(收益小於變動成本)，廠商將<strong>暫時歇業(無法退出)</strong></li>\n<li>若長期 P＜Min ATC(收益小於總成本)，廠商將退出市場</li>\n<li>供給線分別為 AVC 上方的 MC 線, ATC 上方的 MC 線</li>\n</ul>\n</li>\n<li>總體<ul>\n<li>短期均衡：P = 市場價格<ul>\n<li>依照目前市場價格生產(利潤最大)，未必是最低平均成本</li>\n</ul>\n</li>\n<li>長期均衡：P = MC = ATC<ul>\n<li>若價格&gt;最低平均成本ATC，則供給增加(廠商加入市場)，使市場價格降到ATC(最佳效率，且此時利潤 = 0) <img data-src=\"/img/ECO/longrun-supply.png\" alt=\"\"></li>\n<li>長期供給曲線為水平線(價格固定)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>需求線為水平(價格接受者)</li>\n<li>成本遞增產業  <ul>\n<li>產量增加導致單位產品成本提高(生產資源有限，如土地、員工)</li>\n<li>長期供給曲線斜率正</li>\n</ul>\n</li>\n<li>為何零利潤<ul>\n<li>計算成本時已包含機會成本</li>\n</ul>\n</li>\n</ul>\n<p>Example</p>\n<ul>\n<li>個別廠商的成本函數<ul>\n<li>AC＝（100／q）＋q</li>\n<li>MC＝2q</li>\n</ul>\n</li>\n<li>市場需求<ul>\n<li>Q＝8000－50P</li>\n</ul>\n</li>\n<li>目前廠商家數為 900</li>\n<li>短期均衡<ul>\n<li>個別供給：MC = P, q＝P／2</li>\n<li>市場供給：Q＝900q = 450P</li>\n<li>P＝16, Q＝7200, q＝8</li>\n<li>ΠC＝q ( P－AC )＝－36</li>\n</ul>\n</li>\n<li>長期均衡<ul>\n<li>零利潤且利潤極大<ul>\n<li>P＝AC＝MC</li>\n</ul>\n</li>\n<li>q＝10, P＝20, Q＝7000</li>\n<li>廠商數 N＝700 </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"獨占\"><a href=\"#獨占\" class=\"headerlink\" title=\"獨占\"></a>獨占</h2><p>獨占市場  </p>\n<ul>\n<li>單一賣方</li>\n<li>無替代品</li>\n<li>進入障礙高</li>\n<li>供給者為價格制定者<ul>\n<li>沒有供給曲線</li>\n<li>負斜率的需求曲線</li>\n<li>廠商極大化利潤: 邊際收益等於邊際成本</li>\n</ul>\n</li>\n<li>MR(邊際收益)線必在需求線下方<ul>\n<li>價格 &gt; 邊際收益 = 邊際成本(∵需求線負斜率)<ul>\n<li>完全競爭時：價格=邊際成本</li>\n<li>會造成無謂損失</li>\n<li>生產量 &lt; 使總剩餘最大的生產量</li>\n</ul>\n</li>\n<li>需求 P = a - bQ</li>\n<li>收益 TR = aQ - bQ^2</li>\n<li>邊際收益 MR = 收益微分 TR’ = a - 2bQ </li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/ECO/solution.png\" alt=\"\">  </p>\n<ul>\n<li><p>X: 消費者剩餘</p>\n</li>\n<li><p>Y: 廠商</p>\n</li>\n<li><p>Z: 損失</p>\n</li>\n<li><p>春花公司是桃花源棉被產業的獨占廠商,其總成本函數為TC(q) = 20q+100, q 為春花公司的棉被產量。桃花源的棉被需求為 Q = 100-2P</p>\n<ul>\n<li>均衡時 MR = MC<ul>\n<li>P = 50-0.5Q , MR = PQ dQ = 50-Q</li>\n<li>MC = TC dq = 20</li>\n<li>Q = 30</li>\n</ul>\n</li>\n<li>無謂損失<ul>\n<li>有效率時，P = MC(使總剩餘最大) = 20</li>\n<li>Q: 30 → 60, P: 35 → 20</li>\n<li>(60-30)*(35-20)/2 = 225<ul>\n<li>此時MR = -10，利潤 = -100</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>差別取價  </p>\n<ul>\n<li>同樣的商品以不同的價格出售</li>\n<li>條件<ul>\n<li>能分辨不同偏好的消費者</li>\n<li>消費者難以轉售套利</li>\n<li>有某種程度的獨占力</li>\n</ul>\n</li>\n<li>Example<ul>\n<li>精裝書</li>\n<li>獎學金</li>\n<li>折價券</li>\n</ul>\n</li>\n<li>完全差別取價可以使市場有效率，但所有剩餘都是生產者的</li>\n</ul>\n<h2 id=\"壟斷性競爭\"><a href=\"#壟斷性競爭\" class=\"headerlink\" title=\"壟斷性競爭\"></a>壟斷性競爭</h2><p>壟斷性競爭  </p>\n<ul>\n<li>眾多賣方</li>\n<li>產品差異化<ul>\n<li>廠商為了維持其獨占力，從事各種手段的競爭，讓自己的產品和別人不一樣<ul>\n<li>品牌、知覺品質，廣告、代言、服務、區位 …</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>長期平衡<ul>\n<li>若有利潤，廠商加入，單一廠商需求線左移</li>\n<li>若無利潤，廠商退出，單一廠商需求線右移</li>\n<li>平衡：ATC 和 需求 相切<ul>\n<li>P = ATC &gt; MR = MC</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>無謂損失  </p>\n<ul>\n<li>個別廠商產量較少</li>\n<li>價格較高  </li>\n<li>願付價格高於邊際成本的部分（產量並非最有效率產量）</li>\n<li>廠商家數不是最適（單就生產成本而言，同樣的產量、同樣的成本結構下，競爭市場的廠商數較少，生產成本較低；但產品的多樣性是好事，會使剩餘增加）</li>\n</ul>\n<p>成本函數  </p>\n<ul>\n<li>TC＝56－2Q＋3Q2<ul>\n<li>MC＝－2＋6Q</li>\n</ul>\n</li>\n<li>短期時廠商面對的需求<ul>\n<li>P ＝ 40－0.5Q<ul>\n<li>MR = 40 - Q</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>長期<ul>\n<li>需求可平移 P ＝ A－0.5Q</li>\n<li>邊際收益<ul>\n<li>TR＝Q（A－0.5Q）</li>\n<li>MR＝A－Q</li>\n</ul>\n</li>\n<li>利潤極大 MR＝MC<ul>\n<li>A－Q ＝－2＋6Q</li>\n</ul>\n</li>\n<li>零利潤 TR＝TC<ul>\n<li>Q(A－0.5Q)＝56－2Q＋3Q2</li>\n<li>A－0,5Q ＝56／Q－2＋3Q</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"寡占與賽局理論\"><a href=\"#寡占與賽局理論\" class=\"headerlink\" title=\"寡占與賽局理論\"></a>寡占與賽局理論</h2><p>一個賽局必須要描述：玩家、策略、報酬</p>\n<p>Nash 均衡  </p>\n<ul>\n<li>對每一個玩家而言，給定其他玩家的策略，該玩家的策略為最適<ul>\n<li>就每一個可能的結果檢驗</li>\n</ul>\n</li>\n<li>優勢策略<ul>\n<li>不論對手用哪種策略，優勢策略都不會比其他策略差</li>\n</ul>\n</li>\n<li>掠奪性定價</li>\n</ul>\n<p>Cartel 的形成與崩潰  </p>\n<ul>\n<li>勾結協議：A、B 各生產 30，利潤各為 $900<ul>\n<li>給定 A 遵守協議，B 偷偷將產量調整為 40</li>\n<li>總供給量 70，價格 $35</li>\n<li>ΠB = 40（35－10）=1000</li>\n<li>兩人都想作弊！</li>\n</ul>\n</li>\n<li>OPEC</li>\n</ul>\n<p>囚犯兩難     </p>\n<ul>\n<li>限制產量對 A、B 都有利，但不是 Nash 均衡<ul>\n<li>削價競爭</li>\n<li>軍備競賽</li>\n<li>廣告戰爭</li>\n<li>共有資源的悲劇</li>\n</ul>\n</li>\n<li>分組作業<ul>\n<li>嚴格標準可以使學生努力作報告, 也能讓學生得到較高的報酬</li>\n<li>如果教授使用寬鬆標準,將會使學生陷入囚犯兩難</li>\n</ul>\n</li>\n</ul>\n<p>重複賽局  </p>\n<ul>\n<li>如果玩無窮多局，較有可能合作<ul>\n<li>Trigger Strategy</li>\n<li>Tit for Tat(以眼還眼)</li>\n<li>各式各樣的均衡</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"生產要素市場\"><a href=\"#生產要素市場\" class=\"headerlink\" title=\"生產要素市場\"></a>生產要素市場</h2><p>廠商雇用要素，生產商品，追求最大利潤  </p>\n<ul>\n<li>產量<ul>\n<li>MR＝MC </li>\n</ul>\n</li>\n<li>要素雇用量<ul>\n<li>在完全競爭市場<ul>\n<li>P = MC 同乘 MPL(勞動邊際產量)<ul>\n<li>邊際成本 = 工資 / 勞動邊際產量</li>\n</ul>\n</li>\n<li>勞動邊際產值VMPL(P*MPL)=工資(W)<!--- 若勞動市場是競爭市場，MFCL(邊際要素成本)＝w（市場工資率）-->  </li>\n</ul>\n</li>\n<li><strong>邊際產量決定於生產函數（技術、其他要素雇用量等）</strong></li>\n<li><strong>邊際收入由商品市場需求和產業結構決定</strong></li>\n<li>引申自產品市場的需求<ul>\n<li>商品需求減少→商品價格降低→勞動需求減少</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><img data-src=\"/img/ECO/labor-market.png\" alt=\"\"></li>\n<li>例：黑死病    <ul>\n<li>勞動供給下降，薪資提高</li>\n</ul>\n</li>\n</ul>\n<p>下列何者不會造成勞動需求曲線的移動  </p>\n<ol>\n<li>產品價格變動</li>\n<li>技術進步<ol start=\"3\">\n<li>技術進步會使勞動需求曲線往右移動</li>\n<li>邊際產量增加 → 勞動需求增加</li>\n</ol>\n</li>\n<li><strong>勞工變得更重視休閒(供給變動？)</strong></li>\n<li>其他要素的供給發生改變</li>\n</ol>\n<p>Q: 假設蛋塔市場是競爭市場,原來處於長期均衡的狀態。某天不知因為什麼緣故,蛋塔的市場需求大幅增加。請問新的長期均衡價格是否有可能高於原來的均衡價格? 為什麼?<br>A: 需求增加使短期市場價格上升,廠商獲得超額利潤。<strong>利潤將吸引其他廠商的加入,廠商競爭雇用生產要素使得廠商的生產成本隨廠商家數增加而增加, 使得新的長期均衡價格較原均衡高</strong>, 而非回跌至原均衡價格。<br>→ 也就是物品的需求線右移，價格提高</p>\n<p>高技術勞動力供給增加使得高技術勞動就業量增加, 工資減少。由於兩種勞動力具有互補關係, 高技術勞動就業量增加將提升低技術勞工的邊際生產力。由廠商勞動需求 = MR x MPL, 低技術勞工的需求將增加, 使該市場的工資率和就業量皆增加</p>\n<p>資本是經濟體系的設備與建築物的存量(stock)  </p>\n<ul>\n<li>租用土地的價格 = 邊際產值</li>\n</ul>\n<h2 id=\"工資差異\"><a href=\"#工資差異\" class=\"headerlink\" title=\"工資差異\"></a>工資差異</h2><p>補償性差異  </p>\n<ul>\n<li>工作環境／條件</li>\n<li>工作的穩定度</li>\n<li>事業成功的機率</li>\n<li>工作者所需的被信賴度</li>\n<li>工作學習的難度</li>\n</ul>\n<p>生產力差異  </p>\n<ul>\n<li>個人特質</li>\n<li>人力資本<ul>\n<li>標籤理論<ul>\n<li>個人生產力是天生的，教育無法提升生產力</li>\n<li>教育的功能是「篩選」</li>\n</ul>\n</li>\n<li>訊號理論<ul>\n<li>用學歷發出有較高能力的訊號</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>歧視<ul>\n<li>許多婦女因為婚育退出勞動市場，因而造成婦女薪資水準較男性低，算不算歧視？</li>\n<li>正確的刻板印象算不算歧視？</li>\n<li>顧客的歧視會影響廠商</li>\n<li>市場會使歧視的行為付出代價</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU4JTg3JUJBJUU3JTgxJUEzJUU1JUE0JTk2JUU3JTlDJTgxJUU0JUJBJUJBIy5FOC44MS5CNy5FNi5BNS5BRA==\">台灣公務員錄取<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"所得分配\"><a href=\"#所得分配\" class=\"headerlink\" title=\"所得分配\"></a>所得分配</h2><blockquote>\n<p>資本主義的根本問題在於無法均富，而社會主義制度的根本問題在於無法均擺脫均貧</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JTgxJTg2JUU1JUI4JUI4JUU2JTg5JTgwJUU1JUJFJTk3JUU1JTgxJTg3JUU4JUFBJUFB\">恆常所得 vs 年所得<i class=\"fa fa-external-link-alt\"></i></span>   </p>\n<p>生命週期(Life cycle)<br>在一生當中, 年輕時所得較低, 隨著年紀漸增、工作經驗豐富之後, 所得會上升, 並在50歲左右達到高峰; 在退休時, 所得開始大幅下降 </p>\n<ul>\n<li><p>衡量單位</p>\n<ul>\n<li>是否計算實物移轉</li>\n<li>個人 v. 家戶</li>\n</ul>\n</li>\n<li><p>衡量指標？</p>\n<ul>\n<li>X 等分差距倍數</li>\n<li>Gini Coefficient</li>\n<li>貧窮線／最低生活費標準（低收入戶）</li>\n</ul>\n</li>\n<li><p>所得分配的意義</p>\n<ul>\n<li>結果論 v. 程序正義</li>\n<li>所得只是個人福利的一部分</li>\n<li>年所得 v. 終身所得</li>\n</ul>\n</li>\n<li><p>Lorenz Curve <img data-src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/5/59/Economics_Gini_coefficient2.svg/1024px-Economics_Gini_coefficient2.svg.png\" alt=\"\"></p>\n<ul>\n<li>實際收入分配曲線</li>\n</ul>\n</li>\n<li><p>Gini Coefficient </p>\n<ul>\n<li>數值從 0 ~ 1，0為完全平等 </li>\n<li>A/(A+B) <img data-src=\"/img/ECO/gini_index.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<p>所得應該怎樣分配  </p>\n<ul>\n<li>效用主義 Utilitarianism<ul>\n<li>極大化社會總效用(滿足程度)</li>\n<li>邊際效用遞減</li>\n<li>重分配的無謂損失</li>\n</ul>\n</li>\n<li>自由主義 Liberalism<ul>\n<li>無知之幕後的社會契約<ul>\n<li>每個人註定要過「某人」的生活，但在無知的帷幕後面，我們不知道自己會投胎成那個人</li>\n<li>Rawls 認為，如果被迫從帷幕背後作選擇，我們會選擇誕生在公平的社會裡</li>\n</ul>\n</li>\n<li>極大化最小值原則</li>\n</ul>\n</li>\n<li>自由人主義 Libertarianism<ul>\n<li>任何人類的互動行為都應該出於雙方的自願和同意</li>\n<li>重視程序公平、個人權利（生命、自由和財產權）與機會均等</li>\n<li>反對結果論的重分配</li>\n<li>懷疑任何可能擴張政府權力的說法</li>\n<li>通常認為自由市場符合程序公平，同時也能達到效率(做得到嗎…)<ul>\n<li>只要程序符合公平，任何結果都應該接受 </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"稅制設計\"><a href=\"#稅制設計\" class=\"headerlink\" title=\"稅制設計\"></a>稅制設計</h2><!--不考?-->\n\n<p>課稅的公平與效率  </p>\n<ul>\n<li><p>公平性</p>\n<ul>\n<li>受益原則</li>\n<li>支付能力原則<ul>\n<li>水平公平：支付能力相同者稅負相同</li>\n<li>垂直公平：支付能力較高者稅負較高</li>\n</ul>\n</li>\n<li>累進性<ul>\n<li>邊際稅率 v. 平均稅率</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>效率性</p>\n<ul>\n<li>無謂損失</li>\n<li>行政成本</li>\n<li>以商品稅為例<ul>\n<li>從效率的觀點，政府應該對彈性較小的商品(日常食物)課較重的稅</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>綜合所得淨額</p>\n<ul>\n<li>所得－各種扣除額</li>\n</ul>\n</li>\n<li><p>邊際稅率</p>\n<ul>\n<li>所得增加 $1 時稅金會增加多少錢</li>\n</ul>\n</li>\n<li><p>平均稅率 = 稅負總額／課稅基礎 = 所得稅／綜合所得淨額</p>\n</li>\n</ul>\n<h3 id=\"遺贈稅與公平\"><a href=\"#遺贈稅與公平\" class=\"headerlink\" title=\"遺贈稅與公平\"></a>遺贈稅與公平</h3><ul>\n<li>侵犯個人財產權，減少財富、階級世襲</li>\n<li>如何規避遺產稅？<ul>\n<li>贈與、人力投資</li>\n<li>財產規劃</li>\n</ul>\n</li>\n<li>2009 年遺贈稅由 50% 調降至 10%<ul>\n<li>降低租稅規避誘因</li>\n<li>吸引資金回流台灣</li>\n</ul>\n</li>\n<li>反對遺贈稅調降<ul>\n<li>降稅增加稅收並非實情</li>\n<li>資金回流有害無益(炒房？)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"中立稅-Neutral-Tax\"><a href=\"#中立稅-Neutral-Tax\" class=\"headerlink\" title=\"中立稅 Neutral Tax\"></a>中立稅 Neutral Tax</h3><ul>\n<li>個人行為無法影響其稅負</li>\n<li>課稅與否不影響決策<ul>\n<li>不會造成無謂損失</li>\n</ul>\n</li>\n<li>定額稅</li>\n<li>對潛在的賺錢能力課稅<ul>\n<li>美貌稅？智力稅？</li>\n<li>男性稅？異性戀稅？</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"消費者選擇理論\"><a href=\"#消費者選擇理論\" class=\"headerlink\" title=\"消費者選擇理論\"></a>消費者選擇理論</h2><ul>\n<li>預算限制 Budget Constraint  <ul>\n<li>消費者買得起的各種消費組合<ul>\n<li>預算限制線的斜率是兩個物品的相對價格  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>效用函數<ul>\n<li>消費商品所得的效用</li>\n</ul>\n</li>\n<li>無異曲線 indifference curve<ul>\n<li>帶給消費者相同滿足程度的曲線</li>\n<li>斜率為邊際替代率 MRS<ul>\n<li>一般為負</li>\n</ul>\n</li>\n<li>不同的無異曲線不會相交</li>\n</ul>\n</li>\n<li>最適選擇點：無異曲線和預算限制線的切點(邊際替代率=相對價格) </li>\n</ul>\n<p>總效果(A→C) = 替代效果(A→B) ＋ 所得效果(B→C) <img data-src=\"/img/ECO/substitute_income.png\" alt=\"\">  </p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHR0LmNjL2Jicy9FY29ub21pY3MvTS4xMjI5NjYwNjg3LkEuRUQ1Lmh0bWw=\">所得效果跟替代效果<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>替代效果<ul>\n<li>固定實質所得，價格變動(相對需求改變)對需求量的影響</li>\n<li>在原本的無異曲線移動(即效用不變)</li>\n</ul>\n</li>\n<li>所得效果<ul>\n<li>固定相對價格，所得變動對需求量的影響</li>\n<li>移動預算限制線</li>\n</ul>\n</li>\n<li>Example: X商品的價格上漲    <ul>\n<li>替代效果<ul>\n<li>X↓, Y↑</li>\n</ul>\n</li>\n<li>所得效果<ul>\n<li>相當於實質所得下降</li>\n<li>正常財↓，劣等財↑</li>\n<li>總效果<ul>\n<li>X 是正常財，X↓</li>\n<li>X 是劣等財，X？</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>季芬財（Giffens）  </p>\n<ul>\n<li>所得效果大於替代效果的劣等財<ul>\n<li>價格越高反而需求量越高</li>\n<li>窮人的主食<ul>\n<li>馬鈴薯、米</li>\n<li>主食漲價時能買其他食品的份量變少</li>\n<li>為了吃飽會買更高比例的主食</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>效用極大化  </p>\n<ul>\n<li>所得休閒模型<ul>\n<li>C:消費, lei:休閒時間</li>\n<li>Utility＝U ( C, lei )</li>\n<li>H: 工時, H＋lei＝T</li>\n<li>工資率w，C＝w．H</li>\n</ul>\n</li>\n<li>預算限制式<ul>\n<li>C＋w．lei＝w．T</li>\n<li>休閒的價格(代價)為 w</li>\n</ul>\n</li>\n<li>工資率上漲(替代效果)<ul>\n<li>消費變得便宜，休閒相對昂貴</li>\n<li>休閒減少，工時增加</li>\n<li>消費增加</li>\n</ul>\n</li>\n<li>所得增加(所得效果)<ul>\n<li>休閒增加，工時減少</li>\n<li>消費增加</li>\n</ul>\n</li>\n<li>總和<ul>\n<li>不確定</li>\n<li>事實證明，工資上升到某程度後，工資率上漲→工時減少<ul>\n<li>所得效果 &gt; 替代效果</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>完全替代  </p>\n<ul>\n<li>無異曲線為斜率為-1的直線</li>\n<li>不是全部買A，就是全部買B<ul>\n<li>1.5個5元換1個10元</li>\n<li>1個10元換2.5個5元</li>\n</ul>\n</li>\n</ul>\n<p>利率是消費的代價 <img data-src=\"/img/ECO/depositrate.png\" alt=\"\">  </p>\n<ul>\n<li>若 r＝0% 消費 $500，儲蓄 $500</li>\n<li>若 r 提高為 50% 消費 $600，儲蓄 $400<ul>\n<li>利率提高，春花儲蓄減少</li>\n</ul>\n</li>\n<li>效用函式為min(消費，儲蓄)<ul>\n<li>替代效果為 0</li>\n</ul>\n</li>\n<li>若消費和儲蓄皆為正常財<ul>\n<li>所得效果使消費增加</li>\n<li>替代效果使消費減少</li>\n<li>因此利率上升時, 春花年輕時的消費可能增加,也可能減少,端看替代效果與所得效果何者影響較大</li>\n</ul>\n</li>\n</ul>\n<p>為何我們喜歡送禮物（和收禮物），而非現金？<br>重點不是禮物是心意…</p>\n<h2 id=\"個體經濟學\"><a href=\"#個體經濟學\" class=\"headerlink\" title=\"個體經濟學\"></a>個體經濟學</h2><h3 id=\"資訊不對稱\"><a href=\"#資訊不對稱\" class=\"headerlink\" title=\"資訊不對稱\"></a>資訊不對稱</h3><ul>\n<li><p>資訊少的一方希望獲得資訊，資訊多的一方希望隱瞞資訊</p>\n</li>\n<li><p>反向選擇  </p>\n<ul>\n<li>市場中商品的平均品質將低於買方的預期</li>\n<li>給定保費，高風險者比低風險者更可能買保險</li>\n<li>減薪後，能力較強員工辭職</li>\n</ul>\n</li>\n<li><p>道德危險</p>\n<ul>\n<li>代理人不恰當的行為</li>\n<li>買了保險後，保戶開始從事更多高風險活動</li>\n</ul>\n</li>\n<li><p>勞工知道自己的生產力,但雇主無法得知,因此雇主不願意付高薪</p>\n<ul>\n<li>反向選擇: 薪水不夠高就無法雇用生產力高的勞工,因此雇主只能雇用到生產力較低的勞工</li>\n<li>道德危險: 員工清楚自己的誘因和行為,但雇主無法完全監控員工的行動。員工可能全心全意工作, 也可能因為損失一個低薪工作的成本不高而偷懶</li>\n<li>只出得起香蕉的公司，只請得起猴子</li>\n</ul>\n</li>\n</ul>\n<p>解決反向選擇  </p>\n<ul>\n<li>有資訊者：放訊（signaling）<ul>\n<li>賣家提供保固或取得有公信力的品質認證</li>\n</ul>\n</li>\n<li>無資訊者：篩選（screening）<ul>\n<li>買家要求保固或檢查報告，或依商譽挑選賣家</li>\n</ul>\n</li>\n<li>勞動市場的放訊和篩選：學歷</li>\n<li>保固期  <ul>\n<li>修車費用由賣家負擔，買家就沒有足夠誘因好好照顧車</li>\n<li>解決了反向選擇，卻帶來道德危險</li>\n</ul>\n</li>\n<li>保險市場的資訊不對稱<ul>\n<li>反向選擇與道德危險</li>\n<li>全民納保的理論基礎</li>\n</ul>\n</li>\n<li>道德危險<ul>\n<li>塔台人員精神耗損極大</li>\n<li>退休後可領 75% 薪水</li>\n<li>適任者與不適任者都想退休</li>\n<li>哪個理論較可能正確？  <ul>\n<li>不適任人員無法退休</li>\n<li>適任人員故意出包以爭取退休<ul>\n<li>飛機相撞次數沒有增加</li>\n<li>錯誤多發生於天候良好、航道不擁擠時</li>\n<li>年資 5－10 年的人員錯誤最多</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"公共選擇-Public-Choice\"><a href=\"#公共選擇-Public-Choice\" class=\"headerlink\" title=\"公共選擇 Public Choice\"></a>公共選擇 Public Choice</h3><ul>\n<li>用經濟學方法研究政治決策過程  </li>\n<li>理性的政治主體（選民、官僚、政黨 …）</li>\n<li>投票行為、競選策略、遊說、憲政制度、官僚決策行為 …</li>\n</ul>\n<p>關於政府的天真想像  </p>\n<ul>\n<li>個人理性自利，但政府永遠追求公益？</li>\n<li>歷史上多少死刑犯是真的做了罪大惡極的事？</li>\n<li>死刑的嚇阻效果</li>\n</ul>\n<p>死刑是雙面刃  </p>\n<ul>\n<li>我們允許政府使用多有效的武器？<ul>\n<li>鞭刑、凌遲、公開處刑、誅九族 …</li>\n</ul>\n</li>\n<li>無知之幕：我們願意讓渡生命權給政府嗎？</li>\n</ul>\n<p>中位數提案  </p>\n<ul>\n<li>二選一：選民各有自己最偏好的立場；選民偏好與自己立場最接近的提案<ul>\n<li>要爭取選票，就要往中間靠攏</li>\n<li>沒有任何其他提案能擊敗中位數提案</li>\n</ul>\n</li>\n</ul>\n<p>arrow paradox<br>投票制度至少應該具備  </p>\n<ol>\n<li>若所有人都認為 A 比 B 好，則 A 應該勝過 B</li>\n<li>遞移性：若 A 贏 B 且 B 贏 C，則應該贏 C</li>\n<li>Condorcet Paradox</li>\n<li>A、B 比較的結果不應受 C 是否存在的影響</li>\n<li>沒有獨裁者</li>\n</ol>\n<p>沒有任何投票制度可以同時具備以上特性<br>→ 議程安排（投票制度）、不相關選項、策略性投票都可能影響選舉結果</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li>經濟學原理，王溢正譯 </li>\n<li>WLLee課堂講義</li>\n</ul>\n",
            "tags": [
                "經濟學"
            ]
        }
    ]
}