[{"title":"C# 程式碼風格指南","url":"/CSharp-codeconvension/","content":"<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvZG90bmV0L2MjL3Byb2dyYW1taW5nLWd1aWRlL2luc2lkZS1hLXByb2dyYW0vY29kaW5nLWNvbnZlbnRpb25z\">原文：C# Coding Conventions (C# Programming Guide)<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"Naming-Conventions\">Naming Conventions</h2>\n<p>若句子太長，可以分段，結尾需為<code>.</code></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> currentPerformanceCounterCategory = <span class=\"keyword\">new</span> System.Diagnostics.</span><br><span class=\"line\">        PerformanceCounterCategory();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Layout-Conventions\">Layout Conventions</h2>\n<ul>\n<li>四空格縮排, tabs 需要存為空格</li>\n<li>一行一個Statement/Declaration</li>\n<li>連續的行中，第二行需要多一個縮排</li>\n<li>方法的宣告和屬性的宣告中至少需要隔一行</li>\n<li>在判斷式中加上括號\n<ul>\n<li><code>if ((val1 &gt; val2) &amp;&amp; (val1 &gt; val3))</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Commenting-Conventions\">Commenting Conventions</h2>\n<ul>\n<li>將程式和註解放在不同行</li>\n<li>註解需以大寫開頭，逗號結尾，與<code>//</code>間隔一個空格</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// The following declaration creates a query. It does not run</span></span><br><span class=\"line\"><span class=\"comment\">// the query.</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Language-Guidelines\">Language Guidelines</h2>\n<ul>\n<li>使用字串插補(String interpolation)來連接短的字串\n<ul>\n<li><code>string displayName = $&quot;&#123;nameList[n].LastName&#125;, &#123;nameList[n].FirstName&#125;&quot;;</code></li>\n</ul>\n</li>\n<li>若要在迴圈中使用字串，使用<code>StringBuilder</code></li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> phrase = <span class=\"string\">&quot;la&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> manyPhrases = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    manyPhrases.Append(phrase);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Implicitly-Typed-Local-Variables\">Implicitly Typed Local Variables</h2>\n<ul>\n<li>若變數的型別很明顯，使用隱式宣告\n<ul>\n<li><code>New</code>, 型別轉換, 基本型別等</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> var1 = <span class=\"string\">&quot;This is clearly a string.&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> var2 = <span class=\"number\">27</span>;</span><br><span class=\"line\"><span class=\"comment\">// =======================</span></span><br><span class=\"line\"><span class=\"built_in\">int</span> var3 = Convert.ToInt32(Console.ReadLine());</span><br><span class=\"line\"><span class=\"built_in\">int</span> var4 = ExampleClass.ResultSoFar();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以在for中使用隱式宣告，但不要在foreach中使用隱式宣告</li>\n</ul>\n<h2 id=\"Arrays\">Arrays</h2>\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Preferred syntax. Note that you cannot use var here instead of string[].</span></span><br><span class=\"line\"><span class=\"built_in\">string</span>[] vowels1 = &#123; <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;e&quot;</span>, <span class=\"string\">&quot;i&quot;</span>, <span class=\"string\">&quot;o&quot;</span>, <span class=\"string\">&quot;u&quot;</span> &#125;;</span><br><span class=\"line\"><span class=\"comment\">// If you use explicit instantiation, you can use var.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> vowels2 = <span class=\"keyword\">new</span> <span class=\"built_in\">string</span>[] &#123; <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;e&quot;</span>, <span class=\"string\">&quot;i&quot;</span>, <span class=\"string\">&quot;o&quot;</span>, <span class=\"string\">&quot;u&quot;</span> &#125;;</span><br><span class=\"line\"><span class=\"comment\">// If you specify an array size, you must initialize the elements one at a time.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> vowels3 = <span class=\"keyword\">new</span> <span class=\"built_in\">string</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\">vowels3[<span class=\"number\">0</span>] = <span class=\"string\">&quot;a&quot;</span>;</span><br><span class=\"line\">vowels3[<span class=\"number\">1</span>] = <span class=\"string\">&quot;e&quot;</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Delegates-委託\">Delegates(委託)</h2>\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Define the type.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">delegate</span> <span class=\"keyword\">void</span> <span class=\"title\">Del</span>(<span class=\"params\"><span class=\"built_in\">string</span> message</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Define a method that has a matching signature.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DelMethod</span>(<span class=\"params\"><span class=\"built_in\">string</span> str</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">&quot;DelMethod argument: &#123;0&#125;&quot;</span>, str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// In the Main method, create an instance of Del.</span></span><br><span class=\"line\"><span class=\"comment\">// Preferred: Create an instance of Del by using condensed syntax.</span></span><br><span class=\"line\">Del exampleDel2 = DelMethod;</span><br><span class=\"line\"><span class=\"comment\">// The following declaration uses the full syntax.</span></span><br><span class=\"line\">Del exampleDel1 = <span class=\"keyword\">new</span> Del(DelMethod);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Using\">Using</h2>\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Method1: try-finally statement with Dispose</span></span><br><span class=\"line\">Font font1 = <span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;Arial&quot;</span>, <span class=\"number\">10.0f</span>);</span><br><span class=\"line\"><span class=\"keyword\">try</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">byte</span> charset = font1.GdiCharSet;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">finally</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (font1 != <span class=\"literal\">null</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ((IDisposable)font1).Dispose();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Method2: Using statement.</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> (Font font2 = <span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;Arial&quot;</span>, <span class=\"number\">10.0f</span>))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">byte</span> charset = font2.GdiCharSet;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"and\">&amp;&amp; and ||</h2>\n<ul>\n<li>用 <code>&amp;&amp;</code> 取代 <code>&amp;</code>, 用 <code>||</code> 取代 <code>|</code>\n<ul>\n<li><code>&amp;&amp;</code> 會 short-circult (即不可能是True時直接return False)</li>\n<li><code>&amp;</code> 會判斷所有條件</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ((divisor != <span class=\"number\">0</span>) &amp;&amp; (dividend / divisor &gt; <span class=\"number\">0</span>))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">&quot;Quotient: &#123;0&#125;&quot;</span>, dividend / divisor);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">&quot;Attempted division by 0 ends up here.&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"New\">New</h2>\n<ul>\n<li>使用new的時候，使用var <code>var instance1 = new ExampleClass();</code></li>\n<li>簡化Initialize\n<ul>\n<li><code>var instance3 = new ExampleClass &#123; Name = &quot;Desktop&quot;, ID = 37414, Location = &quot;Redmond&quot;, Age = 2.3 &#125;;</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"事件\">事件</h2>\n<ul>\n<li>使用lambda expression來產生一次性的event</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Form2</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// You can use a lambda expression to define an event handler.</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.Click += (s, e) =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            MessageBox.Show(</span><br><span class=\"line\">                ((MouseEventArgs)e).Location.ToString());</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Using a lambda expression shortens the following traditional definition.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Form1</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.Click += <span class=\"keyword\">new</span> EventHandler(Form1_Click);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Form1_Click</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, EventArgs e</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    MessageBox.Show(((MouseEventArgs)e).Location.ToString());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Static\">Static</h2>\n<ul>\n<li>用類別名取得static成員 <code>ClassName.StaticMember</code>\n<ul>\n<li>不要用繼承的類別名，直接用定義static成員的類別</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"LINQ-Queries\">LINQ Queries</h2>\n<p>使用有意義的變數名</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> seattleCustomers = <span class=\"keyword\">from</span> customer <span class=\"keyword\">in</span> customers</span><br><span class=\"line\">                       <span class=\"keyword\">where</span> customer.City == <span class=\"string\">&quot;Seattle&quot;</span></span><br><span class=\"line\">                       <span class=\"keyword\">select</span> customer.Name;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>排列在<code>from</code>下方</li>\n<li>使用多個<code>from</code>取代<code>join</code></li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Use a compound from to access the inner sequence within each element.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> scoreQuery = <span class=\"keyword\">from</span> student <span class=\"keyword\">in</span> students</span><br><span class=\"line\">                 <span class=\"keyword\">from</span> score <span class=\"keyword\">in</span> student.Scores</span><br><span class=\"line\">                 <span class=\"keyword\">where</span> score &gt; <span class=\"number\">90</span></span><br><span class=\"line\">                 <span class=\"keyword\">select</span> <span class=\"keyword\">new</span> &#123; Last = student.LastName, score &#125;;</span><br></pre></td></tr></table></figure>","categories":["轉載"],"tags":["C#","CodingStyle"]},{"title":"CFR(Counterfactual Regret Minimization) 演算法簡介","url":"/Counterfactual-Regret-Minimization/","content":"<!-- RENEW: -->\n<p>參考作者在Quora上的解釋</p>\n  <span id=\"more\"></span>\n<h2 id=\"Introduction\">Introduction</h2>\n<p>self-learning algorithm</p>\n<ul>\n<li>learns strategy by repeatedly playing against itself</li>\n<li>initialized with uniformly random\n<ul>\n<li>playing every action at every decision point with <strong>equal</strong> probability</li>\n</ul>\n</li>\n<li>play the action with maximum regret</li>\n<li>it will converge to optimal strategy that can do no worse than tie against any opponent</li>\n</ul>\n<h2 id=\"Implementation\">Implementation</h2>\n<ul>\n<li>\n<p>Summing total regret for each action at each decision point</p>\n<ul>\n<li>regret: how much better if just <strong>always</strong> played this one action at this decision, instead of previous choices?\n<ul>\n<li>Positive regret means that we would have done better if we had taken that action more often</li>\n<li>Negative regret means that we would have done better by not taking that action at all</li>\n<li>愈多regret，代表此選項要多選</li>\n</ul>\n</li>\n<li>do actions with probabilities proportional to their positive regret</li>\n<li>after each game, update regret values</li>\n</ul>\n</li>\n<li>\n<p>Counter-intuitively, sequence of strategies <strong>does not necessarily converge to anything useful</strong></p>\n<ul>\n<li>But it now does so in practice</li>\n<li><strong>in a two-player zero-sum game</strong>, if you compute the average strategy over those billions of strategies in the sequence, then that average strategy will converge towards <strong>Nash equilibrium</strong> of the game</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Nash-equilibrium-納許均衡\">Nash equilibrium(納許均衡)</h2>\n<ul>\n<li>Do no worse than tie against any other strategy</li>\n<li>Plays perfect defence\n<ul>\n<li>Just wins when the opponent makes mistakes\n<ul>\n<li>since attempting to find and exploit an opponent's mistakes usually makes it possible for an even smarter opponent to exploit your new strategy</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>exploitability(利用度)\n<ul>\n<li>maximum expectation that a perfect counter-strategy could win</li>\n<li>exploitability = 0 when Nash equilibrium</li>\n<li>CFR can make average strategy's exploitability converges towards zero</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Result\">Result</h2>\n<ul>\n<li>best poker programs started beating the world's best human players in heads-up limit hold'em in 2008, even though there were still massively exploitable by this worst-case measure</li>\n<li>In January 2015, we've essentially <strong>weakly solved</strong> the game\n<ul>\n<li>a strategy with such a low exploitability (0.000986 big blinds per game)\n<ul>\n<li>have 95% statistical confidence that they were actually winning against everyone</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Algorithm-Implementation\">Algorithm Implementation</h2>\n<p>待補充</p>\n<h2 id=\"Example-Code\">Example Code</h2>\n<p>待補充</p>\n<h2 id=\"Summary\">Summary</h2>\n<p>待補充</p>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3Bva2VyLmNzLnVhbGJlcnRhLmNhL3B1YmxpY2F0aW9ucy9OSVBTMDctY2ZyLnBkZg==\">(CFR)Regret Minimization in Games with Incomplete Information<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2FyeGl2Lm9yZy9wZGYvMTQwNy41MDQyLnBkZg==\">(CFR+)Solving Large Imperfect Information Games Using CFR+<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5xdW9yYS5jb20vV2hhdC1pcy1hbi1pbnR1aXRpdmUtZXhwbGFuYXRpb24tb2YtY291bnRlcmZhY3R1YWwtcmVncmV0LW1pbmltaXphdGlvbg==\">(CFR)Explanation of CFR by inventor himself<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3NwZWN0cnVtLmllZWUub3JnL3JvYm90aWNzL2FydGlmaWNpYWwtaW50ZWxsaWdlbmNlL3Bva2VycGxheWluZy1haXMtdG9kYXktc2t5bmV0LXRvbW9ycm93\">poker AI news<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3NwZWN0cnVtLmllZWUub3JnL3RlY2gtdGFsay9jb21wdXRpbmcvc29mdHdhcmUvY29tcHV0ZXJzLWNvbnF1ZXItdGV4YXMtaG9sZGVtLXBva2VyLWZvci1maXJzdC10aW1l\">poker AI news2<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3Bva2VyLmNzLnVhbGJlcnRhLmNhL29wZW5fY2ZyLmh0bWw=\">(Implementation)openCFR<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","tags":["CFR","電腦對局理論"]},{"title":"Emacs觀念","url":"/Emacs-introduction/","content":"<p>參考 <span class=\"exturl\" data-url=\"aHR0cDovL3Nob3Aub3JlaWxseS5jb20vcHJvZHVjdC85NzgwNTk2MDA2NDg4LmRv\">Learning GNU Emacs<i class=\"fa fa-external-link-alt\"></i></span></p>\n<span id=\"more\"></span>\n<h2 id=\"Major-Mode\">Major Mode</h2>\n<ul>\n<li>一次只能有一個</li>\n<li>主要針對不同語言</li>\n<li>Example\n<ul>\n<li>Fundamental Mode</li>\n<li>Text Mode</li>\n<li>C Mode</li>\n<li>Lisp Mode</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Minor-Mode\">Minor Mode</h2>\n<ul>\n<li>相關功能</li>\n<li>Example\n<ul>\n<li>Abbrev Mode\n<ul>\n<li>能自訂簡寫，並由emacs自動展開</li>\n<li><code>add-global-abbrev</code></li>\n</ul>\n</li>\n<li>Fill Mode\n<ul>\n<li>文字超出空間時自動換行(加上<code>\\n</code>)</li>\n</ul>\n</li>\n<li>Auto-save Mode\n<ul>\n<li>產生自動儲存檔(名為 <code>#檔名#</code>)</li>\n<li>用 <code>revert-buffer</code> 指令將檔案還原成自動儲存時的狀態</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>最常用的指令是 <code>C-[something]</code>，次常用的指令是 <code>M-[something]</code>，更不常用的指令是 <code>C-x [something]</code>，更不常用的指令是 <code>C-c [something]</code></p>\n<p><code>C-u 4 [command]</code>: 重複4次<br />\n<code>C-u 1 6 [command]</code>: 重複16次</p>\n<p><code>M--</code>, <code>C--</code> : <code>negative-argument</code></p>\n<h2 id=\"搜尋\">搜尋</h2>\n<ul>\n<li>Incremental Search(每輸入一個字元，就尋找符合的文字)</li>\n<li>Non-Incremental Search(輸入完畢後才開始尋找, <code>nonincremental-search-forward</code>)</li>\n<li>Word Search(找一個字，例如找hat，不會找到that, <code>word-search-forward</code>)</li>\n</ul>\n<p>正規表示式搜尋</p>\n<ul>\n<li><code>\\&lt;</code> 字首</li>\n<li><code>\\&gt;</code> 字尾</li>\n</ul>\n<p>拼字檢查</p>\n<ul>\n<li><code>M-$</code> 檢查目前所在單字</li>\n<li><code>ispell-buffer</code>, <code>ispell-region</code></li>\n<li><code>M-x</code> ispell-change-dictionary</li>\n</ul>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li>https://ashok-khanna.medium.com/introduction-to-dired-mode-91cecd3a06ff</li>\n<li>https://www.emacswiki.org/emacs/DiredMode</li>\n<li>https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html</li>\n</ul>\n","categories":["筆記"],"tags":["Emacs","編輯器"]},{"title":"Emacs常用指令表","url":"/Emacs-tips/","content":"<blockquote>\n<p>Emacs快捷鍵是可以修改的，所以不一定要全部記住，只需要熟悉基本功能和知道有其他方便的擴充功能即可</p>\n</blockquote>\n<h2 id=\"Emacs基本\">Emacs基本</h2>\n<ul>\n<li>C → Ctrl</li>\n<li>M → Alt 或 esc</li>\n<li>S → Shift</li>\n<li>Ret → return(enter)</li>\n<li>範例\n<ul>\n<li><code>C-c</code> → Ctrl + c</li>\n<li><code>C-c C-f</code> → Ctrl + c, 放開c, 按下f，也可以分開來按，但較慢</li>\n</ul>\n</li>\n<li><code>hello.c</code>的自動儲存檔案的檔名就是<code>#hello.c#</code>\n<ul>\n<li>儲存檔案後，自動儲存檔就會被刪除</li>\n</ul>\n</li>\n<li>Ctrl 通常是對一個字操作， Alt 通常是對一個詞，或一個句子操作</li>\n<li>每一個Emacs的指令都有名稱，可以用<code>M-x [command]</code>來執行指令</li>\n</ul>\n<h3 id=\"Emacs移動\">Emacs移動</h3>\n<p><img data-src=\"/img/other/emacs-move.webp\" alt=\"\" /></p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>M-v, C-v</td>\n<td>上翻/下翻一頁</td>\n</tr>\n<tr>\n<td>M-b, M-f</td>\n<td>往前/往後 移動一個詞</td>\n</tr>\n<tr>\n<td>M-a, M-e</td>\n<td>移動到一句的開始/結尾(程式碼的一個段落)</td>\n</tr>\n<tr>\n<td>C-l</td>\n<td>移動視窗(遊標所在的行移動至最上方、最下方、中間)</td>\n</tr>\n<tr>\n<td>M-g M-g</td>\n<td>跳至指定行(= M-g g)</td>\n</tr>\n<tr>\n<td>M-m</td>\n<td>將游標移到該行第一個字元(大多數情況下，等同C-a)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Emacs編輯\">Emacs編輯</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C-j</td>\n<td>換行並自動縮排(<code>newline-and-indent</code>)</td>\n</tr>\n<tr>\n<td>C-SPACE</td>\n<td>開始選取文字(再按一次結束選取)</td>\n</tr>\n<tr>\n<td>C-x C-x</td>\n<td>改變選取的方向</td>\n</tr>\n<tr>\n<td>C-x h</td>\n<td>全選</td>\n</tr>\n<tr>\n<td>M-h</td>\n<td>選擇遊標所在的段落</td>\n</tr>\n<tr>\n<td>C-w/M-w</td>\n<td>剪下/複製 選取文字</td>\n</tr>\n<tr>\n<td>C-y</td>\n<td>貼上選取文字</td>\n</tr>\n<tr>\n<td>M-y</td>\n<td>改變貼上的文字(從之前剪下/複製過的文字中，由新到舊出現)</td>\n</tr>\n<tr>\n<td>C-d</td>\n<td>同<code>delete</code>鍵(刪除後一個字)</td>\n</tr>\n<tr>\n<td>M-d</td>\n<td>刪除後一個詞</td>\n</tr>\n<tr>\n<td>M-del</td>\n<td>刪除前一個詞</td>\n</tr>\n<tr>\n<td>C-g</td>\n<td>取消尚未完成的指令(如選擇遊標)</td>\n</tr>\n<tr>\n<td>C-x C-;</td>\n<td>註釋/取消註釋</td>\n</tr>\n</tbody>\n</table>\n<p><code>C-k</code>: 刪除從游標到「行尾」間的字元</p>\n<ul>\n<li>單獨的 C-k 會把一行的內容殺掉</li>\n<li>而第二個 C-k 則會殺掉那一行本身('\\n')。使所有其他的行向上移動</li>\n</ul>\n<p><code>C-x u</code>: 還原</p>\n<ul>\n<li>不會還原沒有改變文字的指令（移動游標和視窗等）</li>\n<li>自行鍵入的字元 一次最多還原20個</li>\n</ul>\n<h3 id=\"重複\">重複</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n<th>示範</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C-u [數字] [指令or字元]</td>\n<td>重複執行</td>\n<td>C-u 8 a → aaaaaaaa</td>\n</tr>\n<tr>\n<td>M-[數字] [指令or字元]</td>\n<td>重複執行</td>\n<td>M-8 a → aaaaaaaa</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Emacs搜尋\">Emacs搜尋</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C-s</td>\n<td>往後搜尋(再按一次：找下一個)</td>\n</tr>\n<tr>\n<td>C-r</td>\n<td>往前搜尋</td>\n</tr>\n<tr>\n<td>M-C-s</td>\n<td>正規表示式搜尋</td>\n</tr>\n<tr>\n<td>M-%</td>\n<td>取代</td>\n</tr>\n</tbody>\n</table>\n<p>取代模式的操作</p>\n<ul>\n<li><code>y</code>或space：置換目前游標所在的字串，並且移到下一個可被置換的字串</li>\n<li><code>n</code>：跳過目前游標所在的字串。移到下一個可被置換的字串</li>\n<li><code>ESC</code>：結束置換模式</li>\n<li><code>.</code>：置換目前的字串，並離開置換模式</li>\n<li><code>!</code>：將整個檔案一次置換完畢，不進行任何詢問</li>\n<li><code>^</code>：回到前一個符合置換的地方</li>\n<li><code>C-r</code>: 進入recursive-edit模式\n<ul>\n<li><code>M-C-c</code>: 結束recursive-edit模式</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Emacs分割-window\">Emacs分割(window)</h3>\n<p>在螢幕上同時顯示的多個編輯區，稱為分割</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C-x 0</td>\n<td>關閉目前分割</td>\n</tr>\n<tr>\n<td>C-x 1</td>\n<td>關閉其他分割(只留下目前的分割)</td>\n</tr>\n<tr>\n<td>C-x 2</td>\n<td>新增水平分割</td>\n</tr>\n<tr>\n<td>C-x 3</td>\n<td>新增垂直分割</td>\n</tr>\n<tr>\n<td>C-x o</td>\n<td>跳到別的分割(在現有的分割循環)</td>\n</tr>\n<tr>\n<td>M-C-v</td>\n<td>捲動另一個分割</td>\n</tr>\n<tr>\n<td>C-x 5 2</td>\n<td>開新視窗(frame)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Emacs檔案\">Emacs檔案</h3>\n<h4 id=\"Emacs檔案切換\">Emacs檔案切換</h4>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C-x C-b</td>\n<td>列出開啟的檔案清單(<code>Buffer List</code>)</td>\n</tr>\n<tr>\n<td>C-x b</td>\n<td>切換至其他開啟的檔案</td>\n</tr>\n<tr>\n<td>C-x k</td>\n<td>關閉目前編輯的檔案</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Emacs檔案指令\">Emacs檔案指令</h4>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C-x C-f</td>\n<td>開新檔案/開啟舊檔</td>\n</tr>\n<tr>\n<td>C-x 4 f</td>\n<td>在新分割開啟檔案</td>\n</tr>\n<tr>\n<td>C-x C-s</td>\n<td>儲存檔案</td>\n</tr>\n<tr>\n<td>C-x s</td>\n<td>全部檔案儲存</td>\n</tr>\n<tr>\n<td>C-x C-w</td>\n<td>另存新檔</td>\n</tr>\n<tr>\n<td>C-x d</td>\n<td>開啟資料夾模式(Dired Mode)</td>\n</tr>\n<tr>\n<td>C-x C-v</td>\n<td>開啟檔案取代目前的工作區(<code>find-alternate-file</code>, 開錯檔案的時候用)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Emacs系統\">Emacs系統</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C-x C-c</td>\n<td>結束 Emacs</td>\n</tr>\n<tr>\n<td>C-z</td>\n<td>暫時離開Emacs(Suspend)</td>\n</tr>\n</tbody>\n</table>\n<p>用<code>fg</code>或<code>%emacs</code>恢復 Emacs</p>\n<h3 id=\"Emacs函式\">Emacs函式</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>M-x [function]</td>\n<td>執行名為[function]的指令</td>\n</tr>\n<tr>\n<td>M-x compile</td>\n<td>編譯(會開啟<code>*compilation*</code>分割)</td>\n</tr>\n<tr>\n<td>M-x recompile</td>\n<td>重覆執行上次執行過的compile指令</td>\n</tr>\n<tr>\n<td>C-x `</td>\n<td>跳到下一個有編譯錯誤的地方</td>\n</tr>\n<tr>\n<td>M-x gdb</td>\n<td>用gdb除錯</td>\n</tr>\n<tr>\n<td>M-x shell</td>\n<td>開啟<code>shell</code>分割</td>\n</tr>\n</tbody>\n</table>\n<p>在Shell分割中，需要在Shell指令前加上 <code>C-c</code><br />\n如 <code>C-c C-c</code> 為中止程式; <code>C-c C-z</code> 為暫停程式等</p>\n<h3 id=\"Emacs幫助\">Emacs幫助</h3>\n<!-- TODO: -->\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C-h ?</td>\n<td>開啟 <code>*Help*</code> 分割</td>\n</tr>\n<tr>\n<td>C-h c [指令]</td>\n<td>在命令列顯示簡短解釋</td>\n</tr>\n<tr>\n<td>C-h k [指令]</td>\n<td>在新分割顯示詳細解釋</td>\n</tr>\n<tr>\n<td>C-h f [函數]</td>\n<td>在新分割顯示函數說明</td>\n</tr>\n<tr>\n<td>C-h w [函數]</td>\n<td>查詢此函數的快捷鍵</td>\n</tr>\n<tr>\n<td>C-h m</td>\n<td>瀏覽現在模式的文件(C, C++, text...)</td>\n</tr>\n<tr>\n<td>C-h a</td>\n<td>列出所有「含有此關鍵字」的全部函數(Command Apropos)</td>\n</tr>\n<tr>\n<td>C-h i</td>\n<td>開啟 <code>*info*</code> 分割</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"其他\">其他</h3>\n<!-- TODO: -->\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>M-C-\\</td>\n<td>選擇區塊自動縮排(<code>indent-region</code>)</td>\n</tr>\n<tr>\n<td>M-;</td>\n<td>在句尾加入註解</td>\n</tr>\n<tr>\n<td>M-^</td>\n<td>將此行併入上一行</td>\n</tr>\n<tr>\n<td>C-t</td>\n<td>對調兩字元</td>\n</tr>\n<tr>\n<td>M-t</td>\n<td>對調兩單字</td>\n</tr>\n<tr>\n<td>C-x C-t</td>\n<td>對調兩行</td>\n</tr>\n<tr>\n<td>M-c</td>\n<td>將字的第一個字母改為大寫(Capitalize)</td>\n</tr>\n<tr>\n<td>M-u</td>\n<td>將單字改為大寫(Upper)</td>\n</tr>\n<tr>\n<td>M-l</td>\n<td>將單字改為小寫(Lower)</td>\n</tr>\n<tr>\n<td>C-x i</td>\n<td>插入其他檔案的內容(insert-file)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Emacs技巧\">Emacs技巧</h2>\n<h3 id=\"自動完成\">自動完成</h3>\n<p><code>M-/</code> 可重複輸入以改變建議字串</p>\n<h3 id=\"移動至定義-goto-declaration\">移動至定義(goto declaration)</h3>\n<ol>\n<li>建立tag檔</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># for c, c++ file</span></span><br><span class=\"line\">find . | grep <span class=\"string\">&quot;.*\\.\\(c\\|h\\|cpp\\)&quot;</span> | xargs etags -f tags <span class=\"comment\"># output filename &quot;tags&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># for python file</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f -name <span class=\"string\">&#x27;*.py&#x27;</span> | xargs etags -f tags</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在Emacs中用<code>M-.</code>進行搜尋</li>\n<li><code>C-x 4 .</code>: 在另一個分割開啟定義</li>\n</ol>\n<p><code>M-*</code> 回到前一個定義的位置</p>\n<p>使用<code>autocomplete</code>套件</p>\n<!-- TODO: -->\n<h3 id=\"回到之前的遊標位置\">回到之前的遊標位置</h3>\n<p>在搜尋或尋找定義之後很好用<br />\n<code>C-u C-space</code></p>\n<h3 id=\"Emacs作為IDE使用\">Emacs作為IDE使用</h3>\n<p><a href=\"http://stackoverflow.com/questions/11043004/emacs-compile-buffer-auto-close\">編譯成功後自動關閉<em>compilnation</em>分割</a><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL2xpZmVnb28ucGx1c2tpZC5vcmcvd2lraS9FbWFjc1NtYXJ0Q29tcGlsZS5odG1s\">智慧編譯：自動偵測檔名或makefile並編譯<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"Emacs巨集-Macro\">Emacs巨集(Macro)</h3>\n<!-- TODO: -->\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C-x (</td>\n<td>開始定義巨集</td>\n</tr>\n<tr>\n<td>C-x )</td>\n<td>結束巨集定義</td>\n</tr>\n<tr>\n<td>C-x e</td>\n<td>執行上一個定義的巨集</td>\n</tr>\n<tr>\n<td>M-[Num] C-x e</td>\n<td>將上一個定義的巨集執行 Num 次</td>\n</tr>\n<tr>\n<td>C-u C-x (</td>\n<td>執行上一個定義的巨集，然後可以加上按鍵以重新定義巨集</td>\n</tr>\n<tr>\n<td>C-x q</td>\n<td>將巨集定義中插入查詢</td>\n</tr>\n<tr>\n<td>C-u C-x q</td>\n<td>將巨集定義中插入遞迴編輯</td>\n</tr>\n<tr>\n<td>M-C-c</td>\n<td>跳出遞迴編輯</td>\n</tr>\n</tbody>\n</table>\n<p><code>name-last-kbd-macro</code>: 將上一個定義的巨集存檔之前予以命名<br />\n<code>load-file</code>: 載入儲存的lisp程式碼巨集<br />\n<code>macroname</code>: 執行儲存過的&quot;macroname&quot;巨集<br />\n<code>insert-kbd-macro</code>: 將命名過的巨集以lisp程式碼印出</p>\n<p>應用：在<code>EmacsMacro.el</code>中儲存巨集程式碼，並在<code>.emacs</code>中寫入</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">;;load my macro file</span></span><br><span class=\"line\">(<span class=\"name\">load</span> <span class=\"string\">&quot;~/EmacsMacro&quot;</span>)</span><br></pre></td></tr></table></figure>\n<!--\nTODO:\n### hippie\n\n### 书签\n\n### 快速切換到 shell 並 cd 到當前文件所在的目錄\n-->\n<h3 id=\"Emacs-Latex\">Emacs + Latex</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2JiczMubnN5c3UuZWR1LnR3L3R4dFZlcnNpb24vdHJlYXN1cmUvSVVUL00uMTAwNjg2ODM1Mi5BL00uMTAwNjk1MjY3OC5HLmh0bWw=\">參考資料<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>安裝: <code>sudo apt-get install texlive-full</code></p>\n<p>M-x validate-tex-region：檢查每一段文稿是否有不平衡的大括號或錢字號。<br />\nC-c {：插入 <code>&#123;&#125;' 並將游標移至左右大括號之間 C-c &#125;：將游標移至下一個右大括號的右端 C-c C-o：插入 LaTeX 區段標記 </code>\\begin' 及\\end' 並將游標移至<br />\n二者間的空行<br />\nC-c C-e：為前一個不平衡的 `\\begin' 加上\\end'</p>\n<p>編譯</p>\n<ul>\n<li>\n<p>C-c C-f：對目前所在的檔案執行 TeX/LaTeX 的編譯</p>\n</li>\n<li>\n<p>C-c C-r：對一段區域 (region) 執行 TeX/LaTeX 的編譯</p>\n<ul>\n<li>不論是 TeX 或 LaTeX都包含了一段有關全文的訊息在整篇文稿的開端，若是僅僅編譯所指定的區域而忽略了這段訊息的話，將會產生錯誤的結果。為了解決這個問題，必需在文稿中標明header 的位置，然後在 用  C-c C-r 命令時  emacs 會自動將header中的訊息讀入處理。在 TeX 中標明 header 的方法是在 header段落前後插入 <code>%start of header' 和</code> %end of header}'</li>\n</ul>\n</li>\n<li>\n<p>C-c C-b：對整個目前所在的緩衝區 (buffer) 執行 TeX/LaTeX 的編譯</p>\n</li>\n<li>\n<p>C-c C-r 和  C-c C-b 並不會產生如  *.aux等的附屬檔，因此無法執行cross-reference等工作。如果需要產生附屬檔則必需使用 C-c C-f</p>\n</li>\n<li>\n<p>C-c TAB：對目前所在的檔案執行 BibTeX 的編譯</p>\n</li>\n<li>\n<p>C-c C-v：預覽 C-c C-r, C-c C-b 或  C-c C-f 編譯的結果</p>\n</li>\n<li>\n<p>C-c C-k：終結 (kill) 目前進行中的 TeX/LaTeX 程序(process)</p>\n</li>\n<li>\n<p>C-c C-p：列印 C-c C-r、C-c C-b 或 C-cC-f 編譯的結果</p>\n</li>\n<li>\n<p>C-c C-q：顯示目前的 printer queue</p>\n</li>\n</ul>\n<h3 id=\"Emacs-Git\">Emacs + Git</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9ob2xicm9vay9hcmNoaXZlLzIwMTIvMDQvMjYvMjQ3MDkyMy5odG1s\">使用git-emacs套件<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"畫簡單的ASCII圖\">畫簡單的ASCII圖</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2VtYWNzZXIuY29tL2FydGlzdC1tb2RlLmh0bQ==\">Artist Mode<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2VtYWNzZXIuY29tL2VtYWNzLWRpdGFhLmh0bWw=\">輸出成圖片檔<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h3 id=\"Emacs-Markdown\">Emacs + Markdown</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eHRveS5vcmcvYXJjaGl2ZXMvZW1hY3MtbWFya2Rvd24tbW9kZS5odG1s\">Emacs Markdown模式<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>有些指令直接輸入比較快…</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>介紹</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C-c C-t [N]</td>\n<td>插入第N級的標題</td>\n</tr>\n<tr>\n<td>C-c C-a l</td>\n<td>插入鏈接，格式為 <code>[text](url)</code></td>\n</tr>\n<tr>\n<td>C-c C-i i</td>\n<td>插入圖像，格式為 <code>![text](url)</code></td>\n</tr>\n<tr>\n<td>C-c -</td>\n<td>插入水平線</td>\n</tr>\n<tr>\n<td>S-Tab</td>\n<td>在大綱視圖、目錄視圖、及正常視圖間切換</td>\n</tr>\n<tr>\n<td>C-c C-c m</td>\n<td>預覽HTML</td>\n</tr>\n<tr>\n<td>C-c C-c p</td>\n<td>在瀏覽器中預覽</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Emacs-Screen\">Emacs + Screen</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2xhZ3VuYXdhbmcucGl4bmV0Lm5ldC9ibG9nL3Bvc3QvMjgzNjgyNS1saW51eC1zY3JlZW4lRTYlOEMlODclRTQlQkIlQTQ=\">Screen 指令表<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>因為Emacs的快捷鍵和Screen重複，要自己在<code>.screenrc</code>設定檔修改</p>\n<ul>\n<li>在 <code>.screenrc</code> 中新增 <code>escape ^tt</code><br />\n即可將 所有 C-a 改為 C-t</li>\n<li>在 <code>.screenrc</code> 中新增 <code>escape ^l^l</code><br />\n即可將 所有 <code>C-a</code> 改為 <code>C-l</code>，且在輸入 <code>C-l C-l</code> 時可以跳脫screen指令(等同在terminal輸入<code>C-l</code>)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xpZmVnb28ucGx1c2tpZC5vcmcvd2lraS9TY3JlZW4uaHRtbA==\">修改教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<p>在使用Emacs時，適合bind到screen的key:<br />\n<code>C-v</code>(scroll-up-command), <code>C-space</code>(set-mark-command), <code>C-t</code>(transpose-chars), <code>C-d</code>(delete char), C-l(recenter-top-bottom)<br />\n其他都太常用或是不能bind(<code>C-z</code>, <code>C-q</code>, <code>C-m</code>, <code>C-i</code>)，不然就要用 C-S 系列</p>\n<!-- ### Dired Mode\n\nTODO:\n\n### 套件安裝\n\nTODO: -->\n<h3 id=\"其他功能\">其他功能</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ251Lm9yZy9zb2Z0d2FyZS9lbWFjcy9tYW51YWwvaHRtbF9ub2RlL2VmYXEvUmVwbGFjaW5nLXRleHQtYWNyb3NzLW11bHRpcGxlLWZpbGVzLmh0bWw=\">多檔案取代字串<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"字體大小\">字體大小</h3>\n<ul>\n<li>放大字體: C-x C-+ 或 C-x C-=</li>\n<li>縮小字體: C-x C-–</li>\n<li>重置字體: C-x C-0</li>\n</ul>\n<h3 id=\"Emacs-Server\">Emacs Server</h3>\n<p>若Emacs設定檔太大，開啟時會需要花很長時間，所以可以持續開啟server，需要的時候再使用client連接至server，即可省下讀取設定的時間。</p>\n<!-- TODO: 測試 -->\n<ul>\n<li>開啟server: <code>emacs --daemon</code></li>\n<li>連線至server: <code>emacsclient</code></li>\n</ul>\n<h3 id=\"解決Windows上C-Space被中文輸入法佔用的問題\">解決Windows上C-Space被中文輸入法佔用的問題</h3>\n<ol>\n<li>上策：移除輸入法的<code>C-space</code>綁定(失敗)\n<ol>\n<li>語言列選項 → 輸入語言快捷鍵 → 將<code>C-Space</code>取消或改成別的</li>\n</ol>\n</li>\n<li>中策：比輸入法更優先綁定<code>C-space</code>(成功)\n<ol>\n<li>使用AutoHotKey\n<ol>\n<li><code>^Space::^+2</code>: 將 <code>C-Space</code> 映射至 <code>C-S-2</code></li>\n</ol>\n</li>\n</ol>\n</li>\n<li>下策：換別的快捷鍵\n<ol>\n<li><code>C-S-2</code>(Emacs內建，不過很難按)</li>\n<li><code>M-space</code>(在VSCode不適用)</li>\n<li><code>C-t</code></li>\n<li><code>C-m</code></li>\n<li><code>C-h</code></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Emacs知識\">Emacs知識</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2xpZmVnb28ucGx1c2tpZC5vcmcvd2lraS9FbWFjcy5odG1s\">參考資料<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"名稱\">名稱</h3>\n<p>Emacs 是 「編輯巨集」[Editing MACroS]的簡稱</p>\n<h3 id=\"前綴\">前綴</h3>\n<ul>\n<li>一些不是特別常用的函數綁定到前綴 C-x 上。例如 C-x C-c 退出 Emacs， C-x 2 水平分割當前 window</li>\n<li>與某個 mode 相關的的函數被綁定到前綴 C-c 上</li>\n<li>最不常用的函數根本沒有鍵綁定，而是使用 M-x 然後輸入函數名來調用他們</li>\n<li>前綴 C-x 4 被保留作操作另外一個 window 用的函數，例如 C-x 4 C-f 在另 外一個 window 裡面打開文件</li>\n<li>前綴 C-x 5 被綁定到操縱其他frame 的 函數上面</li>\n</ul>\n<h3 id=\"殺掉-kill\">殺掉(kill)</h3>\n<!-- - TODO: kill-ring -->\n<ul>\n<li>被殺掉的可以拉回，而被刪除的則不能\n<ul>\n<li><code>delete</code>, <code>backspace</code>都是刪除</li>\n<li><code>C-k</code>, <code>C-w</code>, <code>M-w</code> 等指令都是殺掉\n<ul>\n<li>如果連續地做了數次 C-k，所有被殺掉的文字都會被儲存在一起，因此做一次C-y 就會把所有這些行都拉回來</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>將被殺掉的文字回復的動作稱為「拉回（ yanking ）」\n<ul>\n<li>即為貼上的意思</li>\n<li><code>C-y</code> 會把最近殺掉的拉回來，前幾次殺掉的文字可以用 <code>M-y</code> 來回復</li>\n<li>可以給 <code>M-y</code> 正的或是負的參數來回到之前殺掉的東西</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"搜尋\">搜尋</h3>\n<ul>\n<li>Emacs 搜尋指令是「漸進的（ incremental ）」，搜尋發生在遊標後\n<ul>\n<li>如果鍵入<code>u</code>，游標會移動到<code>cu</code>的第一次出現位置。將<code>u</code>從<code>s</code>搜尋字串中消除，游標會移回到<code>c</code>的第一次出現位置</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"設定檔位置\">設定檔位置</h3>\n<p>家目錄的<code>.emacs</code>檔案和<code>.emacs.d</code>資料夾，可修改Emacs設定</p>\n<h3 id=\"Shell\">Shell</h3>\n<ul>\n<li>Bash上預設的控制模式是Emacs，也就是說可以使用 <code>C-a</code>, <code>C-f</code>, <code>C-b</code> 等移動鍵，<code>C-r</code>搜尋歷史指令，<code>C-n</code>, <code>C-p</code> 切換歷史指令，<code>C-k</code> 殺掉文字，<code>C-y</code>貼上文字，<code>C-j</code> 執行指令等等\n<ul>\n<li>和Emacs不一樣的地方有 <code>C-h</code>往前刪除一字元, <code>C-w</code>清除游標以前的一個單字, <code>C-u</code>清除游標以前所有的字元</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"其他-2\">其他</h3>\n<p>Emacs即為Lisp語言直譯器，所以理論上可以做到任何Lisp能做到的事，所以也被稱為「神之編輯器」。</p>\n<!-- (https://www.facebook.com/pangfeng.liu/posts/696258720389410?match=ZW1hY3M%3D) -->\n<blockquote>\n<p>我完全同意 emacs 和管風琴一樣。配合 Cherry 機械鍵盤寫論文寫程式有如彈琴。Ctrl 鍵有如和弦，空白鍵宛如音符之間的暫停，而最後重重敲下 Return 鍵時，右手宛如指揮家劃下最後一個節拍的爽快。<br />\n-- 劉邦鋒</p>\n</blockquote>\n<h3 id=\"軼事\">軼事</h3>\n<p>Tim O'relly 原本使用 Emacs，直到他弄丟 <code>.emacs</code> 檔案</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMDkxMDAzMDExMjAwL2h0dHA6Ly93d3cub3JlaWxseW5ldC5jb20vcHViL2Evb3JlaWxseS9hc2tfdGltLzE5OTkvdW5peF9lZGl0b3IuaHRtbA==\">原文<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"快速設定\">快速設定</h2>\n<p>使用現成的設定檔</p>\n<ul>\n<li>\n<p>優點</p>\n<ul>\n<li>不用寫lisp</li>\n<li>經過優化</li>\n<li>較完整</li>\n</ul>\n</li>\n<li>\n<p>缺點</p>\n<ul>\n<li>不夠客製化</li>\n<li>功能太多，搞不清</li>\n<li>難以修改</li>\n</ul>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JiYXRzb3YvcHJlbHVkZQ==\">Prelude<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B1cmNlbGwvZW1hY3MuZA==\">Purcell<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N5bDIwYm5yL3NwYWNlbWFjcw==\">Spacemacs<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n</ul>\n<h2 id=\"CheatSheet\">CheatSheet</h2>\n<p><img data-src=\"/img/emacs/cheatsheet.webp\" alt=\"\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3N0ZXZlbmNoYW4udXMvZW1hY3MtdmlzdWFsLWNoZWF0LXNoZWV0\">Cheat Sheet<i class=\"fa fa-external-link-alt\"></i></span></p>\n<!--\n## Mode Line\n\n\n## Org Mode\n\nhttps://github.com/pbesedm/Oh-My-Editors/blob/master/doc/emacs%E6%93%8D%E4%BD%9C%E6%B1%87%E6%80%BB.org -->\n<h2 id=\"Emacs-上網\">Emacs 上網</h2>\n<p><code>M-x url-handler-mode</code>, <code>C-x C-f &lt;url&gt;</code> 可打開 html檔<br />\n<code>M-x browse-url &lt;url&gt;</code> 會直接打開瀏覽器<br />\n<code>M-x eww &lt;url&gt;</code> 開啟網頁於內部(不支援Javascript)</p>\n   <!-- eww-readable(TODO: 不知用處) -->\n<h2 id=\"Emacs-on-Windows\">Emacs on Windows</h2>\n<ul>\n<li>下載GNU Emacs Windows版本</li>\n<li>設定字體大小：M-x → <code>menu-bar-open</code> → o → D</li>\n</ul>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NsaXB0aGF0LmJsb2dzcG90LnR3LzIwMTAvMDEvZW1hY3MuaHRtbA==\">指令大全<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5lbWFjcy51bml5YXIuYWMucnUvZG9jL2VtMjRoLw==\">Sams Teach Yourself Emacs in 24 Hours<i class=\"fa fa-external-link-alt\"></i></span> <!-- 未讀--></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcmVkZ3VhcmR0b28vYXJ0aWNsZS9kZXRhaWxzLzcyMjI1MDE=\">一年成為Emacs高手<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>有常用套件推薦</li>\n</ul>\n</li>\n</ul>\n","categories":["筆記"],"tags":["Emacs","指令"]},{"title":"機器學習基石(上)","url":"/MLfoundation1/","content":"<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY291cnNlcmEub3JnL2NvdXJzZS9udHVtbG9uZQ==\">原版<i class=\"fa fa-external-link-alt\"></i></span>的講義做得十分精美，可以很快了解</p>\n<h2 id=\"Chap01-Introduction\">Chap01 Introduction</h2>\n<p>課堂討論：學習的定義</p>\n<ol>\n<li>從不會到會</li>\n<li>從會到更進步、熟練</li>\n</ol>\n<p><img data-src=\"/img/ml/0FPIeqh.webp\" alt=\"\" /></p>\n<p>課堂討論：學習的方法</p>\n<ul>\n<li>以「樹的定義」為例</li>\n<li>如何寫出「能判斷是否是樹」的程式？\n<ol>\n<li>define trees and hand-program: difficult</li>\n<li>learn from data by observation and recognize: more easier(機器「自己」學習)</li>\n</ol>\n</li>\n</ul>\n<span id=\"more\"></span>\n<p><img data-src=\"/img/ml/BuqSVKs.webp\" alt=\"\" /></p>\n<p>課堂討論：兩種學習方法</p>\n<ul>\n<li>電腦: learn from data -&gt; get knowledge by observing</li>\n<li>人腦: learn from teachers -&gt; get the essence of the knowledge(can computer do that?)</li>\n</ul>\n<h3 id=\"key-eassence-of-ML\">key eassence of ML</h3>\n<ol>\n<li>存在「<strong>潛藏模式</strong>」可以學習\n<ul>\n<li>若認為有「潛藏模式」，才需要學習</li>\n</ul>\n</li>\n<li><strong>無法簡單定義</strong></li>\n<li>有可提供學習的<strong>資料</strong></li>\n</ol>\n<h3 id=\"ML使用時機\">ML使用時機</h3>\n<ul>\n<li>人類無法操作\n<ul>\n<li>火星探索</li>\n</ul>\n</li>\n<li>難以定義的問題\n<ul>\n<li>視覺/聽覺辨識</li>\n</ul>\n</li>\n<li>需要快速判斷\n<ul>\n<li>股票炒短線程式</li>\n</ul>\n</li>\n<li>大量資料\n<ul>\n<li>個人化使用者體驗</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"ML應用\">ML應用</h3>\n<p>推薦系統<br />\n將物品分解成各個porperty factors，形成vector，並與自己的喜好vector比較</p>\n<h3 id=\"formalize-the-learning-problem\">formalize the learning problem</h3>\n<ul>\n<li>target funcion <code>f</code>\n<ul>\n<li>unknown pattern to be learned</li>\n</ul>\n</li>\n<li>data <code>D</code>\n<ul>\n<li>training examples</li>\n</ul>\n</li>\n<li>hypothesis set <code>h</code>\n<ul>\n<li>candidate functions to be choosed</li>\n</ul>\n</li>\n<li>hypothesis <code>g</code>\n<ul>\n<li>best candidate function which is learned from data</li>\n</ul>\n</li>\n<li>use algorithm(A) with data(D) and hypothesis set(H) to get g <img data-src=\"/img/ml/c5XEqoy.webp\" alt=\"\" /></li>\n</ul>\n<blockquote>\n<p>Machine Learning:<br><br />\nuse data to compute hypothesis <code>g</code> that approximates target <code>f</code></p>\n</blockquote>\n<h3 id=\"Differences\">Differences</h3>\n<h4 id=\"Machine-Learning-Data-Mining\">Machine Learning &amp; Data Mining</h4>\n<p>ML: the same as above<br />\nDM: use <strong>huge</strong> data to <strong>find property</strong> that is interesting</p>\n<h4 id=\"Machine-Learning-Artificial-Intelligence\">Machine Learning &amp; Artificial Intelligence</h4>\n<p>AI -&gt; compute something that shows intelligent behavior</p>\n<p><strong>ML can realize AI</strong><br />\ntraditional AI -&gt; game tree<br />\nML -&gt; learning (techiniques) from board data</p>\n<h4 id=\"Machine-Learning-Statistics\">Machine Learning &amp; Statistics</h4>\n<p>Statistics: use data to make inference about an unknown process<br />\n-&gt; many <strong>useful tools for ML</strong></p>\n<p>課堂討論：Big Data</p>\n<ul>\n<li>As data getting bigger, the way to deal with data has to be changed.(such as distributed computation)</li>\n<li><strong>not</strong> a new topic</li>\n<li>marketing buzz word<br />\n課堂討論：Maching Learning &amp; Neural Network</li>\n<li>A technique used in early AI and ML</li>\n</ul>\n<h2 id=\"Chap-02-Perceptron-感知器\">Chap 02 Perceptron(感知器)</h2>\n<h3 id=\"yes-no-question-by-grading\">yes/no question by grading</h3>\n<p>用feature(特質)來分隔兩種不同的結果</p>\n<ul>\n<li>x: input</li>\n<li>w: hypothesis</li>\n<li>x是在d維度空間的點(d個features)，w為分隔此空間的線(平面)的法向量 <img data-src=\"/img/ml/pla-w.webp\" alt=\"\" /></li>\n<li>以二維空間為例：w產生的線分隔兩邊 <img data-src=\"/img/ml/MOzf2UK.webp\" alt=\"\" />\n<ul>\n<li>也就是h(x)的正負，w所在的那一側為正 <img data-src=\"/img/ml/joxwtUt.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"select-g-from-h\">select g from h</h3>\n<p>Difficult: h is infinite<br />\nIdea: 從某一條線開始，進行更改(local search)</p>\n<h3 id=\"Perception-Learning-Algorithm-PLA\">Perception Learning Algorithm(PLA)</h3>\n<p>A fault confessed is half redressed(知錯能改)</p>\n<ol>\n<li>find a mistake(which sign is wrong) <img data-src=\"/img/ml/u0KFPyS.webp\" alt=\"\" /></li>\n<li>correct the mistake <img data-src=\"/img/ml/Mow3SlT.webp\" alt=\"\" />\n<ul>\n<li>if real ans = +, new w = w + x(使w靠近正的點)</li>\n<li>if real ans = -, new w = w - x(使w遠離負的點)</li>\n</ul>\n</li>\n<li>keep doing until no mistake</li>\n</ol>\n<p>question<br />\n同乘$y_nx_n$ <img data-src=\"/img/ml/KKHE36Z.webp\" alt=\"\" /><br />\n可看出錯誤變少：正確的時候，$w_nx_n$和$y_n$同號，所以$w_nx_ny_n$是正的</p>\n<h3 id=\"linear-seperability\">linear seperability</h3>\n<p><img data-src=\"/img/ml/5L1kwEZ.webp\" alt=\"\" /></p>\n<ul>\n<li>linear seperable\n<ul>\n<li>exist perfect w makes $sign(y) = sign(w_nx_n)$, n = 0~N</li>\n<li>用直線(平面)必可分成無錯誤的兩塊</li>\n</ul>\n</li>\n<li>if Data is linear seperable, then PLA can generate w to make no mistake</li>\n<li>每次改動使$w_f$(正解)和$w_t$的內積變大，也就是愈來愈接近 <img data-src=\"/img/ml/unBVfjt.webp\" alt=\"\" />\n<ul>\n<li>但成長速度有限 <img data-src=\"/img/ml/LHtRvcu.webp\" alt=\"\" />\n<ul>\n<li>$|W_t| &lt;= sqrt(t) max(X_n)$</li>\n<li><img data-src=\"/img/ml/J66FCPC.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>question<br />\n<img data-src=\"/img/ml/0szpVwP.webp\" alt=\"\" /></p>\n<h3 id=\"PLA-Guarantee\">PLA Guarantee</h3>\n<p><img data-src=\"/img/ml/9qQxERz.webp\" alt=\"\" /></p>\n<ul>\n<li>advantage\n<ul>\n<li>simple to implement</li>\n<li>fast</li>\n</ul>\n</li>\n<li>disadvantage\n<ul>\n<li>not fully sure how long it will take</li>\n<li>assume linear seperable\n<ul>\n<li>What if no linear seperate?(in reality)</li>\n<li>選出犯錯最少的</li>\n<li>這是個NP-HARD問題… <img data-src=\"/img/ml/oRWuGAO.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Pocket-Algorithm-a-little-modified-by-PLA\">Pocket Algorithm(a little modified by PLA)</h3>\n<p><img data-src=\"/img/ml/XkWjmux.webp\" alt=\"\" /></p>\n<ul>\n<li>greedy\n<ul>\n<li>may not be the best answer: 可能是局部最佳解</li>\n</ul>\n</li>\n<li>slower than PLA(need to compare Wt+1 and Wt)</li>\n</ul>\n<h2 id=\"Chap03-types-of-learning\">Chap03 types of learning</h2>\n<h3 id=\"Different-Output-Space\">Different Output Space</h3>\n<p>Binary Classification</p>\n<ul>\n<li>yes/no</li>\n<li>core problem to build tools</li>\n</ul>\n<p>Multiclass Classification(N output class)</p>\n<ul>\n<li>Regression(迴歸分析)\n<ul>\n<li>output 為一數字</li>\n<li>Ex. temperature, stock price</li>\n<li><strong>core problem to build statistic tools</strong></li>\n</ul>\n</li>\n<li>Structured Learning\n<ul>\n<li>output $y$ = structures with <strong>implicit class definition</strong></li>\n<li>too many class → structure</li>\n<li>Ex. Speech parse tree, sequence tagging(標詞性), protein folding</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Different-Data-Label\">Different Data Label</h3>\n<p><strong>Supervised</strong> Learning(監督式學習)</p>\n<ul>\n<li>data with pairs of input and output</li>\n</ul>\n<p>Unsupervised Learning</p>\n<ul>\n<li>doesn't have output data(沒正確答案)</li>\n<li>clustering(分群問題)\n<ul>\n<li>density estimation(find traffic dangerous areas)</li>\n<li>unusual detection(find unusual data)</li>\n</ul>\n</li>\n<li>usually used in data mining <img data-src=\"/img/ml/Jz6fiwk.webp\" alt=\"\" /></li>\n</ul>\n<p>Semi-Supervised</p>\n<ul>\n<li>given small amount of data with output, find output of other data\n<ul>\n<li>Ex. facebook face identifier</li>\n<li>leverage unlabeled data to avoid 'expensive' labeling</li>\n</ul>\n</li>\n</ul>\n<p>Reinforcement Learning(增強學習)</p>\n<ul>\n<li>natural way of learning(行為學派)\n<ul>\n<li>learn with <strong>'seqentially implicit output'</strong></li>\n<li>if output is good, give reinforcement\n<ul>\n<li>probability of this input increases</li>\n</ul>\n</li>\n<li>if output is bad, give pushnishment\n<ul>\n<li>probability of this input decreases</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Ex.\n<ul>\n<li>train a dog</li>\n<li>online ADs</li>\n<li>chess AI</li>\n</ul>\n</li>\n<li>和gene algorithm類似</li>\n</ul>\n<h3 id=\"Different-Protocol\">Different Protocol</h3>\n<p>Batch Learning</p>\n<ul>\n<li>learn from known data\n<ul>\n<li>duck feeding(填鴨式)</li>\n</ul>\n</li>\n<li><strong>very common protocol</strong></li>\n</ul>\n<p>Online Learning</p>\n<ul>\n<li>sequential, passive data(不斷的得到新資料)</li>\n<li>Every datum can improve <code>g</code></li>\n<li>PLA, reinforcement learning is often used with online learning</li>\n<li>Ex. spam filter</li>\n</ul>\n<p>Active Learning</p>\n<ul>\n<li>strategically-observed data</li>\n<li>machine can ask question(take <strong>chosen</strong>(input, output)pair to learn)\n<ul>\n<li>關於自己不會(錯誤)的問題，拿相關的資料來學習</li>\n<li>比對有自信的答案(= 對答案)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Different-Input-Space\">Different Input Space</h3>\n<p>Feature &lt;-&gt; Input</p>\n<p><strong>Concrete</strong> Features</p>\n<ul>\n<li>each input class represents some 'sophisticated physical meaning'</li>\n<li>input 和 output 有相關(經過人類分類過)</li>\n</ul>\n<p>Raw Features(未處理的資料)</p>\n<ul>\n<li>'simple physical meaing' -&gt; difficult to learn</li>\n<li>Ex. Digit Recognition\n<ul>\n<li>concrete feature: symmtry, density</li>\n<li>raw feature: matrix of image bits</li>\n</ul>\n</li>\n</ul>\n<p>Abstract Features</p>\n<ul>\n<li>'no physical learning' -&gt; the most difficult to learn</li>\n<li>need 'feature conversion'</li>\n<li>Ex. Rating Prediction Problem\n<ul>\n<li>從歌曲評分抽出feature: 喜好, 歌的性質......</li>\n</ul>\n</li>\n</ul>\n<p>In general machine learning, those three feature types will be used</p>\n<h2 id=\"Chap-04-Feasibility-of-Learning\">Chap 04 Feasibility of Learning</h2>\n<ul>\n<li>learning will be stricted by limited data(no free lunch)</li>\n<li>learning from D (to infer something outside D) is doomed</li>\n</ul>\n<p>Statistics</p>\n<ul>\n<li>Real environment -&gt; unknown</li>\n<li>Sample data -&gt; known\n<ul>\n<li>Can sample represent the real?</li>\n</ul>\n</li>\n<li>有極小可能無法代表real status</li>\n</ul>\n<h3 id=\"Hoeffding’s-Inequality\">Hoeffding’s Inequality</h3>\n<ul>\n<li>v and u are error rate of certain h in sample and real data <img data-src=\"/img/ml/PG3e7Jr.webp\" alt=\"\" /></li>\n<li>larger sample size N or looser gap(誤差)\n<ul>\n<li>higher probability to approximate real</li>\n</ul>\n</li>\n</ul>\n<p><strong>Error between hypothesis and target function</strong> can be inferred by data <img data-src=\"/img/ml/2I9ZSPn.webp\" alt=\"\" /> <img data-src=\"/img/ml/AC3KnSC.webp\" alt=\"\" /></p>\n<h3 id=\"Ein-and-Eout\">Ein and Eout</h3>\n<p>in-sample error(Ein) and out-of-sample error(Eout)<br />\nGuarantee: for large N, Ein(h) ~= Eout(h) is probably approximately correct (PAC) <img data-src=\"/img/ml/colR3kh.webp\" alt=\"\" /></p>\n<p>Q: if 150 people flips a coin 5 times, and one of them gets 5 heads.  A: Probability is &gt; 99% <img data-src=\"/img/ml/CCrtjgi.webp\" alt=\"\" /><br />\n→ 做愈多次，遇到的BAD sample(Eout 和 Ein 差很多; sample和實際差距過大)的機率愈大<br />\n→ Real learning: Algorithm choose the best <code>h</code> which has lowest Ein(h) among <code>H</code></p>\n<ul>\n<li>Bad Data for a <code>H</code>\n<ul>\n<li>存在 <code>h</code> 使 Ein(h) 和 Eout(h) 相差很大 <img data-src=\"/img/ml/x6wkDZk.webp\" alt=\"\" />\n<ul>\n<li>由 hoeffding 知道抽到bad data的機率很小</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>hypothesis的個數愈多，抽到BAD data的機率愈高 <img data-src=\"/img/ml/IK9lYNY.webp\" alt=\"\" />\n<ul>\n<li>安全的data(在任何h都不是bad data)的比例 若很高，則學到的東西可能不好</li>\n</ul>\n</li>\n</ul>\n<p>若hypothesis set的大小是有限的話，只要N夠大，Eout ~= Ein<br />\n但perceptron不是finite(有無限多種分隔可選)</p>\n<h2 id=\"Chap05-Training-versus-Testing\">Chap05 Training versus Testing</h2>\n<p>g is similar to f ↔ Eout(g) ~= Ein(g) ~= 0</p>\n<p>But need train and test <img data-src=\"/img/ml/TXVWRpF.webp\" alt=\"\" /></p>\n<ul>\n<li>Train: find hypothesis that can fit sample data</li>\n<li>Test: take <strong>good sample data</strong> that is similar to exact data</li>\n</ul>\n<p>How to decide the number of hypothesis set<br />\n<img data-src=\"/img/ml/mrA45Zq.webp\" alt=\"\" /> <img data-src=\"/img/ml/hsyNq1P.webp\" alt=\"\" /><br />\nCannot both satisfied!</p>\n<p>Todo: Find a finite value $m_H$ can replace infinite M<br />\n<img data-src=\"/img/ml/LOwwaGm.webp\" alt=\"\" /><br />\nIdea: M is overestimated, we use classification:<br />\nhow many lines =&gt; how many kinds of line(that makes different output)<br />\nThis method is called Dichotomies(二分法): Mini-hypotheses<br />\n<img data-src=\"/img/ml/8CcPNcS.webp\" alt=\"\" /></p>\n<table>\n<thead>\n<tr>\n<th>input</th>\n<th>types of lines</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>2</td>\n</tr>\n<tr>\n<td>2</td>\n<td>4 (00, 01, 10, 11)</td>\n</tr>\n<tr>\n<td>3</td>\n<td>8</td>\n</tr>\n<tr>\n<td>4</td>\n<td>14 (2 lines that is not <br> linearly seperable)</td>\n</tr>\n<tr>\n<td>N</td>\n<td>effective(N) &lt;= $2^N$</td>\n</tr>\n</tbody>\n</table>\n<p>Growth Function $m_H$ = <strong>max number of dichotomies(max number of different outputs)</strong><br />\n<img data-src=\"/img/ml/xc50yGO.webp\" alt=\"\" /></p>\n<h3 id=\"Types-of-Growth-Function\">Types of Growth Function</h3>\n<ul>\n<li>Positive Rays <img data-src=\"/img/ml/vmoIwfN.webp\" alt=\"\" />\n<ul>\n<li>$m_H(N)$ = N + 1</li>\n</ul>\n</li>\n<li>Positive Intervals <img data-src=\"/img/ml/FcLeNhZ.webp\" alt=\"\" />\n<ul>\n<li>$C^{N+1}_2 + 1$ <img data-src=\"/img/ml/D4mfUyr.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Convex Sets\n<ul>\n<li>worst case: every point make a circle <img data-src=\"/img/ml/tVqlZrK.webp\" alt=\"\" /></li>\n<li>$m_H(N) = 2^N$ -&gt; exists N inputs that can be <strong>shattered(所有output皆可產生)</strong></li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/ml/eEXFWde.webp\" alt=\"\" /><br />\nNow $m_H(N)$ is finite, but exponential<br />\nQuestion:Can we find polynomial instead of exponential?</p>\n<h3 id=\"Break-Point-of-H\">Break Point of H</h3>\n<p>if all possible k inputs can't be shattered by H<br />\nk = break point for H <img data-src=\"/img/ml/q3wjQSm.webp\" alt=\"\" /></p>\n<p>2D perceptrons: break point at 4<br />\n3 inputs: exist at least one input that can shatter <img data-src=\"/img/ml/perceptron-shatter.webp\" alt=\"\" /><br />\n4 inputs: for all inputs, no shatter</p>\n<p>If there is no breakpoint, we can only find exponential($2^N$) increase<br />\nIf there is a breakpoint, we can find polynomial($O(N^k)$)increase<br />\nbreakpoint愈小，hypothesis set 成長的速度受到愈多限制(因為無法shatter，所以hypothesis數比exponential小)</p>\n<h2 id=\"Chap06-Theory-of-Generalization\">Chap06 Theory of Generalization</h2>\n<p>Q: maximum possible $m_H(N)$ if input number(N) = 3 when breakpoint(k) = 2?<br />\nA: x1, x2 cannot shatter, and so does x2, x3 and x1, x3 <img data-src=\"/img/ml/KE3Xwxf.webp\" alt=\"\" /><br />\n→ When N &gt; breakpoint, break point restricts $m_H(N)$ a lot!</p>\n<p>idea: prove $m_H(N) \\leq$ poly(N) if N &gt; k</p>\n<h3 id=\"Bounding-function\">Bounding function</h3>\n<p>bounding function B(N, k): maximum possible $m_H(N)$ when break point = k</p>\n<p>Table of bounding function(incomplete) <img data-src=\"/img/ml/darN0tn.webp\" alt=\"\" /><br />\nB(N, k) = $m_H(N) = 2^N$ when N &lt; k(shatter)<br />\nB(N, k) &lt; $m_H(N) = 2^N - 1$ when N = k(至少比shatter少一種)<br />\nWhen N &gt; k :Using reduce, Ex. B(4,3) <img data-src=\"/img/ml/gDjeq7v.webp\" alt=\"\" /><br />\nα: dichotomies on (x1, x2, x3) with x4 paired<br />\nβ: dichotomies on (x1, x2, x3) with x4 no paired</p>\n<p>Because B(4,3) can't shatter any 3 inputs<br />\n→ α + β can't shatter at (x1, x2, x3)<br />\n→ α + β $\\leq$ B(3,3)</p>\n<p>Because B(4,3) can't shatter any 3 inputs and x4 is already paired<br />\n→ α can't shatter any 2 inputs at (x1, x2, x3)<br />\n→ α $\\leq$ B(3,2)</p>\n<p>B(4,3) = 2α + β $\\leq$ B(3,3) + B(3,2)<br />\nGeneralized: B(N,k) $\\leq$ B(N-1,k) + B(N-1,k-1) <img data-src=\"/img/ml/jbksHEC.webp\" alt=\"\" /><br />\nBy calculation: $m_H(N) \\leq B(N,k) \\leq N^{k-1}$</p>\n<p>Conclusion: $m_H(N)$ is polynomial if break point exists for N &gt;= 2 &amp; k &gt;= 3!!<br />\n<img data-src=\"/img/ml/M8N4HsO.webp\" alt=\"\" /><br />\n<img data-src=\"/img/ml/OqhVOS4.webp\" alt=\"\" /><br />\n'&lt;=’ can be ‘=’ actually -&gt; not easy proof(skipped)</p>\n<h3 id=\"Vapnik-Chervonenkis-VC-bound\">Vapnik-Chervonenkis (VC) bound</h3>\n<p>Proof: BAD Bound for General H</p>\n<ol>\n<li>Now Ein(h) finite, but Eout(h) still infinite(Eout的點有無限個)\n<ol>\n<li>use ghost sample data Ein' to replace(<strong>想像</strong>再sample一次會產生的Ein'，將這段資料作為eout)</li>\n<li>圖中Ein離Eout很遠，是bad data，只要Ein'在Eout附近，Ein'也會離Eout很遠 <img data-src=\"/img/ml/kK29SSC.webp\" alt=\"\" /></li>\n<li>Eout 乘1/2，使其成為不等式 <img data-src=\"/img/ml/jr6WUKW.webp\" alt=\"\" /></li>\n</ol>\n</li>\n<li>將bad data相似的hypothesis分在一起 <img data-src=\"\" alt=\"\" />\n<ol>\n<li>總共有2N個data(Ein + Ein') → $m_H(2N)$ <img data-src=\"/img/ml/MQ5v22d.webp\" alt=\"\" /></li>\n<li>因為有了$m_H()$函數，變成只考慮固定的hypothesis</li>\n</ol>\n</li>\n<li>Use Hoeffding without Replacement\n<ol>\n<li>可視為2N個點取N個點，sample為Ein，剩下為Ein'(不放回去)</li>\n<li>使用 'Hoeffding without Replacement'： 公式和hoeffding 一樣 <img data-src=\"/img/ml/0ZC5xI3.webp\" alt=\"\" /></li>\n<li>Hoeffding只用於單一hypothesis，所以需要步驟2</li>\n</ol>\n</li>\n</ol>\n<p>Vapnik-Chervonenkis (VC) bound <img data-src=\"/img/ml/tjn5okQ.webp\" alt=\"\" /><br />\n→ proved that learning with <strong>2D perceptrons</strong> feasible!<br />\n<img data-src=\"/img/ml/kyXVoYU.webp\" alt=\"\" /><br />\nYou need to let everything good to learned well <img data-src=\"/img/ml/n8YPfWQ.webp\" alt=\"\" /></p>\n<h2 id=\"Chap-07-VC-Dimension\">Chap 07 VC Dimension</h2>\n<p>VC Dimension<br />\n= maximum non-break point = (minimum k) - 1<br />\n= largest N that can shatter</p>\n<p>2D perceptron review <img data-src=\"/img/ml/EOUT=0.webp\" alt=\"\" /><br />\nHow does PLA in more than 2 dimension?</p>\n<ul>\n<li>2D → 3</li>\n<li>d-dimension perceptron\n<ul>\n<li>d_VC = d+1</li>\n</ul>\n</li>\n</ul>\n<p>Proof</p>\n<ol>\n<li>d_VC &gt; d+1 → d+1 can shatter<br />\ninput matrix which is invertible <img data-src=\"/img/ml/specificmatrix.webp\" alt=\"\" /><br />\nfor any y, we can find w such that sign(Xw) = y → $w = yX^{-1}$ → it can shatter</li>\n<li>d_VC &lt; d+1 → d+2 can't shatter<br />\nlinear dependence restricts dichotomy <img data-src=\"/img/ml/linearrely.webp\" alt=\"\" /><br />\nif row &gt; column, it would cause linear dependence <img data-src=\"/img/ml/xd+2=all.webp\" alt=\"\" /><br />\nfor any input, we can find some $a_n$ that makes an output can't happen → no shatter <img data-src=\"/img/ml/geneag0.webp\" alt=\"\" /></li>\n</ol>\n<h3 id=\"freedom\">freedom</h3>\n<p>dimension, number of parameters, hypothesis quantity(M) → degrees of freedom<br />\nd_VC(H) = effitive binary degrees of freedom = powerfulness of H</p>\n<p>The more powerful it is (d_vc bigger), the more probability to get bad data <img data-src=\"/img/ml/dvcbigsmall.webp\" alt=\"D_vc\" /><br />\nquestion:<img data-src=\"/img/ml/Qhyperplane.webp\" alt=\"\" /><br />\n比perceptron少一個parameter → d</p>\n<p>penalty for model complexity <img data-src=\"/img/ml/smalle.webp\" alt=\"\" /><br />\nmodel愈強，Ein愈小，和Eout誤差愈大 <img data-src=\"/img/ml/modelcomplexity.webp\" alt=\"\" /></p>\n<p>number of data(N) should be 10000 d_vc in theory; 10 d_vc is enough in practice, because VC bound is loose <img data-src=\"/img/ml/nanddvc.webp\" alt=\"\" /> <img data-src=\"/img/ml/hoffedingloose.webp\" alt=\"\" /></p>\n<p>question: <img data-src=\"/img/ml/q2.webp\" alt=\"\" /><br />\nall of above(increase power of model)</p>\n<h2 id=\"Chap08-Noise-and-Error\">Chap08 Noise and Error</h2>\n<ul>\n<li>Noise in y\n<ul>\n<li>Example: good customer mislabeled as bad</li>\n</ul>\n</li>\n<li>Noise in x\n<ul>\n<li>Example: incorrect feature calculation</li>\n</ul>\n</li>\n<li>Would get probabilisic output y ≠ h(x) by given P(y|x)</li>\n</ul>\n<p>Does VC bound works in noise? Yes, if i.i.d.(Independent and identically distributed) <img data-src=\"/img/ml/iid.webp\" alt=\"\" /><br />\n→ we can view as 'ideal mini-target' + noise<br />\n→ learning goal is to <strong>predict ideal mini-target(which is Y that has high P(Y|X) given X) on often seen inputs(X with high P(X))</strong></p>\n<p>Eout use expectation instead of Σ , $err$ means pointwise error(only consider a point x) <img data-src=\"/img/ml/einout.webp\" alt=\"\" /></p>\n<h3 id=\"Error-Measure\">Error Measure</h3>\n<p><img data-src=\"/img/ml/01andsquare.webp\" alt=\"\" /></p>\n<ul>\n<li>classification(0/1 error)\n<ul>\n<li>minimum flipping noise(最少錯誤的output)</li>\n<li>NP-hard to optimize</li>\n</ul>\n</li>\n<li>regression use squared error\n<ul>\n<li>minimum gaussian noise(output和正確答案的平方差最小)</li>\n</ul>\n</li>\n</ul>\n<p>Error is **application/user dependent **</p>\n<ul>\n<li>CIA fingerprint login error\n<ul>\n<li>not allow predict 0  to 1 <img data-src=\"/img/ml/unbalancedata.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Supermarket member login error\n<ul>\n<li>not want to predict 1 to 0</li>\n</ul>\n</li>\n<li>error weight is not the same!</li>\n</ul>\n<p>Example: pocket</p>\n<ul>\n<li>modify Ein to $E^w_{in}$(with weight)</li>\n<li>weight愈高的錯誤愈容易被選來修正</li>\n</ul>\n<p>權重可以套用在許多機器學習的演算法</p>\n<h3 id=\"algorithm-choosing\">algorithm choosing</h3>\n<p>Algorithmic Error Measures $\\hat{err}$</p>\n<ul>\n<li>True\n<ul>\n<li>error cannot be ignored or created</li>\n</ul>\n</li>\n<li>plausible(可用性)\n<ul>\n<li>0/1 error</li>\n<li>squared error</li>\n</ul>\n</li>\n<li>friendly(較容易的演算法)\n<ul>\n<li>close form solution(有公式解，如Chap09的linear regression)</li>\n<li>convex objective function(可以持續更新的，如PLA)</li>\n</ul>\n</li>\n<li>$\\hat{err}$ is key part of many algorithms</li>\n</ul>\n<p><img data-src=\"/img/ml/err-flow.webp\" alt=\"\" /></p>\n<h2 id=\"參考資料\">參考資料</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY291cnNlcmEub3JnL2NvdXJzZS9udHVtbG9uZQ==\">Coursera機器學習基石<i class=\"fa fa-external-link-alt\"></i></span><br />\nC老師上課講解</p>\n","categories":["筆記"],"tags":["機器學習","perceptron"]},{"title":"機器學習基石(下)","url":"/MLfoundation2/","content":"<h2 id=\"Chap09-Linear-Regression\">Chap09 Linear Regression</h2>\n<ul>\n<li>將w向量(參數)最佳化\n<ul>\n<li>直接用計算出的 Wx</li>\n<li>perceptron → output 只有 +1/-1</li>\n<li>regression → output 為數字</li>\n</ul>\n</li>\n<li>找最少誤差 <img data-src=\"/img/ml/einout2.webp\" alt=\"\" />\n<ul>\n<li>wx 和 y 的誤差平方</li>\n<li>Ein: 取平均, Eout: 取期望值</li>\n<li><img data-src=\"/img/ml/residual.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<span id=\"more\"></span>\n<p>轉換成矩陣形式(最後一行的X, y, w都是矩陣)<br />\n<img data-src=\"/img/ml/einmatrix.webp\" alt=\"\" /></p>\n<p>Ein(w)函數性質</p>\n<ul>\n<li>continuous</li>\n<li>differeniable</li>\n<li>convex(凸)</li>\n<li>可以找到最低點(使Ein微分 = 0的w) <img data-src=\"/img/ml/ein=0.webp\" alt=\"\" />\n<ul>\n<li>因為 A 為 $X^tX$ 的形式，必為symmetric matrix，可直接做微分 <img data-src=\"/img/ml/vectorwdiff.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>計算W <img data-src=\"/img/ml/invertiblesingular.webp\" alt=\"\" /></p>\n<ul>\n<li>若A invertible，可直接求inverse</li>\n<li>若非，則用X十字架(<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTW9vcmUlRTIlODAlOTNQZW5yb3NlX3BzZXVkb2ludmVyc2U=\">pseudo inverse<i class=\"fa fa-external-link-alt\"></i></span>)</li>\n</ul>\n<h3 id=\"linear-regression-algorithm-easy\">linear regression algorithm(easy)</h3>\n<p><img data-src=\"/img/ml/regressionalgo.webp\" alt=\"linear regression algorithm\" /></p>\n<p>Is it &quot;learning algorithm&quot;?</p>\n<ul>\n<li>No → 直接計算所得的解</li>\n<li><strong>Yes</strong> → good Ein and Eout(finite $d_vc$), pseudo-inverse\n<ul>\n<li>可視為迭代進行(用矩陣一次算出)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Simpler-than-VC-Guarantee\">&quot;Simpler-than-VC&quot; Guarantee</h3>\n<p>可證Ein會小於????</p>\n<p><img data-src=\"/img/ml/9-3.webp\" alt=\"\" /><br />\n預測值 $\\hat{y} = Xw = XX^{-1}y = Hy$<br />\n定義 hat matrix $H = XX^{-1}$</p>\n<h4 id=\"Hat-Matrix-in-Geometry\">Hat Matrix in Geometry</h4>\n<p><img data-src=\"/img/ml/9-1.webp\" alt=\"\" /></p>\n<ul>\n<li>預測值 $\\hat{y}$ 被限制在X的span上 ($\\hat{y} = WX$)</li>\n<li>最小誤差會出現在y - $\\hat{y}$ 與 span of X 垂直時</li>\n<li>H 將向量投影至span of X上</li>\n<li>I-H : 投影至與 span of X 垂直的向量 (即為誤差: y - $\\hat{y}$)\n<ul>\n<li>可以發現 I-H 對角線上的值之和 trace(I - H) = N - (d + 1)\n<ul>\n<li>其物理意義為在N維空間投影至d+1維空間</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>with noise <img data-src=\"/img/ml/9-4.webp\" alt=\"\" />\n<ul>\n<li>f(x) + noise → y\n<ul>\n<li>f(x) 為正確的 y</li>\n<li>noise * (I-H) = y - $\\hat{y}$</li>\n</ul>\n</li>\n<li>可算出Ein和noise的關係: N變大時, Eout↓, Ein↑, noise level收斂在σ^2 <img data-src=\"/img/ml/9-5.webp\" alt=\"\" /> <img data-src=\"/img/ml/9-6.webp\" alt=\"\" /> <img data-src=\"/img/ml/9-7.webp\" alt=\"\" />\n<ul>\n<li>Eout可用類似方法證明</li>\n<li>expected generalization error(= Eout - Ein): 2(d+1)/N</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Usage\">Usage</h3>\n<p>Run Linear Regression Algo(efficient) and set initial w = $w^T_{lin}$ to speed up the perceptron learning</p>\n<ul>\n<li>誤差大小(看面積): Square Error &gt; 0/1 Error <img data-src=\"/img/ml/9-8.webp\" alt=\"\" />\n<ul>\n<li>regression產生的 W 比 classification 的誤差更大，但計算時間較短 <img data-src=\"/img/ml/9-9.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap-10-Logistic-Regression\">Chap 10 Logistic Regression</h2>\n<p>Heart attack prediction<br />\nNot every people with bad condition will have heart attack<br />\n→ only P(Heart attack | x) probability<br />\n→ look it as noise</p>\n<p>若機率 P(+1|X) &gt; 1/2，則當成 +1，其他output當作noise <img data-src=\"/img/ml/10-1.webp\" alt=\"\" /></p>\n<p>‘soft’ binary classification: f(x) = P(+1|x)</p>\n<ul>\n<li>ideal data: probabilty ↔ we have only noisy data(+1 or -1)</li>\n<li><strong>the same data as perceptron, but different target function</strong></li>\n</ul>\n<h3 id=\"Logistic-Hypothesis\">Logistic Hypothesis</h3>\n<ul>\n<li>smooth, monotonic, sigmoid(S形) function <img data-src=\"/img/ml/10-3.webp\" alt=\"\" /> <img data-src=\"/img/ml/10-2.webp\" alt=\"\" />\n<ul>\n<li>0 &lt;= θ(x) &lt;= 1</li>\n<li>θ(x) + θ(-x) = 1</li>\n<li>θ(-∞) = 0, θ(0) = 0.5, θ(∞) = 1</li>\n<li>令 $h(x) = θ(w^Tx)$ <img data-src=\"/img/ml/10-4.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Likelihood<br />\nif h ~= f, [h 產生 y 的機率] 接近 [f 產生 y 的機率(其值通常大於產生其他output的機率)]<br />\n猜測：若能找到h, 其產生的output和f很像的話(也就是和data的output很像), 那h也會和f很像 → 成功學習<br />\ng = argmax_h likelihood(h) <img data-src=\"/img/ml/10-6.webp\" alt=\"\" /></p>\n<h4 id=\"Cross-Entropy-Error\">Cross-Entropy Error</h4>\n<ul>\n<li>因為 h(x) = θ(wTx)\n<ul>\n<li>h(x) = h(-x)</li>\n</ul>\n</li>\n<li>最高可能性 = max Π h(ynxn)\n<ul>\n<li>Π = 連乘</li>\n</ul>\n</li>\n<li>= max ln Π θ(ynwxn)\n<ul>\n<li>轉換成θ，取ln</li>\n</ul>\n</li>\n<li>= max Σ ln θ(ynwxn)\n<ul>\n<li>ln Π = Σ ln</li>\n</ul>\n</li>\n<li>= min 1/N x Σ -lnθ(ynwxn) <img data-src=\"/img/ml/10-7.webp\" alt=\"\" />\n<ul>\n<li>乘1/N, 加上min和負號</li>\n</ul>\n</li>\n<li>代入θ公式, Ein = <img data-src=\"/img/ml/10-8.webp\" alt=\"\" />\n<ul>\n<li>此函式即為 Cross-Entropy Error <img data-src=\"/img/ml/10-9.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Minimize-Cross-Entropy-Error\">Minimize Cross-Entropy Error</h4>\n<p>find ∇Ein(w) = 0 to find min(Ein) <img data-src=\"/img/ml/10-11.webp\" alt=\"\" /></p>\n<ol>\n<li>使所有θ項都為0\n<ul>\n<li>only if all ynwxn &gt;&gt; 0</li>\n<li>需要linear-seqerable data</li>\n</ul>\n</li>\n<li>Σ(-ynxn) = 0\n<ul>\n<li>non-linear equation of w</li>\n</ul>\n</li>\n</ol>\n<p>→ 都不好算</p>\n<p>solve it by PLA</p>\n<ul>\n<li>若有錯則更新，正確則不變($w^t = w^{t+1}$) <img data-src=\"/img/ml/10-12.webp\" alt=\"\" /></li>\n<li>加入參數η，為更新的幅度倍率(本來為1) <img data-src=\"/img/ml/10-13.webp\" alt=\"\" />\n<ul>\n<li>v 代表原本的式子</li>\n<li>用 (xn, yn) 更新的大小： $θ(-y_nw^Tx_n)$</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"PLA-smoothing\">PLA smoothing</h3>\n<p><img data-src=\"/img/ml/10-14.webp\" alt=\"\" /></p>\n<ul>\n<li>更新時就是在往Ein較低的方向走\n<ul>\n<li>v為方向, η為幅度</li>\n</ul>\n</li>\n<li>Greedy\n<ul>\n<li>每次更新時調整η, 使Ein最小 <img data-src=\"/img/ml/10-17.webp\" alt=\"\" />\n<ul>\n<li>η夠小的時候，可用泰勒展開式 <img data-src=\"/img/ml/10-15.webp\" alt=\"\" /></li>\n<li>估算出的greedy更新公式 <img data-src=\"/img/ml/10-16.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Gradient Descent <img data-src=\"/img/ml/10-18.webp\" alt=\"\" />\n<ul>\n<li>最優的v是與梯度相反的方向，如果一條直線的斜率k&gt;0，說明向右是上升的方向，應該向左走</li>\n<li>距離谷底較遠（位置較高）時，步幅(η)大些比較好；接近谷底時，步幅小些比較好\n<ul>\n<li>梯度的數值大小間接反映距離谷底的遠近 <img data-src=\"/img/ml/10-19.webp\" alt=\"\" /></li>\n<li>希望步幅與梯度大小成正比\n<ul>\n<li>wt+1 ← wt - η∇Ein(wt)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Update Time</p>\n<ul>\n<li>decide wt+1 by all data → O(N) time</li>\n<li>Can logistic regression with O(1) time per iteration(like PLA)?<br />\n→ use one of data instead of all data<br />\n→ <strong>Stochastic Gradient Descent</strong></li>\n</ul>\n<h4 id=\"Stochastic-Gradient-Descent-SGD\">Stochastic Gradient Descent (SGD)</h4>\n<p><img data-src=\"/img/ml/11-7.webp\" alt=\"stochastic gradient descent\" /></p>\n<ul>\n<li>隨機選其中一筆資料來對 w 進行更新\n<ul>\n<li>進行足夠多的更新後，平均的隨機梯度與平均的真實梯度近似相等</li>\n</ul>\n</li>\n<li>η often use 0.1</li>\n<li>compare PLA and SGD <img data-src=\"/img/ml/11-8.webp\" alt=\"\" />\n<ul>\n<li>SGD is more flexible than PLA</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap-11-Linear-Models\">Chap 11 Linear Models</h2>\n<p>can linear regression or logistic regression help linear classification?</p>\n<p><img data-src=\"/img/ml/11-1.webp\" alt=\"\" /><br />\n<img data-src=\"/img/ml/11-2.webp\" alt=\"\" /> ys: classification correctness score</p>\n<p>Error functions <img data-src=\"/img/ml/11-3.webp\" alt=\"\" /></p>\n<ul>\n<li>small 0/1 error $\\nRightarrow$ small square error</li>\n<li>small err SQR → small err 0/1</li>\n<li>small Err CE → small Err 0/1\n<ul>\n<li>** small cross entropy error implies small classification error **<img data-src=\"/img/ml/11-4.webp\" alt=\"\" /> <img data-src=\"/img/ml/11-5.webp\" alt=\"\" /></li>\n<li>small err SCE(scaled cross entropy) ↔ small err 0/1</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/ml/11-6.webp\" alt=\"\" /></p>\n<ol>\n<li>PLA\n<ol>\n<li>優點：在數據線性可分時高效且準確</li>\n<li>缺點：只有在數據線性可分時才可行，否則需要借助POCKET算法（沒有理論保證）</li>\n</ol>\n</li>\n<li>linear regression\n<ol>\n<li>優點：最簡單的優化（直接利用矩陣運算工具）</li>\n<li>缺點：ys 的值較大時，與 0/1 error 相差較大</li>\n<li>線性回歸得到的結果w可作為其他算法的初始值</li>\n</ol>\n</li>\n<li>logistic regression\n<ol>\n<li>優點：比較容易優化（梯度下降）</li>\n<li>缺點：ys 是非常小的負數時，與 0/1 error 相差較大</li>\n<li>實際中，logistic回歸用於分類的效果優於線性回歸的方法和POCKET算法</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"Multiclass-Classification-meta-algorithms\">Multiclass Classification - meta algorithms</h3>\n<ol>\n<li>One-Versus-All (OVA) Decomposition\n<ol>\n<li>對每個分類做logistic regression(共N個)，選分數y最高的</li>\n<li>優點：prediction有效率，學習時可平行處理</li>\n<li>缺點：output種類很多時，數據往往非常不平衡(x 遠大於 o)，會嚴重影響訓練準確性</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTXVsdGlub21pYWxfbG9naXN0aWNfcmVncmVzc2lvbg==\">multinomial logistic regression<i class=\"fa fa-external-link-alt\"></i></span> 考慮了這個問題</li>\n</ol>\n</li>\n<li>One versus One (OVO) <img data-src=\"/img/ml/11-9.webp\" alt=\"\" />\n<ol>\n<li>共有 N(N-1)/2 個 perceptron，投票決定</li>\n<li>優點： training有效率(每個perceptron較小), 可以使用 binary classification 的方法</li>\n<li>缺點： O(K^2) space</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Chap-12-Nonlinear-Transformation\">Chap 12 Nonlinear Transformation</h2>\n<p>座標系轉換</p>\n<ul>\n<li>將非線性的h(x)轉成線性\n<ul>\n<li>circular separable in X → linear separable in Z <img data-src=\"/img/ml/12-2.webp\" alt=\"\" />  <img data-src=\"/img/ml/12-1.webp\" alt=\"\" /></li>\n<li>可在X做出任何二次曲線的Z <img data-src=\"/img/ml/12-3.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>transform data X to Z to train easily <img data-src=\"/img/ml/12-4.webp\" alt=\"\" />\n<ul>\n<li>(xn, yn) → (zn = ϕ(xn), yn)</li>\n<li>train w by (z, y)</li>\n<li>g(x) = sign(ϕ(x)w) (= sign(wz))</li>\n</ul>\n</li>\n<li>代價\n<ul>\n<li>O(Q^d)\n<ul>\n<li>Q次方座標系, d個參數(x, y)</li>\n</ul>\n</li>\n<li>$d_{vc}$ 隨 Q 成長</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>力量愈強，代價愈大(可能會overfit)(見Chap13)</p>\n</blockquote>\n<p>有效學習的條件</p>\n<ol>\n<li>Ein(g) 約等於 Eout(g)</li>\n<li>Ein(g)足夠小</li>\n</ol>\n<p>當模型很簡單時（dvc 很小），我們更容易滿足1. 而不容易滿足2. ；反之，模型很複雜時（dvc很大），更容易滿足2. 而不容易滿足1.<br />\n→ 次方愈高，hypothesis set 包含愈多、愈複雜，Eout更偏離，也對數據擬合得更充分，Ein 更小 <img data-src=\"/img/ml/12_1.webp\" alt=\"\" /></p>\n<p>安全的方法: 先算低次方, 若結果已足夠好就不用繼續尋找<br />\n實務上的機器學習，通常都不會使用太高維度的learning</p>\n<blockquote>\n<p>linear model first: simple, efficient, safe, and workable!</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3poLndpa2lwZWRpYS5vcmcvemgtdHcvJUU1JThCJTkyJUU4JUFFJUE5JUU1JUJFJUI3JUU1JUE0JTlBJUU5JUExJUI5JUU1JUJDJThG\">Legendre Polynomials Transform<i class=\"fa fa-external-link-alt\"></i></span>: 互為正交的函式(?)，用來做transform效果較好</p>\n<h2 id=\"Chap-13-Overfitting\">Chap 13 Overfitting</h2>\n<p>overfitting: **lower Ein, higher Eout **<br />\n<img data-src=\"/img/ml/13_01.webp\" alt=\"\" /><br />\n右側為overfitting, 左側為underfitting</p>\n<h3 id=\"Case-Study\">Case Study</h3>\n<p>target function <img data-src=\"/img/ml/12_4.webp\" alt=\"\" /><br />\ntry 2nd order and 10th order function <img data-src=\"/img/ml/12_5.webp\" alt=\"\" /></p>\n<ul>\n<li>左側： H10 performance is not good even if original function is 10th-order</li>\n<li>右側： even if no noise, there are still overfitting in H10\n<ul>\n<li>hypothesis complexity acts like noise</li>\n</ul>\n</li>\n<li>philosophy: 以退為進\n<ul>\n<li>絕聖棄智，其效百倍，絕巧棄利，error無有</li>\n</ul>\n</li>\n</ul>\n<p>雖然H10在N大的時候Eout較低，但在N小的時候Eout非常大 <img data-src=\"/img/ml/12_6.webp\" alt=\"\" /><br />\n→ 資料不夠多(N小)的時候，不能用太複雜的hypothesis</p>\n<p>實驗 noise 對 overfit 的影響</p>\n<ul>\n<li>noise ε with variance σ^2\n<ul>\n<li>normal distributed iid</li>\n<li>red area has more overfit <img data-src=\"/img/ml/13_1.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>造成overfit的原因</li>\n</ul>\n<ol>\n<li>deterministic noise\n<ol>\n<li>最好的hypothesis和target function的差異(depends on H)</li>\n<li>hypothesis complexity愈大，deterministic noise愈小</li>\n</ol>\n</li>\n<li>stochastic noise\n<ol>\n<li>N改變時，noise level對noise的影響</li>\n<li>不是固定值、不能改善</li>\n<li>example: sample error</li>\n</ol>\n</li>\n</ol>\n<p>overfit的四個原因</p>\n<ol>\n<li>data size ↓</li>\n<li>stochastic noise ↑</li>\n<li>deterministic noise ↑</li>\n<li>hypothesis set的power ↑</li>\n</ol>\n<p>類比成開車 <img data-src=\"/img/ml/13-2.webp\" alt=\"\" /></p>\n<p><strong>Overfit是很常發生的！</strong></p>\n<p>Data Cleaning/Pruning:<br />\n對於有些&quot;奇怪&quot;的data</p>\n<ol>\n<li>改成自己認為是對的output (data cleaning)</li>\n<li>移除資料 (data pruning)</li>\n</ol>\n<p>Data Hinting:<br />\n用已有的知識處理原有的data，產生新的data(不是偷看！)，適合於資料量不足時(Ex. 手寫辨識，可稍微旋轉、平移)，要注意新data的比例是否符合現實情況</p>\n<h2 id=\"Chap14-Regularization\">Chap14 Regularization</h2>\n<p>Regularization： 設條件(constraint) 降低 hypothesis set 的 complexity</p>\n<table>\n<thead>\n<tr>\n<th>對H10改動(= H2')</th>\n<th>complexity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>w3~w10為0</td>\n<td>H2' == H2</td>\n</tr>\n<tr>\n<td>w0~w10其中3個不為0</td>\n<td>H2 &lt; H2' &lt; H10</td>\n</tr>\n<tr>\n<td>wi的和小於一固定值  H(C)=sum(w^2)&lt;=C</td>\n<td>soft and smooth structure, e.g. H(0) &lt; H(11.26) &lt; H(∞) = H10</td>\n</tr>\n</tbody>\n</table>\n<p>限制參數大小： NP-hard to solve <img data-src=\"/img/ml/13-3.webp\" alt=\"\" /></p>\n<p>Lagrange Multiplier <img data-src=\"/img/ml/13-4.webp\" alt=\"\" /></p>\n<ul>\n<li>min(Ein)：朝梯度的反方向\n<ul>\n<li>-▽Ein(W)為更新的向量</li>\n</ul>\n</li>\n<li>W為原點到指定點的向量</li>\n<li>只找出在紅色圓(限制)內的最佳解，即紅色圓上與$W_{lin}$最近的點\n<ul>\n<li>$W_{lin}$為linear regression的解</li>\n<li>W與-▽Ein(W)平行的時候 <img data-src=\"/img/ml/13-5.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>可以藉由設不同的 λ 來產生 W，此時 λ 和 H(C) 的 C 相似，用來限制參數</p>\n<ul>\n<li>Ridge Regression (similar to linear regression) <img data-src=\"/img/ml/13-6.webp\" alt=\"\" /></li>\n<li>Augmented Error\n<ul>\n<li>solve min(Eaug) (unconstrained) is easier than solve min(Ein)(constrained)</li>\n<li>積分後得到regularizer$w^Tw$ <img data-src=\"/img/ml/13-01.webp\" alt=\"\" /></li>\n<li>wREG = argmin(w) Eaug(w)</li>\n<li>weight-decay\n<ul>\n<li>Penalize large weights using penalties</li>\n<li>λ↑ → perfer shorter w → effective C↓</li>\n</ul>\n</li>\n<li>λ 對應到 C <img data-src=\"/img/ml/13-9.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>只需一點regularization就有效 <img data-src=\"/img/ml/13-8.webp\" alt=\"\" /></p>\n<p>regularizer只限制單一hypothesis的complexity，不像VC bound整個hypothesis set都限制，所以Eaug比Ein更接近Eout <img data-src=\"/img/ml/14-1.webp\" alt=\"\" /></p>\n<p>Effective VC Dimension of Eaug</p>\n<ul>\n<li>dVC(H) = d + 1</li>\n<li>實際的 dvc 更小(被λ限制)，但不好證明 <img data-src=\"/img/ml/14-2.webp\" alt=\"\" /></li>\n</ul>\n<p>General Regularizers <img data-src=\"/img/ml/14-3.webp\" alt=\"\" /></p>\n<ul>\n<li>target-dependent\n<ul>\n<li>用target function的性質來限制</li>\n</ul>\n</li>\n<li>plausible(合理的)\n<ul>\n<li>預期比較平滑、簡單的hypothesis，因為noise是較不平滑的</li>\n<li>L1(sparsity regularizer): regularizer = Σ|wq|</li>\n</ul>\n</li>\n<li>friendly(easy to use)\n<ul>\n<li>L2(weight-decay regularizer): regularizer = Σ$w_q^2$</li>\n</ul>\n</li>\n<li>comparison: error → user-dependent, plausible, friendly</li>\n<li>augmented error = error + regulizer</li>\n</ul>\n<p><img data-src=\"/img/ml/14-4.webp\" alt=\"L1 and L2\" /> L1 useful when need sparse solution(有許多零的w, 因w最終會落到正方形的頂點)，L1即表示限制函數為一次方</p>\n<p>noise愈多，需要的regularization愈多 ↔ more bumpy road, putting brakes more <img data-src=\"/img/ml/14-5.webp\" alt=\"\" /></p>\n<p>Conclusion:<br />\n正規化用來減少hypothesis的complexity，避免overfit，用wTw作regulizer(L2)，以λ為參數調整正規化的程度(即L2圓的大小，L1正方形的大小)，通常λ不會太大</p>\n<h2 id=\"Chap15-Validation\">Chap15 Validation</h2>\n<p>So Many Models can choose, so use validation to check which is good choice</p>\n<p>selecting by E_in is dangerous(can't reflect Eout)<br />\nselecting by E_test is infeasible and cheating(not easy to get test data)</p>\n<p>$E_{val}$: legal cheating</p>\n<ul>\n<li>將data分成train和validation二部分</li>\n<li>用train學習，用valid測試</li>\n</ul>\n<p>在許多切割(fold)之中，找$E_{val}$最小的hypothesis，並用這個hypothesis和<strong>全部的data</strong>算出g <img data-src=\"/img/ml/15-1.webp\" alt=\"\" /></p>\n<ul>\n<li>$g_m^{-}$ 為 validation data 算出的g <img data-src=\"/img/ml/14-7.webp\" alt=\"\" /></li>\n<li>find balance of validation data size <img data-src=\"/img/ml/15-2.webp\" alt=\"\" />\n<ul>\n<li>leave-one-out cross validation ($E_{loocv}$)\n<ul>\n<li>每次只用一個資料作validation(K = 1)</li>\n<li>often called ‘almost unbiased estimate of Eout’ <img data-src=\"/img/ml/15-3.webp\" alt=\"\" /></li>\n<li>缺點：計算太多(一個model要train N次, N為資料個數)</li>\n<li>改善：切成n塊(通常5fold, 10fold)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>選擇 - 先選要測試的models，再用validation選出最好的</p>\n<ol>\n<li>all training models: select among hypotheses(初賽)</li>\n<li>all validation schemes: select among finalists(複賽)</li>\n<li>all testing methods: just evaluate</li>\n<li>Still use <strong>test result(之前沒用過的data)</strong> for final benchmark, not best validation result</li>\n</ol>\n<h2 id=\"Chap16-Three-Learning-Principles\">Chap16 Three Learning Principles</h2>\n<h3 id=\"Occam-s-Razor\">Occam's Razor</h3>\n<p>An explanation of the data should be made as simple as possible, but no simpler<br />\n用最簡單且有效的方法解釋資料<br />\n<img data-src=\"/img/ml/16-1.webp\" alt=\"\" /><br />\n因為愈簡單的H 愈難分資料 → 可以分開資料時，有顯著性(若是用複雜模型，分開是很容易的)<br />\n→ linear first, always ask whether overfitting</p>\n<h3 id=\"Sampling-Bias\">Sampling Bias</h3>\n<p>抽樣誤差：抽樣非真正隨機<br />\nEx. 1948電話民調，但電話當時昂貴<br />\nmovie recommend system: When data have time sequential, should emphasize later data, do not use random data</p>\n<h3 id=\"Data-Snooping\">Data Snooping</h3>\n<p>偷看資料(機器學習 → 人腦學習)，會包含大腦所花的complexity <img data-src=\"/img/ml/16-2.webp\" alt=\"\" /> <img data-src=\"/img/ml/16-3.webp\" alt=\"\" /></p>\n<p>paper1: H1 works well on data D<br />\npaper2: find H2 and <strong>publish if better than H1 on D</strong><br />\n....<br />\n→ bad generalization, cause overfit (if you torture the data long enough, it will confess)<br />\n→ 解決方法：不要先看paper，先提出自己的方法，再和已發表的方法比較</p>\n<h3 id=\"Conclusion\">Conclusion</h3>\n<p>Three Related Fields<br />\n<img data-src=\"/img/ml/16-4.webp\" alt=\"\" /><br />\nThree Theoretical Bounds<br />\n<img data-src=\"/img/ml/16-5.webp\" alt=\"\" /><br />\nThree Linear Models<br />\n<img data-src=\"/img/ml/16-6.webp\" alt=\"\" /><br />\nThree Key Tools: Feature Transform, Regularization, Validation<br />\n<img data-src=\"/img/ml/16-7.webp\" alt=\"\" /><br />\nThree Future Directions(in <a href=\"http://gitqwerty777.github.io/MLtechnique/\">ML techniques</a>)<br />\n<img data-src=\"/img/ml/16-8.webp\" alt=\"\" /></p>\n<p>End~~</p>\n<h2 id=\"Reference\">Reference</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kb3ViYW4uY29tL2RvdWxpc3QvMzM4MTg1My8=\">http://www.douban.com/doulist/3381853/<i class=\"fa fa-external-link-alt\"></i></span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jc2llLm50dS5lZHUudHcvfmh0bGluL2NvdXJzZS9tbDE0ZmFsbC8=\">HTLin講義<i class=\"fa fa-external-link-alt\"></i></span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGFzcy5jb3Vyc2VyYS5vcmcvbnR1bWxvbmUtMDAy\">Coursera<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["筆記"],"tags":["機器學習"]},{"title":"機器學習技法","url":"/MLtechnique/","content":"<blockquote>\n<p>尚未寫完</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"Chap01-SVM\">Chap01 SVM</h2>\n<p>All line is the same using PLA, but WHICH line is best? <img data-src=\"/img/ml/bestline.webp\" alt=\"\" /><br />\n→ 可以容忍的誤差愈大愈好(最近的點與分隔線的距離愈遠愈好) <img data-src=\"/img/ml/circle.webp\" alt=\"\" /><br />\n→ fat hyperplane (large <strong>margin</strong>)(分隔線可以多寬) <img data-src=\"/img/ml/fat.webp\" alt=\"\" /></p>\n<p>若只有兩個點，必通過兩點連線之中垂線 <img data-src=\"/img/ml/funtime1.webp\" alt=\"\" /></p>\n<h3 id=\"Standard-large-margin-hyperplane-problem\">Standard large-margin hyperplane problem</h3>\n<p>max fatness(w) (max margin)<br />\n= min distance($x_n$, w) (n = 1 ~ N)<br />\n= min distance($x_n$, b, w) -- (1)<br />\n因為 w0 不列入計算(w0 = 常數項參數 = 截距b, x0 必為 1)</p>\n<p><img data-src=\"/img/ml/wtxx.webp\" alt=\"\" /><br />\n$w^tx$ = 0 → x除去x0成為x' → $w^tx'$ + b = 0<br />\n設x', x''都在$w^tx'$ + b = 0平面上，$w^tx'$ = -b, $w^tx''$ = -b → $w^t(x''-x')$ = 0<br />\n$w^t$ 垂直於 $w^tx'$ + b = 0平面<br />\ndistance(x, b, w) = x 到 平面的距離 <img data-src=\"/img/ml/distancexbw.webp\" alt=\"\" /></p>\n<p>單一data的distance: 因 $y_n(w^t x_n + b) &gt; 0$<br />\n$distance(x_n, b, w) = (1/|w|) * y_n(w^t x_n + b)$ -- (2)</p>\n<p>specialize<br />\n令 $min y_n(w^t x_n + b) = 1$<br />\n→ $distance(x_n, b, w) = 1/|w|$<br />\n由式子(1),(2)可得 max margin = min distance(x_n, b, w) = 1/|w|<br />\n條件為 $min y_n(w^t x_n + b) = 1$</p>\n<p>放鬆條件<br />\n$y_n(w_t x_n + b) &gt;= 1$ is necessary constraints for $ min y_n(w_t x_n + b) = 1$<br />\nif all y_n(w_t x_n + b) &gt; p &gt; 1 -&gt; can generate more optimal answer (b/p, w/p) -&gt; distance 1/|w| is smaller<br />\nso y_n(w_t x_n + b) &gt;= 1 → y_n(w_t x_n + b) = 1</p>\n<p>max 1/|w| -&gt; min 1/2 * w_t *  w</p>\n<p><img data-src=\"\" alt=\"standard min bw\" /></p>\n<p>can solve w by solve N inequality</p>\n<h3 id=\"Support-Vector-Machine-SVM\">Support Vector Machine(SVM)</h3>\n<p>只須找最近的點即可算出w<br />\nsupport vector: bounary data(胖線的邊界點)</p>\n<p>gradient? : not easy with constraints<br />\nbut we have:</p>\n<ul>\n<li>(convex) quadratic objective function(b, w)</li>\n<li>linear constraints (b, w)</li>\n</ul>\n<p>can use quadratic programming (QP, 二次規劃): easy</p>\n<p><img data-src=\"\" alt=\"bw\" /><br />\n<img data-src=\"\" alt=\"QP\" /><br />\n<img data-src=\"\" alt=\"QP value\" /></p>\n<p>Linear Hard-Margin(all wxy &gt; 0) SVM<br />\n<img data-src=\"\" alt=\"regular\" /><br />\nthe same as ‘weight-decay regularization’ within Ein = 0</p>\n<p>Restricts Dichotomies(堅持胖的線): if margin &lt; p, no answer<br />\nfewer dichotomies -&gt; small VC dim -&gt; better generalization</p>\n<p><img data-src=\"\" alt=\"circle\" /><br />\n最大胖度有極限：在圓上，最大 根號3/2<br />\n<img data-src=\"\" alt=\"dvc ap\" /></p>\n<p><img data-src=\"\" alt=\"compare\" /><br />\ncan be good with transform<br />\n控制複雜度的方法！<br />\n控制複雜度的方法！</p>\n<h3 id=\"Chap02-dual-SVM\">Chap02 dual SVM</h3>\n<p>if d_trans is big, or infinite?(非常複雜的轉換)<br />\nfind: SVM without dependence of d_trans<br />\n去除計算(b, w)與轉換函式複雜度的關係<br />\n(QP of d_trans+1 variables -&gt; N variables)</p>\n<p>Use lagrange multiplier: Dual SVM: 將lambda視為變數來解<br />\n<img data-src=\"\" alt=\"lagrange function\" /><br />\n<img data-src=\"\" alt=\"SVM=\" /><br />\n若不符條件，則L()的sigma部分是正的，MaxL()為無限大<br />\n若符條件，則L()的sigma部分最大值為0 -&gt; MaxL() = 1/2w^tw<br />\n所以Min(MaxL()) = Min(1/2w^tw)</p>\n<p>交換max min的位置，可求得原問題的下限<br />\n<img data-src=\"\" alt=\"\" /></p>\n<p>可以得到strong duality(強對偶關係，=)？<br />\n若在二次規劃滿足constraint qualification</p>\n<ol>\n<li>convex</li>\n<li>feasible(有解)</li>\n<li>linear constraints</li>\n</ol>\n<p>則存在 primal-dual 最佳解(對左右邊均是最佳解)</p>\n<p>Dual SVM 最佳解為？<br />\n<img data-src=\"\" alt=\"微分b=0\" /><br />\nb可以被消除(=0)<br />\n<img data-src=\"\" alt=\"微分wi=0\" /><br />\nw代入得<br />\n<img data-src=\"\" alt=\"w=\" /></p>\n<p>Karush-Kuhn-Tucker (KKT) conditions<br />\n<img data-src=\"\" alt=\"KKT\" /><br />\nprimal-inner -&gt; an = 0 或 1-yn(wtzn+b) = 0(complementary slackness)<br />\n=&gt; at optimal all ‘Lagrange terms’ disappear</p>\n<p>用KKT求得a(原lambda)之後，即可得原來的(b, w)<br />\nw = sigma anynzn<br />\nb 僅有邊界(primal feasible)，但b = yn - wtzn when an &gt; 0 (primal-inner，代表必在SVM邊界上)</p>\n<p>重訂support vector的條件(a_n &gt;0)<br />\n<img data-src=\"\" alt=\"sv &lt; sv\" /><br />\n=&gt; b, w 都可以只用SV求到</p>\n<p>SVM:找到有用的點(SV)</p>\n<h4 id=\"Standard-hard-margin-SVM-dual\">Standard hard-margin SVM dual</h4>\n<p>經過整理<br />\n<img data-src=\"\" alt=\"min 1/2\" /><br />\n現在有N個a, 並有N+1個條件了</p>\n<p><img data-src=\"\" alt=\"QP\" /><br />\nwhen N is big, qn,m is dense array and very big(N &gt;30000, use &gt;3G ram)<br />\nuse special QP solver</p>\n<h4 id=\"SVM-和-PLA-比較\">SVM 和 PLA 比較</h4>\n<p><img data-src=\"\" alt=\"pla\" /><br />\nw = linear combination of data =&gt; w represented by data<br />\nSVM: represent w by only SV</p>\n<p><img data-src=\"\" alt=\"dual\" /><br />\nPrimal: 對(b,w)做特別縮放<br />\nDual: 找到SV 和其 lagrange multiplier</p>\n<p>問題：q_n,m 需要做O(d_trans)的運算，如何避免？</p>\n<h3 id=\"Chap03-Kernel-SVM\">Chap03 Kernel SVM</h3>\n<p>(z_n^T)(z_m)如何算更快</p>\n<p>轉換+內積 -&gt; Kernel function<br />\n<img data-src=\"\" alt=\"xxxxxxx\" /><br />\nuse O(d) instead of O(d^2)</p>\n<p><img data-src=\"\" alt=\"kernel\" /><br />\n<img data-src=\"\" alt=\"b=\" /><br />\n<img data-src=\"\" alt=\"gsvm =\" /><br />\n用kernel簡化！(gsvm -&gt; 無w)</p>\n<h4 id=\"Kernel-Hard-Margin-SVM\">Kernel Hard-Margin SVM</h4>\n<p><img data-src=\"\" alt=\"kernel svm algo\" /></p>\n<h4 id=\"polynomial-Kernel\">polynomial Kernel</h4>\n<p>簡化的kernel: 對應到同等大小，不同幾何特性(如內積)的空間<br />\n<img data-src=\"\" alt=\"kernel\" /><br />\nr影響SV的選擇<br />\n<img data-src=\"\" alt=\"SELECTED sv\" /></p>\n<p><img data-src=\"\" alt=\"high dim\" /><br />\n可以快速做高次轉換(和二次相同複雜度)</p>\n<p>特例: linear只需用 K1 = (0+1xtx)^1</p>\n<h4 id=\"infinite-Kernel\">infinite Kernel</h4>\n<p>taylor展開<br />\n<img data-src=\"\" alt=\"k(x,x')\" /></p>\n<p>無限維度的Gaussian Kernel (Radial Basis Funtion(RBF))<br />\n<img data-src=\"\" alt=\"g\" /></p>\n<p><img data-src=\"\" alt=\"support vector mechanism\" /><br />\nlarge =&gt; sharp Gaussians =&gt; ‘overfit’?<br />\n<img data-src=\"\" alt=\"overfit \" /></p>\n<h4 id=\"Kernel選擇\">Kernel選擇</h4>\n<p>linear kernel: 等於沒有轉換，linear first, 計算快<br />\npolynomial: 轉換過，限制小，strong physical control, 維度太大K會趨向極端值<br />\n-&gt; 平常只用不大的維度<br />\ninfinite dimension:<br />\nmost powerful<br />\nless numerical difficulty than poly(僅兩次式)<br />\none parameter only<br />\ncons: mysterious -- no w , and too powerful</p>\n<p>define new kernel is hard:<br />\nMercer's condition:<br />\n<img data-src=\"\" alt=\"mercer\" /></p>\n<h3 id=\"Chap04-Soft-Margin-SVM\">Chap04 Soft-Margin SVM</h3>\n<p>overfit reason: transform &amp; hard-margin(全分開)</p>\n<p>Soft-Margin -- 容忍錯誤，有錯誤penalty，只有對的需要符合條件<br />\n<img data-src=\"\" alt=\"soft1\" /></p>\n<p>缺點：<br />\nNo QP anymore<br />\nerror大小:離fat boundary的距離</p>\n<p>改良：求最小(犯錯的點與boundary的距離和)(linear constraint, can use QP)<br />\n<img data-src=\"\" alt=\"soft2\" /></p>\n<p>parameter C: large when want less violate margin<br />\nsmall when want large margin, tolerate some violation</p>\n<p>Soft-margin Dual: 將條件加入min中<br />\n<img data-src=\"\" alt=\"dual\" /><br />\n化簡後得到和dual svm相同的式子(不同條件)<br />\n<img data-src=\"\" alt=\"化簡後\" /><br />\nC is exactly the upper bound of an</p>\n<h3 id=\"Kernel-Soft-Margin-SVM\">Kernel Soft Margin SVM</h3>\n<p>more flexible: always solvable<br />\n<img data-src=\"\" alt=\"algo\" /></p>\n<p>(3)-&gt;solve b:<br />\n若as &lt; C(unbounded, free), 則b的求法和hard-margin一樣<br />\n<img data-src=\"\" alt=\"compare b = \" /></p>\n<p>但soft-margin還是會overfit...</p>\n<p>physical meaning<br />\n<img data-src=\"\" alt=\"\" /><br />\nnot SV(an = 0): C-an != 0 -&gt; En = 0<br />\nunbounded SV(0 &lt; an &lt; C，口) -&gt; En = 0 -&gt; on fat boundary<br />\nbounded SV(an = C, △) -&gt; En &gt;= 0(有違反，不在boundary上)<br />\n-&gt; 只有bounded SV才可違反</p>\n<p>difficult to optimize(C, r)</p>\n<h4 id=\"SVM-validation\">SVM validation</h4>\n<p>leave-one-out error &lt;= #SV/N<br />\n若移除non-SV的點，則得出的g不變<br />\n-&gt; 可以靠此特性做參數選擇(不選#SV太大的)</p>\n<h3 id=\"Chap05-Kernel-Logistic-SVM\">Chap05 Kernel Logistic SVM</h3>\n<p>實用library: linear:LIBLINEAR nonlinear:LIBSVM</p>\n<p>將E替代 -&gt; 像是 L2 regularization<br />\n<img data-src=\"\" alt=\"\" /><br />\n<img data-src=\"\" alt=\"\" /></p>\n<p>缺點：不能QP, 不能微分(難解)</p>\n<p><img data-src=\"\" alt=\"compare\" /><br />\nlarge margin &lt;=&gt; fewer choices &lt;=&gt; L2 regularization of short w<br />\nsoft margin &lt;=&gt; special err<br />\nlarger C(in soft-margin or in regularization) &lt;=&gt; smaller lagrange multiplier &lt;=&gt; less regularization</p>\n<p>We can extend SVM to other learning models!</p>\n<p>look (wtzn + b) as linear score(f(x) in PLA)<br />\n<img data-src=\"\" alt=\"red-blue\" /><br />\nwe can have Err_svm is upper bound of Err0/1<br />\n(hinge error measure)<br />\n<img data-src=\"\" alt=\"three graph\" /></p>\n<p><img data-src=\"\" alt=\"errwsce\" /><br />\nErr_sce: 與svm相似的一個logistic regression<br />\n<img data-src=\"\" alt=\"errbound\" /></p>\n<p><img data-src=\"\" alt=\"three compare\" /><br />\nL2 logistic regression is similar to SVM,<br />\n所以SVM可以用來approximate Logistic regression?<br />\n-&gt; SVM當作Log regression的起始點? 沒有比較快(SVM優點)<br />\n-&gt; 將SVM答案當作Log的近似解(return theta(wx + b))? 沒有log reg的意義(maximum likelyhood)<br />\n=&gt; 加兩個自由度，return theta(A*(wx+b) + B)<br />\n-&gt; often A &gt; 0(同方向), B~=0(無位移)<br />\n<img data-src=\"\" alt=\"NEW LOGREG\" /><br />\n將原本的SVM視為一種轉換</p>\n<p>Platt's Model<br />\n<img data-src=\"\" alt=\"PLATT\" /><br />\nkernel SVM在Z空間的解 -- 用Log Reg微調後 --&gt; 用來近似Log Reg在Z空間的解(並不是在z空間最好的解)</p>\n<p>solve LogReg to get(A, B)</p>\n<p>能使用kernel的關鍵：w為z的線性組合<br />\n<img data-src=\"\" alt=\"svm pla logreg by sgd\" /></p>\n<p>Representer Theorem: 若解L2-正規化問題，最佳w必為z的線性組合<br />\n將w分為(與z垂直)+(與z平行), 希望w_垂直 = 0<br />\n證：(原本的w) 和 (與z平行的w) 所得的err是一樣的(因為w_垂直 * z = 0)<br />\n且w平行比較短<br />\n所以min w 必(與z平行)<br />\n<img data-src=\"\" alt=\"\" /><br />\n結果：L2的linear model都可以用kernel解！</p>\n<p>將w = sum(B*z) = sum(B*Kernel)代入logistic regression<br />\n-&gt; 解B</p>\n<p>Kernel Logistic Regression(KLR)<br />\n= linear model of B<br />\n<img data-src=\"\" alt=\"special regularizer\" /><br />\n把 kernel當作轉換, kernel當作regularizer<br />\n= linear model of w<br />\nwith embedded-in-kernel transform &amp; L2 regularizer<br />\n把 kernel內部(z)當作轉換(?), L2-regularizer</p>\n<p>警告：算出的B不會有很多零</p>\n<p>soft margin SVM ~= L2 LOG REG, special error measure:hinge<br />\n在z空間解log reg -&gt; 用representor theorem 轉換為一般log reg, 有代價</p>\n<h2 id=\"Chap-06-Support-Vector-Regression-SVR\">Chap 06 Support Vector Regression(SVR)</h2>\n<p>ridge regression : 有regularized的regression<br />\n如何加入kernel?</p>\n<p>Kernel Ridge Regression<br />\n<img data-src=\"\" alt=\"solve ridge\" /><br />\n用representor theorem代入後得到regularization term 和 regression term</p>\n<p><img data-src=\"\" alt=\"梯度\" /><br />\n<img data-src=\"\" alt=\"B=\" /><br />\n因為kernal必為為psd，所以B必有解 O(N^3)</p>\n<p>g(x) = wz = sum(bz)z = sum(bk)</p>\n<p>與linear的比較：<br />\nkernel自由度高<br />\nlinear為O(d^3+d^2N)<br />\nkernel和資料量有關，為O(N^3)，檔案大時不快</p>\n<p>LS(least-squares)SVM = kernel ridge regression:<br />\n和一般regression boundary差不多，但SV很多(B dense)<br />\n=&gt; 代表計算時間長<br />\n=&gt; 找一個sparse B?</p>\n<p>tube regression:<br />\n<img data-src=\"\" alt=\"tube\" /><br />\ninsensitive error:容忍一小段的差距(在誤差內err = 0，若超過, err只算超過的部分)<br />\nerror增加的速度變慢</p>\n<p>學SVM，解QP, 用DUAL, KKT-&gt;sparse<br />\n<img data-src=\"\" alt=\"mimicking\" /><br />\nregulizer 和 超過tube上界的值，超過tube下界的值</p>\n<p>參數：C(violation重視程度), tube範圍</p>\n<p>作dual: lagrange multiplier + KKT condition<br />\n<img data-src=\"\" alt=\"dual --\" /></p>\n<p>在tube裡面的點：B=0<br />\n=&gt; 只要tube夠寬，B為sparse</p>\n<h3 id=\"Linear-SVM-Summary\">Linear, SVM Summary</h3>\n<p><img data-src=\"\" alt=\"linear\" /></p>\n<p><img data-src=\"\" alt=\"SVM\" /><br />\nfirst row: less used due to worse performance<br />\nthird row: less used due to dense B<br />\nfourth row: popular in LIBSVM</p>\n<h2 id=\"Chap07-Blending-and-Bagging\">Chap07 Blending and Bagging</h2>\n<p>Selection: rely on only once hypothesis<br />\nAggregation: mix or combine hypothesiss<br />\nselect trust-worthy from their usual performance<br />\n=&gt; validation<br />\nmix the prediction =&gt; vote with different weight of ballot<br />\ncombine predictions conditionally(when some situation, give more ballots to friend t)</p>\n<p><img data-src=\"\" alt=\"real function\" /></p>\n<p>Aggregation可做到：</p>\n<ol>\n<li>feature transform(?), 將hypothesis變強</li>\n<li>regularization(?)<br />\n控制 油門 和 煞車<br />\n<img data-src=\"\" alt=\"two lines\" /></li>\n</ol>\n<p>uniform blending: 一種model一票，取平均<br />\n證明可以比原本的Eout小: <img data-src=\"\" alt=\"\" /></p>\n<p>一個演算法A的表現，可以用其hypothesis set中的&quot;共識&quot;來表示，等於共識的表現，加上共識的變異數，uniform blending就是將某些在A的hypothesis取平均(變成新的演算法A')來減少A'的變異數<br />\nexpected performance of A = expected deviation to consensus + performance of consensus</p>\n<p>linear blending: 加權(線性)平均，權重&gt;0<br />\n<img data-src=\"\" alt=\"linear bledning for regression\" /><br />\n求類似linear regression的式子: 兩段式學習，先算出許多g，再做  linear regression -&gt; 得到答案G<br />\n限制：權重a&gt;0 -&gt; 將error rate大的model反過來用(error rate = 99%, 取其相反答案即可將error rate = 1%)</p>\n<p>any blending(stacking): 可用non-linear model(???)</p>\n<pre><code>算出g1-, g2- ...   \nphi-1 = (g1-, g2-, ...)   \ntransform validation data to Z = (phi-1(x), y)   \ncompuate g = AnyModel(Z, Y)   \nreturn G = g(phi(x))\nphi = (g1, g2 ... )\n</code></pre>\n<p>比較：linear blending</p>\n<pre><code>compuate a = AnyModel(Z, Y)   \nreturn G = a * phi(x)\n</code></pre>\n<p>learning: 邊學邊合，</p>\n<p>bootstrapping: 從有限的資料模擬出新的資料<br />\nbootstrap data: 從原本資料選擇N筆資料(可重複)<br />\nVirtual aggregation<br />\nbootstrap aggregation(bagging): 由bootstrap data訓練g，而非原資料<br />\n-&gt; meta algorithm for [base algorithm(可使用不同演算法)]</p>\n<p><img data-src=\"\" alt=\"BAGGING pocket in action\" /></p>\n<h2 id=\"Chap08-Adaptive-Boosting\">Chap08 Adaptive Boosting</h2>\n<p>教小學生辨認蘋果:<br />\n由一個演算法提供[會混淆的資料]<br />\n由其他hypothesis提出一個不同的小規則來區分</p>\n<p>給不同的data權重，會混淆的占較大比例，取min Ein = avg(Wn * err(xn, yn))，可用SVM, lin_reg, log_reg解Wn</p>\n<p>gt = argmin(sum(ut * err))<br />\ngt+1 = argmin(sum(ut+1 * err))</p>\n<p>找完gt後，gt+1應該要找和gt不相似的-&gt;找ut+1使gt的err rate接近0.5(隨機)。<br />\n<img data-src=\"\" alt=\"construct to make gt random-like\" /></p>\n<p>err rate = 錯誤資料權重和 / (錯誤資料權重和 + 正確資料權重和) = 1/2<br />\n=&gt; 希望 正確資料權重和 = 錯誤資料權重和<br />\n在gt中正確的資料, 權重要乘(err rate)<br />\n在gt中錯誤的資料, 權重要乘(1-err rate)<br />\n如此一來兩者之和將會相等</p>\n<p>若scale factor = S = sqrt((1-err rate) / err rate)<br />\nincorrect *= S<br />\ncorrect *= 1/S<br />\n若 S&gt;1:<br />\n→ err rate &lt;= 1/2<br />\n→ incorrect↑, correct↓, close to 1/2</p>\n<p><img data-src=\"\" alt=\"preliminary algorithm\" /><br />\nu1 可設所有為1/N，得到min Ein<br />\nG 設uniform會使成績變差</p>\n<p>Adaptive Boosting(皮匠法)<br />\n<img data-src=\"\" alt=\"ADA BOOST\" /><br />\n邊做邊算at</p>\n<p>希望愈好的gt，at愈大<br />\n-&gt; 設at = ln(St) (S = scale)<br />\nif(err rate == 1/2) -&gt; St = 1 -&gt; at = 0<br />\nif(err rate == 0) -&gt; St = inf -&gt; at = inf</p>\n<p>只要err rate &lt; 1/2 , 就可以參與投票：群眾的力量</p>\n<p>adapative boosting 的 algorithm 選擇(不需強演算法):<br />\ndecision stump: 三個參數：which feature, threshold(線), direction(ox)，可以使Ein &lt;= 1/2</p>\n<h2 id=\"Chap09-Decision-Tree\">Chap09 Decision Tree</h2>\n<p><img data-src=\"\" alt=\"\" /></p>\n<p>Traditional learning model that realize conditional aggregation<br />\n模仿人類決策過程</p>\n<p>Path View:<br />\nG = sum(q * g)<br />\nq = condition (is x on this path?)<br />\ng = base hypothesis, only constant, leaf in tree</p>\n<p>Recursive View:<br />\nG(x) = sum([b(x) == c] * Gc(x))<br />\nG: full tree<br />\nb: branching criteria<br />\nGc: sub-tree hypothesis</p>\n<p>advantage: human-explainable, simple, efficient, missing feature handle, categorical features easily, multiclass easily<br />\ndisadvantage: heuristic, little theoretical<br />\nEx. C&amp;RT, C4.5, J48...</p>\n<p><img data-src=\"\" alt=\"basic decision tree algo\" /><br />\nfour choices: number of branches, branching<br />\ncriteria, termination criteria, &amp; base hypothesis</p>\n<p>C&amp;RT(Classification and Regression Tree):<br />\nTree which is fully-grown with constant leaves<br />\nC = 2(binary tree)，可用decision stump<br />\ngt(x) = 在此分類下output最有可能(出現最多次的yn or yn平均)<br />\n-&gt; 分得愈純愈好(同一類的output皆相同)</p>\n<p><img data-src=\"\" alt=\"more simple choices - argmin\" /><br />\nimpurity = 變異數 or 出現最多次的yn的比率<br />\n<img data-src=\"\" alt=\"for classification error\" /><br />\npopular to use :<br />\nGini for classification<br />\nregression error for regression</p>\n<p><img data-src=\"\" alt=\"basic C&amp;RT\" /><br />\nterminate criteria:</p>\n<ol>\n<li>all yn is the same: impurity = 0</li>\n<li>all xn the same: cannot cut</li>\n</ol>\n<p>if all xn different: Ein = 0<br />\nlow-level tree built with small D -&gt; overfit</p>\n<p>regularizer: number of leaves<br />\nargmin(Ein(G) + c * number of leaves(G))<br />\n實作：一次剪一片葉子，選最好的</p>\n<p>相較數字的feature, 處理類型問題較簡單</p>\n<p>Surrogate(代理) branch:<br />\n找一些與最好切法相近的，若data features missing, 則使用之</p>\n<p><img data-src=\"\" alt=\"圖\" /><br />\n與adaboost相比：片段切割，只在自身subtree切</p>\n<h2 id=\"Chap10-Random-Forest\">Chap10 Random Forest</h2>\n<p>Random Forest = bagging + fully-grown random-subspace random-combination C&amp;RT decision tree</p>\n<p>highly parallel, 減少 decision tree的variance</p>\n<h3 id=\"增加decision-tree-diversity\">增加decision tree diversity</h3>\n<ol>\n<li>\n<p>random sample features from x(random subspace of X)<br />\n-&gt; efficient, can be used for any learning models<br />\n10000個features, 只用100個維度來learn</p>\n</li>\n<li>\n<p>將 x 作 低維度random projection -&gt; 產生新的feature(斜線切割), random combination</p>\n</li>\n</ol>\n<h3 id=\"Out-of-bag\">Out-of-bag</h3>\n<p>out-of-bag: not sampled after N drawings<br />\nN個data抽N次，沒被抽到機率 ~= 1/e<br />\n=&gt; 將沒抽到的DATA作g的validation(通常不做，因為g只為G的其中之一)<br />\n=&gt; 將沒抽到的DATA作G的validation，Eoob = sum(err(G-(xn))) (G-不包含用到xn的g)<br />\n<img data-src=\"\" alt=\"Eoob(G)\" /><br />\nEoob: self-validation</p>\n<h3 id=\"Feature-Selection\">Feature Selection</h3>\n<p>want to remove redundant, irrelevant features...</p>\n<p><strong>learn a subset-transform</strong> for the final hypothesis</p>\n<p>advantage: interpretability, remove 'feature noise', efficient<br />\ndisadvantage: total computation time increase, 'select feature overfit', mis-interpretability(過度解釋)</p>\n<p>decision tree: built-in feature selection</p>\n<p>idea: rate importance of every features<br />\nlinear model: 看w的大小<br />\nnon-linear model: not easy to estimate</p>\n<p>idea: random test<br />\nput some random value into feature, check performance↓，下降愈多代表愈重要</p>\n<p>random value</p>\n<ul>\n<li>by original P(X = x)</li>\n<li>bootstrap, <strong>permutation</strong></li>\n</ul>\n<p>performance: 算很久<br />\nimportance(i) = Eoob(G, D) - Eoob(G, Dp) (Dp = data with permutation in xn_i)</p>\n<p><img data-src=\"\" alt=\"strength-correlation\" /><br />\nstrength-correlation decomposition<br />\ns = average voting margin(投票最多-投票第二多...) with G<br />\np = gt之間的相似度<br />\nbias-variance decomposition</p>\n<h2 id=\"Chap11-Gradient-Boost-Decision-Tree\">Chap11 Gradient Boost Decision Tree</h2>\n<h2 id=\"Chap12-Neural-Network\">Chap12 Neural Network</h2>\n","categories":["筆記"],"tags":["機器學習"]},{"title":"README 寫法","url":"/art-of-readme/","content":"<p>此篇文章大多參考自 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vZmZsZS9hcnQtb2YtcmVhZG1lL2Jsb2IvbWFzdGVyL1JFQURNRS16aC5tZA==\">art-of-readme<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"基本的-README-組成\">基本的 README 組成</h2>\n<p>建議順序</p>\n<ul>\n<li>一句話解釋模組的目的</li>\n<li>簡潔可運行的範例</li>\n<li>詳細的API文件</li>\n<li>安裝說明</li>\n<li>注意事項和限制</li>\n<li>授權條款(license)</li>\n<li>必要的背景資料或連結</li>\n<li>專業術語解譯</li>\n</ul>\n<h2 id=\"目的\">目的</h2>\n<p>README 的目的：<strong>這是進行下一步之前的重要資訊</strong></p>\n<p>README 是寫給模組使用者的。</p>\n<p>README 也是寫給模組建立者的。一個沒有文件的模組，往往時隔 6 個月後，就連作者自己都會覺得陌生。每個模組的作者同時也是該模組的使用者。</p>\n<p><strong>README 是使用者首先（或唯一）審視你作品的入口。</strong></p>\n<p>編寫優秀的文件可以讓使用者不用閱讀原始碼就能理解你模組的精妙之處。<br />\n沒有 README 意味著開發者需要閱讀原始碼才能理解你的模組。<br />\n使用者希望模組能滿足他們的需要，所以你要清楚的說明你的模組的主要作用和優勢。</p>\n<blockquote>\n<p>只要你的文件是完備的，使用者就可以直接使用你的模組而無需去閱讀原始碼。透過文件可以在很大程度上將你的模組的外部介面和內部實現進行分離。這樣就可以在保持介面不變的情況下，靈活的修改內部實現。<br />\n定義模組的是文件而不是程式碼。 ——<span class=\"exturl\" data-url=\"aHR0cDovL21hdGhmb3J1bS5vcmcva2VuL3BlcmxfbW9kdWxlcy5odG1sI2RvY3VtZW50\">Ken Williams<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<h2 id=\"目標\">目標</h2>\n<p>讓讀者了解</p>\n<ol>\n<li>這是什麼</li>\n<li>使用情境</li>\n<li>如何使用</li>\n<li>實作及相關細節</li>\n</ol>\n<h2 id=\"原則\">原則</h2>\n<h3 id=\"簡潔\">簡潔</h3>\n<p>理想的 README 應該儘可能的短。詳細的文件可以在單獨的頁面裡描述</p>\n<h3 id=\"快速理解\">快速理解</h3>\n<ul>\n<li>這些關鍵要素的排序應該<strong>讓人儘快放棄你的模組</strong></li>\n<li>當你用利他主義思想來做的時候，不是為了銷售給別人，而是為了讓人們儘可能客觀公正的評估你的作品，並判斷是否滿足他們的需要。而不是讓你的下載量和使用者數最大化</li>\n</ul>\n<h2 id=\"方法\">方法</h2>\n<h3 id=\"使用模版\">使用模版</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vZmZsZS9jb21tb24tcmVhZG1l\">common-readme<i class=\"fa fa-external-link-alt\"></i></span>用的文件格式，一個README寫作指南和方便的command-line生成器。<br />\n你也可以在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JpY2hhcmRsaXR0L3N0YW5kYXJkLXJlYWRtZQ==\">標準Readme(standard readme)<i class=\"fa fa-external-link-alt\"></i></span>中領略下更具結構化的通用Readme格式。</p>\n<h3 id=\"以史為鑑\">以史為鑑</h3>\n<p>古人云：以史為鑑，可以知興替。<br />\n開發者編寫文件已經有多年的歷史了。值得我們花時間去看看之前人們是怎麼正確寫文件的。</p>\n<p><s>註：就是抄別人的</s></p>\n<h3 id=\"順序：以使用者的角度分析\">順序：以使用者的角度分析</h3>\n<p>當我想要一個 2D 碰撞檢測模組時我找到了<a href=\"https://github.com/noffle/collide-2d-aabb-aabb\"><code>collide-2d-aabb-aabb</code></a>。</p>\n<p>我開始從頭開始檢查這個模組：</p>\n<ol>\n<li>\n<p><strong>取名</strong>：名字要能做到“其義自見”。<code>collide-2d-aabb-aabb</code> 聽起來是個不錯的匹配，儘管它假設我知道&quot;aabb&quot;是什麼意思。</p>\n</li>\n<li>\n<p><strong>簡介</strong>：透過一句話簡明扼要的說明了這個模組是做什麼的。</p>\n<ol>\n<li><code>collide-2d-aabb-aabb</code> 的描述是：</li>\n</ol>\n<blockquote>\n<p>Determines whether a moving axis-aligned bounding box (AABB) collides with other AABBs.</p>\n</blockquote>\n<p>太棒了 —— 描述了 AABB 的定義是什麼，並且說明了這個模組是做什麼的。</p>\n</li>\n<li>\n<p><strong>用法</strong>：在開始探究 API 文件之前，最好看看這個模組在實際應用中是什麼樣子。我可以快速決定用js寫的範例程式是否符合我的程式碼樣式和我要解決的問題。</p>\n</li>\n<li>\n<p><strong>API</strong>：模組的名字，描述和使用方法都符合我的胃口。在這一點上我很樂意使用這個模組。我需要瀏覽API來確定這就是我需要的，並且很容易整合到我的程式碼中。API 部分應該詳述模組的物件和函式，以及它們的定義、回傳值和事件。</p>\n</li>\n<li>\n<p><strong>安裝</strong>：如果不是通用的安裝說明，就需要在這兒進行描述。即使是一句簡單的<code>npm install</code>也好。 對於使用Node的新使用者來說，放一個指向npmjs.org的連結和安裝命令，可以讓使用者快速上手使用模組。</p>\n</li>\n<li>\n<p><strong>授權</strong>：大多數模組把這個放在最末尾，但是最好還是往前放一些；非常有可能在把這個模組整合完後才發現授權協議不合適。我通常使用 MIT/BSD/X11/ISC。如果你的協議不是很寬容，最好是放到最前面。</p>\n</li>\n</ol>\n<h3 id=\"順序：認知漏斗\">順序：認知漏斗</h3>\n<p>可以想象成是一個直立的漏斗，越往下移動細節越具體，最寬的部分相關細節最寬泛，只有對你的作品足夠感興趣的人才會關注這部分內容。最後，底部可以放一些作品背景的細節</p>\n<blockquote>\n<p>Perl模組的文件對於細節的描述是從少到多的。<br />\n你的簡介部分應該包含一個小的例子程式<br />\n（或許只有一行程式碼，省略掉不常用的用例或大多數使用者用不到的功能）<br />\n描述部分應該從總體上描述你的模組，<br />\n通常只需要幾個段落；在隨後的章節中再詳細描述模組的例程或方法，長的程式碼示例，或其它的資料。<br />\n理想情況下，在點“下一頁”之前就能讓人大體上了解你的模組。<br />\n隨著使用者繼續閱讀文件，他們能夠漸進的獲得更多的知識。<br />\n—— <code>perlmodstyle</code></p>\n</blockquote>\n<h2 id=\"實作\">實作</h2>\n<p><mark>API改的越多，越要努力的去更新文件</mark></p>\n<h3 id=\"背景\">背景</h3>\n<p>如果你的模組依賴於重要但是不為人所熟知的抽象或生態系統，考慮包含一個 <strong>背景知識</strong> 部分 (background)。</p>\n<p><a href=\"https://github.com/noffle/bisecting-between\"><code>bisecting-between</code></a>的函式從它的名字上看不是特別明顯，所以在背景部分會描述定義，並且給出具體概念和抽象的連結，以便需要的人去使用和獲取。如果已經有相似的模組在npm上存在了，這兒也是一個非常適合描述建立模組的動機的地方</p>\n<h3 id=\"連結\">連結</h3>\n<p>如果你談及其它的模組，想法，或者其他人的時候，在相關的引用內容上加上連結，這樣訪客就可以很容易的得到你的模組背後的想法。極少有模組是憑空誕生的：所有的作品來源於其它作品，因此很有必要讓使用者追溯你的模組的歷史和靈感</p>\n<h3 id=\"範例檔案\">範例檔案</h3>\n<p>範例程式碼在repo中以檔案的形式體現 -- 例如<code>example.js</code>。這樣當用戶clone專案後，就可以直接執行README中提及的程式碼</p>\n<h3 id=\"徽章-badge\">徽章(badge)</h3>\n<p><img data-src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--S9z45xka--/c_imagga_scale,f_auto,fl_progressive,h_900,q_auto,w_1600/https://dev-to-uploads.s3.amazonaws.com/i/uzvoagihuxut9yo5bnyz.jpg\" alt=\"\" /></p>\n<p>使用徽章要慎重。經常會被濫用。它們會容易引起爭論。它們在你的README中加入了視覺噪聲，並且只有當用戶在聯網的瀏覽器裡閱讀你的markdown時才能看到徽章，因為圖片是存放在網際網路上的其它地方。對於每一個徽章，需要考慮：README中的徽章提供給典型讀者的真實含義是什麼？用一個CI徽章來顯示build/test狀態？這個訊號更應該發郵件給維護者，或者自動建立一個issue -- 永遠要考慮你的README中的資料的受眾並且自問一下是否有一個流程能夠讓資料更好的送達到目標受眾。</p>\n<h3 id=\"API\">API</h3>\n<p>API 文件格式沒有局限。使用任何你認為是清晰的格式，但是要包含重要的細節：</p>\n<ol>\n<li>引數是否可選，以及預設值</li>\n<li>包含型別資訊，如果型別不能清楚的根據約定進行體現</li>\n<li>對於 <code>opts</code> 物件引數，描述它所接受的所有的 keys 和 values</li>\n<li>為每個API提供一個小的呼叫示例，如果它們的用法不明顯或是在用法部分沒有體現。\n<ol>\n<li>不過，也有可能是函式太複雜了，需要進行重構，劃分成更細粒度的函式，或者整體刪除。</li>\n</ol>\n</li>\n<li>為特殊術語建立連結! 在markdown中你可以把<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXJpbmdmaXJlYmFsbC5uZXQvcHJvamVjdHMvbWFya2Rvd24vc3ludGF4I2xpbms=\">腳註<i class=\"fa fa-external-link-alt\"></i></span> 放在文件的末尾，可以很方便的多次引用它們。</li>\n</ol>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vZmZsZS9jb21tb24tcmVhZG1lL2Jsb2IvbWFzdGVyL2FwaV9mb3JtYXR0aW5nLm1k\">這兒<i class=\"fa fa-external-link-alt\"></i></span>有一些我的API文件格式的個人偏好。</p>\n<ul>\n<li>放一些呼叫和返回值的範例\n<ul>\n<li>如果你的模組提供了 CLI (command line interface)而不是 API，用命令呼叫的方式展示呼叫示例和輸出。如果你建立了或更改了一個檔案，<code>cat</code> 它來展示更改前後的變化。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"關鍵字\">關鍵字</h3>\n<p>github 和 npm 皆有提供手動填寫關鍵字(tag)</p>\n<h3 id=\"內嵌圖片\">內嵌圖片</h3>\n<p>最後，請記住你的程式碼倉庫和其中的README存在的時間要比你的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29t\">程式碼倉庫託管主機<i class=\"fa fa-external-link-alt\"></i></span>和你連結到的其它任何東西--特別是圖片--的時間都要長久。所以<strong>內嵌任何對將來要獲取你的作品的使用者來說是重要的東西</strong>。</p>\n<p>註：還是可以上傳到圖床或Youtube等，但是要將這些圖片、影片等額外的資源也放在版本控制中</p>\n<h2 id=\"心得\">心得</h2>\n<p>我個人使用Repo的順序</p>\n<ol>\n<li>觀察\n<ol>\n<li>會看主要使用的程式語言、支援的OS</li>\n<li>Description: 一句話形容Repo的作用</li>\n<li>指令、圖片、影片或是線上的使用範例</li>\n</ol>\n</li>\n<li>決定試用\n<ol>\n<li>安裝方法、或是Release可直接下載</li>\n<li>實際使用\n<ol>\n<li>使用失敗：回去看Document或README</li>\n</ol>\n</li>\n<li>覺得好用：Star</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"實例評價\">實例評價</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dhbGl0eTM2OS9DUy1Mb2FkZXI=\">CS-Loader<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>About欄位：CS免殺\n<ul>\n<li>Google後才知道是繞過掃毒軟體的方法</li>\n</ul>\n</li>\n<li>❌沒有對專有名詞的說明</li>\n<li>❌沒有使用方法</li>\n<li>只看README的話我是完全不會用的</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL251bXRpZGUvZGV2c2hlbGw=\">devshell<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>副標題: ⭕like virtualenv, but for all the languages\n<ul>\n<li>有用過Python的virtualenv的人可以馬上理解</li>\n</ul>\n</li>\n<li>About欄位: ➖Per project developer environments</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9udW10aWRlLmdpdGh1Yi5pby9kZXZzaGVsbC9pbnRyby5odG1s\">文件<i class=\"fa fa-external-link-alt\"></i></span>: ❌沒有簡短的設定教學</li>\n</ul>\n<!-- - TODO: --></li>\n</ul>\n","categories":["轉載"],"tags":["readme","文件","github"]},{"title":"大數運算的函式庫—BigNumber.h","url":"/big-number-library/","content":"<p>因為在許多online judge的題目中，大數運算是很常見的題型之一， 所以就寫了一個可以簡單進行大數運算的函式庫。</p>\n<span id=\"more\"></span>\n<h2 id=\"BigNumber-內容\">BigNumber 內容</h2>\n<ul>\n<li>目前只支援整數</li>\n<li>四則運算(除法只算到整數)</li>\n<li>可直接比較，賦值</li>\n<li>從各種type轉換成BigNumber物件，如int, long, string...</li>\n<li>以string形式輸出</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dpdHF3ZXJ0eTc3Ny9CaWdOdW1iZXI=\">Github Repo連結<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"用NaN表示例外\">用NaN表示例外</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvTmFO\">Not A Number<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>Example: 0/0, log(-1)</li>\n<li><code>NaN == NaN</code> is false</li>\n<li>可用 <code>isnan()</code> 檢查</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">double</span> <span class=\"built_in\">list</span> = <span class=\"number\">0.0</span> / <span class=\"number\">0.0</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lf\\n&quot;</span>, <span class=\"built_in\">list</span>); <span class=\"comment\">// will print -nan</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"實作方法\">實作方法</h2>\n<p>待補充</p>\n","categories":["記錄"],"tags":["大數","程式","C++"]},{"title":"人工智慧","url":"/artificial-intelligence/","content":"<!--Renew:-->\n<h2 id=\"Introduction\">Introduction</h2>\n<p>What is AI? → What is definition of Intelligence?</p>\n<ul>\n<li>Artificial Intelligence(A.I.) or WALL.E</li>\n<li>human-like or robot with intelligence</li>\n<li>there are various defintion of AI</li>\n<li>goal of AI : To create intelligent machines</li>\n</ul>\n<span id=\"more\"></span>\n<ul>\n<li>\n<p>Multiple Dimensions of Intelligence(多元智能)</p>\n<ul>\n<li>Linguistic(語言), Logico-mathematical, Spatial, Musical, Kinesthetic(動作), Intrapersonal, Interpersonal</li>\n</ul>\n</li>\n<li>\n<p>Intelligent Behavior</p>\n<ul>\n<li>The ability to solve complex problems</li>\n<li>Learning from experience</li>\n<li>Adaptability(適應性)</li>\n<li>Self-awareness(自我意識)</li>\n<li>Dealing with incomplete information</li>\n<li>Action under time pressure</li>\n<li>Creativity</li>\n<li>Common sense reasoning etc. (really hard to teach computer)</li>\n</ul>\n</li>\n<li>\n<p>Fundamental Elements of Intelligence</p>\n<ul>\n<li><strong>Prediction</strong> – Imagining how things might turn out rather than having to try them explicitly</li>\n<li><strong>Response to change</strong> – Responding with intelligent action instead of inalterable instinct or conditional reflexes</li>\n<li><strong>Intentional action</strong> – Having a goal and selecting actions appropriate to achieving the goal</li>\n<li><strong>Reasoning</strong> – starting with some collection of facts and adding to it by any inference method</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Turing-Test\">Turing Test</h3>\n<ul>\n<li>&quot;Can machines <strong>behave</strong> intelligently?&quot;</li>\n<li>now it is <strong>not criteria of AI</strong>(You can use database or some way to &quot;cheat&quot;)</li>\n</ul>\n<p>Alan Turing (1912-1954)</p>\n<ul>\n<li>1936: The Turing machine, computability, universal machine</li>\n<li>1950: The Turing Test for machine intelligence</li>\n</ul>\n<h3 id=\"Taxonomy-of-AI\">Taxonomy of AI</h3>\n<p><img data-src=\"/img/ai/1-1.webp\" alt=\"AI classess\" /></p>\n<p>Acting rationally</p>\n<ul>\n<li>do the right thing\n<ul>\n<li>be expected to <strong>maximize goal achievement</strong>, given the <strong>available(limited) information</strong></li>\n</ul>\n</li>\n<li><strong>Doesn't necessarily involve thinking</strong>\n<ul>\n<li>blinking reflex</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"The-History-of-AI\">The History of AI</h3>\n<ul>\n<li>The gestation of AI (1943-1956)</li>\n<li>Dartmouth conference (Summer of 1956)\n<ul>\n<li>Participants: McCarthy, Minsky, Shannon, Rochester, More(Princeton), Newell, Simon (CMU), Solomonoff, Selfridge(MIT), Samuel (IBM)</li>\n<li>&quot;AI&quot; first be named</li>\n</ul>\n</li>\n<li>Early enthusiasm and expectations (1952-1969)</li>\n<li>A dose of reality (1966-1974)</li>\n<li>Shakey the Robot (1966-1972)\n<ul>\n<li>the first mobile robot to reason about its actions\n<ul>\n<li>can do perception, world-modeling, and acting</li>\n</ul>\n</li>\n<li>often shakes</li>\n</ul>\n</li>\n<li>Knowledge-based systems (1969-1979)</li>\n<li>AI (expert systems) becomes an industry (1980-1988)</li>\n<li>The return of neural networks (1986-1995)</li>\n<li>Broader technical development: probability, ALife, GA, soft computing (1988-)</li>\n<li>Machine learning and data mining (1990- )</li>\n<li>Intelligent agents (1995- )</li>\n<li>Bayesian probabilistic reasoning</li>\n</ul>\n<h3 id=\"Historical-Achievements\">Historical Achievements</h3>\n<ul>\n<li>Deep Blue defeated the reigning world chess champion Garry Kasparov in 1997</li>\n<li>Proved a mathematical conjecture (Robbins conjecture)unsolved for decades</li>\n<li>No hands across America (driving autonomously 98% of the time from Pittsburgh to San Diego)\n<ul>\n<li>Autonomous Land Vehicle In a Neural Network(ALVINN)\n<ul>\n<li>a perception system which learns to control the NAVLAB vehicles by watching a person drive.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>During the 1991 Gulf War, US forces deployed an AI logistics planning and scheduling program that involved up to 50,000 vehicles, cargo, and people</li>\n<li>NASA's on-board autonomous planning program controlled the scheduling of operations for a spacecraft\n<ul>\n<li>Mars: Spirit, Opportunity</li>\n</ul>\n</li>\n<li>Proverb solves crossword puzzles better than most humans</li>\n<li>Stanley drove 132 miles to win the Grand Challenge\n<ul>\n<li>DARPA(美國國防遠景研究規劃局) give 1 million in 2004</li>\n<li>investment in competition is far better than in research of university</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Other-Usage-of-AI\">Other Usage of AI</h3>\n<ul>\n<li>on market\n<ul>\n<li>floor-cleaning</li>\n</ul>\n</li>\n<li>for fun\n<ul>\n<li>soccer</li>\n<li>pet</li>\n</ul>\n</li>\n<li>human-like\n<ul>\n<li>QRIO(sony)</li>\n<li>Asimo(Honda)</li>\n</ul>\n</li>\n<li>in art: &quot;Aaron&quot;\n<ul>\n<li>Inspired by the scribbling behavior of young children\n<ul>\n<li>construction of simple core-figures</li>\n<li>a simple strategy for tracing a path around them</li>\n</ul>\n</li>\n<li>Online auction for &gt; $2000 a piece</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap02-Agents\">Chap02 Agents</h2>\n<p><img data-src=\"/img/ai/1-2.webp\" alt=\"agent\" /></p>\n<ul>\n<li>take information from environment through sensors</li>\n<li>do reaction that would probably change the environment through actuators</li>\n<li>Human agent\n<ul>\n<li>Sensors: eyes, ears, and other organs</li>\n<li>Actuators: hands, legs, mouth, and other body parts</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Agents-and-environments\">Agents and environments</h3>\n<p>&quot;do the right thing&quot; is the one that will cause the agent to be most successful</p>\n<ul>\n<li>Performance measure\n<ul>\n<li>An objective criterion for success of an agent's behavior</li>\n<li>affects what agent behaves</li>\n</ul>\n</li>\n<li>agent function\n<ul>\n<li>agent (function) = architecture + program</li>\n<li>in order to maximize the performance</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Rationality\">Rationality</h3>\n<ul>\n<li>Rationality is distinct from omniscience (all knowing with infinite knowledge，全知)</li>\n<li>Rationality is distinct from clairvoyant(know every information)\n<ul>\n<li>Action outcomes may not be as expected</li>\n</ul>\n</li>\n<li>Rationality is exploration, learning, autonomy(自治)\n<ul>\n<li>perform actions to obtain useful information</li>\n<li>learn and adapt</li>\n<li><strong>actions are determined by its own experience</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Task-Environment-PEAS\">Task Environment: PEAS</h3>\n<ul>\n<li>High-Level Descriptions of AI Agents\n<ul>\n<li>Including <strong>Performance measure, Environment, Actuators, Sensors</strong></li>\n</ul>\n</li>\n<li>specify the setting for intelligent agent design</li>\n</ul>\n<p>Ex. <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1GeTRRYU9sTmZjcw==\">CubeStormer3<i class=\"fa fa-external-link-alt\"></i></span>, which is a rubik cube solver:</p>\n<ul>\n<li>Performance measure: Time(= number of steps that agent uses), correctness</li>\n<li>Environment: different patterns of rubik cube</li>\n<li>Actuators: various robotic arms, smart phone screen</li>\n<li>Sensors: camera</li>\n</ul>\n<h3 id=\"Environment-types\">Environment types</h3>\n<p>Fully observable (vs. partially observable): Sensors can access all environment at each point in time</p>\n<p>Deterministic (vs. stochastic): next environment is completely determined by the current state and agent's action<br />\nIf <strong>next environment is determined by actions of all agents</strong>, it's called strategic(戰略的)</p>\n<p>Episodic (vs. sequential): choice of action in each episode depends only on the episode itself<br />\n<strong>Sequential environments require memory</strong> of past actions to determine the next best action. Episodic environments are a series of one-shot actions</p>\n<p>Static (vs. dynamic): The environment is unchanged while agent is thinking<br />\nThe environment is semi-dynamic if the environment itself does not change with the passage of time but the agent's performance score does<br />\nEx. Taxi driver: Dynamic, Image analysis: Semi</p>\n<p>Discrete (vs. continuous): A limited number of distinct, clearly defined perception area<br />\nEx. Driving: continuous, chess games: discrete</p>\n<p>Single agent (vs. multi-agent): An agent operating by itself in an environment</p>\n<p>The real world is <strong>partially observable, stochastic, sequential, dynamic, continuous, multi-agent</strong></p>\n<p><img data-src=\"/img/ai/2-1.webp\" alt=\"chess and taxi environment\" /></p>\n<h3 id=\"Agent-types\">Agent types</h3>\n<ul>\n<li>Table-Lookup Agent(reflex agent)\n<ul>\n<li>has many drawbacks</li>\n<li>huge table</li>\n<li>time-wasting to build the table</li>\n<li>no autonomy</li>\n</ul>\n</li>\n<li>Condition-Action Agent\n<ul>\n<li>four types(generality from low to high)</li>\n<li>Simple reflex agents <img data-src=\"/img/ai/2-2.webp\" alt=\"\" />\n<ul>\n<li>Always Infinite Loop</li>\n</ul>\n</li>\n<li>Model-based reflex agents <img data-src=\"/img/ai/2-3.webp\" alt=\"\" />\n<ul>\n<li>Know how world evolves</li>\n</ul>\n</li>\n<li>Goal-based agents <img data-src=\"/img/ai/2-4.webp\" alt=\"\" />\n<ul>\n<li>use knowledge about goal to achieve it</li>\n</ul>\n</li>\n<li>Utility-based agents <img data-src=\"/img/ai/2-5.webp\" alt=\"\" />\n<ul>\n<li>utility: value of happiness</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Learning agents <img data-src=\"/img/ai/2-6.webp\" alt=\"\" />\n<ul>\n<li>learning element modifies performance element base on feedback of critic\n<ul>\n<li>critic: how the agent is doing</li>\n<li>performance element select proper action</li>\n</ul>\n</li>\n<li>Problem generator\n<ul>\n<li>Tries to solve the problem differently instead of optimizing</li>\n</ul>\n</li>\n<li>Example\n<ul>\n<li>Knowledge Navigator (Apple, 1987)</li>\n<li>IBM Watson</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap03-Search\">Chap03 Search</h2>\n<p>Search is a <strong>universal problem solving mechanism</strong> that</p>\n<ul>\n<li>\n<p>Systematically explores the alternatives</p>\n</li>\n<li>\n<p>Finds the sequence of steps toward a solution</p>\n</li>\n<li>\n<p><strong>Search in a problem space</strong> is claimed to be a <strong>completely general model of intelligence</strong></p>\n</li>\n<li>\n<p>problem space: area that needs to be examined to solve a problem</p>\n<ul>\n<li>the number of the leaf nodes in search tree when there is solution</li>\n</ul>\n</li>\n<li>\n<p>state space: the set of values which a process can take</p>\n<ul>\n<li>the number of the legal positions in a game</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Problem-solving-agents\">Problem-solving agents</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* s is sequence of actions */</span></span><br><span class=\"line\">repeat &#123;</span><br><span class=\"line\">\tpercept = observeWorld();</span><br><span class=\"line\">\tstate = updateState(state, p);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> s is empty then &#123;</span><br><span class=\"line\">\t\tgoal = formulateGoal(state);</span><br><span class=\"line\">\t\tprob = formulateProblem(state, goal);</span><br><span class=\"line\">\t\ts = search(prob);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\taction = first(s);</span><br><span class=\"line\">\ts = remainder(s);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">until <span class=\"literal\">false</span>; <span class=\"comment\">/* i.e., forever */</span></span><br></pre></td></tr></table></figure>\n<p>Formulate goal → Formulate problem(state, action) → Find solution by search</p>\n<h3 id=\"Problem-types\">Problem types</h3>\n<ul>\n<li>single-state problem\n<ul>\n<li>Deterministic, fully observable</li>\n</ul>\n</li>\n<li>sensorless problem\n<ul>\n<li>Non-observable</li>\n</ul>\n</li>\n<li>contingency(可能性) problem\n<ul>\n<li>Nondeterministic and/or partially observable</li>\n<li>percepts provide new information about current state</li>\n</ul>\n</li>\n<li>exploration problem\n<ul>\n<li>Unknown state space</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Problem-formulation\">Problem formulation</h3>\n<p>A problem is defined by four items</p>\n<ol>\n<li>initial state</li>\n<li>actions or successor function</li>\n<li>goal test function</li>\n<li>path cost (optional)</li>\n</ol>\n<p>A solution is a sequence of actions from initial state to  goal state</p>\n<h3 id=\"Problem-Domains\">Problem Domains</h3>\n<p>Real-world problems</p>\n<ul>\n<li>Route-finding</li>\n<li>Touring: travelling\n<ul>\n<li>salesperson problem</li>\n</ul>\n</li>\n<li>VLSI layout</li>\n<li>Automatic assembly sequencing</li>\n<li>Scheduling &amp; planning</li>\n<li>Protein design</li>\n</ul>\n<h3 id=\"Implementation-States-vs-Nodes\">Implementation: States vs. Nodes</h3>\n<ul>\n<li>A state is physical configuration(座標，位置，盤面)</li>\n<li>A node is a data structure constituting part of a search tree\n<ul>\n<li>includes <strong>state</strong>, parent node, action, path cost g(x), depth</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Search-Property\">Search Property</h3>\n<p>Strategies are evaluated by</p>\n<ul>\n<li>completeness: does it always find a solution if one exists?</li>\n<li>time complexity: number of nodes generated</li>\n<li>space complexity: maximum number of nodes in memory</li>\n<li>optimality: does it always find a least-cost solution?</li>\n</ul>\n<h3 id=\"Type-of-Search\">Type of Search</h3>\n<p>可參考<a href=\"/computer-gaming/\">電腦對局理論</a>，兩者的complexity算法不同</p>\n<h4 id=\"Uninformed-search-blind-search\">Uninformed search (blind search)</h4>\n<p>use only the information available in the problem definition</p>\n<p><img data-src=\"/img/ai/3-2.webp\" alt=\"\" /></p>\n<ul>\n<li>Breadth-first search\n<ul>\n<li>Expand shallowest unexpanded node</li>\n<li><strong>fringe</strong> is a queue</li>\n</ul>\n</li>\n<li>Uniform-cost search\n<ul>\n<li>used when &quot;cost != depth&quot;</li>\n<li>Expand least cost(g(n), cost from start to this node) unexpanded node</li>\n<li>Time Complexity: # of nodes with g ≤ cost of optimal solution\n<ul>\n<li>$O(b^{ceiling(\\frac{C*}{ε})})$</li>\n<li>C* is the cost of the optimal solution</li>\n<li>ε is small constant</li>\n<li>How does it compare with $b^d$?</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Depth-first search\n<ul>\n<li>Expand deepest unexpanded node</li>\n<li><strong>frontier</strong> is a stack</li>\n<li><strong>not complete</strong> when there are loops or there are infinite nodes</li>\n</ul>\n</li>\n<li>Depth-limited search\n<ul>\n<li><strong>Preferred uninformed search method</strong></li>\n<li>Iterative deepening search\n<ul>\n<li>uses only linear space</li>\n<li>take a little more time</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Graph-Search\">Graph Search</h4>\n<p>Graph Search vs. Tree Search</p>\n<ul>\n<li>Graph Search always need to record closed list to prevent loop</li>\n<li>Dijkstra’s Shortest Path Algorithm\n<ul>\n<li>find the shortest path between each pair of nodes</li>\n<li>Order nodes in priority queue to <strong>minimize actual distance from the start</strong></li>\n<li>Generalizes BFS that edges can have different lengths/weights</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap03b-Informed-Search\">Chap03b Informed Search</h2>\n<p>Best-First Search</p>\n<ul>\n<li>use evaluation function f(n) for each node</li>\n<li>Expand <strong>most desirable</strong>(lowest cost in total) unexpanded node</li>\n<li>Order nodes in priority queue to <strong>minimize estimated distance to the goal = h(n)</strong></li>\n<li>Special cases\n<ul>\n<li>greedy best-first search\n<ul>\n<li>expands the node that <strong>appears to be closest to goal</strong></li>\n</ul>\n</li>\n<li>A* search</li>\n</ul>\n</li>\n<li>Property\n<ul>\n<li>Complete? No – can get stuck in loops</li>\n<li>Time? O(bm), but a <strong>good heuristic can give a lot of improvement</strong></li>\n<li>Space? O(bm) -- keeps all nodes in memory</li>\n<li>Optimal? No</li>\n<li>visits far fewer nodes, but may not provide optimal solution</li>\n</ul>\n</li>\n</ul>\n<p>A* Search</p>\n<ul>\n<li><strong>avoid expanding paths that are already expensive</strong></li>\n<li>Evaluation function f(n) = g(n) + h(n)\n<ul>\n<li>f(n) = estimated total cost of path through n to goal</li>\n<li>g(n) = cost so far to reach n</li>\n<li>h(n) = estimated cost from n to goal</li>\n<li>expands nodes <strong>in order of increasing f value</strong></li>\n</ul>\n</li>\n<li><em><em>Theorem: If h(n) is admissible, A</em> using TREESEARCH is optimal</em>*\n<ul>\n<li>proof : <img data-src=\"/img/ai/3-3.webp\" alt=\"PROOF1\" /></li>\n<li><img data-src=\"/img/ai/3-4.webp\" alt=\"PROOF2\" /></li>\n</ul>\n</li>\n<li><em><em>Theorem: The search space of A</em> grows exponentially unless the error in the heuristic function(real cost from n to goal - h(n)) grows no faster than the logarithm of the actual path cost</em>*</li>\n<li>Property\n<ul>\n<li>Complete? Yes (unless there are infinitely many nodes with f ≤ f(G) )</li>\n<li>Time? Exponential</li>\n<li>Space? Keeps all nodes in memory</li>\n<li>Optimal? Yes</li>\n<li>Efficient? A* is <strong>optimally efficient</strong> for any heuristic function\n<ul>\n<li>no other optimal algorithm is guaranteed to expand fewer nodes than A*</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Iterative deepening A*(IDAstar)</p>\n<ul>\n<li>Cutoff by f-cost\n<ul>\n<li>upper bound of f(n)</li>\n<li>If don't find solution\n<ul>\n<li>Increase the bound to</li>\n<li>the minimum of the f-values that exceeded the previous bound</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>?? Not suitable for real-valued costs</li>\n<li>Advantage: Linear space</li>\n</ul>\n<p>Recursive best-first search(RBFS)</p>\n<ul>\n<li><strong>only keep track of total cost of the best alternative path</strong></li>\n<li>if best node exceeds alternative f(n)\n<ul>\n<li>unwinds back to the alternative path</li>\n</ul>\n</li>\n<li>Back up value of dropped node to its parent\n<ul>\n<li>if all other paths are worse than it, we should use it again</li>\n</ul>\n</li>\n<li>Advantage: Linear space</li>\n</ul>\n<p>disadvantage of IDA* and RBFS</p>\n<ul>\n<li>not good for graphs\n<ul>\n<li>can’t check for repeated states other than those on current path</li>\n</ul>\n</li>\n<li>use too little memory\n<ul>\n<li>can't use full memory</li>\n</ul>\n</li>\n</ul>\n<p>Simplified Memory-bounded A*(SMA star)</p>\n<ul>\n<li><strong>Expand</strong> the best <strong>leaf until memory is full</strong></li>\n<li>When memory full\n<ul>\n<li>Drop the worst(highest f-value) leaf node</li>\n</ul>\n</li>\n<li>Back up value of dropped node to its parent</li>\n<li>Property\n<ul>\n<li>use full of the memory usage</li>\n<li>complete when meory is enough to store the shallowest solution</li>\n<li>optimal when meory is enough to store the shallowest optimal solution</li>\n</ul>\n</li>\n</ul>\n<p>A heuristic is <strong>consistent</strong> if for every node n, f(n) is non-decreasing along all paths<br />\n<em><em>Theorem: If h(n) is consistent, A</em> using GRAPHSEARCH is optimal</em>*<br />\n(every consistent function is admissible)</p>\n<h3 id=\"Inventing-Better-Heuristic-Functions\">Inventing Better Heuristic Functions</h3>\n<p>quality of heuristic: effective branching factor b*<br />\nIf h2(n) ≥ h1(n) for all n (both admissible), then <strong>h2 dominates h1(far better than)</strong></p>\n<ul>\n<li>Relaxed problems\n<ul>\n<li>problem with fewer restrictions\n<ul>\n<li>admissible and consistent\n<ul>\n<li>exact cost of problem → consistent</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Original: move any tile to adjacent empty squares\n<ul>\n<li>Relaxed: Move from A to B, if A is adjacent to B → Manhattan distance</li>\n<li>Relaxed: Move from A to B, if B is empty → Gaschnig’s heuristic (1979)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Composite heuristics\n<ul>\n<li>h(n) = max (h1(n),…,hm(n))</li>\n</ul>\n</li>\n<li>Weighted evaluation function\n<ul>\n<li>fw(n) = (1-w)g(n) + w h(n)</li>\n</ul>\n</li>\n<li>Linear combination of features\n<ul>\n<li>h(n) = c1x1(n) + … + ckxk(n)</li>\n<li>no assure admissible or consistent</li>\n</ul>\n</li>\n<li>Statistical information</li>\n<li>Search cost\n<ul>\n<li>Good heuristic function should be computed efficiently</li>\n</ul>\n</li>\n<li>Sub-Problems\n<ul>\n<li>solution cost of a sub-problem of a given problem</li>\n</ul>\n</li>\n<li>Example\n<ul>\n<li>Linear Conflict Heuristic\n<ul>\n<li>Given two tiles in their goal row, but reversed in position, additional vertical moves can be added to Manhattan distance</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"http://gitqwerty777.github.io/%E9%9B%BB%E8%85%A6%E5%B0%8D%E5%B1%80%E7%90%86%E8%AB%96/#disjoint-pattern\">Adding Pattern Database Heuristics</a></p>\n<ul>\n<li>pattern database\n<ul>\n<li>store exact solution costs of subproblems</li>\n</ul>\n</li>\n<li>How to make sure heuristic function can add with admissible? → do not affect each other <img data-src=\"/img/ai/3-add.webp\" alt=\"7,8\" />\n<ul>\n<li>disjoint pattern database</li>\n</ul>\n</li>\n<li>The 7-tile database contains 58 million entries\n<ul>\n<li>20 moves needed to solve red tiles</li>\n</ul>\n</li>\n<li>The 8-tile database contains 519 million entries\n<ul>\n<li>25 moves needed to solve blue tiles</li>\n</ul>\n</li>\n<li>Overall heuristic is 20+25=45 moves</li>\n<li>On 15 puzzle, IDA* with pattern database heuristics is about <strong>10 times faster than with Manhattan distance</strong>(Culberson and Schaeffer, 1996)</li>\n<li>can also be applied to Rubik’s Cube</li>\n</ul>\n<h3 id=\"Summary-all-informed-algorithms\">Summary: all informed algorithms</h3>\n<p><img data-src=\"/img/ai/3-ex.webp\" alt=\"\" /></p>\n<h2 id=\"Chap04-Beyond-Classical-Search\">Chap04 Beyond Classical Search</h2>\n<h3 id=\"Local-Search-Algorithms\">Local Search Algorithms</h3>\n<p><strong>Used when the path to the goal does not matter</strong></p>\n<p>State space: the set of all <strong>states reachable from initial state</strong></p>\n<p>local search algorithms</p>\n<ul>\n<li>iterative improvement\n<ul>\n<li>keep a single &quot;current&quot; state and try to improve it</li>\n</ul>\n</li>\n<li>advantage\n<ul>\n<li>use constant space</li>\n<li>useful to solve optimization problems(最佳化問題)</li>\n</ul>\n</li>\n</ul>\n<p>Example</p>\n<ul>\n<li>Traveling Salesperson Problem\n<ul>\n<li>use 1% additional cost than optimal solution</li>\n<li>solved very quickly with thousands of cities</li>\n</ul>\n</li>\n<li>N-queen problem\n<ul>\n<li>can solve N = 1000000 quickly <img data-src=\"/img/ai/4-1.webp\" alt=\"nqueen\" /></li>\n</ul>\n</li>\n<li>Widely used in VLSI layout, airline scheduling, etc</li>\n</ul>\n<p>Three algorithms</p>\n<ul>\n<li>hill climbing</li>\n<li>simulated annealing</li>\n<li>genetic algorithms</li>\n</ul>\n<h4 id=\"Hill-climbing-爬山\">Hill climbing(爬山)</h4>\n<ul>\n<li>greedy local search\n<ul>\n<li>grab the best neighbor as successor</li>\n</ul>\n</li>\n<li>若所有鄰居的值都比現值小，則認為現值是最大值 <img data-src=\"/img/ai/4-hc.webp\" alt=\"\" /></li>\n<li>可能會走到Local maxima <img data-src=\"/img/ai/4-2.webp\" alt=\"\" /></li>\n<li>走到平地的時候\n<ul>\n<li>限制走平地的步數</li>\n</ul>\n</li>\n</ul>\n<p>變形</p>\n<ul>\n<li>Stochastic hill-climbing\n<ul>\n<li>choose uphill moves by 斜度 as probability</li>\n</ul>\n</li>\n<li>First-Choice hill-climbing\n<ul>\n<li>generating successor until it is better than parent</li>\n</ul>\n</li>\n<li>Random-restart hill-climbing\n<ul>\n<li>random generate initial state until goal is found</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Simulated-annealing\">Simulated annealing</h4>\n<ul>\n<li>escape local maxima\n<ul>\n<li><strong>allowing some &quot;bad&quot; moves</strong></li>\n<li>gradually decrease their frequency &amp; size <img data-src=\"/img/ai/4-sa.webp\" alt=\"\" /></li>\n<li>this probability reach Boltzman distribution\n<ul>\n<li>If T decreases slowly enough, then simulated annealing search will find a <strong>global optimum</strong> with probability approaching</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Local-Beam-Search\">Local Beam Search</h4>\n<ul>\n<li>Keep track of <strong>(top) k states</strong> rather than just one</li>\n<li>useful information is passed among all parallel search threads</li>\n<li>Problem: all k states possibly end up on same local hill\n<ul>\n<li>Stochastic Local Beam Search\n<ul>\n<li><strong>choose k successors randomly, biased towards good ones(successor that has better score has more probability to be choosed)</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Genetic-algorithms\"><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5tZS5zanUuZWR1LnR3L2ppbXJvbmcvRnV6enlDb250cm9sL0IxLyVFNyVBQyVBQzklRTUlOTYlQUUlRTUlODUlODMlMjAlRTUlOUYlQkElRTUlOUIlQTAlRTYlQkMlOTQlRTclQUUlOTclRTYlQjMlOTUlRTclQjAlQTElRTQlQkIlOEIucGRm\">Genetic algorithms<i class=\"fa fa-external-link-alt\"></i></span></h4>\n<ul>\n<li>Stochastic local beam search + generate successors from pairs</li>\n<li>Population\n<ul>\n<li>Start with k randomly individuals</li>\n</ul>\n</li>\n<li>Individual(state)\n<ul>\n<li><strong>represented as a string</strong> by finite symbols (often a string of 0s and 1s)</li>\n<li>substring must be meaningful</li>\n</ul>\n</li>\n<li>Fitness function: evaluation of the “goodness” of a given state\n<ul>\n<li>N-queen: number of non-attacking queens pairs (min = 0, max = 8 × 7 / 2 = 28)</li>\n</ul>\n</li>\n<li>Produce successors\n<ul>\n<li>selection, crossover(交配, combine two parents), and mutation(突變)</li>\n</ul>\n</li>\n<li>Schema\n<ul>\n<li>8-Queen: 2468xxxx → 24681357, 24681753 ...</li>\n<li>if average fitness value of schema is better than mean, instances of schema will grow</li>\n</ul>\n</li>\n<li><img data-src=\"/img/ai/4-ga.webp\" alt=\"\" /></li>\n</ul>\n<h3 id=\"Local-search-in-continuous-spaces\">Local search in continuous spaces</h3>\n<ul>\n<li>Most of real-world environments are continuous</li>\n<li>Example: Airport Site Planning\n<ul>\n<li>6-D state space (x1,y1),(x2,y2),(x3,y3)</li>\n<li>Objective function f(x1,y1,x2,y2,x3,y3) = sum of squared distances from each city to its nearest airport</li>\n</ul>\n</li>\n<li>Successor function would return infinitely many states\n<ul>\n<li>Solution\n<ul>\n<li>Discretization(離散化)</li>\n<li>Gradient of the objective function <img data-src=\"/img/ai/4-gra.webp\" alt=\"gradient\" />\n<ul>\n<li>Empirical(經驗主義) gradient\n<ul>\n<li>take a little change in each coordinate to fit discretization</li>\n</ul>\n</li>\n<li>Line search\n<ul>\n<li>repeatly double the size of updating until the value descrease(下坡)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3poLndpa2lwZWRpYS5vcmcvd2lraS8lRTclODklOUIlRTklQTElQkYlRTYlQjMlOTU=\">Newton-Raphson method<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>solve ∇f(x) = 0</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Searching-with-nondeterministic-actions\">Searching with nondeterministic actions</h3>\n<ul>\n<li>solution is not sequence, but a contingency plan(strategy)</li>\n<li>Unreliable Vacuum World\n<ul>\n<li>sometimes can not action will fail</li>\n</ul>\n</li>\n<li>Solutions(nested if-then-else statements)\n<ul>\n<li>AND-OR Search Tree <img data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Andortree.png/796px-Andortree.png\" alt=\"\" />\n<ul>\n<li>P if ((Q&amp;R) | S)</li>\n<li>Q if (T | U)</li>\n<li>and → environment's choice(fail or not)</li>\n<li>or → your own choice</li>\n</ul>\n</li>\n<li>returns a set of possible outcome states</li>\n</ul>\n</li>\n<li>Ex. Slippery Vacuum World\n<ul>\n<li>Movement actions sometimes fail</li>\n<li>use cyclic plans <img data-src=\"/img/ai/4-andor.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Searching-with-partial-observations\">Searching with partial observations</h3>\n<p>Slippery Vacuum World without global sensor</p>\n<ul>\n<li>don't know where it is</li>\n<li>use Belief-State Space (possible physical states) <img data-src=\"/img/ai/4-bss.webp\" alt=\"\" /></li>\n<li>$O(N)$ → $O(2^N)$</li>\n</ul>\n<p>Incremental Belief-State Search</p>\n<ul>\n<li>find a solution that works for state 1</li>\n<li>check if it works for another state\n<ul>\n<li>If not, go back and find an alternative solution for state 1</li>\n</ul>\n</li>\n<li>similar to AND-OR search</li>\n</ul>\n<h3 id=\"Online-Search\">Online Search</h3>\n<ul>\n<li>combine computation and action</li>\n<li>Works good in\n<ul>\n<li>Dynamic or semi-dynamic domains</li>\n<li>Stochastic domains</li>\n<li>Exploration problem in unknown environments</li>\n</ul>\n</li>\n<li>impossible to take into account all possible contingencies(可能性，意外)</li>\n<li>The agent maintains a map of the environment\n<ul>\n<li>Updated based on percept input</li>\n<li>use map to decide next action</li>\n<li>difference with e.g. A*\n<ul>\n<li>online search can only expand the node it is in local map</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Example: Maze</p>\n<ul>\n<li>reach a goal with minimal cost</li>\n<li>Competitive ratio\n<ul>\n<li>compare the cost of the solution path if search space is known</li>\n</ul>\n</li>\n<li>Can be infinite\n<ul>\n<li>agent accidentally reaches dead ends</li>\n</ul>\n</li>\n<li>Assume Safely explorable\n<ul>\n<li>some goal state is reachable from every reachable state</li>\n</ul>\n</li>\n<li>No algorithm can avoid dead ends in all state spaces <img data-src=\"/img/ai/4-adversary.webp\" alt=\"\" /></li>\n</ul>\n<p>Online DFS <img data-src=\"/img/ai/4-online-dfs.webp\" alt=\"\" /></p>\n<ul>\n<li>Untried: action not yet tried</li>\n<li>Unbacktracked: state not yet backtracked(尚未走回去過的state)</li>\n<li>Worst case each node is visited twice\n<ul>\n<li>online iterative deepening approach solves this problem</li>\n</ul>\n</li>\n</ul>\n<p>Online Local Search</p>\n<ul>\n<li>Hill-climbing is already online\n<ul>\n<li>only store one state</li>\n</ul>\n</li>\n<li>Bad performance due to local maxima\n<ul>\n<li>can not random restart in online version</li>\n</ul>\n</li>\n<li>Solution\n<ul>\n<li>Random walk introduces exploration\n<ul>\n<li>time complexity is exponential</li>\n</ul>\n</li>\n<li>Learning real-time A* (LRTA*) <img data-src=\"/img/ai/4-lrta-star.webp\" alt=\"\" />\n<ul>\n<li>Add memory to hill climbing</li>\n<li>Store current best estimate H(s) of cost to reach goal</li>\n<li>H(s) is initially = h(s), the least possible cost\n<ul>\n<li>updated with experience <img data-src=\"/img/ai/4-online-heu.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>O(n^2)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap05-Adversarial-Search-game\">Chap05 Adversarial Search(game)</h2>\n<ul>\n<li>In 1948, Turing met Donald Michie and competed with him in writing a simple chess-­playing algorithm</li>\n<li>The Historical Match in 1997\n<ul>\n<li>Kasparov vs. Deep Blue</li>\n</ul>\n</li>\n<li><strong>Games are idealization of worlds</strong>\n<ul>\n<li>the world state is fully accessible</li>\n<li>the (small number of) actions are well­‐defined</li>\n<li>uncertainty exists due to moves of the opponent</li>\n</ul>\n</li>\n<li>Minimax <img data-src=\"/img/ai/5-minimax.webp\" alt=\"MiniMax\" /></li>\n<li>MaxMax(negamax)\n<ul>\n<li>Advantage of over MiniMax\n<ul>\n<li><strong>Consistent view</strong>: maximize scores</li>\n<li>Subroutine <strong>Min is not required</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Implementation of Pruning</p>\n<ol>\n<li>Pass the current best score to child nodes</li>\n<li>Stop searching and return when a branch exceeds the score from the parent</li>\n</ol>\n<p>Alpha-Beta search <img data-src=\"/img/ai/5-ab.webp\" alt=\"\" /></p>\n<ul>\n<li>only use about $O(b^(d/2))$ time</li>\n</ul>\n<p>Improvement of A-B search</p>\n<ul>\n<li>Search good move first\n<ul>\n<li>Heuristic move ordering\n<ul>\n<li>Checkmate</li>\n<li>Killer\n<ul>\n<li><strong>The move that results in beta pruning earlier</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Iterative deepening\n<ul>\n<li>good moves in the search depth = N are usually good in depth = N+1</li>\n</ul>\n</li>\n<li>Principle variation search\n<ul>\n<li>NegaScout</li>\n</ul>\n</li>\n<li>Zero‐window search\n<ul>\n<li>expect returned value = -3 with beta pruning</li>\n<li>if return -4, real value is between [4, ∞], search again</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Reuse scores for duplicate nodes\n<ul>\n<li>Transposition table\n<ul>\n<li>save board layout and score in hash table</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Risky estimation of best score\n<ul>\n<li>Null-move search\n<ul>\n<li>give up a move once</li>\n<li>returned score serves as an estimate value for pruning</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Extend the depth for some leaf nodes\n<ul>\n<li>Score may not be acccurate if the board situation is not quiescent(靜止，即交換棋子的過程告一段落)\n<ul>\n<li>A series of recapture moves</li>\n<li>Checkmates</li>\n</ul>\n</li>\n<li>Horizon Effect\n<ul>\n<li>threat will be happened in the <strong>deep</strong> depth</li>\n</ul>\n</li>\n<li>Singular Extension\n<ul>\n<li>give more depth to some nodes</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>prune without further consideration\n<ul>\n<li>Forward Pruning</li>\n<li>Probabilistic Cut\n<ul>\n<li>pruning nodes which are merely possible to be good move</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>End Game\n<ul>\n<li>retrograde(倒推)\n<ul>\n<li>reverse the rules to chess to do unmoves</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Stochastic game</p>\n<ul>\n<li>Chance Layer added to search tree\n<ul>\n<li>possible states after stochastic action</li>\n</ul>\n</li>\n<li>expect value\n<ul>\n<li>sum all values in chance layer with probability</li>\n<li>$(4 \\times 0.5 + 6 \\times 0.5) \\div 2 = 5$</li>\n</ul>\n</li>\n</ul>\n<p>Bridge</p>\n<ul>\n<li>inperfect information\n<ul>\n<li>belief state</li>\n</ul>\n</li>\n<li>GIB program\n<ul>\n<li>monte-carlo(handle randomness well)</li>\n<li>explaination-based generalization\n<ul>\n<li>only consider high-card or low-card</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>evaluation function has error</p>\n<ul>\n<li>error is not independent(probably all children)</li>\n<li>consider mean and variance</li>\n</ul>\n<p>Time-limited search</p>\n<ul>\n<li>if utility of node expansion is not higher than their cost(time), do not expand</li>\n</ul>\n<h2 id=\"Chap06-Constraint-Satisfaction-Problems-CSP\">Chap06 Constraint Satisfaction Problems(CSP)</h2>\n<ul>\n<li>\n<p>specialization of general search</p>\n</li>\n<li>\n<p>state is defined by <strong>variables</strong> with values from <strong>domain</strong></p>\n</li>\n<li>\n<p>Example: Map-Coloring</p>\n<ul>\n<li>Variables = set of regions</li>\n<li>Domains = {red,green,blue}</li>\n<li>Constraints: adjacent regions must have different colors</li>\n</ul>\n</li>\n<li>\n<p>Solutions are <strong>complete and consistent</strong> assignments</p>\n<ul>\n<li>consistent: assignment that does not violate any constraint</li>\n</ul>\n</li>\n<li>\n<p>Binary CSP: each constraint relates only two variables</p>\n<ul>\n<li>Constraint graph: vertexs are variables, edges are constraints</li>\n</ul>\n</li>\n</ul>\n<p>CSP types</p>\n<ul>\n<li>Discrete variables\n<ul>\n<li>finite domains\n<ul>\n<li>n variables, domain size d → $O(d^n)$ complete assignments</li>\n<li>Ex. Boolean CSPs(NP-complete)</li>\n</ul>\n</li>\n<li>infinite domains(integers, strings, ...)\n<ul>\n<li>use constraint language, e.g., x1 + 5 ≤ x3</li>\n<li>Ex. job scheduling, variables are start/end days for each job</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Continuous variables\n<ul>\n<li>linear constraints solvable in polynomial time by <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JUJBJUJGJUU2JTgwJUE3JUU4JUE3JTg0JUU1JTg4JTky\">linear programming<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>Ex. quadratic programming</li>\n</ul>\n</li>\n<li>Ex. start/end times for observations</li>\n</ul>\n</li>\n<li>No algorithm exist for solving general nonliear constraints</li>\n</ul>\n<p>constraint types</p>\n<ul>\n<li>Unary constraints involve a single variable\n<ul>\n<li>SA ≠ red</li>\n</ul>\n</li>\n<li>Binary constraints involve pairs of variables,\n<ul>\n<li>SA ≠ WA</li>\n</ul>\n</li>\n<li>3 or more variables\n<ul>\n<li>cryptarithmetic(覆面算，用英文字母來取代0至9的數字) column constraints</li>\n</ul>\n</li>\n<li>Preferences (soft constraints)\n<ul>\n<li>green is better than red</li>\n</ul>\n</li>\n</ul>\n<p>Real-World CSPs</p>\n<ul>\n<li>Assignment problems\n<ul>\n<li>who teaches what class</li>\n</ul>\n</li>\n<li>Timetabling problems\n<ul>\n<li>which class is offered when and where</li>\n</ul>\n</li>\n<li>Transportation scheduling</li>\n</ul>\n<p>Standard Search Formulation (Incrementally)</p>\n<ol>\n<li>Every solution will be found in depth n → prefer to use depth-first search</li>\n<li>Path is irrelevant, so can also use complete-state formulation of local search</li>\n<li>b = (n-l)d at depth = l, hence $n! \\times dn$ leaves</li>\n</ol>\n<h3 id=\"Backtracking-Search\">Backtracking Search</h3>\n<ul>\n<li><strong>depth-first search</strong> for CSPs with <strong>assigning one variable per action</strong></li>\n<li>basic uninformed algorithm for CSP</li>\n<li>by wiki: 回溯法採用試錯的思想，它嘗試分步的去解決一個問題。在分步解決問題的過程中，當它通過嘗試發現現有的分步答案不能得到有效的正確的解答的時候，它將取消上一步甚至是上幾步的計算，再通過其它的可能的分步解答再次嘗試尋找問題的答案 <img data-src=\"/img/ai/4-bt.webp\" alt=\"\" /></li>\n<li>Can solve n-queens for n ≈ 25</li>\n</ul>\n<p>Improve Backtracking</p>\n<ul>\n<li>General-purpose methods can give huge gains in speed\n<ul>\n<li>variable assignment order\n<ul>\n<li>Most constrained variable(minimum remaining values (MRV) heuristic)\n<ul>\n<li>choose the variable with the <strong>fewest legal values</strong></li>\n</ul>\n</li>\n<li>Most constraining variable(degree heuristic)\n<ul>\n<li>choose the variable with <strong>the most constraints</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>value assignment order\n<ul>\n<li>Least Constraining Value\n<ul>\n<li>choose the value that <strong>make the fewest values be deleted in the remaining variables</strong></li>\n<li>give the most flexibility</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>detect inevitable failure early\n<ul>\n<li>Forward Checking\n<ul>\n<li>Keep track of <strong>legal values for unassigned variables</strong></li>\n<li>Terminate search when any variable has no legal value</li>\n<li>Only consider arc-consistency\n<ul>\n<li>the graph already has arc-consistency need not do this</li>\n</ul>\n</li>\n<li>Maintain Arc consistency (MAC)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Combining these heuristics can solve n-queens for n ≈ 1000</li>\n</ul>\n<p>Intelligent Backtracking</p>\n<ul>\n<li>Chronological Backtracking\n<ul>\n<li>when the search fails, back up to the preceding <strong>decision point(多選題)</strong>\n<ul>\n<li>the most recent decision point is revisited</li>\n</ul>\n</li>\n<li>equals to DFS</li>\n</ul>\n</li>\n<li>Backjumping\n<ul>\n<li>backtracks to the most recent variable in the <strong>conflict set(variables that caused the failure)</strong></li>\n</ul>\n</li>\n</ul>\n<p>Constraint Propagation(傳播限制)</p>\n<ul>\n<li>early detection for all failures</li>\n<li>local consistency(graph)\n<ul>\n<li>variable: node, binary constraint: arc</li>\n</ul>\n</li>\n<li>transform all n-ary constraints to binary one</li>\n<li>Node consistency(1-consistency)\n<ul>\n<li>all values in domain satisfy unary constraints</li>\n</ul>\n</li>\n<li>Arc consistency(2-consistency)\n<ul>\n<li>all values in domain satisfy binary constraints</li>\n<li>Algorithm: AC3</li>\n</ul>\n</li>\n<li>Path consistency\n<ul>\n<li>若xi, xj的domain，可以使第三個variable xk的domain滿足{xi, xk}和{xj, xk}的consistency</li>\n</ul>\n</li>\n<li>If variable X loses a value, <strong>neighbors of X</strong> need to be rechecked (detect inconsistency)\n<ul>\n<li>Ex. Arc Consistency</li>\n<li>REMOVE-INCONSISTENT-VALUE: 如果Xi的Domain中，有無法達成 Xi↔Xj 這個條件的值，則刪除　<img data-src=\"/img/ai/6-arc.webp\" alt=\"arc algo\" /></li>\n</ul>\n</li>\n</ul>\n<p>k-Consistency</p>\n<ul>\n<li>for any set of k-1 variables and for any consistent assignment to those variables, a consistent value can always be assigned to the k-th variable</li>\n<li>只要有任何k-1個確定值的變數，必有一確定值可以放在第k個變數</li>\n<li>A graph is <strong>strongly k-consistent</strong> if it is k-consistent and is also (k-1)-consistent, (k-2)-consistent, … 1-consistent\n<ul>\n<li>guarantee to find solution in O(n^2d)</li>\n<li>but establishing strongly k-consistent graph take exponential time</li>\n</ul>\n</li>\n<li>commonly use 2 or 3 consistency in pratice</li>\n</ul>\n<p>Subproblem</p>\n<ul>\n<li>suppose each subproblem has c variables, total n variables</li>\n<li>worst-case cost: $\\frac{n}{c}\\times d^{c}$</li>\n<li>cost is far better\n<ul>\n<li>n = 80, d = 2, c =20 → $2^80$ → $4 \\times 2^{20}$</li>\n</ul>\n</li>\n</ul>\n<p>Local Search for CSPs</p>\n<ul>\n<li>allow unsatisfied states</li>\n<li>value selection by min-conflicts heuristic\n<ul>\n<li>h(n) = total number of violated constraints</li>\n</ul>\n</li>\n<li>Evaluation function of N-queen\n<ul>\n<li>h = number of pairs of queens that are attacking each other</li>\n<li>can solve n-queens for n ≈ 10000000 (O(n) = constant) with high probability</li>\n</ul>\n</li>\n<li>variant\n<ul>\n<li>allow variable move to the same score</li>\n<li>prevent to select recently choosed variables</li>\n</ul>\n</li>\n<li>Critial Ratio of local search for CSP\n<ul>\n<li>In certain ratio, it's hard to solve CSP by local search <img data-src=\"/img/ai/6-ratio.webp\" alt=\"\" /></li>\n<li>剛剛好的限制條件(答案數過少)→數獨題目</li>\n</ul>\n</li>\n<li>Advantage\n<ul>\n<li>can easily change into online setting</li>\n</ul>\n</li>\n</ul>\n<!-- Waltz Labeling Algorithm    \n- used for Edge Labeling ![](/img/ai/6-waltz.webp)\n- 4 ways to label a line, 16 labelings for two line intersects like 「L」 , 64 labelings for two line intersects like 「fork, arrow, or T」\n- there are some rules to make the labels possible\n\nEdge Labeling as CSP  \n- variable: vertexs\n- domain: label set of the corresponding junction\n- constraint: rules of label relationship\n\nWaltz’s Algorithm  \n1. Label each vertex with all possible labelings\n2. Pick a vertex V, for each neighboring vertex, N:  \n\t1. If N and V agree on the label for the line between them, do nothing ; Otherwise, remove the inconsistent labelings\n\t2. Propagate the constraint by repeating the process for all neighboring vertices\n3. Termination condition:\n\t1. Every vertex has been visited at least once\n\t2. There are no more constraints to propagate\n-->\n<p>Theorem of Tree-Structed CSP</p>\n<ul>\n<li>if the constraint graph has no loops, CSP can be solve in $O(nd^2)$ time, which is far better than general CSP($O(d^n)$)\n<ol>\n<li>make problem arc-consistent O(n)</li>\n<li>assign value O(d^2)</li>\n</ol>\n</li>\n<li>Algorithm\n<ol>\n<li>transform problem to a tree</li>\n<li>for i = n to 2, do REMOVE-INCONSISTENT-VALUE(Parent(Xi), Xi)</li>\n<li>for i = 1 to n, assign Xi consistently</li>\n</ol>\n</li>\n</ul>\n<p>Graph reduced to tree</p>\n<ul>\n<li>constraint graph\n<ul>\n<li>given fixed value for some of the nodes to make remaining a tree</li>\n<li>if small cut is found, it is efficient</li>\n</ul>\n</li>\n<li>tree decomposition\n<ul>\n<li>把一部分的圖形變成一個大的node，把這些大的node合成一顆樹</li>\n<li>規則<br />\n3. 若兩個variables本來有相連，他們必須出現在同一個subgraph至少一次\n<ol>\n<li>若一個variable出現多次，則那些subgraph要彼此相連</li>\n<li>每個variable至少要出現一次</li>\n</ol>\n</li>\n<li>make subgraph as small as possible\n<ul>\n<li>tree width: size of the largest subproblem</li>\n</ul>\n</li>\n<li>$O(nd^{w+1})$, w = tree width</li>\n</ul>\n</li>\n</ul>\n<p>Breaking symmetry</p>\n<ul>\n<li>reduce search space by n! by breaking symmetry\n<ul>\n<li>A: red, B: blue ↔ A:blue, B:red</li>\n<li>set A &lt; B\n<ul>\n<li>only one solution A:blue, B:red \\</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Summary</p>\n<ul>\n<li>CSPs are a special kind of problem\n<ul>\n<li>states defined by values of a fixed set of variables</li>\n<li>goal test defined by constraints on variable values</li>\n</ul>\n</li>\n<li>Variable ordering and value selection heuristics help significantly</li>\n<li><strong>Iterative min-conflicts</strong> is usually <strong>effective in practice</strong></li>\n</ul>\n<h2 id=\"Chap07-Logical-Agents\">Chap07 Logical Agents</h2>\n<p>Can agent prove theorems?</p>\n<p>David Hilbert (1862-1943)</p>\n<ul>\n<li>“Hilbert’s Program” [1920]\n<ul>\n<li><strong>mechanize mathematics</strong></li>\n<li><strong>The consistency of more complicated systems, such as real analysis, could be proven by simpler systems</strong></li>\n<li>consistency of all of mathematics could be reduced to basic arithmetic</li>\n<li>所有數學應用一種統一的嚴格形式化的語言，並且按照一套嚴格的規則來使用</li>\n</ul>\n</li>\n<li>Gödel showed that this is <strong>impossible</strong></li>\n<li>Automatic theorem proving simply tries to mechanize what can be mechanized</li>\n</ul>\n<h3 id=\"Godel-s-Incompleteness-Theorem-Kurt-Godel-1931\">Gödel's Incompleteness Theorem (Kurt Gödel, 1931)</h3>\n<ol>\n<li>In any consistent formalization of mathematics that is sufficiently strong to define the concept of <strong>natural numbers</strong>, one can construct a statement that can be <strong>neither proved nor disproved</strong> within that system(任何相容的形式系統，只要蘊涵皮亞諾算術公理，就可以在其中構造在體系中不能被證明的真命題，因此通過推演不能得到所有真命題（即體系是不完備的）。)</li>\n<li>No consistent system can be used to prove its own consistency (can not simultaneously be true and false) 任何相容的形式系統，只要蘊涵皮亞諾算術公理，它就不能用於證明它本身的相容性</li>\n</ol>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2VwaXN0ZS5tYXRoLm50dS5lZHUudHcvYXJ0aWNsZXMvbW0vbW1fMTVfNF8xMS9pbmRleC5odG1s\">《戈德爾不完備定理》，董世平<i class=\"fa fa-external-link-alt\"></i></span><br />\n任一個證明，都必須從某一個公設系統出發。對於自然數我們最常用的公設系統就是皮亞諾公設 (Peano Axioms)， 這些公設中最複雜而且困難的，（不僅對一般的高中，大學生如此，對邏輯學家亦如此），就是大名鼎鼎的「數學歸納法」。藉著數學歸納法及其他的公設， 我們可證明「質數有無窮多個」，問題是「是否所有有關自然數的敘述，只要是對的，就可由皮亞諾公設出發，而得到證明呢？」也就是「皮亞諾公設是否完備?」 若皮亞諾公設具有完備性，那麼所有有關自然數的敘述，若是對的， 就可由皮亞諾公設證明。<br />\n由戈德爾不完備定理而得的一個結論，就是「皮亞諾公設是不完備的！」有些關於自然數的敘述是對的，但皮亞諾公設無法證明它，戈德爾的證明也的確告訴我們如何找到這個敘述。事實上，由戈德爾的證明，我們可得一個算則，給我們一個公設系統，我們就可按此算則，而得到一個算術句型，再經過適當的編譯 (compile)，即可成為此系統內的一個句型，而此句型在此系統內為真，卻無法在此系統內被證明，所以也許我們會覺得皮亞諾公設不具有完備性，這是它的缺點，我們應當找另一個具有完備性的公設系統來代替它，但不完備定理告訴我們，「任何一個具有一致性的公設化系統皆是不完備的！」這也就是為什麼雖然大家明知皮亞諾公設是不完備的，但這個公設系統仍是被普遍的使用，因為任何其他系統，也都是不完備的。也許我們再退一步，皮亞諾公設固然不具有完備性，我們至少可要求它具有一致性吧！也就是皮亞諾公設所證明的，一定是真的，可惜，這一點也做不到，由不完備定理可得另一個結論就是「在皮亞諾公設系統內將無法證明它的一致性！」從某一方面來說，你須要假設比「皮亞諾公設是一致的」更強或相等的假設，你才能證明皮亞諾公設的一致性，當然我們若須要更強的假設，也就須要更大的信心去相信它是對的。同樣的，皮亞諾公設也沒那麼特殊，就像不完備性的結果一樣，由戈德爾不完備定理，任一個足夠強的公設系統，皆無法證明它本身的一致性。</p>\n<ul>\n<li>第一不完備定理\n<ul>\n<li>任何一個足夠強的一致公設系統，必定是不完備的</li>\n<li>即除非這個系統很簡單，(所以能敘述的不多)，或是包含矛盾的， 否則必有一真的敘述不能被證明</li>\n</ul>\n</li>\n<li>第二不完備定理\n<ul>\n<li>任何一個足夠強的一致公設系統，必無法證明本身的一致性</li>\n<li>所以除非這個系統很簡單，否則你若在此系統性，證明了本身的一致性，反而已顯出它是不一致的</li>\n</ul>\n</li>\n</ul>\n<p>哥德爾證明：任何無矛盾的公理體系，只要包含初等算術的陳述，則必定存在一個不可判定命題，用這組公理不能判定其真假。也就是說，「無矛盾」和「完備」是不能同時滿足的！這便是聞名於世的哥德爾不完全性定理。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3Byb2dyYW1tZXJtYWdhemluZS5naXRodWIuaW8vMjAxNDAzL2h0bS9mb2N1czQuaHRtbCMlRTUlQkUlOUUlRTclQTglOEIlRTUlQkMlOEYlRTQlQkElQkElRTclOUElODQlRTglQTclOTIlRTUlQkElQTYlRTglQUQlODklRTYlOTglOEUlRTUlOTMlQTUlRTUlQkUlQjclRTclODglQkUlRTQlQjglOEQlRTUlQUUlOEMlRTUlODIlOTklRTUlQUUlOUElRTclOTAlODY=\">從程式人的角度證明「哥德爾不完備定理」<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"knowledge-based-agents\">knowledge-based agents</h3>\n<p>use logical sentences(邏緝式) to infer conclusions about the world</p>\n<p>KnowledgeBase Agent</p>\n<ul>\n<li>processes of reasoning that operate on representation of knowledge</li>\n<li>knowledge base\n<ul>\n<li>set of sentences (axioms)\n<ul>\n<li>given without derived from other sentences</li>\n</ul>\n</li>\n<li>tell agent how to operate in this environment</li>\n</ul>\n</li>\n<li>inference\n<ul>\n<li>derive new sentences from old</li>\n</ul>\n</li>\n</ul>\n<!-- Declarative Description of Knowledge-Based Agent    \n- Knowledge level\n\t- Specify what the agent knows\n\t\t- The golden gate bridge connects San Francisco with Marin County\n- Logical level\n\t- Specify **sentences encoding** that the agent knows\n\t\t- Links(GGBridge, SF, Marin)\n- Implementation level\n\t- Specify **physical representation** of the sentences at the logical level\n\t\t- ''Links(GGBridge, SF, Marin)''\n-->\n<h3 id=\"Terminology\">Terminology</h3>\n<ul>\n<li>α ╞ β: α entails β\n<ul>\n<li>if there is a model that α is true, β is also true</li>\n<li>α is a stronger assertion than β</li>\n<li>x = 0 ╞ xy = 0</li>\n</ul>\n</li>\n<li>An interpretation is a model for a theory if it assigns true to each formula in the set</li>\n<li>A formula is satisfiable if it is true in at least one model\n<ul>\n<li>m satisfies α → m is a model of α</li>\n</ul>\n</li>\n<li>A formula is valid if\n<ul>\n<li>it is true under all possible interpretations</li>\n<li>Its negation is not satisfiable</li>\n</ul>\n</li>\n</ul>\n<p>Validity and Satisfiability</p>\n<ul>\n<li><img data-src=\"/img/ai/7-validansatis.webp\" alt=\"\" /></li>\n<li>演繹定理聲稱如果公式 F 演繹自 E，則蘊涵 E → F 是可證明的(就是或它可以自空集推導出來)。用符號表示，如果  $E \\vdash F$ ，則  $\\vdash E \\rightarrow F $\n<ul>\n<li>KB ╞ α if and only if (KB → α) is valid</li>\n</ul>\n</li>\n<li>Relation to Inference\n<ul>\n<li>KB ╞ α if and only if (KB → ~α) is unsatisfiable</li>\n</ul>\n</li>\n</ul>\n<p>Inference Rules</p>\n<ul>\n<li>modus ponenes(推論法則) <img data-src=\"/img/ai/7-modusponens.webp\" alt=\"\" /></li>\n<li>and-elimination <img data-src=\"/img/ai/7-andemi.webp\" alt=\"\" /></li>\n<li>Propositional Rule of Inference <img data-src=\"/img/ai/7-propositionalInference.webp\" alt=\"\" /></li>\n</ul>\n<h3 id=\"Propositional-Logic\">Propositional Logic</h3>\n<p>Syntax and Semantics</p>\n<ul>\n<li>symbol\n<ul>\n<li>assigned by true or false</li>\n<li>literal: symbol or ~symbol</li>\n<li>constants: True(always true), False(always false)</li>\n</ul>\n</li>\n<li>connectives\n<ul>\n<li>or(disjunction), and(conjunction)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Proof-Methods\">Proof Methods</h3>\n<ul>\n<li>Application of inference rules\n<ul>\n<li>generation proof sentence by inference</li>\n<li>Proof = a sequence of inference rule applications\n<ul>\n<li>Can use inference rules as operators in a standard search algorithm</li>\n</ul>\n</li>\n<li>Typically require transformation</li>\n</ul>\n</li>\n<li>Model checking\n<ul>\n<li>truth table enumeration\n<ul>\n<li>exponential time</li>\n</ul>\n</li>\n<li>improved backtracking\n<ul>\n<li>e.g., Davis-Putnam-Logemann-Loveland (DPLL)</li>\n</ul>\n</li>\n<li>heuristic search in model space (sound but incomplete)\n<ul>\n<li>e.g., min-conflicts-like hill-climbing algorithms</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Conjunctive Normal Form</p>\n<ul>\n<li>any propositional formula can be transform to conjunctive normal form</li>\n<li>(or or ...) and (or or ...) and (or or ...) ...</li>\n<li>each () is a clause</li>\n<li>Convert normal formula to CNF\n<ul>\n<li><img data-src=\"/img/ai/7-cnf-convert.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Example: <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvSHVudF90aGVfV3VtcHVz\">Wumpus<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>Using Resolution(歸結) inference rule\n<ul>\n<li>$\\frac{\\Gamma_1 \\cup\\left{ \\ell\\right} ,,,, \\Gamma_2 \\cup\\left{ \\overline{\\ell}\\right} }{\\Gamma_1 \\cup\\Gamma_2}|\\ell|$</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Testing-Validity\">Testing Validity</h3>\n<ul>\n<li>truth tables\n<ul>\n<li>exponential time</li>\n</ul>\n</li>\n<li>Resolution</li>\n<li>Forward &amp; backward chaining</li>\n<li>DPLL</li>\n<li>Local Search Methods\n<ul>\n<li>Complete backtracking search algorithms\n<ul>\n<li>DPLL algorithm (Davis, Putnam, Logemann, Loveland)</li>\n</ul>\n</li>\n<li>Incomplete local search algorithms\n<ul>\n<li>WalkSAT algorithm</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Resolution\">Resolution</h3>\n<ul>\n<li>Sound\n<ul>\n<li>inference that derives only entailed sentences</li>\n<li>if KB is true, then any sentence α derived from KB by sound inference is also true</li>\n</ul>\n</li>\n<li>Completeness\n<ul>\n<li>if it can derive any sentence that is entailed</li>\n</ul>\n</li>\n</ul>\n<p>Resolution refutation is sound(可靠) and refutation complete(完備) for propositional logic</p>\n<ul>\n<li>\n<p>If we derive a contradiction, then the conclusion follows from the axioms</p>\n</li>\n<li>\n<p>If we can’t apply any more, then the conclusion cannot be proved from the axioms</p>\n</li>\n<li>\n<p>A formal system S is refutation-complete if it is able to derive false from every unsatisfiable set of formulas</p>\n</li>\n<li>\n<p>KB ╞ α if and only if (KB → ~α) is unsatisfiable</p>\n<ul>\n<li>proof KB ╞ α by showing (KB ^ ~α) is unsatisfiable</li>\n</ul>\n</li>\n</ul>\n<p>Binary Resolution Step<br />\nFor any two clauses C1 and C2</p>\n<ul>\n<li>Find a literal L1 in C1 that is complementary to a literal L2 in C2</li>\n<li>Delete L1 and L2 from C1 and C2 respectively</li>\n<li>Construct the disjunction of the remaining clauses</li>\n<li>The constructed clause is a resolvent of C1 and C</li>\n<li>Ex. $\\frac{a \\vee b, \\quad \\neg a \\vee c}{b \\vee c}$</li>\n<li>put P1,2 into clause set to check whether &quot;~P1,2 is in KB&quot; <img data-src=\"/img/ai/7-resolution.webp\" alt=\"\" />\n<ul>\n<li>Proof by contradiction：The derivation of [] indicates that the database of clauses is inconsistent\n<ul>\n<li>P1,2 <strong>is</strong> in KB</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Resolution algorithm <img data-src=\"/img/ai/7-resolution-algo.webp\" alt=\"\" /></p>\n<h3 id=\"Propositional-Horn-Clauses\">Propositional Horn Clauses</h3>\n<ul>\n<li>At most one positive literal</li>\n<li>Satisfiability can be tested in linear time</li>\n<li>Resolution is fast for Horn clauses, and very slow in non-Horn clauses\n<ul>\n<li>resolve two horns → one horn</li>\n</ul>\n</li>\n<li>Basis of Prolog\n<ul>\n<li>Head:-body</li>\n</ul>\n</li>\n<li>inference done by forward and backward chaining</li>\n</ul>\n<h4 id=\"Forward-and-Backward-Chaining\">Forward and Backward Chaining</h4>\n<ul>\n<li>\n<p>Horn Form (restricted)</p>\n<ul>\n<li>KB = conjunction of Horn clauses</li>\n</ul>\n</li>\n<li>\n<p>Horn clause =</p>\n<ul>\n<li>proposition symbol, or</li>\n<li>(conjunction of symbols) =&gt; symbol</li>\n</ul>\n</li>\n<li>\n<p>Modus Ponens(肯定前件)(for Horn Form): complete for Horn KBs</p>\n<ul>\n<li>used with forward chaining or backward chaining</li>\n<li>run in linear time</li>\n</ul>\n</li>\n<li>\n<p>Forward Chaining</p>\n<ul>\n<li>fire any rule whose premises are satisfied in the KB, add its conclusion to the KB, until query is found</li>\n<li><img data-src=\"/img/ai/7-forward-chaining.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>Backward chaining</p>\n<ul>\n<li>work backwards from the query q to prove q by BC, check if q is known already, or prove all premises of q</li>\n<li>Avoid loops\n<ul>\n<li>check if new subgoal is already on the goal stack</li>\n</ul>\n</li>\n<li>Avoid repeated work\n<ul>\n<li>check new subgoal</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Forward vs. backward chaining</p>\n<ul>\n<li>both sound and complete for Horn KB</li>\n<li>FC is data-driven, automatic, unconscious processing\n<ul>\n<li>e.g., object recognition, routine decisions</li>\n<li>May do <strong>lots of work that is irrelevant to the goal</strong></li>\n</ul>\n</li>\n<li>BC is goal-driven, appropriate for problem-solving,\n<ul>\n<li>e.g., Where are my keys? How do I get into a PhD program?</li>\n<li>Complexity of BC can be much less than linear in size of KB</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Davis-Putnam-Procedure-DPLL\">Davis-Putnam Procedure(DPLL)</h3>\n<ul>\n<li>Introduced by Davis &amp; Putnam in 1960</li>\n<li>Modified by Davis, Logemann &amp; Loveland in 1962 [DPLL]\n<ul>\n<li>Resolution rule replaced by splitting rule</li>\n<li>Trades space for time</li>\n</ul>\n</li>\n</ul>\n<p>DPLL</p>\n<ul>\n<li>recursive, depth-first enumeration of possible models\n<ul>\n<li>determine if an input CNF is satisfiable with the following</li>\n</ul>\n</li>\n</ul>\n<p>Improvements</p>\n<ul>\n<li>Early termination\n<ul>\n<li>A clause is true if any literal is true(用or相連)</li>\n<li>A sentence is false if any clause is false(因為用and相連)</li>\n</ul>\n</li>\n<li>Unit clause heuristic\n<ul>\n<li>only one non-false literal in the clause\n<ul>\n<li>The only literal in a unit clause must be true</li>\n</ul>\n</li>\n<li>a clause with just one literal (i.e. all other literals are assigned false)</li>\n</ul>\n</li>\n<li>Pure symbol heuristic\n<ul>\n<li>a symbol that always appears with the same sign in all clauses</li>\n<li>Ex. A and ~A would not both appear in a sentence if A  is pure</li>\n<li>Make a pure symbol literal true\n<ul>\n<li>在全設成true時, KB自然是true</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>DPLL(continue)</p>\n<ul>\n<li>Unit propagation</li>\n<li>Example <img data-src=\"/img/ai/7-dpll.webp\" alt=\"\" /></li>\n<li><img data-src=\"/img/ai/7-dpll-algo.webp\" alt=\"\" /></li>\n<li><strong>backtracking search</strong> for a model of the formula</li>\n<li>Interpretations are examined in a <strong>sequential</strong> manner\n<ul>\n<li>DPLL(KB, p←TRUE) is testing interpretations if p is TRUE</li>\n<li>DPLL(KB, p←FALSE) is testing interpretations if p is FALSE</li>\n</ul>\n</li>\n<li>For each interpretation, a reason is found that the formula is false in it<br />\n•Such a sequential search of interpretations is very fast<br />\n–DPLL is much faster than propositional resolution for non-Horn clauses<br />\n•Very fast data structures developed<br />\n•Popular for hardware verification</li>\n</ul>\n<h2 id=\"Chap08-First-Order-Logic\">Chap08 First-Order Logic</h2>\n<p>How Do Humans Process Knowledge?</p>\n<ul>\n<li>people process the words to form some kind of nonverbal representation, which we call <strong>memory</strong></li>\n<li>Logic as a representation of the World <img data-src=\"/img/ai/8-logic-representation.webp\" alt=\"\" /></li>\n</ul>\n<p>Sapir-Whorf Hypothesis</p>\n<ul>\n<li>The language we speak profoundly influences the way in which we think and make decisions\n<ul>\n<li>setting up the category structure by which we divide up the world into different sorts of objects\n<ul>\n<li>Eskimos have many words for snow and thus experience snow in a different way</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Two way to think(??)\n<ul>\n<li>aware of the distinctions only by learning the words</li>\n<li>distinctions emerge from individual experience and become matched with the words<br />\n<img data-src=\"/img/ai/8-inference-procedure.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Logics</p>\n<ul>\n<li>A logic consists of the following:\n<ul>\n<li>A formal system describing states of affairs\n<ul>\n<li>Syntax</li>\n<li>Semantics</li>\n</ul>\n</li>\n<li>proof theory – a set of rules for deducing the entailments of a set of sentences</li>\n</ul>\n</li>\n<li>Ontological commitments\n<ul>\n<li>FOL: facts, objects, relations</li>\n<li>Probability theory: facts</li>\n</ul>\n</li>\n<li>Epistemological commitments\n<ul>\n<li>What an agent believes about facts, e.g. FOL: true/false/unknown probability theory: degree of belief [0..1]</li>\n</ul>\n</li>\n</ul>\n<p>Logical Truth and Belief</p>\n<ul>\n<li>Ontological Commitment: What exists in the world — TRUTH</li>\n<li>Epistemoligical Commitment: What an agent believes about facts — BELIEF</li>\n<li><img data-src=\"/img/ai/8-logic-table.webp\" alt=\"\" /></li>\n</ul>\n<p>(重複？)<br />\nTerminology</p>\n<ul>\n<li>Propositional constants: true, false</li>\n<li>Interpretation\n<ul>\n<li>Truth assignments to propositional symbols</li>\n<li>Truth-functional meaning of logical connectives</li>\n</ul>\n</li>\n<li>Theory: a set of formulas in logic</li>\n<li>An interpretation is a model for a theory if it assigns true to each formula in the set.\n<ul>\n<li>A formula is satisfiable if it has (at least) a model</li>\n<li>A formula is valid if</li>\n<li>It is true under all possible interpretations<br />\n– Its negation is not satisfiable.</li>\n</ul>\n</li>\n</ul>\n<p>Propositional Logic</p>\n<ul>\n<li>Propositional logic is declarative</li>\n<li>Propositional logic allows partial/disjunctive/negated information\n<ul>\n<li>(unlike most data structures and databases)</li>\n</ul>\n</li>\n<li>Propositional logic is compositional:\n<ul>\n<li>meaning of B1,1 ∧ P1,2 is derived from meaning of B1,1 and of P1,2</li>\n</ul>\n</li>\n<li>Meaning in propositional logic is context-independent\n<ul>\n<li>(unlike natural language, where meaning depends on context)</li>\n</ul>\n</li>\n<li><strong>Propositional logic has very limited expressive power</strong>\n<ul>\n<li>unlike natural language</li>\n<li>E.g., cannot say &quot;pits cause breezes in adjacent squares“\n<ul>\n<li>except by writing one sentence for each square</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>wumpus-world agent using propositional logic<br />\n→ 64 distinct proposition symbols, 155 sentences<br />\ncontains &quot;physics&quot; sentences for every single square<br />\na lot of clauses</p>\n<p>First-Order Logic</p>\n<ul>\n<li>propositional logic assumes the world contains facts</li>\n<li>first-order logic assumes the world contains\n<ul>\n<li>Objects: people, houses, numbers, colors, baseball games, wars, …</li>\n<li>Relations: red, round, prime, brother of, bigger than, part of, comes between, …</li>\n<li>Functions: father of, best friend, one more than, plus, …</li>\n</ul>\n</li>\n</ul>\n<p>Syntax of FOL: Basic elements</p>\n<ul>\n<li>Constants\n<ul>\n<li>KingJohn, 2, NUS,...</li>\n</ul>\n</li>\n<li>Predicates\n<ul>\n<li>Brother, &gt;,...</li>\n</ul>\n</li>\n<li>Functions\n<ul>\n<li>Sqrt, LeftLegOf,...</li>\n</ul>\n</li>\n<li>Variables\n<ul>\n<li>x, y, a, b,...</li>\n</ul>\n</li>\n<li>Connectives\n<ul>\n<li>¬, ⇒, ∧, ∨, ⇔</li>\n</ul>\n</li>\n<li>Equality\n<ul>\n<li>=</li>\n</ul>\n</li>\n<li>Quantifiers\n<ul>\n<li>∀, ∃</li>\n</ul>\n</li>\n</ul>\n<p>Atomic sentences</p>\n<ul>\n<li>Atomic sentence = predicate (term1,...,termn) or term1 = term2</li>\n<li>Term = function (term1,...,termn) or constant or variable</li>\n<li>Examples\n<ul>\n<li>King John is the brother of Richard the Lion Heart\n<ul>\n<li>Brother(KingJohn,RichardTheLionheart)</li>\n</ul>\n</li>\n<li>Richard’s left leg is longer than King John’s\n<ul>\n<li>Greater-than(Length(LeftLegOf(Richard)),Length(LeftLegOf(KingJohn)))</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Complex sentences</p>\n<ul>\n<li>Complex sentences are made from atomic sentences using connectives\n<ul>\n<li>¬S,S1 ∧ S2,S1 ∨ S2,S1 ⇒ S2,S1 ⇔ S2</li>\n</ul>\n</li>\n<li>Examples\n<ul>\n<li>Sibling(KingJohn,Richard) ⇒ Sibling(Richard,KingJohn)</li>\n</ul>\n</li>\n</ul>\n<p>Truth in First-Order Logic(??)</p>\n<ul>\n<li>Sentences are true with respect to a model and an interpretation</li>\n<li>Model\n<ul>\n<li>objects (domain elements)</li>\n<li>relations among objects</li>\n</ul>\n</li>\n<li>Interpretation specifies referents for\n<ul>\n<li>constant symbols → objects</li>\n<li>predicate symbols → relations</li>\n<li>function symbols → functional relations</li>\n</ul>\n</li>\n<li>An atomic sentence predicate(term1,...,termn) is true iff the objects referred to by term1,...,termn are in the relation referred to by predicate</li>\n</ul>\n<p>Models for FOL</p>\n<ul>\n<li>We can enumerate the models for a given KB vocabulary\n<ul>\n<li>For each number of domain elements n from 1 to ∞</li>\n</ul>\n</li>\n<li>Computing entailment by enumerating the models is not easy</li>\n<li><img data-src=\"/img/ai/8-fol-model.webp\" alt=\"\" /></li>\n</ul>\n<p>Knowledge Engineering in FOL</p>\n<ol>\n<li>Identify the task</li>\n<li>Assemble the relevant knowledge</li>\n<li>Decide on a vocabulary of predicates, functions, and constants</li>\n<li>Encode general knowledge about the domain</li>\n<li>Encode a description of the specific problem instance</li>\n<li>Pose queries to the inference procedure and get answers</li>\n<li>Debug the knowledge base</li>\n</ol>\n<p>Domain: Electronic Circuits(Adder)</p>\n<ul>\n<li>Identify the task\n<ul>\n<li>Does the circuit actually add properly?</li>\n</ul>\n</li>\n<li>Assemble the relevant knowledge\n<ul>\n<li>Composed of wires and gates</li>\n<li>Types of gates (AND, OR, XOR, NOT)</li>\n<li>Connections between terminals</li>\n<li>Irrelevant: size, shape, color, cost of gates</li>\n</ul>\n</li>\n<li>Decide on a vocabulary\n<ul>\n<li>Alternatives\n<ul>\n<li>Type(X1) = XOR</li>\n<li>Type(X1, XOR)</li>\n<li>XOR(X1)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>General Domain Knowledge\n<ul>\n<li>∀t1,t2 Connected(t1, t2) ⇒ Signal(t1) = Signal(t2)</li>\n<li>∀t Signal(t) = 1 ∨ Signal(t) = 0</li>\n<li>1 ≠ 0</li>\n<li>∀t1,t2 Connected(t1, t2) ⇒ Connected(t2, t1)</li>\n<li>∀g Type(g) = OR ⇒ Signal(Out(1,g)) = 1 ⇔ ∃n Signal(In(n,g)) = 1</li>\n<li>∀g Type(g) = AND ⇒ Signal(Out(1,g)) = 0 ⇔ ∃n Signal(In(n,g)) = 0</li>\n<li>g Type(g) = XOR ⇒ Signal(Out(1,g)) = 1 ⇔ Signal(In(1,g)) ≠ Signal(In2,g))</li>\n<li>∀g Type(g) = NOT ⇒ Signal(Out(1,g)) ≠ Signal(In(1,g))</li>\n</ul>\n</li>\n<li>Specific Problem Instance\n<ul>\n<li>Type(X1) = XOR Type(X2) = XOR</li>\n<li>Type(A1) = AND Type(A2) = AND</li>\n<li>Type(O1) = OR</li>\n<li>Connected(Out(1,X1),In(1,X2)) Connected(In(1,C1),In(1,X1))</li>\n<li>Connected(Out(1,X1),In(2,A2)) Connected(In(1,C1),In(1,A1))</li>\n<li>Connected(Out(1,A2),In(1,O1)) Connected(In(2,C1),In(2,X1))</li>\n<li>Connected(Out(1,A1),In(2,O1)) Connected(In(2,C1),In(2,A1))</li>\n<li>Connected(Out(1,X2),Out(1,C1)) Connected(In(3,C1),In(2,X2))</li>\n<li>Connected(Out(1,O1),Out(2,C1)) Connected(In(3,C1),In(1,A2))</li>\n</ul>\n</li>\n<li>Query\n<ul>\n<li>What are the possible sets of values of all the terminals for the adder circuit?</li>\n<li>∃i1,i2,i3,o1,o2 Signal(In(1,C_1)) = i1 ∧ Signal(In(2,C1)) = i2 ∧ Signal(In(3,C1)) = i3 ∧ Signal(Out(1,C1)) = o1 ∧ Signal(Out(2,C1)) = o2</li>\n</ul>\n</li>\n</ul>\n<p>Domain: Kinship(親屬關係)</p>\n<ul>\n<li>Brothers are siblings\n<ul>\n<li>∀x,y Brother(x,y) ⇔ Sibling(x,y)</li>\n</ul>\n</li>\n<li>One's mother is one's female parent\n<ul>\n<li>∀m,c Mother(c) = m ⇔ (Female(m) ∧ Parent(m,c))</li>\n</ul>\n</li>\n<li>“Sibling” is symmetric\n<ul>\n<li>∀x,y Sibling(x,y) ⇔ Sibling(y,x)</li>\n</ul>\n</li>\n<li>A first cousin is a child of a parent’s sibling\n<ul>\n<li>∀x,y FirstCousin(x,y) ⇔ ∃p,ps Parent(p,x) ∧ Sibling(ps,p) ∧ Parent(ps,y)</li>\n</ul>\n</li>\n</ul>\n<p>Domain: Set</p>\n<ul>\n<li>∀s Set(s) ⇔ (s = {} ) ∨ (∃x,s2 Set(s2) ∧ s = {x|s2})</li>\n<li>¬∃x,s {x|s} = {}</li>\n<li>∀x,s x ∈ s ⇔ s = {x|s}</li>\n<li>∀x,s x ∈ s ⇔ [ ∃y,s2} (s = {y|s2} ∧ (x = y ∨ x ∈ s2))]</li>\n<li>∀s1,s2 s1 ⊆ s2 ⇔ (∀x x ∈ s1 ⇒ x ∈ s2)</li>\n<li>∀s1,s2 (s1 = s2) ⇔ (s1 ⊆ s2 ∧ s2 ⊆ s1)</li>\n<li>∀x,s1,s2 x ∈ (s1 ∩ s2) ⇔ (x ∈ s1 ∧ x ∈ s2)</li>\n<li>∀x,s1,s2 x ∈ (s1 ∪ s2) ⇔ (x ∈ s1 ∨ x ∈ s2)</li>\n</ul>\n<p>Universal Qantification</p>\n<ul>\n<li>∀<variables> <sentence>\n<ul>\n<li>Everyone at NTU is smart\n<ul>\n<li>∀x At(x,NTU) ⇒ Smart(x)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>equivalent to the conjunction of instantiations(例證來源) of P\n<ul>\n<li>At(KingJohn,NTU) ⇒ Smart(KingJohn) ∧ At(Richard,NTU) ⇒ Smart(Richard) ∧ At(Mary,NTU) ⇒ Smart(Mary) ...</li>\n</ul>\n</li>\n<li>Common Mistake\n<ul>\n<li>Typically, ⇒ is the main connective with ∀</li>\n<li>Wrong: using ∧ as the main connective with ∀</li>\n<li>∀x At(x,NTU) ∧ Smart(x) means “Everyone is at NTU and everyone is smart”</li>\n</ul>\n</li>\n</ul>\n<p>Existential Quantification</p>\n<ul>\n<li>∃<variables> <sentence>\n<ul>\n<li>Someone at NTU is smart\n<ul>\n<li>∃x At(x,NTU) ∧ Smart(x)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>equivalent to the disjunction of instantiations of P\n<ul>\n<li>At(KingJohn,NTU) ∧ Smart(KingJohn) ∨ At(Richard,NTU) ∧ Smart(Richard) ∨ At(Mary,NTU) ∧ Smart(Mary) ∨ ...</li>\n</ul>\n</li>\n<li>Typically, ∧ is the main connective with ∃\n<ul>\n<li>Common mistake: using ⇒ as the main connective with ∃</li>\n<li>∃x At(x,NTU) ⇒ Smart(x) <strong>is true if there is anyone who is not at NTU!</strong></li>\n</ul>\n</li>\n</ul>\n<p>Properties of Quantifiers</p>\n<ul>\n<li>∀x ∀y = ∀y ∀x</li>\n<li>∃x ∃y = ∃y ∃x</li>\n<li>∃x ∀y ≠ ∀y ∃x\n<ul>\n<li>∃x ∀y Loves(x,y)\n<ul>\n<li>“There is a person who loves everyone in the world”</li>\n</ul>\n</li>\n<li>∀y ∃x Loves(x,y)\n<ul>\n<li>“Everyone in the world is loved by at least one person”</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Quantifier duality\n<ul>\n<li>each can be expressed using the other</li>\n<li>∀x Likes(x,IceCream) ↔ ¬∃x ¬Likes(x,IceCream)</li>\n<li>∃x Likes(x,Broccoli) ↔ ¬∀x ¬Likes(x,Broccoli)</li>\n</ul>\n</li>\n</ul>\n<p>Unification</p>\n<ul>\n<li>To unify Knows(John,x) and Knows(y,z)\n<ul>\n<li>MGU = { y/John, x/z }</li>\n</ul>\n</li>\n<li>There is a single most general unifier (MGU) that is unique up to renaming of variables</li>\n<li>We can get the inference immediately if we can find a substitution θ such that King(x) and Greedy(x) match King(John) and Greedy(y)</li>\n<li>Unify(α,β) = θ if αθ = βθ</li>\n<li><img data-src=\"/img/ai/8-unification.webp\" alt=\"\" /></li>\n<li><img data-src=\"/img/ai/8-unify-algo.webp\" alt=\"\" /></li>\n<li>Standardizing apart eliminates overlap of variables\n<ul>\n<li>Knows(z17,OJ)</li>\n</ul>\n</li>\n</ul>\n<p>Conversion to CNF</p>\n<ul>\n<li>Everyone who loves all animals is loved by someone</li>\n<li>∀x [∀y Animal(y) ⇒ Loves(x,y)] ⇒ [∃y Loves(y,x)]</li>\n</ul>\n<ol>\n<li>Eliminate biconditionals and implications<br />\n∀x [¬∀y ¬Animal(y) ∨ Loves(x,y)] ∨ [∃y Loves(y,x)]</li>\n<li>Move ¬ inwards: ¬∀x p ≡ ∃x ¬p, ¬ ∃x p ≡ ∀x ¬p<br />\n∀x [∃y ¬(¬Animal(y) ∨ Loves(x,y))] ∨ [∃y Loves(y,x)]<br />\n∀x [∃y ¬¬Animal(y) ∧ ¬Loves(x,y)] ∨ [∃y Loves(y,x)]<br />\n∀x [∃y Animal(y) ∧ ¬Loves(x,y)] ∨ [∃y Loves(y,x)]</li>\n<li>Standardize variables: each quantifier should use a different one<br />\n∀x [∃y Animal(y) ∧ ¬Loves(x,y)] ∨ [∃z Loves(z,x)]</li>\n<li></li>\n<li>Skolemize: a more general form of existential instantiation<br />\nEach existential variable is replaced by a Skolem function of the enclosing universally quantified variables<br />\n∀x [Animal(F(x)) ∧ ¬Loves(x,F(x))] ∨ Loves(G(x),x)</li>\n<li>Drop universal quantifiers<br />\n[Animal(F(x)) ∧ ¬Loves(x,F(x))] ∨ Loves(G(x),x)</li>\n<li>Distribute ∨ over ∧<br />\n[Animal(F(x)) ∨ Loves(G(x),x)] ∧ [¬Loves(x,F(x)) ∨ Loves(G(x),x)]</li>\n</ol>\n<p>First-order logic</p>\n<ul>\n<li>objects and relations are semantic</li>\n<li>syntax: constants, functions, predicates, equality, quantifiers</li>\n<li>Increased expressive power: sufficient to define wumpus world</li>\n</ul>\n<h2 id=\"Reference\">Reference</h2>\n<ul>\n<li>Jane Hsu 上課講義</li>\n<li>Artificial Intelligence: A Modern Approach</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2FpbWEuY3MuYmVya2VsZXkuZWR1L2luc3RydWN0b3JzLmh0bWw=\">http://aima.cs.berkeley.edu/instructors.html<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jcy51YmMuY2EvfmhraG9zcmF2L2FpLzMxMC0yMDExLmh0bWw=\">http://www.cs.ubc.ca/~hkhosrav/ai/310-2011.html<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpYm9va3Mub3JnL3dpa2kvQXJ0aWZpY2lhbF9JbnRlbGxpZ2VuY2U=\">https://en.wikibooks.org/wiki/Artificial_Intelligence<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["人工智慧","搜尋演算法","First-Order Logic"]},{"title":"Clean Code(無瑕的程式碼)心得","url":"/cleancode/","content":"<h2 id=\"Chap01-動機\">Chap01 動機</h2>\n<ol>\n<li>神就藏在細節裡: 一致性的縮排是程式低錯誤率的最顯著指標</li>\n<li>Later equals NEVER: 不及時清理 → 累積愈多難看的程式碼 → 愈難清理，所以更不想清理 → 直到修改的成本太高，只好重寫</li>\n<li>不夠好的程式碼使維護成本太高(你看得懂自己寫的code嗎？)</li>\n</ol>\n<p>讓開發速度變快的方法：隨時保持clean code</p>\n<h2 id=\"Chap02-Clean-Code-的定義\">Chap02 Clean Code 的定義</h2>\n<p>認為自己的code<strong>應該要有的樣子</strong></p>\n<p>CleanCode學派(作者)對此的定義</p>\n<ul>\n<li>每個函式、類別、模組都能表達<strong>單一意圖</strong>，降低程式相依性</li>\n<li>易讀：不該使人猜測程式的意思\n<ul>\n<li>因為在寫新的程式碼前，要先花時間了解舊程式碼</li>\n<li>每個看到的程式，執行結果都與你想得差不多</li>\n</ul>\n</li>\n<li>抽象化：程式碼不重複</li>\n</ul>\n<h2 id=\"Chap03-原則\">Chap03 原則</h2>\n<blockquote>\n<p>任何原則在特殊情形都是可以違反的，不須過於拘泥</p>\n</blockquote>\n<ul>\n<li>童子軍規則：離開的code比剛來時更乾淨</li>\n<li>寫軟體如同寫作，先把想法寫下來，然後開始啄磨，直到讀起來很通順。第一份初稿通常是粗糙而雜亂無章的，修改之後才會改善到想要的樣子。程式設計大師在寫程式時，並不認為自己是在寫程式，而是在說故事。</li>\n<li>寫程式時，只能專注在 「讓程式運作」或「讓程式整潔」其中之一，要先程式能動再清理；或是讓程式架構明確易懂再實作都可以。</li>\n</ul>\n<h3 id=\"有意義的命名\">有意義的命名</h3>\n<ul>\n<li>有辦法唸出來的名稱，愈具體愈好</li>\n<li>用 define, enum, const 代替 常數\n<ul>\n<li><code>enum color&#123;black, white&#125;</code></li>\n<li>86400 → <code>SECOND_PER_DAY</code></li>\n<li>容易了解的數字就不用\n<ul>\n<li><code>circumference = radius * Math.PI * 2</code>: 不用將2換成實際名稱</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>class：名詞或名詞片語\n<ul>\n<li><code>board</code> → <code>chessGameBoard</code></li>\n<li><code>address</code> → <code>portAddress</code>, <code>EmailAddress</code></li>\n<li><code>day</code> → <code>elapsedTimeInDays</code></li>\n</ul>\n</li>\n<li>method：動詞或動詞片語\n<ul>\n<li><code>flag</code> → <code>isFlagged()</code></li>\n<li><code>Complex c = Complex(23.0)</code> → <code>Complex c = Complex.FromRealNumber(23.0)</code>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qYXZhd29ybGQuY29tLnR3L2p1dGUvcG9zdC92aWV3P2JpZD00NCZpZD0yNDgzMCZzdHk9MSZ0cGc9MSZhZ2U9LTE=\">使用靜態工廠<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>對特定功能使用一致的用詞\n<ul>\n<li><code>fetch</code>, <code>retreive</code>, <code>get</code> ...</li>\n</ul>\n</li>\n<li>避免 <code>data</code>, <code>info</code>, <code>manager</code> 等意義較廣的字\n<ul>\n<li><code>accountList</code> → <code>accountGroup</code> (除非此變數真的是list型態)</li>\n<li><code>add()</code> → <code>insert()</code>, <code>append()</code></li>\n</ul>\n</li>\n<li>使用專有名詞\n<ul>\n<li><code>jobqueue</code></li>\n<li><code>timestamp</code></li>\n</ul>\n</li>\n<li>使用範圍較大的變數用較長的名稱\n<ul>\n<li>愈少用的函數名稱可以愈長</li>\n<li>for迴圈範圍較小，變數可以用<code>i</code>, <code>j</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//which is better?</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; RowNumber; i++)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; ColumnNumber; j++)</span><br><span class=\"line\">\t\t...</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> r = <span class=\"number\">0</span>; r &lt; RowNumber; r++)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> c = <span class=\"number\">0</span>; c &lt; ColumnNumber; c++)</span><br><span class=\"line\">\t\t...</span><br></pre></td></tr></table></figure>\n<h3 id=\"函式\">函式</h3>\n<ul>\n<li>一個函式只做在<strong>同一層級</strong>上的<strong>一件</strong>事情\n<ul>\n<li>以「無法再分割」為標準</li>\n</ul>\n</li>\n<li>長度：小於二十行(或一個螢幕的長度)</li>\n<li>不用switch：switch容易違反\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kb3RibG9ncy5jb20udHcvaGF0ZWxvdmUvYXJjaGl2ZS8yMDEwLzEwLzE2L3NpbmdsZS1yZXNwb25zaWJpbGl0eS1wcmluY2lwbGUuYXNweA==\">單一職責原則<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9hZGFtL2FyY2hpdmUvMjAwOC8wNC8xOC8xMTU5MjgwLmh0bWw=\">開放閉合原則<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>解法：<span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cubW9ua2V5cG90aW9uLm5ldC9nYW1lcHJvZy9wYXR0ZXJuL2Fic3RyYWN0LWZhY3Rvcnk=\">抽象工廠<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>使用switch和多型</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>參數\n<ul>\n<li>愈少愈好($\\leq$ 三個)\n<ul>\n<li>太多參數時需要記順序，像是<code>strcpy()</code></li>\n<li>例外：四維象限中的座標(只算作一個參數)，<code>printf()</code>(只算作兩個參數)</li>\n</ul>\n</li>\n<li>避免用參數當回傳值\n<ul>\n<li>如 <code>void saveResult(FILE* f, int* returnStatus)</code>，使用returnStatus來作為回傳</li>\n<li>解法一：呼叫擁有變數的class，用其method來修改</li>\n<li>解法二：用return</li>\n<li>用例外處理取代回傳錯誤碼</li>\n</ul>\n</li>\n<li>通常只使用一個參數\n<ul>\n<li>用途一：取得參數的性質\n<ul>\n<li><code>boolean isFileExists(&quot;MyFile&quot;)</code></li>\n</ul>\n</li>\n<li>用途二：使用參數，然後回傳操作後的結果\n<ul>\n<li><code>InputStream fileOpen(&quot;MyFile&quot;)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>避免flag\n<ul>\n<li>代表函式不只做一件事\n<ul>\n<li>有flag和沒有flag做的事不同</li>\n</ul>\n</li>\n<li><code>render(bool isSuite)</code> → <code>renderForSuite()</code> + <code>renderForSingleTest()</code></li>\n</ul>\n</li>\n<li>減少參數的方法\n<ul>\n<li>將多個參數合成一個class</li>\n<li>拆成多個函式</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>命名\n<ul>\n<li>以「不用重複查看函式定義」為原則\n<ul>\n<li><code>write(name)</code> → <code>writeNameField(name)</code></li>\n<li><code>assertEquals(expected, actual)</code> → <code>assertExpectedEqualsActual(expected, actual)</code></li>\n</ul>\n</li>\n<li>描述可能的副作用\n<ul>\n<li><code>getOOS()</code> → <code>createOrReturnOOS()</code>: 呼叫時若無OOS的時候，可能會create</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>指令(command)與查詢(query)分離\n<ul>\n<li>此函式同時有查詢和進行動作的功能: <code>if(setAttribute(&quot;username&quot;, &quot;unclebob&quot;)) ... </code></li>\n<li>改進: <code>if(attributeExists(&quot;username&quot;)) setAttribute(&quot;username&quot;, &quot;unclebob&quot;);</code></li>\n</ul>\n</li>\n<li>適當的靜態(static)宣告\n<ul>\n<li>靜態方法用到的資料都從參數而來，而不是從任何擁有這個方法的物件得來</li>\n</ul>\n</li>\n<li>結構化程式設計準則\n<ul>\n<li>每個函式的區塊都應該只有一個進入點和一個離開點(沒有break, continue, goto，只有一個return)</li>\n<li>在函式夠短的情況下<strong>沒有必要</strong></li>\n</ul>\n</li>\n<li>暴露時序耦合\n<ul>\n<li>必須先執行<code>A()</code>再執行<code>B()</code>的函式</li>\n<li>原本C為member，改成傳參數：<code>cls.A(); cls.B();</code> → <code>C = cls.A(); cls.B(C);</code></li>\n</ul>\n</li>\n<li>常數宣告：放在適當的層級\n<ul>\n<li>將預設的常數放在呼叫的參數，而非被呼叫的函式內\n<ul>\n<li><code>getPageNameOrDefault(request, &quot;FrontPage&quot;)</code> //default is &quot;FrongPage&quot;</li>\n</ul>\n</li>\n<li>放在愈高階就愈容易修改</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"註解\">註解</h3>\n<p>註解是輔助程式碼來表達意圖的工具</p>\n<ul>\n<li>\n<p>有註解代表程式碼不夠易懂</p>\n</li>\n<li>\n<p>愈少愈好</p>\n</li>\n<li>\n<p>與其寫註解，不如把程式碼弄整潔</p>\n</li>\n<li>\n<p>註解通常缺少維護</p>\n<ul>\n<li>容易產生許多過時的註解</li>\n<li>錯誤的註解比沒有註解可怕</li>\n</ul>\n</li>\n<li>\n<p>必要的註解</p>\n<ol>\n<li>版權宣告</li>\n<li>舉例示範</li>\n<li>解釋意圖\n<ul>\n<li>對某個問題的解決方法</li>\n<li>使用的演算法</li>\n<li>解釋自己無法修改的程式碼(函式庫等)</li>\n</ul>\n</li>\n<li>警告\n<ul>\n<li>不希望被修改的地方</li>\n</ul>\n</li>\n<li>暫時記錄：<code>TODO</code>, <code>BUG</code>...</li>\n</ol>\n</li>\n<li>\n<p>糟糕的註解</p>\n<ul>\n<li>浪費時間看，最後被忽略\n<ul>\n<li>沒有提供更多資訊\n<ul>\n<li><code>printBoard() // print board</code></li>\n</ul>\n</li>\n<li>過多的資訊</li>\n<li>被強迫寫的(通常就是不必要的)</li>\n</ul>\n</li>\n<li>已被版本控制軟體取代的功能\n<ul>\n<li>版本變動記錄</li>\n<li>註解掉的程式碼</li>\n</ul>\n</li>\n<li>過度使用標誌\n<ul>\n<li>如 <code>// comment //////////////////</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"排版\">排版</h3>\n<ul>\n<li>偏好小檔案(200-500行)</li>\n<li>報紙型編排：先出現標題(高階概念、演算法)，再來是內容(低階函式)\n<ul>\n<li>最重要的概念先出現，用最少的資訊來表達，再來才是實作細節</li>\n</ul>\n</li>\n<li>垂直距離：類似的概念應盡可能靠近\n<ul>\n<li>空白行用來分隔思緒，概念(類似文章分段)\n<ul>\n<li>做相似工作的函式愈近愈好</li>\n</ul>\n</li>\n<li>變數宣告的位置：靠近變數被使用的地方\n<ul>\n<li>若函式夠短，可在函式最上方宣告</li>\n</ul>\n</li>\n<li>降層準則\n<ul>\n<li>函式後面為其呼叫的函式，易於閱讀</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>將常數宣告放在一個大家比較容易找到的地方</li>\n<li>寬度：不要超過螢幕\n<ul>\n<li>通常會限制在80字\n<ul>\n<li>不過現在都是寬螢幕了，影響不大</li>\n</ul>\n</li>\n<li>使用空白強調運算子的優先權\n<ul>\n<li><code>b*b - 4*a*c</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"物件及資料結構\">物件及資料結構</h3>\n<blockquote>\n<p>你知道的太多了...</p>\n</blockquote>\n<p>變數保持私有的理由，不希望有人依賴此變數，保持一個自由的空間，讓我們能自由的更改變數的型態，或是在突如其來的奇想或衝動時，能自由的變更實現內容的程式碼。</p>\n<p>那為什麼有這麼多的程式設計師，自動替他們的物件加上getter和setter，讓他們的私有度數如同公用變數呢？</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//完全暴露實現</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Point</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">double</span> x;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">double</span> y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//抽象化：無法分辨實現</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> interface Point &#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">getX</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">getY</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setCartesian</span><span class=\"params\">(<span class=\"type\">double</span> x, <span class=\"type\">double</span> y)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">getR</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">getTheta</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setPolar</span><span class=\"params\">(<span class=\"type\">double</span> r, <span class=\"type\">double</span> theta)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>利用抽象化的詞彙來表達資料。這並不是只透過介面及讀取、設定函式就能完成。想辨法找到最能詮釋「資料抽象概念」的方式。<br />\n而最差的作法，則是天真地加上讀取函式及設定函式而已。</p>\n<p>1.物件</p>\n<ul>\n<li>private member，public method</li>\n<li>將實現的過程隱藏(封裝)</li>\n<li>用抽象詞彙表達資料\n<ul>\n<li><code>getGallonsOfGasoline()</code> → <code>getPercentFuelRemaining()</code></li>\n</ul>\n</li>\n<li><strong>要讓每件事物都是一個物件是一個神話</strong>(Java表示：)<br />\n2.資料結構: map, set, array ...</li>\n<li>暴露資料(public member)\n<ul>\n<li>為資料結構設getter和setter是多此一舉</li>\n</ul>\n</li>\n</ul>\n<p>物件與資料結構的互補</p>\n<ul>\n<li>物件：新資料型態的彈性 ↔ 資料結構：新行為的彈性\n<ul>\n<li>資料結構容易添加函式，而不用更改現有的資料結構</li>\n<li>物件容易添加新的類別(繼承)，而不用更改現有的函式</li>\n</ul>\n</li>\n<li>混合體只會得到兩者的缺點</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3poLndpa2lwZWRpYS5vcmcvd2lraS8lRTUlQkUlOTclRTUlQTIlQTglRTUlQkYlOTIlRTglODAlQjMlRTUlQUUlOUElRTUlQkUlOEI=\">The law of Demeter<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>模組不該知道關於它所操縱<strong>物件</strong>的<strong>內部運作</strong></li>\n<li>違反原則: 火車連結\n<ul>\n<li><code>String outputDir = ctxt.getOptions().getScratchDir().getAbsolutePath()</code></li>\n<li>改進(仍然知道底層操作)\n<ul>\n<li><code>Options opts = ctxt.getOptions();</code></li>\n<li><code>File scratchDir = opts.getScratchDir();</code></li>\n<li><code>String outputDir = scratchDir.getAbsolutePath();</code></li>\n</ul>\n</li>\n<li>若 ctxt, options 為資料結構，則以下可行\n<ul>\n<li><code>outputDir = ctxt.options.scratchDir.absolutePath</code></li>\n</ul>\n</li>\n<li>若是物件，則我們應該要告訴 ctxt 去<strong>做某件事情</strong>\n<ul>\n<li>和其他程式碼合併 : <code>BufferedOutputStream bos = ctxt.createScratchFileStream(classFileName)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>可調整的資料應放在高層次</p>\n<ul>\n<li>底層不應存放參數</li>\n<li>放在高階層比較好找，也比較好修改</li>\n</ul>\n<p>One Switch原則</p>\n<ul>\n<li>對於給定的變數，不應該有超過一個以上的switch敘述。在那個唯一的Switch敘述中的多個case，必須建立多型物件以取代其他case。</li>\n</ul>\n<h3 id=\"錯誤處理\">錯誤處理</h3>\n<ul>\n<li>定義正常的流程\n<ul>\n<li>使用<span class=\"exturl\" data-url=\"aHR0cDovL21hcnRpbmZvd2xlci5jb20vZWFhQ2F0YWxvZy9zcGVjaWFsQ2FzZS5odG1s\">特殊情況物件(special case pattern)<i class=\"fa fa-external-link-alt\"></i></span>替代<code>if()</code>檢查\n<ul>\n<li>將特殊情況包在特殊情況物件</li>\n<li>特殊情況物件處理例外</li>\n</ul>\n</li>\n<li>包裹第三方程式庫\n<ul>\n<li>減少依頼，容易更換</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>使用 例外處理(try-catch-finally) 取代回傳error code\n<ul>\n<li>例外處理是「一件事」\n<ul>\n<li>error code 必須在呼叫結束之後立即檢查錯誤</li>\n<li>提取try和catch的內容，成為新函式</li>\n<li>用class包裹例外，此class只處理例外</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>不要傳遞NULL\n<ul>\n<li>要檢查值是不是NULL，很麻煩\n<ul>\n<li>所有函式都不return NULL → 都不用檢查</li>\n</ul>\n</li>\n<li>解決\n<ul>\n<li>回傳特殊情況物件\n<ul>\n<li>例：找不到時，回傳空list</li>\n</ul>\n</li>\n<li>使用例外處理</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Java：<span class=\"exturl\" data-url=\"aHR0cDovL3RlZGR5LWNoZW4tdHcuYmxvZ3Nwb3QudHcvMjAxMS8wNS9jaGVja2VkLW9yLXVuY2hlY2tlZC1leGNlcHRpb25zLTEuaHRtbA==\">使用不檢查型例外：<i class=\"fa fa-external-link-alt\"></i></span>，<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC90ZWRkeXNvZnQvamF2YWNoZWNrZWR1bmNoZWNrZWQtZXhjZXB0aW9ucw==\">(檢查和不檢查型例外)<i class=\"fa fa-external-link-alt\"></i></span>，因為其破壞開放閉合原則，修改低階函式時也需要修改高階函式</li>\n<li>將邊界條件的檢查放置於同一個地方，不要散佈在程式的各個角落</li>\n</ul>\n<h3 id=\"邊界\">邊界</h3>\n<blockquote>\n<p>註：從這章之後大多是一章一個作者，所以頗有矛盾和重複的地方</p>\n</blockquote>\n<p>使用第三方API</p>\n<ul>\n<li>學習性測試\n<ul>\n<li>寫一些測試程式來了解第三方軟體</li>\n<li>第三方軟體改版後也能用來確定行為是否改變</li>\n</ul>\n</li>\n<li>包裹第三方API\n<ul>\n<li><code>public void open() &#123; try&#123;innerPort.open();&#125; ... &#125;</code></li>\n<li>好處\n<ul>\n<li>掌握控制程式的權利</li>\n<li>在API未知的情況可以繼承此interface，創造一個Fake API來測試</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"單元測試\">單元測試</h3>\n<p>有了測試程式(和版本控制系統)就不會害怕修改程式！</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2dsaXlhby5sb2dkb3duLmNvbS9wb3N0cy8yMDE0LzAxLzE4L3NvZnR3YXJlLXRhbGstYWJvdXQtdGVzdC1kcml2ZW4tZGV2ZWxvcG1lbnQtdGVzdC1kcml2ZW4tZGV2ZWxvcG1lbnQtaQ==\">測試驅動開發(TDD)<i class=\"fa fa-external-link-alt\"></i></span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5idXR1bmNsZWJvYi5jb20vQXJ0aWNsZVMuVW5jbGVCb2IuVGhlVGhyZWVSdWxlc09mVGRk\">The Three Rules of TDD<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li>先寫測試程式，再寫對應的實作程式</li>\n<li>只寫<strong>剛好</strong>無法通過的單元測試\n<ol>\n<li>測試無法通過時，應該要修復實作程式</li>\n</ol>\n</li>\n<li>只寫<strong>剛好</strong>能通過測試的程式\n<ol>\n<li>測試無法通過時，只能寫和測試有關的實作程式，不能寫其他功能</li>\n</ol>\n</li>\n</ol>\n<p><strong>測試程式和產品程式一樣重要</strong></p>\n<p>測試方法</p>\n<ul>\n<li>使用涵蓋率工具(Coverage Tool)\n<ul>\n<li>檢查是否每行程式都有被執行過</li>\n</ul>\n</li>\n<li>測試邊界條件</li>\n</ul>\n<p>原則</p>\n<ul>\n<li>測試的程式碼也需要整潔\n<ul>\n<li>最重要的是可讀性，效率是其次</li>\n</ul>\n</li>\n<li>建造-操作-檢查（BUILD-OPERATE-CHECK）\n<ul>\n<li>產生數據，操作之，再檢查正確性</li>\n<li>GIVEN-WHEN-THEN\n<ul>\n<li>Given: 前提、環境</li>\n<li>When: 發生事情</li>\n<li>Then: 預期結果</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>一個測試只用一個assert</li>\n<li>在錯誤的程式碼附近進行詳盡的測試\n<ul>\n<li>因為Bug往往聚集</li>\n</ul>\n</li>\n</ul>\n<p>測試程式的 F.I.R.S.T. 法則</p>\n<ul>\n<li>Fast：快速(足夠快即可)</li>\n<li>Independent：可個別獨立執行</li>\n<li>Repeatable：可在任何環境重複執行</li>\n<li>Self-Validating：輸出bool值(成功/失敗)，而不是記錄檔\n<ul>\n<li>不用做額外的檢查</li>\n</ul>\n</li>\n<li>Timely：先寫測試再實作</li>\n</ul>\n<h3 id=\"類別\">類別</h3>\n<ul>\n<li>凝聚性：方法內使用愈多變數，代表這個方法更屬於這個類別\n<ul>\n<li>為了保持凝聚性，會產生許多小類別</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>把工具放在有許多標記的小型工具箱裡，比少量的大抽屜，然後將所有的東西都丟進去好。</p>\n</blockquote>\n<p>不應該對相依的模組有預先的假設(即邏輯上的相依)，應該清楚的詢問所需的有關訊息(即實體上的相依)。<!--??--></p>\n<h3 id=\"系統\">系統</h3>\n<p>如同建造城市，某些人負責整體規劃，其它人專注在細節執行。<br />\n進行抽象化和模組化，將所有關注的事分離開來</p>\n<ul>\n<li>工廠模式：<strong>將建造和使用分離</strong></li>\n</ul>\n<p>相依性注入<span class=\"exturl\" data-url=\"aHR0cDovL2h1YW4tbGluLmJsb2dzcG90LmNvbS8yMDExLzEwL2RlcGVuZGVuY3ktaW5qZWN0aW9uLTEuaHRtbA==\">(1)<i class=\"fa fa-external-link-alt\"></i></span><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMzA3OTQvd2hhdC1pcy1kZXBlbmRlbmN5LWluamVjdGlvbg==\">(2)<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>控管反轉\n<ul>\n<li>將第二個職責移到其它專注於該職責的物件裡</li>\n</ul>\n</li>\n</ul>\n<p>擴大</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3LyVFNSU4RCU4MSVFNSVBNCVBNyVFNSVCQiVCQSVFOCVBOCVBRCMuRTguQTkuOTUuRTUuODMuQjk=\">誰有辦法預期小鎮的成長，而在鎮上先鋪好六線道高速公路？<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>讓系統一開始就做對，是一個神話</li>\n<li>應該只實現今天的故事(即目前的需求)，然後重構它，並且明天再進行系統的擴充</li>\n</ul>\n</li>\n<li>剖面導向程式設計AOP<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU5JTlEJUEyJUU1JTkwJTkxJUU0JUJFJUE3JUU5JTlEJUEyJUU3JTlBJTg0JUU3JUE4JThCJUU1JUJBJThGJUU4JUFFJUJFJUU4JUFFJUEx\">(1)<i class=\"fa fa-external-link-alt\"></i></span><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuaG9tZS5jYy9Hb3NzaXAvU3ByaW5nR29zc2lwL0FPUENvbmNlcHQuaHRtbA==\">(2)<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>剖面(aspect)\n<ul>\n<li>系統中某個關注點的行為，需要用一致性的方式修改\n<ul>\n<li>如日誌記錄(log)、資料庫、安全性、暫存快取</li>\n<li>紀錄檔功能往往橫跨系統中的每個業務模組，即「橫切」所有有紀錄檔需求的類及方法體</li>\n</ul>\n</li>\n<li>為應用程式基礎架構</li>\n</ul>\n</li>\n<li>保持適當的關注點分離</li>\n</ul>\n</li>\n</ul>\n<p><strong>不需要「先作大型設計」</strong>，因為不希望浪費先前的努力，這個設計會阻止你改進程式架構。</p>\n<p>有時候拖延至最後一刻是最好的作法，這讓我們得以運用最多的資訊進行選擇。</p>\n<p>系統需要特定領域的語言(Domain-Specific Language), 讓領域專家可以把程式寫得像是散文的結構，而且領域概念和實作程式碼相似，減少轉換錯誤。</p>\n<h4 id=\"剖面範例\">剖面範例</h4>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL29wZW5ob21lLmNjL0dvc3NpcC9TcHJpbmdHb3NzaXAvRnJvbVByb3h5VG9BT1AuaHRtbA==\">Java代理機制<i class=\"fa fa-external-link-alt\"></i></span>\n<ol>\n<li>代理可以呼叫被代理物件的函式，也可以進行剖面的行為</li>\n</ol>\n</li>\n<li>Java AOP框架\n<ol>\n<li>Spring AOP</li>\n<li>JBoss AOP</li>\n</ol>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemwzNDUwMzQxL2FydGljbGUvZGV0YWlscy83NjczOTM4\">AspectJ<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n<blockquote>\n<p>一個理想的架構，包含模組化的關注點，每個關注點都用一個普通物件實作。 不同領域之間利用最小侵入性的剖面工具整合。 這樣的架構就可以是測試驅動的(test-driven)，如同程式碼一樣。</p>\n</blockquote>\n<h3 id=\"簡單設計守則\">簡單設計守則</h3>\n<ol>\n<li>執行完所有的測試</li>\n<li>程式重構：重要性 1 &gt; 2 &gt; 3\n<ol>\n<li>消除重複\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3LyVFNiVBOCVBMSVFNiU5RCVCRiVFNiU5NiVCOSVFNiVCMyU5NQ==\">樣版方法(Template Method)<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>大部份設計模式都是在提供消除重複的策略</li>\n<li>物件導向是用來組織模組和消除重複的策略</li>\n</ol>\n</li>\n<li>具表達力</li>\n<li>最小化類別及方法數量</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"平行化\">平行化</h3>\n<blockquote>\n<p>物件是處理過程的抽象化，執行緒是排程的抽象化</p>\n</blockquote>\n<p>將「做什麼」和「何時做」分解開來，像是Web應用的Servlet模型<br />\n當獲得一個網頁請求時，servlet會以非同步方式執行，不需要管理所有的請求，每一個servlet都在其自我的小小世界裡執行。</p>\n<p>缺點</p>\n<ul>\n<li>需要修改程式碼/架構</li>\n<li>速度不一定變快(有overhead)</li>\n<li>很難寫正確，因為很難重現bug</li>\n</ul>\n<p>建議</p>\n<ul>\n<li>將平行化的程式碼和其他程式碼分開</li>\n<li>保護資料\n<ul>\n<li>限制共享資料的存取次數\n<ul>\n<li>減少critical section的使用次數</li>\n</ul>\n</li>\n<li>限制資料的視野\n<ul>\n<li>mutex lock(c), synchronized(java)</li>\n<li>避免在一個共享物件上使用多個方法</li>\n</ul>\n</li>\n<li>使用資料的複本\n<ul>\n<li>由一個執行緒負責合併結果</li>\n<li>每個執行緒盡可能獨立運行</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>測試\n<ul>\n<li>偽造/產生失敗以測試</li>\n<li>讓平行化的程式可以開關平行化的功能</li>\n<li>在不同的平台測試</li>\n<li>執行比處理器數量還多的執行緒\n<ul>\n<li>強迫進行task swapping</li>\n</ul>\n</li>\n<li>調整參數(執行緒數量、重複執行次數)</li>\n<li>正確的關閉程式\n<ul>\n<li>防止deadlock</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pYm0uY29tL2RldmVsb3BlcndvcmtzL2NuL2phdmEvai1jb250ZXN0Lmh0bWw=\">用IBM contest找BUG<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>不一定會照順序執行</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>實作</p>\n<ul>\n<li>ReentrantLock\n<ul>\n<li>一般的鎖</li>\n</ul>\n</li>\n<li>Semaphore號誌\n<ul>\n<li>有計數功能的鎖</li>\n</ul>\n</li>\n<li>CountDownLatch\n<ul>\n<li>先等待指定數量的事件，使得所有的執行緒都有公平的機會，在同時間啟動</li>\n</ul>\n</li>\n</ul>\n<p>模型</p>\n<ul>\n<li>生產-消費\n<ul>\n<li>有限資源</li>\n<li>生產者放工作入queue</li>\n<li>消費者取出工作</li>\n</ul>\n</li>\n<li>讀取-寫入\n<ul>\n<li>平衡reader和writer的需求，避免某一方飢餓(starvation)</li>\n<li>簡單方法：writer等到沒有reader使用時再write\n<ul>\n<li>writer容易starve</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>哲學家用餐\n<ul>\n<li>雙手都拿到刀叉時才能用餐</li>\n<li>大程式的資源爭奪問題</li>\n</ul>\n</li>\n</ul>\n<p>詳見<a href=\"/parallel-programming\">平行程式設計</a></p>\n<h3 id=\"程式碼的異味\">程式碼的異味</h3>\n<blockquote>\n<p>聖人見微以知萌，見端以知末，故見象箸而怖，知天下不足也。<br />\n韓非子．說林上</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU0JUJCJUEzJUU3JUEwJTgxJUU1JUJDJTgyJUU1JTkxJUIz\">程式碼的異味(Code Smell)<i class=\"fa fa-external-link-alt\"></i></span>:<br />\n程式碼中的任何可能導致深層問題的<strong>症狀</strong></p>\n<ol>\n<li>一份檔案有多種程式語言</li>\n<li>明顯該有的行為未實現</li>\n<li>在邊界條件的不正確行為\n<ol>\n<li>封裝邊界條件: 將邊界條件的集中處理\n<ol>\n<li><code>int nextLevel = level+1; //boundary condition</code></li>\n</ol>\n</li>\n</ol>\n</li>\n<li>無視編譯器警告</li>\n<li>否定的判斷式<br />\n2. 改善 <code>if(!buffer.isFull())</code> → <code>if(buffer.isNotFull())</code></li>\n<li>過多的資訊<br />\n4. 類別擁有的變數、方法數量愈少愈好、方法擁有的變數愈少愈好</li>\n<li>不一致性<br />\n5. 命名的一致性：對於同一個物件，在不同函式中的實體使用相同的名稱<br />\n6. 行為的一致性：用同樣的方式來完成所有類似的事</li>\n<li>特色留戀(Feature Envy)<br />\n7. 使用其他物件的getter或setter<br />\n8. 有時候是必要之惡：放入別的物件會違反其他OOP的原則(此例：單一職責、開放閉合原則等)</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//demo of feature envy</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> clas HourlyEmployeeReport&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> HourlyEmployee employee;</span><br><span class=\"line\"></span><br><span class=\"line\">\tString <span class=\"title function_\">reportHours</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> String.Format(</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;Name:%s, Hours:%d.%ld\\n&quot;</span>,</span><br><span class=\"line\">\t\t\temployee.getName(),</span><br><span class=\"line\">\t\t\temployee.getTenthsWorked()/<span class=\"number\">10</span>,</span><br><span class=\"line\">\t\t\temployee.getTenthsWorked()%<span class=\"number\">10</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vemgtdHcvbGlicmFyeS9kbjM4NzU2OC5hc3B4\">30天快速上手 TDD<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdmVyeWl0bWFuL2FydGljbGUvZGV0YWlscy82OTM3NjA0\">The Principles of Good Programming<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["程式","CleanCode","重構","TDD","設計模式"]},{"title":"Makefile 和 CMake 之間的轉換和實作","url":"/cmake/","content":"<!-- RENEW: -->\n<p>http://mqjing.blogspot.tw/2009/09/cmake-how-to-use-cmake.html<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pdGsub3JnL1dpa2kvQ01ha2VfVXNlZnVsX1ZhcmlhYmxlcw==\">CMake 常用變數<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"簡介\">簡介</h2>\n<p>CMake用來產生跨平台的專案建置文件，在windows下它會生成visual studio的專案檔(.sln) codeblock eclipse，在linux下它會生成Makefile。類似工具有autotools和qmake，不過autotools太複雜，qmake只限於qt使用。</p>\n<p>CMake用更抽象的語法來組織項目。例如用math表示數學庫，而不需要再具體指定到底是math.dll還是libmath.so。</p>\n<span id=\"more\"></span>\n<p>類似功能的工具</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zY29ucy5vcmc=\">SCons<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>by python</li>\n</ul>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2FudC5hcGFjaGUub3JnLw==\">Apache ant<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>by java</li>\n</ul>\n</li>\n<li>\n<p>優點</p>\n<ul>\n<li>stable</li>\n<li>fast</li>\n<li>支援Code::Blocks, Xcode等</li>\n</ul>\n</li>\n<li>\n<p>缺點</p>\n<ul>\n<li>需學習語法</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaXRidWNrZXQub3JnL3Njb25zL3Njb25zL3dpa2kvU2NvbnNWc090aGVyQnVpbGRUb29scw==\">專案建置工具比較<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"使用\">使用</h2>\n<h3 id=\"GUI\">GUI</h3>\n<ul>\n<li>command line: <code>cmake</code></li>\n<li>curse-based TUI: <code>ccmake</code></li>\n<li>QT-based GUI: <code>cmake-gui</code></li>\n</ul>\n<h3 id=\"Out-Of-Source-Build\">Out-Of-Source Build</h3>\n<p>將build資料和原始碼分離</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">修改 CMakeLists.txt</span></span><br><span class=\"line\">mkdir build # will generate build files in this folder</span><br><span class=\"line\">cd build</span><br><span class=\"line\">cmake .. # the place that put CMakelists.txt</span><br><span class=\"line\"></span><br><span class=\"line\">cmake -G &quot;Unix Makefiles&quot; [CMakeList.txt path] # 指定生成平台</span><br></pre></td></tr></table></figure>\n<ul>\n<li>執行結束後，build資料夾會出現各項中間檔、makefile 以及執行檔</li>\n</ul>\n<p>優點</p>\n<ol>\n<li>可保持working directory的乾淨</li>\n<li>只要用新的資料夾，就可以產生多個不同的build，也可以隨時刪除</li>\n</ol>\n<h2 id=\"語法\">語法</h2>\n<ul>\n<li>設定變數 <code>set(var hello)</code></li>\n<li>印出訊息 <code>message($&#123;var&#125;)</code></li>\n</ul>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cmake_minimum_required</span> (VERSION <span class=\"number\">2.6</span>) <span class=\"comment\"># minimum executable version of cmake</span></span><br><span class=\"line\"><span class=\"keyword\">project</span>(ex1) <span class=\"comment\"># project name</span></span><br><span class=\"line\"><span class=\"keyword\">add_executable</span>(ex1 main.c) <span class=\"comment\"># build program ex1 from main.c</span></span><br></pre></td></tr></table></figure>\n<p>在不同的資料夾下建立執行檔</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">relative destination</span></span><br><span class=\"line\">cmake --help-variable CMAKE_INSTALL_PREFIX</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">At Install-time use DESTDIR mechanism (Unix Makefiles)</span></span><br><span class=\"line\">make DESTDIR=/tmp/testinstall install</span><br></pre></td></tr></table></figure>\n<h3 id=\"CMake語法\">CMake語法</h3>\n<p>general purpose constructs: <code>set</code>, <code>unset</code>, <code>if</code>, <code>elseif</code>, <code>else</code>, <code>endif</code>, <code>foreach</code>, <code>while</code>, <code>break</code></p>\n<h3 id=\"CMake-變數\">CMake 變數</h3>\n<p>變數不分大小寫，但我習慣性用大寫</p>\n<ul>\n<li>\n<p>變數指定</p>\n<ul>\n<li>CMake 有許多預設變數，以改變基本的運作，用<code>cmake --help-variables-list</code>可以瀏覽</li>\n<li>在檔案內指定\n<ul>\n<li><code>set(CMAKE_INSTALL_PREFIX /home/eric/testinstall)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>平台相關變數</p>\n<ul>\n<li>作業系統\n<ul>\n<li><code>WIN32</code> True on windows systems, including win64.</li>\n<li><code>UNIX</code> True for UNIX and UNIX like operating systems.</li>\n<li><code>APPLE</code> True if running on Mac OSX.</li>\n<li><code>CYGWIN</code> True for cygwin.</li>\n</ul>\n</li>\n<li>編譯器\n<ul>\n<li><code>MSVC</code> True when using Microsoft Visual C</li>\n<li><code>GNU&lt;LANG&gt;</code> True if the compiler of this language is GNU</li>\n<li><code>MINGW</code> True if the compiler is MinGW</li>\n</ul>\n</li>\n<li>example</li>\n</ul>\n  <figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">NOT</span> WIN32)</span><br><span class=\"line\"><span class=\"keyword\">option</span> (WITH GUESS NAME <span class=\"string\">&quot;Guess acronym name&quot;</span> <span class=\"keyword\">ON</span>)</span><br><span class=\"line\"><span class=\"keyword\">endif</span> (<span class=\"keyword\">NOT</span> WIN32)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>找需要的package</li>\n</ul>\n  <figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\">find package ( LibXml2 )</span><br><span class=\"line\"><span class=\"keyword\">if</span> (LIBXML2 FOUND)</span><br><span class=\"line\">add definitions (−DHAVE XML <span class=\"variable\">$&#123;LIBXML2 DEFINITIONS &#125;</span>)</span><br><span class=\"line\">includedirectories( <span class=\"variable\">$&#123;LIBXML2 INCLUDE DIR &#125;</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>XXXFOUND</code><br />\n- Set to false, or undefined, if we haven’t found, or don’t want to use XXX\n<ul>\n<li><code>XXX_INCLUDE_DIRS</code>\n<ul>\n<li>The final set of include directories listed in one variable for use by client code</li>\n</ul>\n</li>\n<li><code>XXX_LIBRARIES</code>\n<ul>\n<li>The libraries to link against to use XXX. These should include full paths</li>\n</ul>\n</li>\n<li><code>XXX_DEFINITIONS</code>\n<ul>\n<li>Definitions to use when compiling code that uses XXX</li>\n</ul>\n</li>\n<li><code>XXX_EXECUTABLE</code>\n<ul>\n<li>Where to find the XXX tool</li>\n</ul>\n</li>\n<li><code>XXX_LIBRARY_DIRS</code>\n<ul>\n<li>Optionally, the final set of library directories listed in one variable for use by client code</li>\n</ul>\n</li>\n<li>to find an executable program\n<ul>\n<li><code>find_program</code></li>\n</ul>\n</li>\n<li>to find a library\n<ul>\n<li><code>find_library</code></li>\n</ul>\n</li>\n<li>to find any kind of file\n<ul>\n<li><code>find_file</code></li>\n</ul>\n</li>\n<li>to find a path where a file reside\n<ul>\n<li><code>find_path</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>file manipulation with file</p>\n<ul>\n<li><code>READ</code>, <code>WRITE</code>, <code>APPEND</code>, <code>RENAME</code>, <code>REMOVE</code>, <code>MAKE DIRECTORY</code></li>\n</ul>\n</li>\n<li>\n<p>advanced files operations</p>\n<ul>\n<li><code>GLOB</code>, <code>GLOB RECURSE [file name in a path]</code>, <code>DOWNLOAD</code>, <code>UPLOAD</code></li>\n</ul>\n</li>\n<li>\n<p>working with path</p>\n<ul>\n<li><code>file (TO CMAKE PATH /TO NATIVE PATH ...)</code>, get filename component</li>\n</ul>\n</li>\n<li>\n<p>execute an external process (with stdout, stderr and return code retrieval): execute process</p>\n</li>\n<li>\n<p>builtin list manipulation command</p>\n<ul>\n<li><code>LENGTH</code>, <code>GET</code>, <code>APPEND</code>, <code>FIND</code>, <code>APPEND</code>, <code>INSERT</code>, <code>REMOVE ITEM</code>, <code>REMOVE AT</code>, <code>REMOVE DUPLICATES REVERSE</code>, <code>SORT</code></li>\n</ul>\n</li>\n<li>\n<p>string manipulation</p>\n<ul>\n<li>upper/lower case conversion, length, comparison, substring, regular expression match</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"CMake-Application\">CMake Application</h3>\n<ul>\n<li>\n<p>CPack</p>\n<ul>\n<li>CMake friend application</li>\n<li>used to easily package your software</li>\n<li>Package the resulting binaries with CPack</li>\n</ul>\n</li>\n<li>\n<p>CTest</p>\n<ul>\n<li>make test</li>\n<li>runs systematic test with CTest and publish them with CDash</li>\n</ul>\n</li>\n<li>\n<p>Wizard mode</p>\n<ul>\n<li>cmake -i, interactive equivalent of the Normal mode</li>\n</ul>\n</li>\n<li>\n<p>Command mode</p>\n<ul>\n<li>cmake -E <command>, command line mode which offers basic command in a portable way</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"專案說明\">專案說明</h2>\n<p>一個簡單的圍棋程式</p>\n<p>file tree</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"code\"><pre><span class=\"line\">├── CMakeLists.txt</span><br><span class=\"line\">├── *<span class=\"string\">.h</span></span><br><span class=\"line\">├── *<span class=\"string\">.cpp</span></span><br><span class=\"line\">├── previous_<span class=\"keyword\">version</span></span><br><span class=\"line\">│   ├── CMakeLists.txt</span><br><span class=\"line\">│   ├── *<span class=\"string\">.cpp</span></span><br><span class=\"line\">│   └── *<span class=\"string\">.h</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\">P?=binary</span><br><span class=\"line\">EXEC=execs/<span class=\"variable\">$(P)</span></span><br><span class=\"line\">OBJECTS=<span class=\"variable\">$(P)</span>.o *.o</span><br><span class=\"line\">CXXFLAGS=-pipe -std=c++11 -Wall -Wextra -Wpedantic -Wno-unknown-pragmas -g -O3 -march=native -fopenmp</span><br><span class=\"line\">LDFLAGS=-lpthread</span><br><span class=\"line\">CXX=g++</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">all: main</span></span><br><span class=\"line\"><span class=\"section\">parallel: main</span></span><br><span class=\"line\"><span class=\"section\">parallel: CXXFLAGS+=-fopenmp -DPARALLEL # add additional flags</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">previous:</span></span><br><span class=\"line\">    cd previous_version; make</span><br><span class=\"line\"><span class=\"section\">binary: <span class=\"variable\">$(OBJECTS)</span></span></span><br><span class=\"line\">\tg++ <span class=\"variable\">$(CXXFLAGS)</span> <span class=\"variable\">$(OBJECTS)</span> -flto -o <span class=\"variable\">$(EXEC)</span> <span class=\"variable\">$(LDFLAGS)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$(P)</span>.o: *.h</span><br><span class=\"line\">\t<span class=\"variable\">$(CXX)</span> <span class=\"variable\">$(CXXFLAGS)</span> main.cpp -c -o <span class=\"variable\">$(P)</span>.o <span class=\"variable\">$(LDFLAGS)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># object files and it&#x27;s dependency</span></span><br><span class=\"line\"><span class=\"section\">board.o: mc_node.h liberty.h board.h board_constants.h ladder.h database.h strategy.h gameSetting.h</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">clean:</span></span><br><span class=\"line\">\trm -rf *.o</span><br><span class=\"line\"><span class=\"section\">previous_clean:</span></span><br><span class=\"line\">\tcd previous_version; make clean</span><br></pre></td></tr></table></figure>\n<p>CMakeLists.txt in root directory</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cmake_minimum_required</span>(VERSION <span class=\"number\">2.6</span>)</span><br><span class=\"line\"><span class=\"keyword\">project</span>(MCTS_Go9x9)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set default output file name</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span>(BINARYNAME <span class=\"string\">&quot;binary&quot;</span> CACHE <span class=\"keyword\">STRING</span> <span class=\"string\">&quot;default binary file&#x27;s name = binary&quot;</span> FORCE)</span><br><span class=\"line\"><span class=\"comment\"># set output directory</span></span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_RUNTIME_OUTPUT_DIRECTORY <span class=\"variable\">$&#123;CMAKE_SOURCE_DIR&#125;</span>/execs</span><br><span class=\"line\"><span class=\"comment\"># compile parameters</span></span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_CXX_COMPILER g++)</span><br><span class=\"line\"><span class=\"keyword\">message</span>(<span class=\"string\">&quot;compiler: $&#123;CMAKE_CXX_COMPILER&#125;&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_CXX_FLAGS <span class=\"string\">&quot;-pipe -std=c++11 -Wall -Wextra -Wpedantic -Wno-unknown-pragmas -g -O3 -march=native -fopenmp&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">message</span>(<span class=\"string\">&quot;cxxflags: $&#123;CMAKE_CXX_FLAGS&#125;&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_EXE_LINKER_FLAGS <span class=\"string\">&quot;-flto&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span>(THREADS_PREFER_PTHREAD_FLAG <span class=\"keyword\">ON</span>) <span class=\"comment\"># pthread</span></span><br><span class=\"line\"><span class=\"keyword\">find_package</span>(Threads REQUIRED) <span class=\"comment\"># pthread</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span>(SRC_FILES *.cpp)</span><br><span class=\"line\"><span class=\"keyword\">message</span>(<span class=\"string\">&quot;source files: $&#123;SRC_FILES&#125;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># each executable is a target in GNU makefile</span></span><br><span class=\"line\"><span class=\"keyword\">add_executable</span>(<span class=\"variable\">$&#123;BINARYNAME&#125;</span> <span class=\"variable\">$&#123;SRC_FILES&#125;</span>)</span><br><span class=\"line\"><span class=\"keyword\">target_link_libraries</span>(<span class=\"variable\">$&#123;BINARYNAME&#125;</span> Threads::Threads) <span class=\"comment\"># pthread</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># parallel</span></span><br><span class=\"line\"><span class=\"keyword\">add_executable</span>(parallel <span class=\"variable\">$&#123;SRC_FILES&#125;</span>)</span><br><span class=\"line\"><span class=\"keyword\">target_compile_options</span>(parallel PUBLIC -fopenmp -DPARALLEL) <span class=\"comment\"># add additional compile parameters</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># we have another CMakeLists.txt in this directory, still follow the same method to generate</span></span><br><span class=\"line\"><span class=\"keyword\">add_subdirectory</span>(previous_version)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Makefile-和-CMake-的語法比較\">Makefile 和 CMake 的語法比較</h2>\n<table>\n<thead>\n<tr>\n<th>makefile</th>\n<th>cmake</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>COMPILE_FLAGS = -c -m32 -O3 -fPIC -w -DSOMETHING -Wall -I src/sdk/core</code></td>\n<td><code>SET( COMPILE_FLAGS &quot;-c -m32 -O3 -fPIC -w DSOMETHING -Wall&quot; ) INCLUDE_DIRECTORIES( src/sdk/core )</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Makefile</span></span><br><span class=\"line\"><span class=\"keyword\">ifdef</span> STATIC</span><br><span class=\"line\">  <span class=\"comment\"># Do something</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"comment\"># Do something elseendif</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># CMake</span></span><br><span class=\"line\"><span class=\"keyword\">OPTION</span>(STATIC <span class=\"string\">&quot;Brief description&quot;</span> <span class=\"keyword\">ON</span>)</span><br><span class=\"line\"><span class=\"keyword\">IF</span>( STATIC )</span><br><span class=\"line\">  <span class=\"comment\"># Do something</span></span><br><span class=\"line\"><span class=\"keyword\">ELSE</span>()</span><br><span class=\"line\">  <span class=\"comment\"># Do something else</span></span><br><span class=\"line\"><span class=\"keyword\">ENDIF</span>()</span><br></pre></td></tr></table></figure>\n<p>using libraries<br />\ncall find_package with the name of your library, which will invoke a library search script from your cmake module path. This script (which is also written in CMake) will attempt to detect the location of the library's header and lib files and store them in a couple of CMake variables that can then be passed to the according CMake commands like include_directories and target_link_libraries.</p>\n<p>There are two problems with this approach: First, you need a search script. Fortunately, CMake ships with search scripts for Pthreads, Boost and a couple of others, but if you are using a more exotic library, you might have to write the search script yourself, which is kind of an arcane experience at first...</p>\n<p>並不會刪除自身產出的快取和中間檔</p>\n<p>The following Makefile builds an executable named prog from the sources prog1.c, prog2.c, prog3.c and main.c. prog is linked against libmystatlib.a and libmydynlib.so which are both also built from source. Additionally, prog uses the library libstuff.a in stuff/lib and its header in stuff/include. The Makefile by default builds a release target, but offers also a debug target:</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Makefile</span></span><br><span class=\"line\">CC = gcc</span><br><span class=\"line\">CPP = g++</span><br><span class=\"line\">RANLIB = ar rcs</span><br><span class=\"line\">RELEASE = -c -O3</span><br><span class=\"line\">DEBUG = -c -g -D_DEBUG</span><br><span class=\"line\">INCDIR = -I./stuff/<span class=\"keyword\">include</span></span><br><span class=\"line\">LIBDIR = -L./stuff/lib -L.</span><br><span class=\"line\">LIBS = -lstuff -lmystatlib -lmydynlib</span><br><span class=\"line\">CFLAGS = <span class=\"variable\">$(RELEASE)</span></span><br><span class=\"line\"></span><br><span class=\"line\">PROGOBJS = prog1.o prog2.o prog3.o</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">prog: main.o <span class=\"variable\">$(PROGOBJS)</span> mystatlib mydynlib</span></span><br><span class=\"line\">    <span class=\"variable\">$(CC)</span> main.o <span class=\"variable\">$(PROGOBJS)</span> <span class=\"variable\">$(LIBDIR)</span> <span class=\"variable\">$(LIBS)</span> -o prog</span><br><span class=\"line\"><span class=\"section\">debug: CFLAGS=<span class=\"variable\">$(DEBUG)</span></span></span><br><span class=\"line\"><span class=\"section\">debug: prog</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">mystatlib: mystatlib.o</span></span><br><span class=\"line\">    <span class=\"variable\">$(RANLIB)</span> libmystatlib.a mystatlib.o</span><br><span class=\"line\"><span class=\"section\">mydynlib: mydynlib.o</span></span><br><span class=\"line\">    <span class=\"variable\">$(CPP)</span> -shared mydynlib.o -o libmydynlib.so</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">%.o: %.c</span></span><br><span class=\"line\">    <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(CFLAGS)</span> <span class=\"variable\">$(INCDIR)</span> <span class=\"variable\">$&lt;</span> -o <span class=\"variable\">$@</span></span><br><span class=\"line\"><span class=\"section\">%.o: %.cpp</span></span><br><span class=\"line\">    <span class=\"variable\">$(CPP)</span> <span class=\"variable\">$(CFLAGS)</span> <span class=\"variable\">$(INCDIR)</span> -fPIC  <span class=\"variable\">$&lt;</span> -o <span class=\"variable\">$@</span></span><br><span class=\"line\">Here is a CMakeLists.txtthat does (almost) exactly the same, with some comments to underline the similarities to the Makefile:</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#CMakeLists.txt</span></span><br><span class=\"line\"><span class=\"keyword\">cmake_minimum_required</span>(VERSION <span class=\"number\">2.8</span>)                    <span class=\"comment\"># stuff not directly</span></span><br><span class=\"line\"><span class=\"keyword\">project</span>(example)                                       <span class=\"comment\"># related to building</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include_directories</span>(<span class=\"variable\">$&#123;CMAKE_SOURCE_DIR&#125;</span>/stuff/<span class=\"keyword\">include</span>) <span class=\"comment\"># -I flags for compiler</span></span><br><span class=\"line\"><span class=\"keyword\">link_directories</span>(<span class=\"variable\">$&#123;CMAKE_SOURCE_DIR&#125;</span>/stuff/lib)        <span class=\"comment\"># -L flags for linker</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span>(PROGSRC prog1.c prog2.c prog3.c)                   <span class=\"comment\"># define variable</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">add_executable</span>(prog main.c <span class=\"variable\">$&#123;PROGSRC&#125;</span>)                 <span class=\"comment\"># define executable target prog, specify sources</span></span><br><span class=\"line\"><span class=\"keyword\">target_link_libraries</span>(prog mystatlib mydynlib stuff)   <span class=\"comment\"># -l flags for linking prog target</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">add_library</span>(mystatlib STATIC mystatlib.c)              <span class=\"comment\"># define static library target mystatlib, specify sources</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">add_library</span>(mydynlib SHARED mydynlib.cpp)              <span class=\"comment\"># define shared library target mydynlib, specify sources</span></span><br><span class=\"line\"><span class=\"comment\">#extra flags for linking mydynlib</span></span><br><span class=\"line\"><span class=\"keyword\">set_target_properties</span>(mydynlib PROPERTIES POSITION_INDEPENDENT_CODE <span class=\"keyword\">TRUE</span>)</span><br><span class=\"line\"><span class=\"comment\">#alternatively:</span></span><br><span class=\"line\"><span class=\"comment\">#set_target_properties(mydynlib PROPERTIES COMPILE_FLAGS &quot;-fPIC&quot;)</span></span><br></pre></td></tr></table></figure>\n<p>In this simple example, the most important differences are:</p>\n<p>CMake recognizes which compilers to use for which kind of source. Also, it invokes the right sequence of commands for each type of target. Therefore, there is no explicit specification of commands like $(CC)..., $(RANLIB)... and so on.<br />\nAll usual compiler/linker flags dealing with inclusion of header files, libraries, etc. are replaced by platform independent / build system independent commands.<br />\nDebugging flags are included by either setting the variable CMAKE_BUILD_TYPE to &quot;Debug&quot;, or by passing it to CMake when invoking the program: cmake -DCMAKE_BUILD_TYPE:STRING=Debug.<br />\nCMake offers also the platform independent inclusion of the '-fPIC' flag (via the POSITION_INDEPENDENT_CODE property) and many others. Still, more obscure settings can be implemented by hand in CMake just as well as in a Makefile (by using COMPILE_FLAGS and similar properties). Of course CMake really starts to shine when third party libraries (like OpenGL) are included in a portable manner.<br />\nThe build process has one step if you use a Makefile, namely typing<br />\nmake at the command line. For CMake, there are two steps: First, you need to setup your build environment (either by typing cmake &lt;source_dir&gt; in your build directory or by running some GUI client). This creates a Makefile or something equivalent, depending on the build system of your choice (e.g. make on Unixes or VC++ or MinGW + Msys on Windows). The build system can be passed to CMake as a parameter; however, CMake makes reasonable default choices depending on your system configuration. Second, you perform the actual build in the selected build system.<br />\nSources and build instructions are available at https://github.com/rhoelzel/make_cmake.</p>\n<h1>設定變數範例</h1>\n<pre><code>      set(MYLIBPATH &quot;C:\\\\Documents and\n              Settings\\\\Jing\\\\Desktop\\\\opencv_bin\\\\lib\\\\release\\\\&quot;)\n</code></pre>\n<h1>使用變數範例</h1>\n<pre><code>      target_link_libraries($&#123;name&#125; $&#123;MYLIBPATH&#125;cv200.lib)\n</code></pre>\n<h1>建立 macro 範例</h1>\n<pre><code>       MACRO(MY_DEFINE_EXAMPLE name srcs)\n             add_executable($&#123;name&#125; $&#123;srcs&#125;)\n       ENDMACRO(MY_DEFINE_EXAMPLE)\n</code></pre>\n<h1>使用 macro 範例</h1>\n<pre><code>       MY_DEFINE_EXAMPLE(demo     demo.cpp)\n</code></pre>\n<h1>存取環境變數的範例</h1>\n<pre><code>         MESSAGE(&quot;$ENV&#123;PATH&#125;&quot;)\n</code></pre>\n<h1>加入 Post Build 的範例</h1>\n<pre><code>add_custom_command(\n        TARGET $&#123;MyPluginTarget&#125;\n        POST_BUILD\n        COMMAND copy\n                       $&#123;CMAKE_CFG_INTDIR&#125;\\\\$&#123;MyPluginTarget&#125;.dll\n                       &quot;C:\\\\Program Files\\\\Mozilla Firefox\\\\\n                         plugins\\\\$&#123;MyPluginTarget&#125;.dll&quot;\n    )\n</code></pre>\n<p>若你的執行檔是 Windows 程式, 請加入 Win32<br />\n<code>add_executable(demo WIN32 $&#123;SOURCE&#125;)</code></p>\n<h2 id=\"MFC-設定\">MFC 設定</h2>\n<figure class=\"highlight sqf\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span>(CMAKE_MFC_FLAG <span class=\"number\">2</span>)</span><br><span class=\"line\">set_target_properties(MyApp      PROPERTIES</span><br><span class=\"line\">COMPILE_DEFINITIONS</span><br><span class=\"line\"><span class=\"variable\">_AFXDLL</span>, <span class=\"variable\">_UNICODE</span>, UNICODE,</span><br><span class=\"line\"><span class=\"variable\">_BIND_TO_CURRENT_CRT_VERSION</span>,</span><br><span class=\"line\"><span class=\"variable\">_BIND_TO_CURRENT_MFC_VERSION</span></span><br><span class=\"line\">LINK_FLAGS</span><br><span class=\"line\"><span class=\"string\">&quot; /ENTRY:\\&quot;</span>wWinMainCRTStartup\\<span class=\"string\">&quot;    &quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>add_executable(demo WIN32 ${SOURCE})</p>\n<h1>設定 source code 群組範例</h1>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ex1:</span></span><br><span class=\"line\"><span class=\"keyword\">file</span>(GLOB_RECURSE myRESOURCE_FILE 「*.def」 「*.rc」)</span><br><span class=\"line\"><span class=\"keyword\">source_group</span>(Resource FILES <span class=\"variable\">$&#123;myRESOURCE_FILE &#125;</span>)</span><br><span class=\"line\"><span class=\"comment\"># ex2:</span></span><br><span class=\"line\"><span class=\"keyword\">source_group</span>(abc_group REGULAR_EXPRESSION <span class=\"string\">&quot;abc.*&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">source_group</span>(<span class=\"number\">123</span>_group REGULAR_EXPRESSION <span class=\"string\">&quot;123.*&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">set</span>(SOURCE abc.cpp abc.h <span class=\"number\">123</span>.cpp <span class=\"number\">123</span>.h abc.rc main.cpp main.h</span><br><span class=\"line\">resource.h stdafx.cpp  stdafx.h</span><br><span class=\"line\">./res/<span class=\"number\">123</span>.ico ./res/<span class=\"number\">123</span>.rc2)</span><br><span class=\"line\"><span class=\"keyword\">add_executable</span>(demo WIN32 <span class=\"variable\">$&#123;SOURCE&#125;</span>)</span><br></pre></td></tr></table></figure>\n<h1>建立 dll 範例</h1>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">add_library</span>( <span class=\"keyword\">target</span> SHARED a.c b.c);</span><br></pre></td></tr></table></figure>\n<p>#console 與 windows (/SUBSYSTEM:CONSOLE or /SUBSYSTEM:WINDOWS)<br />\na. 如果你的程式是 Windows.<br />\n=&gt; 則 add_executable(demo WIN32 ${SOURCE})<br />\nb. 如果是 console, 則<br />\n=&gt; 則 add_executable(demo ${SOURCE})</p>\n<p>好用的變數 (more)<br />\n<code>PROJECT_SOURCE_DIR</code>:  包含 project 命令的 CMakeFile.txt 完整路徑. (ex: c:\\abc)</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span>(PROJECT_HOME <span class=\"variable\">$&#123;PROJECT_SOURCE_DIR&#125;</span>\\\\..\\\\)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Reference\">Reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI3NDU1OTYzL2Fuc3dlci8zNjcyMjk5Mg==\">make makefile cmake qmake都是什麼，有什麼區別？-玟清的回答-知乎<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnNpbXBseXBhdHJpY2suY29tL3Bvc3RzLzIwMTUvMDYtMTktY21ha2Utbm90ZXMv\">CMake筆記<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1RoZUVyay9DTWFrZS10dXRvcmlhbA==\">Eric Noulard - CMake tutorial<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpYm9va3Mub3JnL3dpa2kvQ01ha2VfJUU1JTg1JUE1JUU5JTk2JTgw\">CMake 入門 - 維基教科書，自由的教學讀本<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMDg4MjAzMC9jbWFrZS12cy1tYWtlLXNhbXBsZS1jb2Rlcw==\">stackoverflow - Cmake vs make sample codes?<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMDA4NTk0NS9jbWFrZS1jZmxhZ3MtY3h4ZmxhZ3MtbW9kaWZpY2F0aW9u\">stackoverflow - cmake CFLAGS CXXFLAGS modification<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTY2NTA4MjUvY29udmVydGluZy1vbGQtbWFrZWZpbGUtdG8tY21ha2U=\">stackoverflow - Converting old makefile to CMake<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvOTk4NTgzOS9jcmVhdGluZy1jbWFrZWxpc3RzLWZpbGUtZnJvbS1leGlzdGluZy1tYWtlZmlsZQ==\">stackoverflow - Creating CMakeLists file from existing Makefile<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["cmake","makefile","linux"]},{"title":"用Hexo建立一個網誌","url":"/build-hexo-blog/","content":"<blockquote>\n<p>此為hexo2的時候寫的介紹，已過時</p>\n</blockquote>\n<h2 id=\"簡介\">簡介</h2>\n<p>hexo是一個可以使用<span class=\"exturl\" data-url=\"aHR0cDovL21hcmtkb3duLnR3Lw==\">Markdown<i class=\"fa fa-external-link-alt\"></i></span>語法產生靜態頁面的部落格工具。<br />\n可以配合<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWdlcy5naXRodWIuY29tLw==\">github page<i class=\"fa fa-external-link-alt\"></i></span>快速建立一個部落格。</p>\n<span id=\"more\"></span>\n<p>安裝環境：Ubuntu16.04</p>\n<h3 id=\"安裝nvm和hexo\">安裝nvm和hexo</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get install nvm</span><br><span class=\"line\">sudo nvm install hexo -g</span><br></pre></td></tr></table></figure>\n<p><strong>可能會遇到的問題</strong>:<span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTk1ODQ0MDcvMjY3ODk3MA==\">node或nvm版本過低<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"初始化hexo\">初始化hexo</h3>\n<p><code>hexo init [folder]</code></p>\n<p>若不加[folder]則在當前目錄</p>\n<p><code>cd [folder]</code><br />\n<code>npm install</code></p>\n<h3 id=\"常用命令\">常用命令</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo n</span><br><span class=\"line\">hexo new [layout] [title]</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Layout</th>\n<th>存放資料夾</th>\n<th>格式</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>post (預設)</td>\n<td>source/_posts</td>\n<td>動態頁面</td>\n<td>source/_posts/new-post.md</td>\n</tr>\n<tr>\n<td>page</td>\n<td>source</td>\n<td>靜態頁面</td>\n<td>source/new-page/index.html</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>source/_drafts</td>\n<td>草稿</td>\n<td>source/_drafts/new-draft.md</td>\n</tr>\n</tbody>\n</table>\n<p>靜態頁面用於不常更改，不希望受theme影響的頁面<br />\n.md格式代表使用markdown語法</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo g (= hexo generate)</span><br><span class=\"line\"><span class=\"comment\"># 用於建造網頁的時候，hexo會將markdown格式編譯成html格式</span></span><br><span class=\"line\">hexo g --watch  </span><br><span class=\"line\"><span class=\"comment\"># 使用此命令後，重開hexo，可以使hexo偵測檔案變更，並自動generate </span></span><br><span class=\"line\">hexo s (= hexo server)</span><br><span class=\"line\"><span class=\"comment\"># 在本地預覽網站 - 預設在&lt;http://localhost:4000/&gt;</span></span><br><span class=\"line\">hexo s -d</span><br><span class=\"line\"><span class=\"comment\"># 在預覽的時候同時看到在草稿的文章</span></span><br><span class=\"line\">hexo d (hexo deploy) </span><br><span class=\"line\"><span class=\"comment\"># 發佈網站至設定的網址，網站會真正更新</span></span><br><span class=\"line\">hexo g -d</span><br><span class=\"line\"><span class=\"comment\"># 先generate再deploy</span></span><br><span class=\"line\">hexo publish [filename] (= hexo p [filename])</span><br><span class=\"line\"><span class=\"comment\"># 將檔案(從草稿)移至/post</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"設定檔更改\">設定檔更改</h2>\n<p>於初始化資料夾中的<code>_config.yml</code><br />\n此為YAML格式，不可使用tab字元</p>\n<p>僅列出重要的設定，<span class=\"exturl\" data-url=\"aHR0cDovL2licnVjZS5pbmZvLzIwMTMvMTEvMjIvaGV4by15b3VyLWJsb2cv\">全部設定內容<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"Site\">Site</h3>\n<p><strong>title</strong> 部落格標題<br />\n<strong>subtitle</strong> 副標題<br />\n<strong>description</strong> 關於此部落格</p>\n<h3 id=\"URL\">URL</h3>\n<p><strong>url</strong> 你的部落格網址<br />\n<strong>permalink</strong> 文章的子網址格式，預設為:year/:month/:day/:title/  <span class=\"exturl\" data-url=\"aHR0cDovL2hleG8uaW8vZG9jcy9wZXJtYWxpbmtzLmh0bWw=\">參考變數名<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"Writing\">Writing</h3>\n<p><strong>new_post_name</strong> 新建立的post名稱格式，個人使用:year:month:day:title.md<br />\n<strong>auto_spacing</strong> 在亞州文字和西方文字之間加上空白<br />\n<strong>highlight</strong> 程式的高亮加註</p>\n<h3 id=\"Archives\">Archives</h3>\n<p>開啟/關閉 archive, category, tag 的換頁功能</p>\n<h3 id=\"Pagination\">Pagination</h3>\n<p><strong>per_page</strong> 一頁幾篇文章(0 = 不分頁)</p>\n<h3 id=\"Markdown\">Markdown</h3>\n<p>hexo markdown parser 支援 github 語法(GitHub Flavored Markdown)<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vYXJ0aWNsZXMvZ2l0aHViLWZsYXZvcmVkLW1hcmtkb3duLw==\">https://help.github.com/articles/github-flavored-markdown/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"Extensions\">Extensions</h3>\n<p><strong>theme</strong> 主題名稱</p>\n<h3 id=\"Deploy\">Deploy</h3>\n<p><strong>type</strong>: 發佈的目標格式，目前使用github<br />\n<strong>repository</strong>: git@github.com: [github帳號]</p>\n<h2 id=\"主題\">主題</h2>\n<h3 id=\"套用主題-pacman\">套用主題(pacman)</h3>\n<p><code>git clone git@github.com:A-limon/pacman.git themes/pacman</code></p>\n<p>同時_config.yml也要更新: <code>theme: pacman</code></p>\n<p>註：pacman已停止更新，現在有<span class=\"exturl\" data-url=\"aHR0cDovL3d1Y2hvbmcubWUvYmxvZy8yMDE0LzExLzIwL2hvdy10by11c2UtamFjbWFuLw==\">jacman<i class=\"fa fa-external-link-alt\"></i></span>替代</p>\n<h3 id=\"更新主題\">更新主題</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> themes/pacman</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<p>可先備份設定檔<code>_config.yml</code></p>\n<h3 id=\"修改主題\">修改主題</h3>\n<p>修改主題後, 要先清除現有生成的主題文件，才會正確顯示</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n<h2 id=\"擴充功能\">擴充功能</h2>\n<h3 id=\"為Hexo增加Google-Analytics\">為Hexo增加Google Analytics</h3>\n<p>在Analytics中添加自己的網站域名，獲得JS追蹤代碼。<br />\n把JS代碼Copy到Hexo的after_footer文件中，after_footer是Hexo主題頁腳的JS代碼文檔，具體位置在<code>/themes/[themename]/layout/_partial </code><br />\n然後重新生成、發佈Hexo。數據統計不會立即生效，需要等待幾個小時，之後登錄Google Analytics就可以查看你的Blog的數據</p>\n<h3 id=\"瀏覽量\">瀏覽量</h3>\n<ul>\n<li>Google Analytics</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NyZXNjZW50bW9vbi5pbmZvLzIwMTQvMTIvMTEvcG9wdWxhci13aWRnZXQv\">用leancloud計算瀏覽量<i class=\"fa fa-external-link-alt\"></i></span><br />\n在pacman的主題下，after_footer.ejs 需要修改成：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!--page counter part--&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">function</span> <span class=\"title function_\">addCount</span> (<span class=\"title class_\">Counter</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        url=$(<span class=\"string\">&#x27;.mytitle&#x27;</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;href&#x27;</span>).<span class=\"title function_\">trim</span>();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        title = $(<span class=\"string\">&#x27;.article-title&#x27;</span>).<span class=\"title function_\">text</span>().<span class=\"title function_\">trim</span>();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"keyword\">var</span> query=<span class=\"keyword\">new</span> <span class=\"variable constant_\">AV</span>.<span class=\"title class_\">Query</span>(<span class=\"title class_\">Counter</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"comment\">//use url as unique idnetfication</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        query.<span class=\"title function_\">equalTo</span>(<span class=\"string\">&quot;url&quot;</span>,url);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        query.<span class=\"title function_\">find</span>(&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">success</span>: <span class=\"keyword\">function</span>(<span class=\"params\">results</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"keyword\">if</span>(results.<span class=\"property\">length</span>&gt;<span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    <span class=\"keyword\">var</span> counter=results[<span class=\"number\">0</span>];</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    counter.<span class=\"title function_\">fetchWhenSave</span>(<span class=\"literal\">true</span>); <span class=\"comment\">//get recent result</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    counter.<span class=\"title function_\">increment</span>(<span class=\"string\">&quot;time&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    counter.<span class=\"title function_\">save</span>();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"keyword\">else</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    <span class=\"keyword\">var</span> newcounter=<span class=\"keyword\">new</span> <span class=\"title class_\">Counter</span>();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    newcounter.<span class=\"title function_\">set</span>(<span class=\"string\">&quot;title&quot;</span>,title);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    newcounter.<span class=\"title function_\">set</span>(<span class=\"string\">&quot;url&quot;</span>,url);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    newcounter.<span class=\"title function_\">set</span>(<span class=\"string\">&quot;time&quot;</span>,<span class=\"number\">1</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    newcounter.<span class=\"title function_\">save</span>(<span class=\"literal\">null</span>,&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        <span class=\"attr\">success</span>: <span class=\"keyword\">function</span>(<span class=\"params\">newcounter</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        <span class=\"comment\">//alert(&#x27;New object created&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        <span class=\"attr\">error</span>: <span class=\"keyword\">function</span>(<span class=\"params\">newcounter,error</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;Failed to create&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">error</span>: <span class=\"keyword\">function</span>(<span class=\"params\">error</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"comment\">//find null is not a error</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;Error:&#x27;</span>+error.<span class=\"property\">code</span>+<span class=\"string\">&quot; &quot;</span>+error.<span class=\"property\">message</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">$(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"keyword\">var</span> <span class=\"title class_\">Counter</span>=<span class=\"variable constant_\">AV</span>.<span class=\"property\">Object</span>.<span class=\"title function_\">extend</span>(<span class=\"string\">&quot;Counter&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"comment\">//only increse visit counting when intering a page</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"keyword\">if</span> ($(<span class=\"string\">&#x27;.article-title&#x27;</span>).<span class=\"property\">length</span> == <span class=\"number\">1</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">           <span class=\"title function_\">addCount</span>(<span class=\"title class_\">Counter</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"keyword\">var</span> query=<span class=\"keyword\">new</span> <span class=\"variable constant_\">AV</span>.<span class=\"title class_\">Query</span>(<span class=\"title class_\">Counter</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        query.<span class=\"title function_\">descending</span>(<span class=\"string\">&quot;time&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"comment\">// the sum of popular posts</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        query.<span class=\"title function_\">limit</span>(<span class=\"number\">10</span>); </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        query.<span class=\"title function_\">find</span>(&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">success</span>: <span class=\"keyword\">function</span>(<span class=\"params\">results</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;results.<span class=\"property\">length</span>;i++)    </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\t\t<span class=\"title function_\">alert</span>(results[i]);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        <span class=\"keyword\">var</span> counter=results[i];</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        title=counter.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;title&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        url=counter.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;url&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        time=counter.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;time&quot;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        <span class=\"comment\">// add to the popularlist widget</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        showcontent=title+<span class=\"string\">&quot; (&quot;</span>+time+<span class=\"string\">&quot;)&quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        <span class=\"comment\">//notice the &quot;&quot; in href</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                        $(<span class=\"string\">&#x27;.popularlist&#x27;</span>).<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;&lt;li&gt;&lt;a href=&quot;&#x27;</span>+url+<span class=\"string\">&#x27;&quot;&gt;&#x27;</span>+showcontent+<span class=\"string\">&#x27;&lt;/a&gt;&lt;/li&gt;&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">error</span>: <span class=\"keyword\">function</span>(<span class=\"params\">error</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;Error:&quot;</span>+error.<span class=\"property\">code</span>+<span class=\"string\">&quot; &quot;</span>+error.<span class=\"property\">message</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        )</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL213c2hlbi5pbmZvLzIwMTQvMTEvMTQvSGV4by1wYWNtYW4lRTQlQjglQkIlRTklQTIlOTglRTUlOTAlQUYlRTclOTQlQThkaXNxdXMv\">將留言區改成disqus<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dzZ3phby5naXRodWIuaW8vcG9zdC9oZXhvLXNjcm9sbC10by10b3Av\">回到頂部功能<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h3 id=\"數學公式\">數學公式</h3>\n<p>使用mathjax(適用tex語法)<br />\n<span class=\"exturl\" data-url=\"aHR0cDovL2NhdHgubWUvMjAxNC8wMy8wOS9oZXhvLW1hdGhqYXgtcGx1Z2luLw==\">http://catx.me/2014/03/09/hexo-mathjax-plugin/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>需要注意的是若有兩個底線<code>_</code>，會變斜體，這是原有的markdown語法之一...<br />\n解決方法：用<br />\n<code>&#123; % math-block % &#125; 和 &#123; % endmath-block % &#125;</code><br />\n包覆數學公式</p>\n<p>hexo2是math-block, hexo3是math_block</p>\n<p>小缺點是會使網頁載入速度變慢(公式的圖片是即時取得的)</p>\n<h3 id=\"圖床\">圖床</h3>\n<ul>\n<li>網頁端：在hexo的source資料夾建立img資料夾，使用時 <code>[](/img/...)</code></li>\n<li>imgur, google, dropbox...</li>\n</ul>\n<h3 id=\"Hexo-Markdown-格式\">Hexo Markdown 格式</h3>\n<ul>\n<li>一句話結尾空白兩格，才會換行</li>\n<li>標題和符號之間要空白 <code>### Hexo ...</code></li>\n<li>其他和github markdown格式相同</li>\n</ul>\n<h2 id=\"Reference\">Reference</h2>\n<ul>\n<li>最詳細的hexo懶人包 <span class=\"exturl\" data-url=\"aHR0cDovL2licnVjZS5pbmZvLzIwMTMvMTEvMjIvaGV4by15b3VyLWJsb2cv\">http://ibruce.info/2013/11/22/hexo-your-blog/<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>提供一些Bug的解決方案 <span class=\"exturl\" data-url=\"aHR0cDovL2pvaG5ueWZlZS5naXRodWIuaW8vMjAxNC8wMy8yMi9oZXhvLw==\">http://johnnyfee.github.io/2014/03/22/hexo/<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>Markdown寫作淺談 <span class=\"exturl\" data-url=\"aHR0cDovL2ppYW5zaHUuaW8vcC9QcEROTUc=\">http://jianshu.io/p/PpDNMG<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>Hexo 官網 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">https://hexo.io/<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["記錄"],"tags":["Hexo","網誌","Markdown"]},{"title":"程式註解的常用標記","url":"/comment-meaning/","content":"<ul>\n<li><code>TODO</code></li>\n<li><code>FIXME</code></li>\n<li><code>XXX</code></li>\n<li><code>NOTE</code></li>\n<li><code>HACK</code></li>\n</ul>\n<h2 id=\"TODO\">TODO</h2>\n<ul>\n<li>需要實作的部份\n<ul>\n<li>Bug, 錯誤, 改進等都不是<code>TODO</code>，見下述</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"FIXME\">FIXME</h2>\n<ul>\n<li>錯誤的、需要修正的部份</li>\n<li>相似的標記:  <code>BUG</code>\n<ul>\n<li><code>FIXME</code> 解釋如何修正</li>\n<li><code>BUG</code> 記錄錯誤如何發生</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"XXX\">XXX</h2>\n<ul>\n<li>需要改進的實作方式</li>\n<li>相似的標記: <code>REFACT</code>\n<ul>\n<li>想重構時可用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"NOTE\">NOTE</h2>\n<ul>\n<li>說明程式碼的如何使用\n<ul>\n<li>就是註解原本的用途</li>\n<li>所以實際上不用加<code>NOTE</code>，直接寫也可以</li>\n</ul>\n</li>\n<li>相似的標記: <code>MARK</code></li>\n</ul>\n<h2 id=\"HACK\">HACK</h2>\n<ul>\n<li>一個暫時、骯髒的解法</li>\n<li>不應該進commit</li>\n</ul>\n<h2 id=\"使用\">使用</h2>\n<ul>\n<li>VSCode 中的套件\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPUdydW50ZnVnZ2x5LnRvZG8tdHJlZQ==\">TODO tree<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n<li>除了標記，還需要說明文字，多人協作時也可署名</li>\n<li>範例\n<ul>\n<li>❌<code>TODO:</code></li>\n<li>➖<code>TODO: lowercase</code></li>\n<li>⭕<code>TODO(qwerty): lowercase</code></li>\n</ul>\n</li>\n<li>有些標記不需要寫在程式碼中\n<ul>\n<li><code>BUG</code>：應該有專用的Bug tracker</li>\n<li><code>TODO</code>：應記錄在Todo tracker</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"參考資料\">參考資料</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L3RoZS1hcnQtb2YvOTc4MTQ0OTMxODQ4Mi8=\">The art of readable code<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["筆記"],"tags":["CodingStyle","程式","Todo","註解"]},{"title":"競爭策略","url":"/competitive-strategy/","content":"<!-- RENEW: -->\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY291cnNlcmEub3JnL2xlYXJuL2NvbXBldGl0aXZlc3RyYXRlZ3l6aC9ob21lL3dlbGNvbWU=\">原課程網址 -- 競爭策略<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY291cnNlcmEub3JnL2xlYXJuL2FkdmFuY2VkLWNvbXBldGl0aXZlLXN0cmF0ZWd5LXpoL2hvbWUvd2VsY29tZQ==\">原課程網址 -- 高階競爭策略<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>原作者標題 - Competitive Strategy競爭策略——課程要點彙編 (By Daniel.Tao)\n<ul>\n<li>鏈結已失效</li>\n</ul>\n</li>\n</ul>\n<h1>競爭策略</h1>\n<p>同時決策:主要是指一方在對另一方改採取的行動不知情的情況下做出決定</p>\n<ul>\n<li>最佳策略(Optimal Strategy): 最優策略常常使我們自己的收益最大化</li>\n<li>劣勢策略(Dominated Strategy): 是一個始終比其他情況都糟糕的策略，你永遠可以找到另一個比它更佳的策略</li>\n<li>優勢策略(Dominant Stratedy): 指無論其他企業或參與者選擇什麼策略，該策略都將勝於其他策略</li>\n<li>納什均衡(Nash Equilibrium): 納什均衡是一組<strong>策略集</strong>其中沒有任何一方可以單方面地悖離自身的策略\n<ul>\n<li>一旦我們發現一個納什均衡 我們就找到了博弈中的一個自然靜止點，堅持自身策略的情況下 沒有博弈者想改變自己的選擇</li>\n<li>在納什均衡裡，沒有博弈參與者能通過採取其它策略獲得更高收益，我們能夠預測兩個理性的對手會選擇，最終能使自己達到納什均衡的策略</li>\n<li>優勢策略針對的是單人博弈，而納什均衡 就像我們從其定義所看到的那樣是策略的合集 是對於博弈中每一個參與者的策略</li>\n<li>每一個博弈在純策略 (Pure Strategy, 只能選一個策略) 中都會有納什均衡嗎\n<ul>\n<li>不一定。例如足球射門，這個博弈沒有自然靜止點</li>\n<li>企業選擇標準的時候，就可能存在兩個納什均衡狀態。例如 A選A，B最好選A， B選擇B，A最好也選擇B</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>囚徒困境\n<ul>\n<li>存在著一個能使雙方都得到更大效益的情況，但就個體而言每一方都不想一直維持在這種局面</li>\n<li>因為是同時決策，所以他們不能弄清楚對手的決策。這種困境來源於雙方行為上的利己性，因為他們都想使自己的利潤得到最大化</li>\n</ul>\n</li>\n</ul>\n<p>序列博弈 (Sequential Game, Dynamic Game)</p>\n<ul>\n<li>\n<p>序列博弈就是在博弈中加入時間因素，一家企業在另一家之前行動，第二家企業能夠在知道第一家企業行動的情況下進行博弈，那麼就能相應地調整自己的行動；另一方面 第一家企業必須在沒有後者信息的情況下，不知道第二個博弈者會做什麼，但是，第一家企業知道在自己之後會有一個跟隨者 並且這個跟隨者會理性地作出反應</p>\n</li>\n<li>\n<p>畫出博弈樹 (Game Tree)</p>\n</li>\n<li>\n<p>逆向歸納法 (Backward Induction)</p>\n<ul>\n<li>倒推法：忽略掉所有不可能發生的方案，比如劣勢策略。據此選擇最高利益的策略</li>\n</ul>\n</li>\n<li>\n<p>最先作出決定的參與者是否擁有某種策略優勢</p>\n<ul>\n<li>可信的威脅\n<ul>\n<li>以一個特定的方式做出承諾，可以改變博弈中的策略，可以避免參與他們不想要的博弈，提升自己的回報</li>\n<li>英航進入漢莎壟斷的德國航空市場，漢莎承諾如果英航進入會展開價格戰\n<ul>\n<li>可能需要透過增加投資、向第三方承諾等方法，才能成功，否則會被視為不可信威脅(因為價格戰可能不是最佳決策)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>子博弈 (Sub-game)\n<ul>\n<li>企業在面對囚徒困境或者一個協調博弈時 如果他們能合作 或者能協調他們的行動那他們就能獲得更好的收益</li>\n<li>理論上這看起來很簡單，但它實際上很難維持 因為企業是自私、獨立並尋求利益最大化的</li>\n<li>如果博弈能重複進行或者博弈者能採用特定的策略 這樣就能幫助實現合作</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>重複博弈</p>\n<ul>\n<li>重複博弈基本上就是在兩個或者多個博弈者之間能夠重複出現多次的互動</li>\n<li>有限次重複\n<ul>\n<li>也就是在一開始就清楚博弈會以怎樣的頻率重複 也知道博弈會在什麼時候結束我們清楚知道博弈的結果或者結束點</li>\n<li>如承包商和企業的驗收</li>\n<li>結局效應 (Endgame Effect)\n<ul>\n<li>進行非常長時間的博弈 越接近這個博弈的結尾，合作就越有可能會直接崩潰。可採用逆向歸納進行推演</li>\n<li>理論上會和同時決策的結果相同\n<ul>\n<li>我知道最後一次決策絕對不會合作 → 最後第二次不要合作，以此類推</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>無限次重複\n<ul>\n<li>沒有明確的結束點</li>\n<li>企業/同事間的合作</li>\n<li>較有可能合作(不合作可以明確的報復)</li>\n</ul>\n</li>\n<li>觸發策略\n<ul>\n<li>每家企業都將先開出壟斷價格 一旦其中一方，在某一年開出低價 另一方則將在未來持續開出低價 所以一旦有人違反規則，以後將再也不會有合作可言</li>\n</ul>\n</li>\n<li>影響博弈繼續的因素\n<ul>\n<li>p是博弈繼續的概率，愈高愈可能合作</li>\n<li>競爭者的數量，數量越多，分到的利潤越少，減少了合作的可能性</li>\n<li>利率，利率越高，合作可能性越小，利率越低合作可能性越高</li>\n<li>較輕的懲罰 或者寬容的懲罰，也會給合作增添更多阻力</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>積極承諾 (Aggressive Commitment)</p>\n<ul>\n<li>積極承諾試圖減少那些可能引發劣性均衡的行為，也就是說 當你做出積極承諾 其實是減少了你的選擇而不是將其增多，在博弈論中這通常意味著，將一個同時博弈 (Simultaneous Game)轉變為一個序貫博弈 (Sequential Game) 。如：波音和空客考慮生產大型客機額博弈，空客在新飛機還沒有研發出來前，已經在位於漢堡和圖盧茲的中心建立了加工廠，加工廠只能用於生產A380</li>\n<li>產生子博弈精煉納什均衡 (Subgame Perfect Nash Equilibrium)\n<ul>\n<li>組成精煉納什均衡的策略在每一個子博弈中都是最優的</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>合作承諾 (Cooperative Commitment)也叫軟承諾 (Soft Commitment)</p>\n<ul>\n<li>建立口碑，成為一個可靠的競爭者或合作者。表明兩點：1.首先 你的競爭對手將更容易預測你的行為；2. 如果你建立了口碑，如果你不跟別人好好合作，代價就會特別大，因為你很容易就會失去口碑</li>\n<li>客戶最愛條款。你承諾如果該商品降價，顧客將可以申請賠償差價，通常來說客戶最愛條款都有個期限 通常是六個月或一年。一方面，客戶不用等價格下跌，如到半年後價格下的，它可以得到補償。另一方面，你也對競爭者發出了信號，那就是對你來說，競爭某些顧客的代價會變高，因為降低價格不僅僅意味著 降低未來利潤，你還要給之前的顧客補償差價</li>\n</ul>\n</li>\n<li>\n<p>積極承諾與軟承諾區別</p>\n<ul>\n<li>積極承諾在於先發制人 消除可能引發劣性均衡的行為</li>\n<li>合作承諾則是告訴其他博弈者,你是個好人</li>\n</ul>\n</li>\n<li>\n<p>自我束縛承諾(self-binding commitment): 投入資源，讓潛在合作者相信會合作</p>\n</li>\n</ul>\n<p>互補品(Complements)</p>\n<ul>\n<li>使用產品B能提高產品A的使用效能，反之亦然</li>\n<li>同時使用A和B兩個產品的效用，更高於單獨使用產品A加上單獨使用產品B的效用\n<ul>\n<li>效用就是當你使用一個特定產品時所得到的滿足程度</li>\n</ul>\n</li>\n<li>負交叉價格彈性\n<ul>\n<li>降低產品A的價格，使產品B的需求量提升</li>\n</ul>\n</li>\n</ul>\n<p>替代品 (Substitute Good)</p>\n<ul>\n<li>替代品的降價可能會減少市場份額，但是，同時也能增加市場規模 因此將有積極的最終結果和淨效應</li>\n<li>替代品所扮演的角色就是當市場上存在許多相似的替代品，它將會提高價格彈性，也就是消費者的價格敏感度，就就意味著當你試圖增加你的利潤時，消費者則將會另選其他產品</li>\n<li>正交叉價格彈性\n<ul>\n<li>降低產品A的價格，使產品B的需求量下降</li>\n</ul>\n</li>\n</ul>\n<p>交叉價格彈性為正: 商品A的價格上漲，將導致商品B的需求量上升，兩件商品互為替代品<br />\n交叉價格彈性為負: 商品A的價格上漲，將導致商品B的需求量下降，兩件商品互為互補品</p>\n<p>企業為什麼會支持互補方</p>\n<ul>\n<li>為什麼你會想要支持一家因為你不在其中而無法直接獲利的企業，或許能通過使供給方提供質量更好的互補品，從而提高銷售量，互補品越好。對你自身產品的需求也越高，互補品賣得越多，對你自身產品的需求也越高，基礎品變得更有用了\n<ul>\n<li>蘋果免費送給編寫mac程序的學生</li>\n</ul>\n</li>\n<li>自己生產互補品\n<ul>\n<li>問題\n<ol>\n<li>可能僅僅是互補品市場不具有吸引力</li>\n<li>沒有足夠的能力生產互補品</li>\n<li>潛在消費者無法接受一個企業既生產基礎產品又生產互補品</li>\n</ol>\n</li>\n<li>優勢\n<ol>\n<li>可以為自己的產品量身定製互補品</li>\n<li>可以對互補品進行質量監管</li>\n<li>可賺更多錢</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>交叉補貼 (Cross Subsidy)\n<ul>\n<li>為了增加利潤很高的產品B的銷售，生產利潤很小，甚至虧本的產品A\n<ul>\n<li>剃鬚刀與刀片，打印機與墨盒</li>\n</ul>\n</li>\n<li>風險\n<ol>\n<li>消費者最終可能不會購買產品B，可能只會對基礎產品感興趣而並不對互補品感興趣，你只獲得了產品A的低價所帶來的利潤</li>\n<li>消費者可能從另一個製造商那裡買產品B</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>捆綁銷售 (Bundle)\n<ul>\n<li>企業只出售的產品A和互補品B的組合\n<ol>\n<li>在市場A中你面臨的競爭非常小，甚至是沒有因為你除了產品A外，還附加了其他產品</li>\n<li>減少了B市場的競爭，因為只要有人對互補品B感興趣，他也會得到產品A</li>\n</ol>\n</li>\n<li>風險\n<ol>\n<li>可能有只對A或B感興趣的消費者，只對基礎產品或互補品感興趣，對他們進行捆綁銷售 你將失去這些消費者</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>轉換成本 (Switching Costs)\n<ul>\n<li>當用戶從產品A轉換到一個替代品時，通常會產生轉換成本，轉換成本越高，就意味著他們已購買的互補品就越多。如果你使某人買了很多互補品，那他就很難從基礎產品A轉換到任何其它產品</li>\n<li>好處\n<ol>\n<li>你使某人買了很多互補品，那他就很難從基礎產品A轉換到任何其它產品</li>\n<li>這意味著顧客對企業有著更高的價值，如果一個消費者發現很難能夠轉而使用其它產品，你就可以向他收取更高價格</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<p>可能同時是競爭對手，也是合作關係</p>\n<ul>\n<li>Apple &amp; Sony\n<ul>\n<li>Apple ipod 和 Sony mp3</li>\n<li>Apple itunes 賣出 Sony音樂</li>\n</ul>\n</li>\n</ul>\n<p>戰略合作夥伴關係 (Strategic Partnership)</p>\n<ul>\n<li>是企業之間的長期合作關係</li>\n<li>戰略合作夥伴一個重要特點：他們是互補產品的生產者，但他們不能合併為一個公司\n<ol>\n<li>分享決策/共同決策 (Shared Decision Making)</li>\n<li>建立某種組織或某種機制（組織整合，organisational integration）——跨企業團隊，建立跨企業的匯報、決策規則、進行大量信息交換），依賴信息交流以及信息交流的程序化過程</li>\n<li>交叉持股或建新的合資企業（經濟整合 economic integration)</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n<p>互補品廠商有很高的動機互相合作並獲益，並不一定需要經濟整合才會合作</p>\n</blockquote>\n<h2 id=\"進入市場\">進入市場</h2>\n<p>市場吸引力 → 選擇市場 → 進入方式 → 策略</p>\n<h3 id=\"市場吸引力\">市場吸引力</h3>\n<ol>\n<li>由波特五力決定\n<ol>\n<li>競爭程度</li>\n<li>對供應商的議價能力</li>\n<li>對買家的議價能力</li>\n<li>潛在新廠商的威脅</li>\n<li>替代品的威脅</li>\n</ol>\n</li>\n<li>政府角色（政府的監管和徵稅）</li>\n</ol>\n<h3 id=\"選擇市場\">選擇市場</h3>\n<p>進入壁壘 (Entry Barrier)<br />\n進入壁壘是一些因素，能使現有企業獲得正利潤，而該行業新入者卻無法獲利</p>\n<ul>\n<li>結構性進入壁壘\n<ul>\n<li>與行業內現有企業的定位相關</li>\n<li>超市位置、政府許可（申請牌照）、生產規模(半導體)、關鍵專利、經驗積累、成本優勢、專屬供應合約等</li>\n</ul>\n</li>\n<li>戰略性進入壁壘\n<ul>\n<li>由現有企業有意識採取的特別戰略行為，阻止行業內後來者進入的意向</li>\n</ul>\n</li>\n<li>營銷優勢\n<ul>\n<li>品牌忠誠度，轉換成本</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"進入方式\">進入方式</h3>\n<p>承諾戰略</p>\n<ul>\n<li>承諾戰略是某個後來者為了表明要留在市場中作出的可信承諾，以此來防止現有企業的報復</li>\n<li>付出高沉沒成本(退出成本高)\n<ul>\n<li>投資</li>\n<li>研發</li>\n<li>廣告</li>\n</ul>\n</li>\n<li>也可用於遏制策略</li>\n</ul>\n<p>價值鏈重構</p>\n<ul>\n<li>提供一種更便宜的產品\n<ul>\n<li>吸引的是對價格更敏感的買家，而不是購買現有企業產品的買家，所以主流顧客群不會被這個新產品吸引，因為它相對劣質</li>\n<li>對於現有企業來說，這個舉動不太算威脅</li>\n</ul>\n</li>\n<li>隨著時間的推移，這個創新者帶著價格便宜的產品進入市場後，會改良產品，並從現有企業那裡佔去大量的市場份額，而現有企業，會感到應對困難，因為他們不能複製這個廉價商業模式</li>\n</ul>\n<p>柔道經濟策略</p>\n<ul>\n<li>將對手的力量轉變為自己的優勢</li>\n<li>低價進入市場 → 迫使現在企業損失</li>\n<li>Ph = 原價格, Pl = 新廠商價格, X = 原廠商規模, XE = 新廠商規模\n<ul>\n<li>同意進入的代價： Ph XE, 以降價遏制的代價： (Ph - Pl) X</li>\n<li>對新入者有利的因素：市場規模↑, 新入者市場規模↑, 價格差距↑\n<ul>\n<li>對手愈大，愈不可能攻擊</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>利基市場（細分市場）</p>\n<ul>\n<li>後來者只在利基市場開拓業務，使現有企業不能在其市場外進行反擊</li>\n<li>在原廠商可以差別取價時會失敗(電信公司不行限定某城市降價，但航班可分航線計價)</li>\n</ul>\n<h3 id=\"遏制策略\">遏制策略</h3>\n<p>進入遏制策略</p>\n<ul>\n<li>\n<p>改變後來者對於與現有企業競爭性質的預期</p>\n</li>\n<li>\n<p>對於後來者，這些可以使得進入市場變得更難，吸引力變小</p>\n</li>\n<li>\n<p>需付出一定的代價</p>\n</li>\n<li>\n<p>遏制策略的種類：提高進入壁壘、掌握關鍵資源、提高技術領先性、提高轉換成本、承諾戰略</p>\n</li>\n<li>\n<p>提高進入壁壘</p>\n<ul>\n<li>如提高技術領先性</li>\n</ul>\n</li>\n<li>\n<p>承諾策略</p>\n<ul>\n<li>承諾會打價格戰</li>\n</ul>\n</li>\n<li>\n<p>積極定價策略</p>\n<ul>\n<li>限制性定價\n<ul>\n<li>在他人<strong>進入市場前</strong>即維持低價</li>\n<li>告訴潛在競爭者，「這是個低利潤市場」的假象，或是「我是低成本廠商(競爭強)」</li>\n<li>只在信息不完全時發揮作用(不可能維持低價太久)</li>\n</ul>\n</li>\n<li>掠奪定價\n<ul>\n<li>對手<strong>進入市場後</strong>，逼退後來者</li>\n<li>在競爭中削減價格，甚至使定價低於邊際成本，目的仍是誘使競爭對手退出市場，或遏制將來的進入</li>\n</ul>\n</li>\n<li>先佔策略\n<ul>\n<li>通過代價高昂的行為，你可以阻止潛在競爭者進入市場\n<ul>\n<li>過度投資，使生產成本非常低</li>\n<li>大量生產小差異產品(水平差異)，使潛在市場變小</li>\n<li>過度展店，增加競爭強度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"研究與創新\">研究與創新</h2>\n<p>三種研究</p>\n<ul>\n<li>\n<p>基礎研究(basic research)</p>\n<ul>\n<li>知識外溢 (Knowledge Spillover): 因為無法申請專利</li>\n<li>導致了一個囚徒困境：但即使一個企業進行投資也可以獲益。基本研究主要由大學、公共實驗室以及企業網路進行，以此避免或解決囚徒困境的問題</li>\n</ul>\n</li>\n<li>\n<p>應用研究(applied research)</p>\n<ul>\n<li>可申請專利的研究</li>\n</ul>\n</li>\n<li>\n<p>產品生產(product development)</p>\n</li>\n<li>\n<p>產品創新 (Product Innovation)</p>\n<ul>\n<li>對現有產品 (Existing Product) 的改進，或是開發一項全新的產品，增加產品價值以提高用戶的支付意願</li>\n</ul>\n</li>\n<li>\n<p>過程創新 (Process Innovation)</p>\n<ul>\n<li>為現有產品開發新生產過程，以減少生產成本</li>\n</ul>\n</li>\n<li>\n<p>突破性創新 (Drastic Innovation)</p>\n<ul>\n<li>突破性創新是指當企業創造了突破性的新產品時，可對市場進行壟斷。對於突破式創新，我們可以預見到市場情況，及結構都會完全改變</li>\n</ul>\n</li>\n<li>\n<p>漸進式創新 (Incremental Innovation)</p>\n<ul>\n<li>輕微改變</li>\n</ul>\n</li>\n</ul>\n<p>企業創新的價值 = 創新時的利潤 - 無創新時的利潤</p>\n<ul>\n<li>替代效應 (Replacement Effect)\n<ul>\n<li>替代效應表明對於給定的市場結構，<strong>壟斷企業的創新動機相對較小</strong>，我們發在競爭市場中的創新價值，實際上要比壟斷市場中的創新價值更大</li>\n</ul>\n</li>\n<li>效率效應 (Efficiency Effect)\n<ul>\n<li>效率效應是指<strong>存在進入威脅時</strong>，壟斷企業相比潛在進入企業，有更大的創新動力來阻撓競爭者進入市場</li>\n</ul>\n</li>\n<li>替代效應表明壟斷企業創新性不夠，因為新利潤會取代原有的利潤；效率效應表明壟斷企業有更大的創新性，因為它致力於保持自己的壟斷地位</li>\n<li>威脅大的時候，效率效應&gt;替代效應，反之</li>\n</ul>\n<p>研發失敗，或被他人搶先</p>\n<ul>\n<li>成功機率愈低，納許均衡偏向不研發</li>\n<li>成功機率中等，納許均衡為其中一家研發</li>\n<li>成功機率高，納許均衡偏向研發\n<ul>\n<li>後果可能是，損失此次創新帶來的部分利潤</li>\n</ul>\n</li>\n<li>風險中立 (Risk Neutral)\n<ul>\n<li>只關心預期利潤 (Expected Profit)</li>\n</ul>\n</li>\n</ul>\n<p>不同成功率與研發之間的關係</p>\n<ol>\n<li>一個成功率低，又有著高固定成本的項目，企業可能根本不會選擇開展</li>\n<li>一個成功率中等的項目則會由率先選擇研發的企業進行，且該企業會試圖阻擾其他企業進入市場，當兩家企業在一個成功率中等的領域中處於競爭局勢時，我們可能看到兩家企業都將遭受損失</li>\n</ol>\n<p>沉睡專利 (Sleeping Patent)</p>\n<ul>\n<li>企業申請與主要產品相近的創新成果的專利，但並不商業化的專利</li>\n<li>先發制人，阻止潛在競爭者研發出與自身產品相似的競爭產品，減少競爭並保證現有產品的利潤</li>\n<li>阻礙技術進步</li>\n</ul>\n<h2 id=\"合理設計產品\">合理設計產品</h2>\n<p>伯特蘭德悖論 (Bertrand Paradox)的假設</p>\n<ol>\n<li>同樣產品</li>\n<li>同樣地點</li>\n<li>一次定價機會(只博弈一次)</li>\n<li>市場完全透明</li>\n<li>無限價格彈性 (Infinite Price Elasticity)：無論價格差多少，價格低的小販總會贏得消費者</li>\n<li>不存在產能限制</li>\n</ol>\n<p>兩家銷售相同產品的企業 最終會處於完全競爭的勢態，並且獲益為零</p>\n<h3 id=\"去除假設\">去除假設</h3>\n<p>事實上的競爭不會如此激烈<br />\n一次定價、完全透明、不存在產能限制 → 不可能</p>\n<p>不同產品</p>\n<ul>\n<li>垂直產品差異化 (Vertical Product Differentiation)\n<ul>\n<li>相同價格下 所有消費者都會選擇產品A，而不選產品B</li>\n<li>品質、技術、耐用度、價值</li>\n</ul>\n</li>\n<li>水平產品差異化 (Horizontal Product Differentiation)\n<ul>\n<li>相同價格下 有些消費者會選擇產品A，有些則會選擇產品B</li>\n<li>品牌、品味、地點、時間</li>\n</ul>\n</li>\n<li>多數產品同時有兩種差異化</li>\n</ul>\n<p>霍特林‧伯特蘭德模型 (Hotelling Bertrand Model)<br />\n海灘上小販A、B賣冰淇淋的水平差異化思考</p>\n<ol>\n<li>兩個賣家間的距離則是產品的差異化程度</li>\n<li>一個特定消費者的位置可解釋為消費者對產品的偏好</li>\n<li>走路引發的不適感是損失效用</li>\n</ol>\n<h3 id=\"基本競爭戰略\">基本競爭戰略</h3>\n<ol>\n<li>成本領先 (Cost Leadership)\n<ol>\n<li>忽略那些無法讓你賺錢的消費者群體或利潤空間很小的消費者群體</li>\n<li>需要避免邊際消費者,使管理領域的成本最小化</li>\n<li>減少研發、客服、銷售人員以及廣告等方面的開支</li>\n<li>可使用侵略性定價</li>\n</ol>\n</li>\n<li>產品差異化 (Product Differentiation)\n<ol>\n<li>向消費者提供產業中的獨特產品或服務</li>\n<li>擁有高價值的品牌</li>\n<li>提供頂尖技術或優質的客戶服務</li>\n<li>擁有廣泛分佈 或有效的經銷商網路</li>\n</ol>\n</li>\n<li>集中化戰略 (Focus)\n<ol>\n<li>結合前兩個策略，並集中在一個特定的消費者群體、產品線或地理市場</li>\n<li>更有效地針對目標群體提供服務,提供最佳的服務</li>\n<li>利基市場可以達到低成本</li>\n<li>根據這個細分市場採用低成本戰略或差異化戰略</li>\n</ol>\n</li>\n</ol>\n<p>進退兩難（stuck in middle）</p>\n<ol>\n<li>三種戰略都失敗了（成本、產異化、集中化）\n<ol>\n<li>缺少決心和理念進行低成本競爭</li>\n<li>沒有準備做差異化競爭的準備</li>\n<li>缺少常莊差異化或低成本化的專注度，沒有瞄準一個細分市場</li>\n</ol>\n</li>\n</ol>\n<h1>高階競爭策略</h1>\n<h2 id=\"維護顧客群\">維護顧客群</h2>\n<p>轉換成本</p>\n<ul>\n<li>\n<p>有些市場不能從初期消費者中獲利 <img data-src=\"\" alt=\"\" />，需要高轉換成本</p>\n</li>\n<li>\n<p>直接轉換成本</p>\n<ul>\n<li>新廠商的風險\n<ul>\n<li>尋找時間</li>\n<li>可能較差</li>\n</ul>\n</li>\n<li>違約金</li>\n</ul>\n</li>\n<li>\n<p>關係轉換成本(Relationship-Related Switching Costs)</p>\n<ul>\n<li>合作關係所累積的經驗\n<ul>\n<li>客製化產品</li>\n</ul>\n</li>\n<li>會員優惠</li>\n<li>心理因素\n<ul>\n<li>與舊廠商關係良好</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>產品轉換成本(Product-Related Switching Costs)</p>\n<ul>\n<li>花時間習慣</li>\n<li>互補品的轉換成本(PC → Mac充電器)</li>\n</ul>\n</li>\n<li>\n<p>消費者轉換條件：增加的效用 + 新廠商優惠 &gt; 轉換成本</p>\n</li>\n<li>\n<p>廠商願意提供的優惠 &lt; 新消費者的利潤 - 轉換成本</p>\n</li>\n</ul>\n<p>廠商提高轉換成本</p>\n<ul>\n<li>會員優惠\n<ul>\n<li>VIP</li>\n<li>集點\n<ul>\n<li>有效期限</li>\n<li>提供的獎勵對廠商成本低，但對消費者是昂貴的</li>\n</ul>\n</li>\n<li>澇油水: 非自身出錢，如公司經費，但可拿到優惠</li>\n</ul>\n</li>\n<li>長期合約</li>\n<li>提供互補品</li>\n<li>提高服務品質</li>\n<li>特定格式(.doc, sony的硬體, apple的itunes)，特定介面(OS)</li>\n</ul>\n<p>消費者減少轉換成本</p>\n<ul>\n<li>開放標準產品(USB, 3.5mm耳機)</li>\n<li>同時和多個廠商購買</li>\n<li>用預期會產生的轉換成本來與廠商協商價格(下策)</li>\n</ul>\n<p>新廠商的策略</p>\n<ul>\n<li>減少消費者轉換成本\n<ul>\n<li>協助轉換</li>\n<li>優惠</li>\n</ul>\n</li>\n<li>增加產品效用</li>\n</ul>\n<h2 id=\"定價\">定價</h2>\n<p>價格歧視: 對不同消費者提供不同價格，以達到最大效用</p>\n<p>一級價格歧視(完全價格歧視)</p>\n<ul>\n<li>對每個消費者提供不同價格</li>\n<li>需要知道每個消費者願意支付的最高價格\n<ul>\n<li>一對一交涉</li>\n<li>網路拍賣</li>\n<li>如果網路商城可依照用戶喜好來提供價格？</li>\n</ul>\n</li>\n<li>對消費者不公平</li>\n</ul>\n<p>二級價格歧視</p>\n<ul>\n<li>公司提供不同購買選擇，消費者自己選擇\n<ul>\n<li>不必確認所有消費者資訊</li>\n</ul>\n</li>\n<li>非線性定價\n<ul>\n<li>數量折扣: 買愈多、折扣愈多</li>\n<li>手機: 很多種資費標準</li>\n</ul>\n</li>\n<li>版本化\n<ul>\n<li>調整產品功能</li>\n<li>飛機：頭等、經濟</li>\n<li>簡易版軟體\n<ul>\n<li>成本反而較高，因為需要修改程式</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>捆綁銷售\n<ul>\n<li>吸引只喜歡A或只喜歡B的消費者\n<ul>\n<li>降低消費者異質性</li>\n</ul>\n</li>\n<li>可吸引更多有價值的消費者(願意付較多錢)</li>\n<li>速食店單點只比套餐便宜一些</li>\n<li>免運費: 對不同距離消費者的歧視</li>\n</ul>\n</li>\n</ul>\n<p>三級價格歧視</p>\n<ul>\n<li>對不同群體消費者收不同費用\n<ul>\n<li>身份、地點、時間、工作、年齡</li>\n</ul>\n</li>\n<li>機場的食物</li>\n<li>學生票</li>\n<li>旺季旅遊</li>\n<li>跨期定價\n<ul>\n<li>跟據產品推出的時間收不同費用(遊戲、新書、新手機)\n<ul>\n<li>不適合耐用品(消費者會有降價的預期心理)</li>\n<li>讓先買的消費者覺得不公平</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>直接價格歧視包括一級和三級價格歧視</p>\n<h2 id=\"競爭規則\">競爭規則</h2>\n<h3 id=\"競爭政策的安全地帶\">競爭政策的安全地帶</h3>\n<p>完全競爭</p>\n<ul>\n<li>企業就無差別產品展開競爭且基本上每個人的定價都等於邊際成本。消費者可以享受全部的消費者剩餘，即可以創造出的全部剩餘的最大值<br />\n卡特爾組織</li>\n<li>當存在壟斷企業或卡特爾組織時，這意味著要麼單一企業主導各自的市場，要麼幾家企業合力，表現得像一個單一的壟斷企業，會索取高於邊際成本的價格，造成無謂損失\n<ul>\n<li>壟斷企業或者卡特爾會獲得壟斷利潤，消費者剩餘被大幅蠶食，因為有消費者願意支付高於邊際成本的價格，卻不願意支付壟斷價格</li>\n</ul>\n</li>\n</ul>\n<p>競爭迫使企業生產更有效率，迫使企業用盡全力，通過差異化、創新、不斷提高效率，來盡力提高產品質量，卡特爾則相反</p>\n<ol>\n<li>卡特爾化允許企業犧牲消費者來賺取高額利潤</li>\n<li>減少創新、降低產品質量、減少產品差異化</li>\n<li>競爭大幅減少，使企業降低風險</li>\n</ol>\n<p>反托拉斯(Anti-Trust)政策能保護消費者和企業不受卡特爾化的消極影響</p>\n<h3 id=\"競爭政策中的規定\">競爭政策中的規定</h3>\n<ol>\n<li>禁止卡特爾\n<ol>\n<li>限制或禁止競爭者之間或供應商和消費者之間，簽訂限制競爭的協議或契約</li>\n</ol>\n</li>\n<li>禁止濫用市場支配地位\n<ol>\n<li>防止企業變得過於強大，或者防止它們濫用自己的強大地位，損害消費者和其他競爭者的利益</li>\n</ol>\n</li>\n<li>控制企業合併</li>\n</ol>\n<h4 id=\"禁止卡特爾\">禁止卡特爾</h4>\n<ul>\n<li>要有確切證據</li>\n<li>識別企業串謀行為\n<ol>\n<li>企業A和企業B同時提高或降低價格</li>\n<li>企業劃分商品銷售區域</li>\n</ol>\n</li>\n</ul>\n<p>溝通、合作越好，就越容易形成卡特爾。對卡特爾有利的因素</p>\n<ol>\n<li>生產同質產品，公司會就此瞭解彼此的動態，使卡特爾更易維持</li>\n<li>如果能監控價格和銷量，即存在技術方面的可預測性，市場季節性、瞭解成本構成等，要建立卡特爾就會更加容易</li>\n<li>企業曾有實行過卡特爾的經驗</li>\n</ol>\n<h4 id=\"禁止濫用市場支配地位\">禁止濫用市場支配地位</h4>\n<ul>\n<li>怎樣評定一個公司是否正濫用權力？\n<ol>\n<li>定義相關市場\n<ol>\n<li>產品市場: 哪些產品和 (或) 服務是相似的？哪些產品之間存在競爭？</li>\n<li>地域市場: 為了買一件商品消費者願意走多遠？換句話說 哪些地理區域是相關的？</li>\n<li>消費者市場: 哪些消費者或消費者群體，有興趣購買某產品</li>\n<li>假定壟斷者測試</li>\n</ol>\n</li>\n<li>接著評定該公司，是否真的在該市場佔據主導地位</li>\n<li>看這個公司的行為，是否損害了競爭對手 (的利益) 或將其排除在了該特定市場以外</li>\n</ol>\n</li>\n</ul>\n<p>假定壟斷者測試(SSNIP)<br />\n一個假定壟斷者即HM，能否通過一個幅度不大但有意義的非臨時性提價來增加利潤。如果答案是不能獲益，那實際上假定壟斷者的利潤減少，即提高價格會導致利潤減少，這就意味著我們需要將最接近的替代品納入該市場，接著重複進行這一測試**，如果一個假定壟斷者確實能通過提高價格增加利潤，我們就正確地界定了相關市場**。基本上這個測試會反覆進行，直到你正確地定義了市場為止。<br />\n<strong>市場上活躍的公司數量，並且假定它們都被一家公司所取代，被一個壟斷者取代，如果該壟斷者能通過提高價格增加利潤，那麼我們所看到的就是市場的正確定義。</strong></p>\n<p>阻止公司擴張或是增加利潤的兩個力量</p>\n<ol>\n<li>需求方替代品: 如果你提高價格，人們就會買別的產品</li>\n<li>供給方替代品: 如果你開始提價，其他企業或競爭者將會進入市場</li>\n</ol>\n<p>衡量市場集中度</p>\n<ol>\n<li>企業數量的倒數</li>\n<li>前N家最大企業所佔市場份額的總和</li>\n<li>赫芬達爾—赫希曼指數(HHI)\n<ol>\n<li>取某一行業中所有公司的市場份額，求得每一個份額的平方值，最後再將所有平方值相加，計算得出的結果都將介於零到一萬之間，零基本意味著市場上小公司的數量無限，而一萬則是只有一個壟斷者時的HHI指數，兼併及競爭管理機構常常將這一指數作為參考</li>\n<li>HHI的值的意義\n<ol>\n<li>&lt;1000: 可接受</li>\n<li>1000~1800: 兼併可能會被允許，但或許會被要求附上一些條件</li>\n<li>\n<blockquote>\n<p>1800: 兼併時會在許多細節上被深入調查</p>\n</blockquote>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>市場圈定</p>\n<ul>\n<li>處於市場支配地位時，使其他公司難以進入市場並改變現狀的行為就稱作市場圈定</li>\n<li>任何<strong>鞏固現有市場結構的行為</strong>，都可以被視為是一種市場圈定</li>\n</ul>\n<ol>\n<li>獨佔交易: 企業通過擬定採購合約 來阻止其他人，向競爭對手銷售或購買產品\n<ol>\n<li>以加油站為例，同品牌的加油站只向相同的供應商購買汽油</li>\n</ol>\n</li>\n<li>搭售: 當企業售賣一件具有市場影響力的產品時，要求消費者購買第二件沒有市場影響力的產品\n<ol>\n<li>在美國買蘋果手機，必須與AT&amp;T簽約入網</li>\n</ol>\n</li>\n<li>捆綁銷售: 其中只有一件擁有市場勢力，但你給捆綁購買這些產品的消費者提供折扣(搭售沒有折扣)\n<ol>\n<li>一首熱門歌曲收入在一個專輯，想買必須買這個專輯</li>\n</ol>\n</li>\n<li>掠奪性定價: 即先設定一個會讓你在短期內遭受損失的價格，但是從長遠來看，可以把競爭對手趕出市場並獲得壟斷利潤</li>\n<li>拒絕交易: 對下游競爭性行業的壟斷。拒絕向競爭對手提供關鍵投入或接口，或者出售投入的價格，會使競爭對手無法營利\n<ol>\n<li>微軟捆綁播放器，但對對手開放接口少，對手無法開發更好的播放器</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>成為壟斷企業並不違法，真正違法的是濫用壟斷地位</p>\n</blockquote>\n<h2 id=\"提高收益\">提高收益</h2>\n<p>網路商品定義</p>\n<ol>\n<li>消費外部性為正: 如果有其他人加入我的網路，我就能得到額外效用</li>\n<li>臨界規模: 當網路小於一定規模時，就無法持續</li>\n<li>存在兼容性以及標準問題: 存在轉換成本，並且消費者常常會被鎖定在特定的網路中\n<ol>\n<li>這一特性並非為網路市場所獨有，但在網路市場常見</li>\n</ol>\n</li>\n<li>集中化市場結構: 通常只有一個贏家</li>\n<li>顯著的規模經濟: 使用的人愈多，平均成本愈低</li>\n</ol>\n<p>大規模的優勢</p>\n<ol>\n<li>使企業的繼續擴大更容易</li>\n<li>成本將不斷降低，盈利會增加</li>\n<li>梅特卡夫定律 (Metcalfe's Law)\n<ol>\n<li><strong>直接</strong>的網路效應: <strong>潛在使用次數</strong>和<strong>使用人數的指數</strong>呈正相關</li>\n</ol>\n</li>\n</ol>\n<p>擴散</p>\n<ol>\n<li>一項新技術一經推出，並不會立刻被整個市場採用</li>\n<li>新用戶的加入會是一個相當緩慢的過程</li>\n<li>事實上，擴散會以S型進行: 起初擴散很慢，中期擴散很快，之後又逐漸放緩\n<ol>\n<li>達到某個臨界數量(效用)時，許多人會開始使用(中期)</li>\n</ol>\n</li>\n</ol>\n<p>效用函數</p>\n<ol>\n<li>獨立價值 a、使用人數 n、網路效應的強度 α</li>\n<li>U = a + n^α\n<ol>\n<li>n 和 α 影響最大</li>\n</ol>\n</li>\n<li>加上不同使用者的效用\n<ol>\n<li>先驅: 認為 a 很大</li>\n<li>中期採用者: 和一般假設相同(大多數的人是中期採用)</li>\n<li>晚期採用者: 認為 a 小</li>\n</ol>\n</li>\n</ol>\n<p>間接的網路效應</p>\n<ul>\n<li><strong>兼容產品</strong>: 即效用互相依賴於其他產品的用戶數量\n<ul>\n<li>遊戲機和遊戲</li>\n<li>信用卡和採用信用卡的店家</li>\n<li>互補產品越多意味著用戶越多，而用戶越多也意味著互補產品越多</li>\n<li>消費者所看到的是整個互補品組合</li>\n</ul>\n</li>\n</ul>\n<p>網路行業中的市場結構</p>\n<ol>\n<li>網路效應很強且消費者異質性小，很有可能會出現壟斷</li>\n<li>網路效應略弱但消費者異質性大的市場，一個公司佔據支配地位，但其他利基公司也可以生存</li>\n<li>弱網路效應和高消費者異質性，沒有單一企業可以佔據支配地位</li>\n</ol>\n<h3 id=\"橫向企業邊界\">橫向企業邊界</h3>\n<p>橫向企業邊界: 企業能以多大的規模進行生產經營</p>\n<p>規模經濟: 生產一種產品的平均成本, 會隨著<strong>產量</strong>的增加而降低</p>\n<ol>\n<li>固定成本: 生產過程中有些投入必須達到最低要求(機器): 提高產量最終能將固定成本分攤給更多份產品</li>\n<li>庫存: 指的是一個公司會有一定量的存貨: 大公司庫存量對銷量的比例可以更小，因為大公司的需求較為穩定</li>\n</ol>\n<p>學習型經濟: 指生產某個產品的平均成本隨著<strong>累積產量</strong>的增加而降低</p>\n<ul>\n<li>昨天的產量,會決定今天的生產效率</li>\n</ul>\n<p>範圍經濟: 由同一主體生產和提供<strong>不同的產品和服務</strong>，能夠節約成本</p>\n<ol>\n<li>品牌保護傘: 因為當你推出一項新產品，基本上是將品牌下所有產品的聲譽作為賭注。新產品必須符合現有品牌口碑的優質產品，否則將損害新產品和原有產品的價值和聲譽</li>\n<li>聯合採購: 如果你購買的產品數量較高，單價就會降低</li>\n</ol>\n<p>可能阻礙規模經濟和範圍經濟的因素(規模不經濟、範圍不經濟)</p>\n<ol>\n<li>勞動力成本\n<ol>\n<li>較大的公司最後往往要支付更高的工資</li>\n</ol>\n</li>\n<li>更多管理、溝通的浪費</li>\n</ol>\n<p>供應商與採購商的關係<br />\n2. 外購<br />\n1. 製造規模經濟，減少成本<br />\n2. 固定成本轉換成可變成本<br />\n3. 分散風險<br />\n4. 增加競爭(自己設立的工廠沒有競爭壓力)<br />\n3. 自製<br />\n1. 避免交易成本：尋找廠商、合約<br />\n2. 可以隨意調整產品<br />\n2. 避免被敲竹槓</p>\n<h2 id=\"適用於網路市場的策略\">適用於網路市場的策略</h2>\n<p>網路市場中的競爭</p>\n<ol>\n<li>你需要確保達到臨界規模(Critical Mass)\n<ol>\n<li>達到臨界規模會發生滾雪球效應(中期使用者快速增加)</li>\n<li>贏得早期採用者以推廣</li>\n</ol>\n</li>\n</ol>\n<p>決定臨界規模的因素</p>\n<ol>\n<li>足夠大的用戶基數</li>\n<li>足夠強的網路效應</li>\n<li>足夠低的價格使市場擴散得以自我維持\n<ol>\n<li>自我維持: 沒有改變產品的情況下，網路中就會湧入更多的使用者，因為效用越來越高</li>\n</ol>\n</li>\n</ol>\n<p>加速到達臨界規模</p>\n<ol>\n<li>提高對網路效應的預期\n<ol>\n<li>利用信譽（自身信譽、或者與他人聯合借用合作夥伴信譽）\n<ol>\n<li>擁有已經成功的技術</li>\n</ol>\n</li>\n<li>宣傳(廣告)</li>\n</ol>\n</li>\n<li>打破現有技術在市場中的鎖定效應<br />\n2. 提前宣佈: 消費者可能願意等到這個新產品上市，再做購買決定<br />\n1. 高科技市場常見的做法<br />\n2. 太晚上市的話會減低消費者信心(暗黑3是例外…)<br />\n3. 霧件：已經宣佈但從未實現的商品…</li>\n<li>減低消費者被失敗技術鎖定的風險<br />\n4. 提前簽訂合約，讓潛在顧客知道，有許多其他用戶已經決定採用新技術了，預期效用增加<br />\n5. 提供早期採用者適當的折扣<br />\n6. 讓消費者租賃，萬一不成功可以退貨<br />\n7. 授權新技術給其他廠商。作為取得勝利或避免標準之爭的方法。可確保新技術提供商的數量充足<br />\n1. 新技術授權的優勢對發起者來說同樣重要<br />\n1. 新技術的發起者能規定技術細節</li>\n</ol>\n<h3 id=\"網路市場中的策略\">網路市場中的策略</h3>\n<p>兼容性</p>\n<ol>\n<li>\n<p>完全兼容: 不同品牌按同一標準運作</p>\n<ol>\n<li>電信業者</li>\n</ol>\n</li>\n<li>\n<p>向後兼容: 如果新型號能兼容舊型號，反之卻不行</p>\n<ol>\n<li>DVD、CD</li>\n</ol>\n</li>\n<li>\n<p>單向兼容: 一種標準或技術能使用另一個，而後者不能使用前者</p>\n</li>\n<li>\n<p>部分兼容: 如果產品可交互操作，他們就是部分兼容</p>\n<ol>\n<li>性能可能降低 或 必須負擔一定費用</li>\n</ol>\n</li>\n<li>\n<p>法定標準。通過法律或組織制定的標準，以避免消費者的不確定和困惑</p>\n</li>\n<li>\n<p>事實標準，由一個公司所指定的標準，或是經由市場勢力處於主導地位的標準，也就是標準被廣泛使用，而不是獲得標準制定組織或政府認可。市場可能選擇的技術，優先於官方、標準制定組織和立法者</p>\n</li>\n</ol>\n<p>標準選擇可能出現納許均衡：</p>\n<ol>\n<li>各選各的標準(可能相同，可能不同)\n<ol>\n<li>不相上下 (Tweedledum and Tweedledee): 傾向多個標準競爭</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JTgwJUE3JUU1JTg4JUFCJUU2JTg4JTk4\">性別戰<i class=\"fa fa-external-link-alt\"></i></span> （Battle of sexes）: 傾向用共同標準，先採取行動者有優勢</li>\n</ol>\n</li>\n<li>一方兼容策略(惱人小弟策略），A傾向於有一個共同標準，可以理解為小弟總想跟隨大哥，但是公司B也就是我們說的「大哥」，希望存在兩個標準</li>\n</ol>\n<p>產生共同標準</p>\n<ul>\n<li>低價授權</li>\n<li>混合標準(能同時使用多種標準)</li>\n<li>標準的開發轉移到第三方</li>\n</ul>\n<h3 id=\"目標市場\">目標市場</h3>\n<ol>\n<li>爭取到有影響力的採用者\n<ol>\n<li>透過自己的聲望或社會影響力來帶動別的用戶，他們的影響力也能提高產品的知名度，有影響力的採用者自己也有可能構成臨界規模</li>\n</ol>\n</li>\n<li>就是對盜版商睜一隻眼閉一隻眼。網路規模可以來自合法消費者，也能來自盜版商。無視盜版可能比死守知識產權更能盈利，如：學生使用盜版軟件\n<ol>\n<li>為何不降價？</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"定價策略\">定價策略</h3>\n<p>通常網路產品有進入市場的沉沒成本，固定成本高，邊際成本低，使定價有很大的靈活性，因此，成本導向定價當然也就沒多大意義<br />\n價值導向定價: 設定的價格，反映了商品對於消費者的價值，而不是生產的成本</p>\n<ol>\n<li>網路商品定價應有利於商品擴散，希望早期建立足夠大的用戶基數</li>\n<li>強網路效應，意味著消費者會有更大的支付意願</li>\n<li>價格歧視策略。對支付意願低的消費者提供<strong>免費版本</strong>，以增加用戶基數。意味著對專業用戶可以收更高的費用</li>\n</ol>\n<ul>\n<li>滲透定價\n<ul>\n<li>意味著在早期階段，通過收取低價來建立用戶基數，當用戶基數的上升使得消費者認定的價值提高，才開始提高價格</li>\n<li>價格則隨著時間推移而上漲</li>\n</ul>\n</li>\n<li>撇脂定價\n<ul>\n<li>價格隨著時間推移而下降</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"借助合作夥伴實現增長\">借助合作夥伴實現增長</h2>\n<p>併購的趨勢<br />\n1.許多公司會在同一時間內進行兼併<br />\n2.併購的數量和交易額增長</p>\n<p>兼併（merger）</p>\n<ul>\n<li>對等合併: 兩家規模相當的公司，決定進行聯營並共享產權，它們合併後成為一個新的法律實體\n<ul>\n<li>兼併雙方的股票通常都會撤市，取而代之的是新公司的股票</li>\n</ul>\n</li>\n<li>真正的對等兼併其實並不常見，但通常名義上還是宣稱對等，為什麼？因為這能打消員工的一些擔憂，使他們不用擔心。如：在一家公司接管另一家後，自己的職位及工作岌岌可危，諸如此類。但在現實中，常常有一方略強於另一方，因此對一些事情有決定權，比如：誰來就任新公司的首席執行官，新公司開展什麼項目。</li>\n</ul>\n<p>收購(acquisition)<br />\n指的是公司從一開始就不對等，所以這裡就有一個收購方和一個目標公司，收購方將吞併目標公司，也就是說，它是這場收購中更強大的一方，而目標公司則是較弱的一方</p>\n<p>兼併方和收購方的目標可分為</p>\n<ol>\n<li>橫向兼併: 兼併競爭者\n<ol>\n<li>如果從市場中少了一家公司，競爭就會被削弱，壯大自己就能降低成為併購目標的風險</li>\n<li>提高談判能力</li>\n<li>生產有關的優勢：能夠推行更先進的生產技術、可以實現規模經濟和範圍經濟、推行新技術、通過兼併獲得小公司的新技術</li>\n<li>市場有關的優勢：可以獲得其他公司的新產品、進入新的產品市場、比建立一個品牌更便宜地擁有一個品牌、獲得渠道、降低交易成本等</li>\n</ol>\n</li>\n<li>縱向兼併: 兼併供應商或買家\n<ol>\n<li>降低交易成本</li>\n<li>獲得對上下游資源的控制</li>\n<li>提高進入壁壘</li>\n</ol>\n</li>\n<li>混合兼併: 兼併和目前事業無關的公司\n<ol>\n<li>得不到市場優勢，也得不到生產和競爭方面的優勢</li>\n<li>可以分散風險</li>\n</ol>\n</li>\n</ol>\n<p>公司被收購獲得的好處</p>\n<ol>\n<li>對公司來說,這也許是一個解決財務問題的方法</li>\n<li>使你處於更佳的競爭地位</li>\n<li>也許還是重組公司的一個契機</li>\n<li>增加投資</li>\n<li>沒有繼承人的情況下，賣掉公司也許是確保公司存活，並擁有傑出的管理層最簡單的方法</li>\n<li>經常有些意見相左的大股東，通過賣掉公司來解決分歧，通常比不斷嘗試協調股東之間的不同利益等容易的多</li>\n</ol>\n<p>併購過程</p>\n<ol>\n<li>找到與我們戰略目標一致的目標公司\n<ol>\n<li>考慮的是收購方與目標公司之間的相關程度和相符程度，包括：戰略＼產品組合(加強或互補)＼管理風格＼核心市場＼核心能力(優勢)是否互補匹配</li>\n</ol>\n</li>\n<li>盡職調查，確定潛在協同效應的步驟。將從財務和法律兩方面進行分析，並對潛在目標公司進行戰略分析，是否真的能夠幫助我們實現戰略目標？</li>\n<li>交易開始。一旦敲定了價格(通常會高於市場價值)，要進行明確融資策略，如現金實現、股票互換、貸款、追加公司資本</li>\n<li>兼併後整合(最麻煩的步驟)</li>\n</ol>\n<p>併購的協同效應</p>\n<ol>\n<li>規模經濟</li>\n<li>市場勢力的增加</li>\n<li>分散風險</li>\n</ol>\n<p>雙方之間的協同效應並不會從天而降，還需要經過深思熟慮的整合行為</p>\n<p>企業合併控制: 監管大型企業兼併的過程，旨在阻止那些會極大削弱競爭，並最終會使公司佔據支配地位的交易</p>\n<ul>\n<li>評估\n<ol>\n<li>界定產品市場</li>\n<li>計算出幾家參與併購公司的市場份額</li>\n<li>判斷是否會出現壟斷行為</li>\n</ol>\n</li>\n</ul>\n<p>兼併後的蜜月期——兼併後整合</p>\n<ol>\n<li>儘可能地整合併購企業，或許能完全實現預期的兼併協同效應，整合程度越高，就越有可能完全實現這一協同效應</li>\n<li>併購綜合症: 被收購的企業，其管理層的更替率可能相當高，因為他們被要求改變辦事方式，被要求交出之前的權力，他們可能因此感到極為失望並離職，發生這種事也有可能影響普通員工，他們可能會以怠慢工作，或冷淡對待工作來表現負面情緒</li>\n</ol>\n<p>兼併後整合模式</p>\n<ol>\n<li>控股公司——如果被收購企業的自治需求不高，也不急於進行戰略整合\n<ol>\n<li>並不存在一個整合計畫。實際整合的部分，只包括了財務轉移、風險分擔以及綜合管理能力等方面。其他基本保持獨立</li>\n</ol>\n</li>\n<li>保留型模式——如果被併購企業的自治需求高，但對戰略整合的需求不高\n<ol>\n<li>在這種情況下實行整合或者是過度整合，都有可能不利於兼併的成功，應適當放寬對被收購企業的管理，即不對其進行太大的整改——只透過投資而非直接管理來創造價值</li>\n</ol>\n</li>\n<li>吸收型模式——當目標企業的自治需求低，且急於進行戰略整合\n<ol>\n<li>把企業拉向彼此，問題不在於是否整合，而是如何整合？以及何時整合？也就是要找到整合的最佳時機，儘可能減少僱員特別是核心員工上的麻煩</li>\n</ol>\n</li>\n<li>共生關係——如果企業自治需求高的同時 對戰略整合的需求也高（最為複雜的模式）\n<ol>\n<li>先讓兩家企業共存，然後逐漸整合。可以說是一種合作夥伴式的整合過程</li>\n</ol>\n</li>\n</ol>\n<p>追求協同效應過程中常見失敗因素</p>\n<ol>\n<li>兼併的結果就是競爭可能會越發激烈，而不是減弱</li>\n<li>管理層人員本應做出調整，卻堅持固有想法時</li>\n<li>固有價值被破壞，員工失去士氣</li>\n<li>核心人員可能會離職</li>\n<li>收購方以及被收購方各自都有非常明確的使命，新企業也要找到自己的使命，如果沒有一位能指明方向的領導人，便可能會產生問題</li>\n</ol>\n<p>真正成功的兼併少之又少，原因有多</p>\n<ol>\n<li>對於成功有不同的評判標準，如股票沒有沒跑贏大盤</li>\n<li>兼併過程中每一步都可能出錯</li>\n<li>併購可能出於管理層的私人利益\n<ol>\n<li>管理一個更大的企業會給他們帶來社會地位、獲得更高收入等</li>\n<li>兼併帶來的股票上漲，給目標公司前股東帶來了收益</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"有機增長\">有機增長</h2>\n<p>小公司的限制</p>\n<ol>\n<li>獲得廉價資本方面受限</li>\n<li>研發能力也會受到限制</li>\n<li>很難找到專利技術的替代品</li>\n<li>更難維持能滿足顧客需求的一定規模的銷售組織</li>\n<li>沒有大公司那樣的廣告影響力</li>\n<li>沒有掌控供應商的能力</li>\n<li>無法通過多個市場經營分散風險</li>\n<li>無法承受進入新市場的高額成本</li>\n<li>無法應用更多元化的管理能力和技術能力，即：管理經濟、規模經濟、範圍經濟</li>\n</ol>\n<p>有機增長</p>\n<ul>\n<li>公司依靠創新、新產品和服務、客戶增長等核心業務拓展而帶來的增長\n<ul>\n<li>企業早期階段，<strong>建立新市場、開發新產品</strong>的時候，有機增長是最常見、最普遍的增長方式</li>\n<li>有機(內部)增長的過程通常也比無機增長(依頼外力的成長，如收購)要慢</li>\n</ul>\n</li>\n<li>增長方式\n<ol>\n<li>獲得新顧客，即擴大消費族群</li>\n<li>增加現有產品和服務的銷量</li>\n<li>推出新產品和服務</li>\n<li>進入新的區域市場，實行多樣化經營</li>\n</ol>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>產品\\市場</th>\n<th>存在</th>\n<th>新的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>存在</td>\n<td>保護/建造</td>\n<td>生產/開發</td>\n</tr>\n<tr>\n<td>新的</td>\n<td>市場開發</td>\n<td>多樣化</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>保護/建造: 穩固、保護市場地位</p>\n</li>\n<li>\n<p>生產/開發: 針對市場推出新產品，引入新的競爭力</p>\n</li>\n<li>\n<p>市場開發: 尋找新的市場、新的定位，如果核心模塊是產品相關的，這是一個好策略</p>\n</li>\n<li>\n<p>多樣化: 超出預期，新開發的產品，新的市場都不是熟悉的，風險最高</p>\n<ul>\n<li>基於品牌忠誠度的水平多樣化</li>\n<li>基於產品分類的生產過程或者技術多樣化</li>\n</ul>\n</li>\n<li>\n<p>發展的外部限制</p>\n<ol>\n<li>缺少資源（產品和市場因素）：資金、勞動力、特定自然資源、技術、專利、商機\n<ol>\n<li>這些是固定因素，無法改變</li>\n</ol>\n</li>\n<li>領導者需要深刻的洞察力、想像力、管理技巧等</li>\n</ol>\n</li>\n<li>\n<p>發展的內部限制</p>\n<ol>\n<li>管理能力不足</li>\n<li>管理不經濟(需要更多人管理)</li>\n<li>結構不適（strutural misfit)：有些結構難以改變\n<ol>\n<li>需要結構成長以避免(簡單、功能型、多部門)</li>\n</ol>\n</li>\n<li>不確定性和風險</li>\n</ol>\n</li>\n</ul>\n<p>管理限制（managerial limits, penrose, 1995)</p>\n<ol>\n<li>一段時間內的計畫總量，限制了你在下個時期可以吸收的新員工的數量</li>\n<li>公司需要很多計畫，才能實現增長</li>\n</ol>\n<p>典型的組織結構發展: 因為銷售增長，為了解決協調和控制問題而調整結構<br />\n簡單結構（一個管理者和一些員工） → 功能型結構(分部門) → 多部門結構（按產品或地區設立事業部）</p>\n<h3 id=\"國際化策略\">國際化策略</h3>\n<p>兩種壓力，四種維度</p>\n<ul>\n<li>成本降低壓力</li>\n<li>適應本地市場壓力</li>\n</ul>\n<ol>\n<li>全球化戰略（global strategy）\n<ol>\n<li>面臨高效率的壓力，全球一體化的要求很高，為了降低成本，更注重效率而不是滿足當地需求，如：微軟、保潔</li>\n</ol>\n</li>\n<li>多國本地化策略（multidomestic strategy)\n<ol>\n<li>適應本地市場壓力高，對適應當地市場的要求很高，但降低成本的壓力則相當小；如：MTV</li>\n</ol>\n</li>\n<li>跨國戰略（transnational strategy)\n<ol>\n<li>兩種壓力都大，統一品牌，適當本地化，適應當地市場，以及全球一體化的要求都很高，最難實施。如：麥當勞、肯德基等</li>\n</ol>\n</li>\n<li>國際化戰略（International strategy）\n<ol>\n<li>降低成本的壓力和適應當地的壓力都較小，又可以稱為出口戰略，如：特產、衣服、家具等</li>\n</ol>\n</li>\n</ol>\n","categories":["轉載"],"tags":["經濟學","策略","競爭","博弈論"]},{"title":"計算機結構(上)","url":"/computer-architecture1/","content":"<!-- RENEW: -->\n<h2 id=\"Chap01-Introduction\">Chap01 Introduction</h2>\n<h3 id=\"What-can-we-learn\">What can we learn</h3>\n<ul>\n<li>How programs finally executed on hardware</li>\n<li>How to write an efficient program</li>\n<li>How hardware and software work well together</li>\n<li>How to improve hardware performance<br />\n<img data-src=\"/img/computer-architecture/2N0mDJJ.webp\" alt=\"\" /></li>\n</ul>\n<span id=\"more\"></span>\n<blockquote>\n<p>What really matters is the functioning of the complete system, hardware, runtime system, compiler, operating system, and application<br />\n“In networking, this is called the “End to End argument” --- H&amp;P</p>\n</blockquote>\n<h3 id=\"Why-need-to-take-this-course\">Why need to take this course</h3>\n<p>You will be able to answer the following questions:<br />\n<strong>Q1: How can I write a program with good performance?code B perform better than code A?</strong><br />\n(I don't know why)</p>\n<pre><code>Code A\nfor (i = 0; i &lt; N; i = i+1)\n\tfor (j = 0; j &lt; N; j = j+1)\n\t\t&#123;r = 0;\n\t\t\tfor (k = 0; k &lt; N; k = k+1)\n\t\t\t&#123;\n\t\t\t\tr = r + y[i][k]*z[k][j];\n\t\t\t&#125;;\n\t\t\tx[i][j] = r;\n\t\t&#125;;\n========\nCode B\nfor (jj = 0; jj &lt; N; jj = jj+B)\n\tfor (kk = 0; kk &lt; N; kk = kk+B)\n\t\tfor (i = 0; i &lt; N; i = i+1)\n\t\t\tfor (j = jj; j &lt; min(jj+B-1,N); j = j+1)\n\t\t\t&#123;\n\t\t\t\tr = 0;\n\t\t\t\tfor (k = kk; k &lt; min(kk+B-1,N); k = k+1)\n\t\t\t\t&#123;\n\t\t\t\t\tr = r + y[i][k]*z[k][j];\n\t\t\t\t&#125;\n\t\t\t\tx[i][j] = x[i][j] + r;\n\t\t\t&#125;;\n</code></pre>\n<p><strong>Q2: CPU frequency ？ Performance</strong><br />\nAns at Chap02<br />\n<strong>Q3: Why do Nvidia GPUs get so much attention today?</strong><br />\nHeterogeneous(異質) Computing : Integrated CPU/GPU<br />\n<img data-src=\"/img/computer-architecture/MZa4WQV.webp\" alt=\"\" /></p>\n<h3 id=\"Post-PC-Era\">Post PC Era</h3>\n<p>資訊界：小魚吃大魚<br />\n<img data-src=\"/img/computer-architecture/XGJt3Qu.webp\" alt=\"\" /><br />\n<img data-src=\"/img/computer-architecture/XXVfz5O.webp\" alt=\"\" /></p>\n<p>Ex. Cloud computing</p>\n<ul>\n<li>Software as a Service (SaaS)</li>\n<li>Amazon and Google</li>\n</ul>\n<h3 id=\"Chip-War-Big-core-or-Small-core\">Chip War: Big core or Small core</h3>\n<p>Workload changes in data centers<br />\nPast: databases, financial services<br />\nNow: web service, cloud computing (accessing mails, photos, facebooks, etc)<br />\n=&gt; Simple tasks &amp; large amount of parallel tasks<br />\n=&gt; Small Core is better</p>\n<p>Ex. ARM</p>\n<ul>\n<li>Founded at the year of 1990, in Cambridge, England</li>\n<li>Co-founded by Apple &amp; Acron</li>\n<li>Emphasize low-power since day one</li>\n<li>First low-power, 32 bit mobile processor</li>\n<li>sells designs(IP license) instead of chips<br />\n<img data-src=\"/img/computer-architecture/573HpxE.webp\" alt=\"\" /><br />\n<img data-src=\"/img/computer-architecture/3Teh9R3.webp\" alt=\"\" /></li>\n</ul>\n<h3 id=\"Inside-the-Processor-CPU\">Inside the Processor (CPU)</h3>\n<p>-Datapath: performs operations on data<br />\n-Control: sequences datapath, memory, ...<br />\n-Cache memory<br />\n-Small fast SRAM memory for immediate access to data</p>\n<h3 id=\"Moore’s-Law-1965\">Moore’s Law (1965)</h3>\n<ul>\n<li>Gordon Moore, Intel founder</li>\n<li>“The density of transistors in an integrated circuit will double <strong>every year</strong>.”</li>\n<li>Reality\n<ul>\n<li>The density of silicon chips doubles <strong>every 18 months</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Uniprocessor-Performance\">Uniprocessor Performance</h3>\n<p><img data-src=\"\" alt=\"uni p\" /><br />\nVAX : 25%/year 1978 to 1986<br />\nRISC + x86: 52%/year 1986 to 2002<br />\nRISC + x86: 20%/year 2002 to present</p>\n<h3 id=\"Concept-Change\">Concept Change</h3>\n<ul>\n<li><strong>Power expensive</strong>,** Transistors free** (Can put more on chip than can afford to turn on)\n<ul>\n<li>so hot that make low efficiency</li>\n</ul>\n</li>\n<li><strong>law of diminishing returns</strong>(收益遞減) on more HW for ILP( Instruction Level Parallelism, 指令層級平行)\n<ul>\n<li>愈平行，效率提升的投資投酬愈少(control overhead)</li>\n</ul>\n</li>\n<li><strong>Memory slow</strong>,** CPU fast** (200 clock cycles to DRAM memory, 4 clocks for multiply)</li>\n<li>Power Wall + ILP Wall + Memory Wall = CPU Wall</li>\n<li>Uniprocessor performance 2X / 1.5 yrs -&gt; <strong>multiple cores</strong> (2X processors per chip / 2 years)</li>\n</ul>\n<p>CPU constrained by power, instruction-level parallelism, memory latency<br />\n<img data-src=\"/img/computer-architecture/V9Q8UOl.webp\" alt=\"\" /></p>\n<h3 id=\"CPU-history\">CPU history</h3>\n<p>8086 Introduced x86 ISA 1978<br />\n80286 Virtual memory 1982<br />\n80386 32-bit processor (1985)<br />\n80486 Pipelining Floating point unit 8 KB cache (1989)<br />\nPentium Superscalar (1993)<br />\nPentium Pro / II / III  Dynamic execution Multimedia instructions 1995-9<br />\nPentium 4 HyperThreading Deep pipeline (2001)<br />\nPentium D (2005) Dual core 2 Pentium 4 cores<br />\nAMD big.LITTLE 大核+小核<br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy50ZWNoYmFuZy5jb20vcG9zdHMvMTUwMDMtYXJtLW91ci10ZWNobm9sb2d5LXRoYW4tdGhlaXItcml2YWxzLWFoZWFkLW9mLXR3by1nZW5lcmF0aW9ucw==\">AMD big.LITTLE<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"8-Design-Principle-for-Computer-Architecture-System\">8 Design Principle for Computer Architecture/System</h3>\n<ol>\n<li>Design for Moore’s Law</li>\n<li>Use abstraction to simplify design</li>\n<li>Make the common case fast</li>\n<li>Performance via parallelism</li>\n<li>Performance via pipelining</li>\n<li>Performance via prediction</li>\n<li>Hierarchy of memories</li>\n<li>Dependability via redundancy(多餘使其安全)</li>\n</ol>\n<h2 id=\"Chap02-Performance-Power-Cost\">Chap02 Performance/Power/Cost</h2>\n<p>How to measure, report, and summarize performance/power/cost?</p>\n<ul>\n<li>Metric(度量)</li>\n<li>Benchmark(基準)</li>\n</ul>\n<h3 id=\"Two-Notions-of-“Performance”\">Two Notions of “Performance”</h3>\n<ul>\n<li>Response Time (latency)</li>\n<li>Throughput</li>\n</ul>\n<p>-&gt; We focus on response time</p>\n<h3 id=\"Metrics-for-Performance-Evaluation\">Metrics for Performance Evaluation</h3>\n<ul>\n<li>Program execution time(Elapsed time經過時間)</li>\n<li>Total time to complete a task, including disk access, I/O, etc</li>\n<li>CPU execution time(使用CPU的時間)</li>\n<li>doesn't count I/O or time spent running other programs</li>\n<li>Our Focus: user CPU time(without system CPU time)</li>\n<li><strong>time spent executing the lines of code that are &quot;in&quot; program</strong></li>\n</ul>\n<p>performance(x) = 1 / execution_time(x)</p>\n<p>For Embedded System</p>\n<ul>\n<li>Hard real time\n<ul>\n<li>A fixed bound on the time to respond to or process an event</li>\n</ul>\n</li>\n<li>Soft real time(寬鬆)\n<ul>\n<li>An average response or a response within a limited time</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"CPU-performance\">CPU performance</h3>\n<p>CPU time<br />\n= CPU clockcycles x Clockcycle time<br />\n= CPU clockcycles / clockrate<br />\n(Because Clock Cycles = Instruction Count x Cycles per Instruction )<br />\n= Instruction Count x Cycles per Instruction x Clockcycle time</p>\n<p>Instruction Count of program is determined by program, ISA and compiler<br />\ncycles per instruction is determined by CPU hardware</p>\n<p>different instruction may have different CPI(Clocks Per Instruction)<br />\n-&gt; use weighted average CPI(加權平均)</p>\n<p>Aspects of CPU Performance<br />\n<img data-src=\"/img/computer-architecture/CJkqLMX.webp\" alt=\"\" /></p>\n<p>Chap01 Q2: CPU frequency(時脈) is not fully related to performance</p>\n<h3 id=\"MIPS\">MIPS</h3>\n<ul>\n<li>Millions of Instructions Per Second</li>\n<li>= Clock Rate / (CPI * 10^6)</li>\n<li>Can't be performance metric(CPI varies between programs)</li>\n</ul>\n<h3 id=\"CMOS-IC-power-performance\">CMOS IC power performance</h3>\n<p><img data-src=\"/img/computer-architecture/BeoKq0T.webp\" alt=\"\" /><br />\n$V ∝ Frequency$ =&gt; $power ∝ V^3$<br />\nhigh ascending rate</p>\n<p>dynamic energy: energy that is consumed when transistors switch states from 0 to 1 and vice versa. It depends on the capacitive loading of each transistor and the voltage applied:</p>\n<pre><code>Energy ∝ Capacitive load  x Voltage^2\n</code></pre>\n<p><strong>Why is Multi-Core Good for Energy-Efficiency?</strong><br />\n<img data-src=\"/img/computer-architecture/4lLg4I9.webp\" alt=\"\" /><br />\nonly use 1/4 power</p>\n<p>Requires explicitly parallel programming. Hard to do because</p>\n<ul>\n<li>Programming for performance</li>\n<li>Load balancing</li>\n<li>Optimizing communication and synchronization</li>\n</ul>\n<h3 id=\"Manufacturing-ICs\">Manufacturing ICs</h3>\n<p>Yield(良率): proportion of working dies(晶片) per wafer<br />\nNonlinear relation to area and defect rate<br />\n<img data-src=\"/img/computer-architecture/hkO62eV.webp\" alt=\"Yield\" /></p>\n<h3 id=\"Benchmark\">Benchmark</h3>\n<h4 id=\"SPEC-benchmark\">SPEC benchmark</h4>\n<ul>\n<li>Standard Performance Evaluation Corp. (SPEC)\n<ul>\n<li>Develops benchmarks for CPU, I/O, Web, …</li>\n<li>CPU Benchmark\n<ul>\n<li>Programs to simulate actual workload</li>\n<li>focuses on CPU performance(a little I/O)</li>\n<li>Test both integer and floating point applications<br />\nCINT (integer) and CFP (floating-point)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>SPECRatio</strong><br />\n<strong>Normalize</strong> execution times to reference computer<br />\nperformance = time on standard computer/ time on computer being rated<br />\n<img data-src=\"/img/computer-architecture/xfEcDxV.webp\" alt=\"\" /><br />\nSince ratios, geometric mean is proper</p>\n<h4 id=\"Power-Benchmark\">Power Benchmark</h4>\n<ul>\n<li>Power consumption of server at different workload levels(不同的工作量下，平均的工作效能)</li>\n<li>Report power consumption of servers at different workload levels, divided into 10% increments</li>\n<li>Performance: ssj_ops/sec(每秒完成的事務數)</li>\n<li>Power: Watts (Joules/sec)<br />\n<img data-src=\"/img/computer-architecture/RwlzFoo.webp\" alt=\"\" /></li>\n</ul>\n<p>Amdahl’s Law<br />\n程式的平行化只能將執行時間縮短到一定程度(因為分散運算的overhead)<br />\n<img data-src=\"/img/computer-architecture/vSJTU7L.webp\" alt=\"\" /></p>\n<p>Low Power at Idle(x)</p>\n<ul>\n<li>At 100% load: 295W</li>\n<li>At 50% load: 246W (83%)</li>\n<li>At 10% load: 180W (61%)</li>\n<li>not porportional!</li>\n</ul>\n<p>=&gt; In general, the more load, the better power consumption rate<br />\n=&gt; Consider designing processors to make power proportional to load</p>\n<h2 id=\"Chap03-Instruction-Set-Architecture-ISA\">Chap03 Instruction Set Architecture(ISA)</h2>\n<p>Definition: Instruction set provides an layer of abstraction to programmers<br />\n<img data-src=\"/img/computer-architecture/ev3Iazm.webp\" alt=\"\" /></p>\n<h3 id=\"ISA-Design-Principle\">ISA Design Principle</h3>\n<p>makes it easy to build the hardware and the compiler while maximizing performance and minimizing cost.</p>\n<p>Interface Design<br />\n(portability, compatibility, generality)<br />\n(convenient at high level , efficient in low level)</p>\n<p><img data-src=\"/img/computer-architecture/1nBfGuE.webp\" alt=\"\" /></p>\n<h3 id=\"Design-Principles\">Design Principles</h3>\n<ul>\n<li>Design Principle 1: Simplicity favors regularity(All operation takes three operands)</li>\n<li>Design Principle 2: Smaller is faster(MIPS only 32 register)</li>\n<li>Design Principle 3: Make the common thing fast(addi)</li>\n<li>Design Principle 4: Good design demands good compromises(妥協)(three format of instruction code)</li>\n</ul>\n<h3 id=\"MIPS-Instruction-Set\">MIPS Instruction Set</h3>\n<p>Stanford MIPS be Memory are referenced with byte addresses in MIPScommercialized<br />\na kind of RISC精簡指令集(Reduced Instruction Set Computing)</p>\n<ul>\n<li>31個 32-bit integer registers (R0 = const 0)<br />\n<img data-src=\"/img/computer-architecture/VRdEFJz.webp\" alt=\"\" /></li>\n<li>32個 32-bit floating-point registers</li>\n<li>32-bit HI, LO, PC (program counter) -- internal, can't modify<br />\nMemory are referenced with byte addresses in MIPS<br />\n1 word = 4 byte</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>意義</th>\n<th>備註</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>add Ra Rb Rc</td>\n<td>Ra =Rb + Rc</td>\n<td></td>\n</tr>\n<tr>\n<td>load Ra A</td>\n<td>Ra =mem[A]</td>\n<td></td>\n</tr>\n<tr>\n<td>store Ra A</td>\n<td>mem[A] =Ra</td>\n<td>Memory are referenced with byte addresses in MIPS</td>\n</tr>\n<tr>\n<td></td>\n<td>Data transfer instructions</td>\n<td></td>\n</tr>\n<tr>\n<td>lw ＄t0, 8 (＄s3)</td>\n<td>t0 = mem[8+reg[＄s3]]</td>\n<td>lw dest offset base, offset must be constant</td>\n</tr>\n<tr>\n<td>Ex. <img data-src=\"/img/computer-architecture/c0XyK9w.webp\" alt=\"\" /></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>sw ＄t0, 8 (＄s3)</td>\n<td>mem[8+reg[＄s3]]= ＄t0</td>\n<td></td>\n</tr>\n<tr>\n<td>addi ＄s3, ＄s3, 4</td>\n<td>add constant value</td>\n<td></td>\n</tr>\n<tr>\n<td>srl ＄10, ＄16, 4</td>\n<td>＄t2 = ＄s0 &gt;&gt; 4 bits</td>\n<td></td>\n</tr>\n<tr>\n<td>sll ＄10, ＄16, 4</td>\n<td>＄t2 = ＄s0 &lt;&lt; 4 bits</td>\n<td></td>\n</tr>\n<tr>\n<td>rs fill 0 because unused</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>or ＄t0, ＄t1, ＄t2</td>\n<td>＄t0 = ＄t1 | ＄t2</td>\n<td></td>\n</tr>\n<tr>\n<td>ori ＄6, ＄6, 0x00ff</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>and ＄t0, ＄t1, ＄t2</td>\n<td>＄t0 = ＄t1 &amp; ＄t2</td>\n<td></td>\n</tr>\n<tr>\n<td>andi ＄6, ＄6, 0x0000</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>nor ＄t0, ＄t1, ＄t3</td>\n<td>t0 = ~(＄t1</td>\n<td>＄ t3)</td>\n</tr>\n<tr>\n<td>(nor ＄t0, ＄t1, ＄t3) = ~(＄t1), if ＄t3 =</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>~(A) = 1 if A = 0</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>~(A) = 0 if A != 0</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<pre><code>lui $t0, 1010101010101010 # load upper immediate\n// that is: 1010101010101010 0000000000000000\n</code></pre>\n<p>mult rs, rt<br />\nMultiplying two 32-bit numbers can yield a 64-bit number.<br />\nhigher 32 bits are stored in HI<br />\nlower 32 bits are stored in LO<br />\nMFHI rd --  ＄rd = HI<br />\nMFLO rd --  ＄rd = LO</p>\n<p>div rs, rt | rs / rt<br />\nQuotient stored in Lo<br />\nRemainder stored in Hi</p>\n<p>Branch instructions<br />\nConditional branches<br />\nbeq reg1, reg2, L1<br />\nGo to statement L1 if [reg1] == [reg2]<br />\nbne reg1, reg2, L2<br />\nGo to statement L2 if [reg1] != [reg2]<br />\nUnconditional branches<br />\nj L1<br />\n<img data-src=\"/img/computer-architecture/ugemo7v.webp\" alt=\"\" /></p>\n<p>jr(jump register)<br />\nunconditional jump to the address stored in a register<br />\nProvides full 32bits address<br />\n<img data-src=\"/img/computer-architecture/BQpStOr.webp\" alt=\"\" /></p>\n<p>Use J for calling subroutines<br />\nUse Jal for calling functions<br />\nUse Jr for ending a subroutine by jumping to the return address (ra)</p>\n<p>slt reg1, reg2, reg3<br />\n=&gt; if reg1 = (reg2 &lt; reg3) ? 1 : 0;</p>\n<p><code>move</code> copies a value from one register to another</p>\n<p>Byte order: Big Endian vs. Little Endian<br />\nBig endian(順序, 一般數字寫法): byte 0 is most significant bits e.g., IBM/360/370, Motorola 68K, MIPS, Sparc, HP PA<br />\nLittle endian(逆序): byte 0 is least significant bits e.g., Intel 80x86, DEC Vax, DEC Alpha<br />\n<img data-src=\"/img/computer-architecture/RiImWlu.webp\" alt=\"\" /></p>\n<p>Alignment<br />\nobject on the address that is multiple of their size(一次讀取大小的倍數)<br />\n<img data-src=\"/img/computer-architecture/kaceTao.webp\" alt=\"\" /></p>\n<p>Stored-Program Concept<br />\nComputers built on 2 key principles:</p>\n<ol>\n<li>Instructions are represented as numbers</li>\n<li>entire programs can be stored in memory to be read or written just like numbers</li>\n</ol>\n<p>Shift is faster than multiplication<br />\n=&gt; Multiplying by 4 is the same as shifting left by 2:</p>\n<p>•Fetch instruction from mem [PC]<br />\n•without decision making instruction<br />\n•next instruction = mem [PC + instruction_size]</p>\n<h3 id=\"MIPS-Instruction-Format\">MIPS Instruction Format</h3>\n<p>instruction code - 32bit<br />\n<img data-src=\"/img/computer-architecture/MeKGSy9.webp\" alt=\"\" /></p>\n<h4 id=\"R-type\">R-type</h4>\n<ul>\n<li>rs, rt = source register, rd = destination register\n<ul>\n<li>32個register =&gt; 5bit</li>\n</ul>\n</li>\n<li>shamt: shift amount\n<ul>\n<li>filling 0 when unused</li>\n</ul>\n</li>\n<li>func: function field(same operate code with different function code can looked as different argument)\n<ul>\n<li>Ex. <code>add</code>,<code>addu</code>, <code>addi</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"I-type\">I-type</h4>\n<p>for those have <strong>constant</strong> argument(immediate value)<br />\n<img data-src=\"/img/computer-architecture/MCxQVaC.webp\" alt=\"\" /><br />\nfirst example, rs = ＄2(source) rt = ＄1(destination)</p>\n<p>PC addressing mode<br />\nNew PC = PC + 4(auto go to next instruction) + Immediate x 4</p>\n<p>if want to jump farther than 16bit</p>\n<pre><code>bne s1 s2 L2 \njump L1 # equals to beq s1 s2 L1, but jump can go farther\nL2:\n</code></pre>\n<h4 id=\"J-type\">J-type</h4>\n<p><img data-src=\"/img/computer-architecture/j.webp\" alt=\"j type\" /></p>\n<p>goto absolute address(I-type is relative address)<br />\nequal to immediate in the middle of the program counter address<br />\n<img data-src=\"/img/computer-architecture/add2.webp\" alt=\"\" /></p>\n<h3 id=\"指令表\">指令表</h3>\n<p><img data-src=\"/img/computer-architecture/com.webp\" alt=\"\" /><br />\n<img data-src=\"/img/computer-architecture/comm2.webp\" alt=\"\" /><br />\n<img data-src=\"/img/computer-architecture/comm3.webp\" alt=\"\" /></p>\n<h3 id=\"function\">function</h3>\n<p>pass value</p>\n<ul>\n<li>\n<p>＄a0 ~ ＄a3 : 4 arguments</p>\n<ul>\n<li>if # of parameters is larger than 4 – store to the stack</li>\n</ul>\n</li>\n<li>\n<p>＄v0 ~ ＄v1 : 2 return values<br />\npreserve register values of caller</p>\n</li>\n<li>\n<p>stack</p>\n</li>\n</ul>\n<p>Caller-save register</p>\n<ul>\n<li>Caller saved register: 由Caller負責清理或存入stack frame\n<ul>\n<li>hold temporary quantities that need not be preserved across calls</li>\n<li>Caller先備份，所以callee便可直接使用caller-save register</li>\n<li>＄t0~t7</li>\n</ul>\n</li>\n<li>Callee saved register: 由Callee負責清理或存入stack\n<ul>\n<li>hold values that should be preserved across calls(caller還需要用, callee用的時候要先備份)</li>\n<li>callee should save them and restore them before returning to the caller</li>\n<li>＄s0~s7</li>\n</ul>\n</li>\n</ul>\n<p>call function: <code>jal</code> procedure_address (jump and link)</p>\n<ul>\n<li>Store the return address (PC + 4) at ＄ra</li>\n<li>set PC = procedure_address<br />\nreturn : jr ＄ra</li>\n</ul>\n<p>Frame pointer points to the first word of the procedure frame</p>\n<p>procedure call stack<br />\n<img data-src=\"\" alt=\"\" /></p>\n<p><img data-src=\"\" alt=\"memory layout\" /><br />\nMemory layout</p>\n<ul>\n<li>text: code</li>\n<li>static data: global variable\n<ul>\n<li>＄gp is the offset of static data</li>\n</ul>\n</li>\n<li>dynamic data: heap\n<ul>\n<li>malloc, new</li>\n</ul>\n</li>\n<li>stack: automatic storage</li>\n</ul>\n<p>Caller Steps</p>\n<ol>\n<li>pass the argument ＄a0,＄a1</li>\n<li>save caller-saved registers</li>\n<li>jal</li>\n</ol>\n<p>Callee Steps</p>\n<ol>\n<li>establish stack frame ＄sp<br />\nsubi ＄sp, ＄sp <frame-size></li>\n<li>saved callee saved registers<br />\nEx. ＄ra, ＄fp, ＄s0-＄s7</li>\n<li>establish frame pointer ＄fp<br />\nAdd ＄fp, ＄sp, <frame-size>-4</li>\n<li>Do Something</li>\n<li>put returned values in ＄v0, ＄v1</li>\n<li>restore(load) callee-saved registers</li>\n<li>pop the stack</li>\n<li>return: jr ＄ra</li>\n</ol>\n<p><img data-src=\"/img/computer-architecture/reg.webp\" alt=\"registers\" /></p>\n<p><img data-src=\"\" alt=\"nested procedure\" /></p>\n<p>ASCII (American Standard Code for Information Interchange)<br />\n8 bits/character</p>\n<pre><code>`lb sb`\n</code></pre>\n<p>Unicode (Universal Encoding)<br />\n16 bits/character</p>\n<pre><code>`lf sf`\n</code></pre>\n<p>performance</p>\n<figure class=\"highlight stan\"><table><tr><td class=\"code\"><pre><span class=\"line\">Clear1(<span class=\"type\">int</span> <span class=\"type\">array</span>[ ], <span class=\"type\">int</span> <span class=\"built_in\">size</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>, i&lt; <span class=\"built_in\">size</span>; i+= <span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"type\">array</span>[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Clear <span class=\"number\">2</span>(<span class=\"type\">int</span> *<span class=\"type\">array</span>, <span class=\"type\">int</span> <span class=\"built_in\">size</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> *p,</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (p = &amp;<span class=\"type\">array</span>[<span class=\"number\">0</span>]; p &lt; &amp;<span class=\"type\">array</span>[<span class=\"built_in\">size</span>]; p = p+<span class=\"number\">1</span>)</span><br><span class=\"line\">\t*p = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Clear2 &gt; Clear1<br />\npointer is faster than fetching value</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">move </span>＄<span class=\"built_in\">t0</span>, ＄<span class=\"built_in\">a0</span> \t\t\t<span class=\"comment\"># p = &amp;array[0]</span></span><br><span class=\"line\"><span class=\"keyword\">sll </span>＄<span class=\"built_in\">t1</span>, ＄<span class=\"built_in\">a1</span>, <span class=\"number\">2</span> \t\t<span class=\"comment\"># t1 = size x 4</span></span><br><span class=\"line\"><span class=\"keyword\">add </span>＄<span class=\"built_in\">t2</span>, ＄<span class=\"built_in\">a0</span>, ＄<span class=\"built_in\">t1</span>\t\t<span class=\"comment\"># t2 = &amp;array[size]</span></span><br><span class=\"line\"><span class=\"symbol\">Loop2:</span> </span><br><span class=\"line\"><span class=\"keyword\">sw </span>＄<span class=\"built_in\">zero</span>, <span class=\"number\">0</span>(＄<span class=\"built_in\">t0</span>) \t\t<span class=\"comment\"># memory[p] = 0</span></span><br><span class=\"line\"><span class=\"keyword\">addi </span>＄<span class=\"built_in\">t0</span>, ＄<span class=\"built_in\">t0</span>, <span class=\"number\">4</span> \t\t<span class=\"comment\"># p= p+4</span></span><br><span class=\"line\"><span class=\"keyword\">slt </span>＄<span class=\"built_in\">t3</span>, ＄<span class=\"built_in\">t0</span>, ＄<span class=\"built_in\">t2</span> \t\t<span class=\"comment\"># compare p &amp; array[size]</span></span><br><span class=\"line\"><span class=\"keyword\">bne </span>＄<span class=\"built_in\">t3</span>, ＄<span class=\"built_in\">zero</span>, Loop2</span><br></pre></td></tr></table></figure>\n<h2 id=\"Synchronization\">Synchronization</h2>\n<p>SWAP: <strong>atomically</strong> interchange a value in a register for a value in memory; nothing else can interpose itself between the read and the write to the memory location</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"code\"><pre><span class=\"line\">＄<span class=\"built_in\">S4</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">Swap </span>(＄<span class=\"built_in\">S4</span>, Lock);</span><br><span class=\"line\">If Lock = <span class=\"number\">0</span> <span class=\"comment\"># change success</span></span><br><span class=\"line\">enter critical section;</span><br></pre></td></tr></table></figure>\n<p>Load linked: load value from rs(atomic)</p>\n<pre><code>`ll rt offset(rs)`\n</code></pre>\n<p>Store conditional</p>\n<pre><code>`sc rt offset(rs)`\n</code></pre>\n<p>if location not changed since the ll , rt return 1, 否則回傳 0</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">swap </span><span class=\"built_in\">s4</span> <span class=\"keyword\">and </span><span class=\"built_in\">s1</span></span><br><span class=\"line\"><span class=\"symbol\">try:</span><span class=\"keyword\">add </span>＄<span class=\"built_in\">t0</span>,＄<span class=\"built_in\">zero</span>,＄<span class=\"built_in\">s4</span> <span class=\"comment\">;copy exchange value</span></span><br><span class=\"line\">\t<span class=\"keyword\">ll </span>＄<span class=\"built_in\">t1</span>,<span class=\"number\">0</span>(＄<span class=\"built_in\">s1</span>) <span class=\"comment\">;load s1 to t1</span></span><br><span class=\"line\">\t<span class=\"keyword\">sc </span>＄<span class=\"built_in\">t0</span>,<span class=\"number\">0</span>(＄<span class=\"built_in\">s1</span>) <span class=\"comment\">;store t0 to s1</span></span><br><span class=\"line\">\t<span class=\"keyword\">beq </span>＄<span class=\"built_in\">t0</span>,＄<span class=\"built_in\">zero</span>,try <span class=\"comment\">;if store fail, try again</span></span><br><span class=\"line\">\t<span class=\"keyword\">add </span>＄<span class=\"built_in\">s4</span>,＄<span class=\"built_in\">zero</span>,＄<span class=\"built_in\">t1</span> <span class=\"comment\">;put load value in ＄s4</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"MIPS-Addresssing-Mode\">MIPS Addresssing Mode</h3>\n<ol>\n<li>Register addressing<br />\n運算對象在register<br />\n<code>add</code></li>\n<li>Immediate addressing<br />\n運算對象是constant<br />\n<code>addi </code></li>\n<li>Base addressing(The argument is at MEM)<br />\n運算對象在memory<br />\n<code>lw</code><br />\nway to get address<br />\n1.<br />\n.data # define data<br />\nxyz:<br />\n.word 1 # some data here<br />\n…<br />\n.text # program code<br />\n…<br />\nlw $5,xyz # equals to lw ＄5, offset(＄gp)<br />\n2.<br />\nla ＄6, xyz # ＄6 = &amp;xyz</li>\n<li>PC-relative addressing<br />\n<code>beq</code></li>\n<li>Pseudodirect addressing<br />\n<code>j 100</code></li>\n</ol>\n<h3 id=\"from-program-to-memory\">from program to memory</h3>\n<pre><code>Program -----------&gt; assembly ---------&gt; object file:\n          compiler            assembler\nmachine language module + library module ---------&gt;  \n\t\t\t\t\t\t                   linker  \nmachine code program ---------&gt; memory\n                       loader\n</code></pre>\n<p><strong>Assembler</strong><br />\nSymbol table: translate variables into memory address<br />\nPsudoinstruction: common variation of assembly language instructions<br />\n<strong>Linker</strong><br />\n<img data-src=\"/img/computer-architecture/exeheader.webp\" alt=\"executable \" /></p>\n<p>generate executables file header</p>\n<ol>\n<li>Place code and data modules symbolically in memory.</li>\n<li>Determine the addresses of data and instruction labels.</li>\n<li>Patch both the internal and external references</li>\n</ol>\n<p><strong>Loader</strong><br />\ndetermine the size of the text and data segment<br />\nCreates an address space<br />\nCopies the instructions and data to memory<br />\nInitializes the machine registers and sets the stack pointer<br />\nJump to a start-up routine</p>\n<p><strong>Dynamically Linked Libraries (DLL)</strong><br />\nLoading the whole library even if all of the library is not used =&gt; libraries are not linked and loaded until the program is run, and use lazy procedure linkage</p>\n<h3 id=\"java\">java</h3>\n<p><img data-src=\"/img/computer-architecture/java.webp\" alt=\"java\" /><br />\nJava bytecode: use instruction set designed to interpret Java programs<br />\nJust In Time Compiler (JIT): compiler that operates at runtime, translating bytecodes into the native code of the compiler<br />\nJava Virtual Machine (JVM): The program that interprets Java bytecodes</p>\n<h3 id=\"ARM\">ARM</h3>\n<p>AMD64 (2003): extended architecture to 64 bits<br />\nAMD64 (announced 2007): SSE5 instructions<br />\nIntel declined to follow...</p>\n<p>Similar to MIPS<br />\n<img data-src=\"/img/computer-architecture/armmips.webp\" alt=\"arm mips\" /><br />\ndo anything for code density<br />\ninclude<br />\n32-bit ARM instruction<br />\n16-bit Thumb instruction<br />\n8-bit Java Instruction Set</p>\n<p>Current program status register: Top four bits of CPSR<br />\nuse for performance<br />\nN : Negative<br />\nZ : Zero<br />\nC : Carry<br />\nV : Overflow</p>\n<p>Conditional execution<br />\nADDEQ r0,r1,r2 =&gt; r1-r2, If zero flag set then do r0 = r1 + r2</p>\n<h3 id=\"Intel-x86-ISA\">Intel x86 ISA</h3>\n<p>History: skipped</p>\n<p>| IA-32                      | MIPS            |<br />\n| -------------------------- | --------------- | ----------------- |<br />\n| RISC                       | RISC            |<br />\n| general purpose register   | 8               | 32                |<br />\n| operand operation          | 2 or 3          | 3                 |<br />\n| operations to be performed | Register-memory | register-register |<br />\n| addressing modes           | more            | less              |<br />\n| encoding                   | variable-length | fixed-length      |</p>\n<p>simple instruction -&gt; higher performance<br />\nbecause complex instructions are hard to implement, slow down all instructions</p>\n<p>assembly code for high performance(x)<br />\nMore lines of code -&gt; more errors and less productivity</p>\n<h2 id=\"Chap04-Building-Single-Cycle-Datapath-and-Control-Unit\">Chap04 Building Single-Cycle Datapath and Control Unit</h2>\n<p>How to Design a Processor</p>\n<ol>\n<li>Analyze instruction set =&gt; datapath(include PC,... functional units) requirements</li>\n<li>Select set of datapath components and establish clocking methodology</li>\n<li>Assemble datapath</li>\n<li>Analyze <strong>implementation of each instruction</strong> to determine control points</li>\n<li>Assemble the control logic</li>\n</ol>\n<p>Details</p>\n<ol>\n<li></li>\n</ol>\n<p>register-tranfer暫存器傳輸<br />\nRTL (Register Transfer Languages)<br />\nEx. ADDUR[rd] &lt;–R[rs] + R[rt], PC &lt;–PC + 4<br />\n2.<br />\nCombinational Elements: outputs only depend on input<br />\nEx. ALU, MUX, Adder<br />\nStorage Elements: outputs depend on input and state(clock)<br />\nEx. Flip-Flop, register, memory<br />\nRegister<br />\n<img data-src=\"/img/computer-architecture/regis.webp\" alt=\"register graph\" /><br />\nEdge-triggered clocking<br />\nuntil next edge would the value change<br />\n3.<br />\n<strong>Instruction Fetch Unit</strong>: mem[PC]<br />\nSequential code<br />\nPC &lt;- PC + 4<br />\nBranch and Jump<br />\nPC &lt;- Target addr<br />\n<strong>Memory Operations</strong><br />\nMem[R[rs] + SignExt[imm16]]<br />\nsign extension: increasing the number of bits without   changing value (Ex. 10 0010 -&gt; 0010 0010)<br />\n4.<br />\nControl Unit: set control flag to change the operation with the change of operation code<br />\nControl Flags</p>\n<ul>\n<li>MemWr: write memory</li>\n<li>MemtoReg: 0 =&gt; use ALU output 1 =&gt; use Mem value</li>\n<li>RegDst: 1 =&gt; “rd” when 3 operand are all register; 0 =&gt; “rt”</li>\n<li>RegWr: write to register</li>\n<li>ALUsrc: 1=&gt; immed; 0=&gt;regB</li>\n<li>ALUctr: “add”, “sub”</li>\n<li>PCSrc: 1=&gt; PC = PC + 4; 0=&gt; PC = branch target address</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>instruction</th>\n<th>MemWr</th>\n<th>MemtoReg</th>\n<th>RegDst</th>\n<th>RegWr</th>\n<th>ALUsrc</th>\n<th>ALUctr</th>\n<th>PCSrc</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Add</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>0</td>\n<td>add</td>\n<td>1</td>\n</tr>\n<tr>\n<td>Load</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>add</td>\n<td>1</td>\n</tr>\n<tr>\n<td>Store</td>\n<td>1</td>\n<td>x</td>\n<td>x</td>\n<td>0</td>\n<td>1</td>\n<td>add</td>\n<td>1</td>\n</tr>\n<tr>\n<td>Branch</td>\n<td>0</td>\n<td>x</td>\n<td>x</td>\n<td>0</td>\n<td>0</td>\n<td>sub</td>\n<td>value(after sub)</td>\n</tr>\n<tr>\n<td>Ori</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>or</td>\n<td>1</td>\n</tr>\n<tr>\n<td>Jump</td>\n<td>?</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ol start=\"5\">\n<li></li>\n</ol>\n<p>use k-map to make control flags simple<br />\n<img data-src=\"/img/computer-architecture/aluctrl.webp\" alt=\"ALU control\" /><br />\nI-type: (00) add for load/store and (01) sub for beqand (10) for ori<br />\nR-type: (11, need to check funct field)</p>\n<p><img data-src=\"/img/computer-architecture/table1.webp\" alt=\"alu ctr truth table\" /><br />\n<img data-src=\"/img/computer-architecture/tabl2.webp\" alt=\"truth table for main\" /></p>\n<p><img data-src=\"/img/computer-architecture/table3.webp\" alt=\"functional unit used by instructions\" /></p>\n<h2 id=\"Chap05-Pipeline\">Chap05 Pipeline</h2>\n<p>when CPI=1:</p>\n<ul>\n<li>Load is too slow! -&gt; Long Cycle Time</li>\n<li>Real memory is not so nice as our idealized memory\n<ul>\n<li>cannot always get the job done in one (short) cycle</li>\n</ul>\n</li>\n</ul>\n<p>Pipelining doesn’t help <strong>latency</strong> of single task, it helps <strong>throughput</strong> of entire workload<br />\nMultiple tasks operating simultaneously <strong>using different resources</strong><br />\nPipeline rate <strong>limited by slowest pipeline stage</strong><br />\nUnbalanced lengths of pipe stages reduces speedup(切平均，增加效能最多)</p>\n<p>Break the instruction into smaller steps(5 steps in MIPS):<br />\nExecute each step in 1 clock cycle</p>\n<ul>\n<li>Instruction Fetch(Ifetch)</li>\n<li>Instruction Decode and Register Fetch(Reg/Dec)</li>\n<li>Execution, Memory Address Computation, or Branch Completion(Exec)</li>\n<li>Memory Access or R-type instruction completion(Mem)</li>\n<li>Write back to register(Wr)</li>\n</ul>\n<p>simplified: IF ID EX MEM WB</p>\n<p>The Four Stages of R-type: without Mem<br />\nThe Four Stages of store: without Wr<br />\nThe Three Stages of Beq: without Mem, Wr</p>\n<p><img data-src=\"/img/computer-architecture/pipe.webp\" alt=\"pipe 2ns\" /><br />\nIdeal speedup from pipelining == # of pipeline stages<br />\n(分成N段-&gt;理想上，速度提升N倍)</p>\n<h4 id=\"Pipeline-Hazards\">Pipeline Hazards</h4>\n<ul>\n<li>structural hazards: use the same resource at the same time(Single Memory)<br />\n<img data-src=\"/img/computer-architecture/pipe2.webp\" alt=\"structure hazard\" /></li>\n<li>data hazards: use item before it is ready(load, update)</li>\n<li>control hazards: make a decision before condition is evaluated(branch)<br />\nCan always resolve hazards by waiting<br />\nNeed to detect and resolve hazards</li>\n</ul>\n<p>Way to Solve Hazards</p>\n<ol>\n<li>structural\n<ol>\n<li>Stall(put bubbles that do nothing)<br />\n<img data-src=\"/img/computer-architecture/stall.webp\" alt=\"stall\" /></li>\n<li>Split instruction and data memory(2 different memories)</li>\n<li>Delay R-type’s Write by One Cycle()</li>\n</ol>\n</li>\n<li>data\n<ol>\n<li>“Forward” result from one stage to another(算出答案後，在放入記憶體前，就先給之後的instruction使用)(可以同時read and save)</li>\n<li>Load-use data hazard: can't solved by forward, can solved by reordering instructions, otherwise, need stall  <img data-src=\"/img/computer-architecture/forward.webp\" alt=\"lw hazard\" />   <img data-src=\"/img/computer-architecture/forward2.webp\" alt=\"loaduse-&gt;forward\" /></li>\n</ol>\n</li>\n<li>control\n<ol>\n<li>stall until the outcome of the branch is known</li>\n<li>solve branch earlier: put in enough extra hardware so that we can test registers, calculate the branch address, and update the PC</li>\n<li>Predict: flush if the assumption is wrong<br />\ndynamic scheme: history of branch (90% success)</li>\n<li>performance: 13% of branch instructions executed in SPECint2000, the CPI is slowdown of 1.13 versus the ideal case</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"Pipelined-datapath\">Pipelined datapath</h3>\n<p>Pipeline registers<br />\n<img data-src=\"/img/computer-architecture/pipegraph.webp\" alt=\"4bar\" /></p>\n<ul>\n<li>The registers are named between two stages</li>\n</ul>\n<h3 id=\"control-in-each-stage\">control in each stage</h3>\n<p>Pass control signals along just like the data<br />\n<img data-src=\"/img/computer-architecture/pipectrl.webp\" alt=\"control\" /></p>\n","categories":["筆記"],"tags":["計算機結構"]},{"title":"計算機結構(下)","url":"/computer-architecture2/","content":"<!-- RENEW: -->\n<h2 id=\"Chap07-Pipelining-II\">Chap07 Pipelining (II)</h2>\n<p><img data-src=\"/img/computer-architecture/detect-and-forward.webp\" alt=\"detect and forward\" /><br />\nData Dependence Detection<br />\nHazard conditions:</p>\n<ul>\n<li>EX hazard\n<ul>\n<li>EX/MEM.RegisterRd = ID/EX.Register Rs or Rt</li>\n</ul>\n</li>\n<li>MEM hazard\n<ul>\n<li>MEM/WB.RegisterRd = ID/EX.RegisterRs or Rt</li>\n<li>Ex/MEM.RegisterRd != ID/Ex.RegisterRs(優先選EX)</li>\n</ul>\n</li>\n<li>RegWrite == true</li>\n<li>RegisterRd != $0</li>\n</ul>\n<span id=\"more\"></span>\n<p>Resolving Hazards by Forwarding<br />\n<img data-src=\"/img/computer-architecture/forward.webp\" alt=\"forward\" /></p>\n<p>Add MUX to ALU inputs<br />\nForwarding Control in EX<br />\n<img data-src=\"/img/computer-architecture/forward-logic-mux.webp\" alt=\"logic with forward\" /></p>\n<p>load-use data hazard(instruction after LW) -&gt; stall it</p>\n<pre><code>If (ID/EX.MemRead and\n((ID/EX.RegisterRt = IF/ID.RegisterRs) or\n(ID/EX.RegisterRt = IF/ID.RegisterRt)))\n\tstall the pipeline\n</code></pre>\n<p>Stall: ID/EX裡的control value改成0，使EX MEM WB都不做事(nop) 並防止PC和IF/ID register更新，也就是確保他們下個cycle做跟這個cycle一樣的事<br />\nInsert a bubble:空白的instruction, 不做事<br />\n<img data-src=\"/img/computer-architecture/bubble.webp\" alt=\"bubble\" /></p>\n<p>Control Hazard Solutions</p>\n<p>Branch 有沒有taken可以在MEM確認。如果發現prediction錯誤就重新設定PC，並把control都設為0，flush掉跑錯的instruction。<br />\n一個簡單的改進方式就是，在ID stage把資料從register讀出來後加上比較兩個值是否相等的元件，compare完才進到id/ex，這時候提早了一個cycle知道branch是否taken。</p>\n<p>當branch發生使用的值在ALU做完運算時，透過forwarding就可以解決了<br />\n但如果branch發生在使用的值正在load的話，就必須stall。而如果是一load出來馬上就要做branching的判斷的話，就必須stall 2個cycle<br />\n<img data-src=\"/img/computer-architecture/2stall.webp\" alt=\"\" /></p>\n<p>Dynamic prediction的branch history table，以branch instruction的address(取最後n個bit)做索引，並儲存branch的結果。如果猜錯的話就做之前一樣的flush並修改表。<br />\n跳出loop時會猜繼續，第一次進入loop會猜跳出 -&gt; 導致錯誤率大幅提高<br />\n-&gt; 2bit的predictor, 連續兩個taken/not taken才會改變狀態</p>\n<p>但就算猜對，還是要算出target address，所以在branch taken時會有一個cycle的penalty。解決的方法是新增buffer存放branch target address。</p>\n<h3 id=\"Exception\">Exception</h3>\n<p>syscall，未定義的opcode，或overflow處理等等(以上為CPU內產生的指令)或是受外部的I/O控制器的干涉。導致performance的降低。</p>\n<ol start=\"2\">\n<li>完成先前的指令</li>\n<li>Flush the instruction in the IF, ID and EX stages</li>\n<li>把這些違例或是被干擾的instruction的PC(實際上是PC+4)存在Exception program counter(EPC)</li>\n<li>問題的跡像(indicator)也存起來，在MIPS中是使用Cause register</li>\n<li>然後再跳到handler(PC = 0x40000040)</li>\n<li>另外一種解決的機制是，以硬體等級去告訴I/O handler，根據不同的cause跳去不同的handler(不同的address)，instructions要不就去執行interrupt的部份，要不就跳到handler去處理。</li>\n<li>Handler先讀看原因(indicator)然後再轉至專門解決此類問題的handler，然後決定該採取什麼行動，如果是restartable(可以重跑)，就用EPC回到原本執行的地方(EPC-4)，並採取判斷正確的行動。否則就終止程序並根據EPC cause來回報錯誤。</li>\n</ol>\n<p><img data-src=\"/img/computer-architecture/exception-handle.webp\" alt=\"step to handle exception\" /></p>\n<p>ILP(instruction level parallelism)，指令層級的平行處理。<br />\n增進ILP的方法</p>\n<ol>\n<li>Deeper pipeline，把pipeline分成更多stage，而每個stage因為workload相對的比較少，所以可以讓cpu clock cycle變短，進而增進效能</li>\n<li>Multiple issue，有多個pipeline同時進行，所以每個clock cycle都同時跑好幾個instruction。但是互相依賴性(比如說不同pipeline之間的hazard或共用到哪些資源)會使得實際上不是變幾倍的pipeline IPC就變幾倍。</li>\n</ol>\n<h3 id=\"Multiple-issue\">Multiple issue</h3>\n<p>可以分為static和dynamic。<br />\nStatic的是由compiler把要同時執行的instruction包成一包一包的instruction packets。<br />\n可以把instruction packet想成一個非常長的instruction裡面有好幾個同時運作的operations。這樣的概念叫做VLIW(very long instruction word)<br />\n偵測避免hazard</p>\n<ol>\n<li>把instruction重新排列並包成issue packets時避免會造成hazard的順序。</li>\n<li>同時在跑的instruction要互相independent不然就會搶資源或造成data hazard。</li>\n<li>在不同的packets之間，可以有dependency，但這部份根據不同的ISA要有不同的設計。</li>\n<li>有時候要放入nop(不做任何動作)</li>\n</ol>\n<p>Dynamic是由CPU選擇每個cycle要issue哪些instructions，而compiler可以藉由把instruction串流做較好的排列來幫助。CPU會用比較進階的技術在運行時解決hazard。</p>\n<p>Speculation：先去猜測要做什麼，如果做錯了再從頭來過。比如說branch的時候就先猜taken或not taken，在load的時候先拿原有的位址去load如果發現其他該在前面的instruction更新了這個位址，就roll-back。</p>\n<p>Compiler可以重新排列一些code比如說把branch之前的load移到更早，避免stall，或是寫一些instruction來修正做出錯誤的speculation的狀況。增加用來延遲exception的ISA。</p>\n<p>而硬體可以做look-ahead，將instruction的結果和exception都先存在buffer裡，直到他們要被用到或是判斷speculation正確。如果判斷speculation錯誤就把buffer flush掉。</p>\n<h3 id=\"dual-issue\">dual issue</h3>\n<p>一個packet有兩組instruction。一個只做load/store一個只做ALU/branch，所以只要加一個ALU和一個sign extender就可以實做。</p>\n<p>dual issue's Data hazard:</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">add</span> <span class=\"variable\">$t0</span>, <span class=\"variable\">$s0</span>, <span class=\"variable\">$s1</span></span><br><span class=\"line\">load <span class=\"variable\">$s2</span>, 0(<span class=\"variable\">$t0</span>)</span><br></pre></td></tr></table></figure>\n<p>把這兩個指令拆開放在兩個不同的packets，就像stall一樣</p>\n<p>Load-use hazard，一樣會造成一個cycle的延遲，但是一個cycle變成影響兩個instructions。<br />\n-&gt; 需要把指令做更好的排程(aggressive scheduling)</p>\n<p>loop unrolling: 把一次完成多個loop內的iteration來減少loop-control overhead(bne)，並用不同的register來存放(register renaming)(每一份replicate就是原本的loop跑一次)<br />\n避免loop裡面有 anti–dependencies(name dependency): write-after-read<br />\nex: B=7; A=B+1; B=3 在a=b+1和b=3之間就有anti dependent的關係</p>\n<p><img data-src=\"/img/computer-architecture/unroll-before.png\" alt=\"before\" /><br />\n<img data-src=\"/img/computer-architecture/unroll-after.webp\" alt=\"after\" /><br />\n原本：for(load -&gt; 計算 -&gt; save)<br />\n之後：for(load) + for(add) -&gt; for(save)<br />\nIPC從1.25提升到1.75(更接近極限，2)不過code和register也變得更大。</p>\n<p>Dynamic multiple issue通常在超大型處理器中使用。CPU每個cycle會決定issue的對象。以幫助cpu對code的語義有更好的掌握(compiler做的事變少CPU更直接掌握code在做什麼)。<br />\ndynamic pipeline scheduling: 讓cpu可以不照順序執行instruction以避免stall，但是會把資料<strong>照順序存回</strong>register(比如說在stall的時候就先處理無關的instruction)</p>\n<p><img data-src=\"/img/computer-architecture/dynamic-schedule-CPU.webp\" alt=\"dynamic schedule CPU\" /><br />\nDynamically scheduled CPU的運作跟一般的pipeline有些出入，可以分為4個stage</p>\n<ol>\n<li>IF/ID<br />\n照順序做完instruction fetch和decode(這邊的動作很快)</li>\n<li>reservation stations<br />\n控制哪些instruction要先pending</li>\n<li>functional units<br />\n做不同的功能 -- 浮點數運算, load-store...<br />\n完成後把資料給commit unit及相對應在pending等這個結果的reservation station</li>\n<li>commit unit<br />\n重新排列register write要用的buffer<br />\n並提供operands給某些在reservation pending的function(類似之前單issue裡要flush重做的function)</li>\n</ol>\n<p>?? Reservation station 和 commit unit在reorder buffer時，自動達到了register renaming。</p>\n<p>?? 當一個instruction被issue到reservation station的時候，如果instruction的operands在register或reorder buffer裡可以被找到也可以被存取的話，把它複制到reservation station，並且標明那個register已經無用可以被複寫。如果operands無法存取(unavailable)的話，有一個function unit會把該給的值給reservation unit，而register裡面的值需不需要更新就要看指令。</p>\n<p>dynamically scheduled的speculation: 在branching的結果確認之前不要commit。而speculation一樣可以用在減少load 和cache miss delay。根據預測的address先取出值然後等store有沒有更改到這個load的address，store會把那個address bypass到load unit。沒問題就把結果送到commit unit，有問題就重做。</p>\n<p>Dynamically scheduling的原因:<br />\n不是所有的stall都是可以從code裡看出來的 比如說:cache miss。<br />\nbranch的結果也不能靠scheduling來解決。<br />\n不同的ISA有不同的延遲和不同的hazard，都要交給compiler來處理實在非常麻煩。</p>\n<p>Multiple issue的效能：程式內有dependency會限制ILP(instruction level parallelism)而且有些dependency很難去除，如pointer aliasing(不同的名字的pointer指到同一個地方)<br />\n有一些平行也很難做到比如說IF/ID的部份<br />\nmemory還有delay而且也有他的頻寬，也導致pipeline常常有nop<br />\nSpeculation如果做的好的話可以改善以上原因引起的performance下降</p>\n<p>多顆簡單的核心(沒speculation, issue width低, pipeline, stage少)可以達到省電的作用</p>\n<h3 id=\"結論\">結論</h3>\n<p>pipeline的概念很簡單，但是細節很複雜。Ex: hazard detection<br />\npipeline跟cpu的其他科技無關，其他科技進步的同時還是可以做pipelining</p>\n<p>不好的ISA設計可能在某些狀況下會讓pipelining變得很困難<br />\nex:<br />\n太複雜的instruction set 需要巨大的overhead來讓pipeline可行(ex: IA-32,VAX)<br />\n太複雜的addressing mode<br />\n間接讀取memory(指標)，及register update<br />\n複雜的pipeline，會有比較長的branching delay slots</p>\n<p><strong>ISA會影響data path和control的設計</strong><br />\nPipelining利用平行處理的技術可以提高總輸出，並不影響單個指令的latency<br />\nDependency限制了平行處理的程度，太過複雜又會導致電耗過高</p>\n<h2 id=\"Chap08-Memory-Hierarchy\">Chap08 Memory Hierarchy</h2>\n<p><img data-src=\"/img/computer-architecture/memory-hierarchy.webp\" alt=\"hieraracy\" /><br />\n記憶體的層級化: 愈常用的放在愈快拿到的地方</p>\n<ul>\n<li>Static Ram: 0.5ns-2.5ns， 每gb要2000 – 5000元</li>\n<li>Dynamic Ram: 50ns -70ns 每gb要 20- 75元</li>\n<li>硬碟:5-20ms，每gb只要0.2-2元</li>\n</ul>\n<p>Temporal locality: 最近被存取過的data容易再被存取<br />\nEx:在loop裡面的程序，或是在loop裡面一直被重複操作的數字</p>\n<p>Spatial locality: 位址接近最近被存取過的data較有可能被存取，如array</p>\n<p>資料的copy以block為最小單位。<br />\nHit Time: memory access time + time to determine hit/miss<br />\nMiss Penalty: Time to replace a block in the upper level + Time to deliver the block to processor</p>\n<p>direct mapped cache: mod餘1, mod餘2 … 各放在同一個cache block<br />\nmemory address前面的bit也存過去做為tag，可知道是從memory的哪個位置將資料load到這個cache<br />\nValid bit可以很快的判斷一個block裡面是否有資料<br />\n<img data-src=\"/img/computer-architecture/direct-map.webp\" alt=\"direct map\" /></p>\n<p>Q:How many total bits are required for a direct-mapped cache with 16 KB of data and 4-word(16byte) blocks, assuming 32bit address?</p>\n<ul>\n<li>num of sets = 16KB(cache size)/16B(block size) = 2^10</li>\n<li>num of data bits for each set = 16byte data = 4</li>\n<li>num of tag bits for each set = 32-10-4 = 18</li>\n</ul>\n<p>Cache Controller FSM<br />\n<img data-src=\"/img/computer-architecture/cache-controller-fsm.webp\" alt=\"FSM\" /></p>\n<h3 id=\"考慮因素\">考慮因素</h3>\n<p>若增大block size，block數變少，有利於spatial locality，但miss penalty上升</p>\n<p>解決miss penalty上升</p>\n<ul>\n<li>Early restart：正常運作，只要一fetch到需要的word，就馬上把這個word送到CPU</li>\n<li>Critical word first：先fetch需要的word，再把剩下的word填進cache bloc</li>\n</ul>\n<p>各層級的資料不同步</p>\n<ul>\n<li>Write through：寫入cache時同時寫入memory</li>\n<li>Write back：cache被代替時，再寫入memory，設dirty bit</li>\n<li>使用write buffer：只有在write buffer滿的時候才stall</li>\n</ul>\n<p>Write Miss Policy</p>\n<ul>\n<li>Write allocate(fetch on write): 先load到cache再修改</li>\n<li>No Write allocate(write around): 直接write底層的資料，不load到cache</li>\n</ul>\n<p>在做初始化時，寫入的資料(全都是0)不會在近期內就被讀取，採取write around就是一個比較好的選擇</p>\n<p>是否合併instruction cache 和 data cache?</p>\n<ul>\n<li>Combined cache – higher cache hit rate &amp; lower cache bandwidth</li>\n<li>Split cache – lower cache hit rate &amp; higher cache bandwidth</li>\n</ul>\n<p>memory interleave: 讓BUS可以同步讀取不同BANK<br />\n<img data-src=\"/img/computer-architecture/memory-interleave.webp\" alt=\"memory design\" /></p>\n<ul>\n<li>DDR: RAM不只在clock 0變1時動作，在1變0的時候也做一次動作，使data rate變為兩倍故名 ddr</li>\n<li>QDR: DDR再加上將input 和output分開，在同一個clock變更時可以同時做input 和output的技術</li>\n</ul>\n<p>當CPU的效能增進時，miss penalty的影響就越來越大</p>\n<p>How to Improve Cache Performance?</p>\n<ol>\n<li>Reduce miss rate -&gt; Increasing associativity<br />\ndirect mapped -&gt; set associative -&gt; fully associative<br />\n效能提升呈邊際遞減<br />\n缺點：mux delay, data comes after hit/miss, tag bit increase</li>\n<li>Reduce miss penalty -&gt; multi-level cache<br />\nhigh performance improvement<br />\nEx. radix sort: cache miss rate high, so performance worse than quick sort</li>\n<li>Reduce hit time -&gt; small cache(...)</li>\n</ol>\n<p>記憶體的層級化(memory hierarchy)：每一層裡面都有4個重點，block要怎麼放置，要怎麼找到需要的block，當miss的時候怎麼替換，寫入時的規矩(write policy)。</p>\n<ol>\n<li>block要怎麼放置:由associativity決定。可分為direct mapped, n-way,和fully associative。越高的associatvie就越少miss但是cost，access time 和複雜度也越高。(三種associative參考前面)</li>\n<li>要怎麼找到需要的block: direct mapping需要做1次的comparison，n-way需要做n(看多少way)次，而fully associative如果建表就不用沒的話就要做entry的次數次(每個entry都要比對)。這邊我們的目標是降低comparison以降低硬體cost。VM由於full look-up table的查表方式使得fully associative可行，可以大大降低miss rate。</li>\n<li>當miss的時候怎麼替換(algo): 替換的方法有LRU和random兩者比較在前面講過了。在VM裡面的話我們藉由硬體的幫忙實作LRU。</li>\n<li>Write policy:write-through和write-back，在VM裡只有write-back可行(28點)。</li>\n</ol>\n<h2 id=\"Chap-08-2-Virutual-Memory\">Chap 08-2 Virutual Memory</h2>\n<p>Idea: use memory as cache for disk</p>\n<p>block叫做page，miss叫做page fault</p>\n<p>Disk讀取的速度非常慢，要花上百萬個cycle。必須使用Fully associative和較佳的replacement algorithm，及軟體為主的exception handler</p>\n<p>page fault 發生時，os會把相對應的page抓進來並update page table然後再重新執行導致page fault的instruction</p>\n<p>LRU replacement: 每個PTE(entry)加個bit叫reference bit，每次當這個page 被access就把這個reference bit設為1，然後系統會自動定期將所有 reference bit 清為0，這樣我們可以判斷reference bit是0的page最近沒有被access。</p>\n<ol start=\"3\">\n<li>\n<p>Page table:由virtual page number作index，值為physical index。</p>\n</li>\n<li>\n<p>Page table can be very large!<br />\n–Solution: inverted page table &amp;  multi-level paging</p>\n</li>\n<li>\n<p>inverted page table: use hash to search(非常耗時、無法支援Memory sharing)</p>\n</li>\n<li>\n<p>multi-level: 分層, decrease total page table size<br />\n<img data-src=\"/img/computer-architecture/multilevel-pagetable.webp\" alt=\"two-level\" /></p>\n</li>\n<li>\n<p>TLB(translation look-aside buffer)可以很快的cache在cpu內存放PTE。通常可存放16~512個PTE，hit時只要花0.5~1個cycle，miss的話也只要10~100個cycle。並且有0.01%~1%的低的miss rate</p>\n</li>\n</ol>\n<p>不同的任務(task)有時候可以共用他們的虛擬位址，但是需要OS的協調指派，並防止不相干的程式的access。<br />\n需要硬體的支援: kernel mode, 包含特有的instruction. page table和他的state資訊只有在kernel mode下可以access。並且還要有system call exception</p>\n<p><img data-src=\"/img/computer-architecture/memory-retrieve-events.webp\" alt=\"Possible Combinations of Events\" /></p>\n<p>Virtually Addressed Cache only Translated on miss</p>\n<p>distinguish data of different processes<br />\n-&gt; Virtually indexed &amp; physically tagged cache<br />\n-&gt; read data by tag and translate index in the same time<br />\n<img data-src=\"/img/computer-architecture/vipt-flow.webp\" alt=\"Virtually indexed &amp; physically tagged cache\" /></p>\n<h3 id=\"Performance-issue-in-Virtual-Memory\">Performance issue in Virtual Memory</h3>\n<p>Thrashing Solutions: Buy more memory<br />\nHigh TLB misses Solutions:Variable page size</p>\n<ol>\n<li>compulsory misses，也叫做cold-start misses。資料第一次被存取。</li>\n<li>capacity misses，cache的大小有限，一個剛被replace掉的block馬上又需要被access。</li>\n<li>conflict misses(collision misses)。多個block要競爭同一個index的entry，如果是fully-associative就不會發生<br />\n<img data-src=\"/img/computer-architecture/collision-miss-rate.webp\" alt=\"3C absoluate miss rate\" /></li>\n</ol>\n<p>若想要減低miss rate, 就會造成總體效能的負面效應。<br />\nTrends:<br />\n–Redesign DRAM chips to provide higher bandwidth or processing<br />\n–Use prefetching &amp; non-blocking cache (make cache visible to ISA)<br />\n–Restructure code to increase locality</p>\n<p>Reduce miss penalty</p>\n<ul>\n<li>Non-blocking caches\n<ul>\n<li>Non-blocking cache or lockup-free cache allowing the data cache to continue to supply cache hits during a miss</li>\n</ul>\n</li>\n<li>Prefetching\n<ul>\n<li>Requesting data early, so it’s in cache when needed.</li>\n<li>預測技術(complier or hardware)</li>\n<li>Problem: May replace data in cache that is still needed.</li>\n</ul>\n</li>\n</ul>\n<p>VMM(virtual machine monitor)將虛擬的資源map到實體資源上，ex: memory I/O, CPU。guest的code在我們的本機端跑時是使用user mode，VMM可以控管一些要有權限才能用的instructions和一些資源是否可以access。Guest的os可能跟我們使用不同套，於是vmm就要產生一個虛擬的I/O給guest使用，來處理真正的I/O。<br />\n如果VM request一個timer-interrupt，這時候vmm就會根據本機的timer虛擬出一個虛擬的timer。利用這個timer來判斷interrupt的發生。<br />\n在vm上所有必須access實體資源的動作都要透過由VMM監控的privileged instructions才使用。比如說page tables, I/O , interrupt controls, registers等。<br />\n做某一些動作比如說要建立多重的web service時，所有東西都要經過VMM，VMM就回成為一個很大的 threshold。</p>\n<h2 id=\"Chap-10-Storage-Network-and-Other-Peripherals\">Chap 10 Storage, Network and Other Peripherals</h2>\n<p><img data-src=\"/img/computer-architecture/iosystem.webp\" alt=\"IO System\" /></p>\n<p>I/O Device Characteristics</p>\n<ul>\n<li>behavior\n<ul>\n<li>input, output or storage</li>\n</ul>\n</li>\n<li>partner</li>\n<li>data transmit rate</li>\n</ul>\n<p>performance metrics: Throughput, Response time<br />\n<img data-src=\"/img/computer-architecture/iodevicechart.webp\" alt=\"I/O device characterstics\" /></p>\n<p>I/O System performance: find limited by weakest link in the chain<br />\n: CPU, memory, bus, IO controller, IO device, OS, software<br />\nTwo common</p>\n<p>reliability</p>\n<ul>\n<li>MTTF:平均要多久會出現一次failure</li>\n<li>MTTR:平均遇到failure以後多久會修好</li>\n<li>availability是MTTF/(MTTF+MTTR)</li>\n<li>改進availability\n<ul>\n<li>增進MTTF，有避免fault的發生，減少fault發生時造成的損失，還有fault的預測</li>\n<li>減少MTTR，加強repair，增強fault的原因的分析功能，還有repair的機制</li>\n</ul>\n</li>\n</ul>\n<p>Disk Performance<br />\nseek time: 上下移動<br />\nRotational latency: 轉到讀取的資料所需時間(RPM)，平均計算：轉一半(0.5round)<br />\ntransfer rate: 傳送資料速度<br />\nController time: I/O controller花的時間</p>\n<p>快閃記憶體(flash)比硬碟快上100~1000倍。<br />\n比較小，比較不耗電。但是比較貴(介於disk和dram之間。)<br />\nFlash可以分為NOR或NAND flash。<br />\nNOR flash是random access通常用在嵌入式系統的instruction memory。<br />\nNAND 同時只能access某個block，而且同樣的大小有比較大的容量。成本也比較低。通常用來當我們常用的usb drive或記憶卡，SSD等等。<br />\nFlash的bit約在access 千次以後會壞掉。所以不適合拿來做ram或硬碟。解決方法是把data平均放在每個block上。</p>\n<p>flash's block: 包含多個page</p>\n<ol>\n<li>Write Once: 無法直接覆蓋檔案，需先清除，一次清除一個block</li>\n<li>When # of free pages &lt;= Garbage Collection Threshold<br />\n: move live page to other block , and erase this block</li>\n</ol>\n<p>SSD (Solid Storage Disk)<br />\nno actual &quot;disk&quot;, use integrated circuit assemblies as memory to store data persistently.<br />\nSSD uses electronic interfaces compatible with traditional block drives</p>\n<ul>\n<li>no mechanical failure</li>\n<li>Green\n<ul>\n<li>SSDs consume over 50% less power compared to HDD</li>\n</ul>\n</li>\n<li>Higher initial cost</li>\n<li>Ex. Facebook data center</li>\n<li>Active SSD: 在I/O端作(簡單的)計算，減少L/W時間</li>\n</ul>\n<p>將PCI-e flash作為I/O cache(比SSD快！)放在General IO bus 上以加速I/O</p>\n<p>Bus: Connection between Processors, Memory, and I/O Device<br />\n有很好的同步性和低維護費，但造成效能瓶頸(受限於長度，BUS數目…)<br />\n有Control line 和 Data line</p>\n<p>Bus可以分為</p>\n<ul>\n<li>Processor-memory bus: 較短較快，要照著memory的規劃做設計</li>\n<li>I/O bus: 較長，可以有多重的互相連結。要照著互通性的基準設計</li>\n<li>Backplane bus: 所有device都可連接，花費較少，用來連接前兩者</li>\n</ul>\n<p><img data-src=\"/img/computer-architecture/three-type-bus.webp\" alt=\"three bus system\" /></p>\n<p>Synchronous Bus:</p>\n<ul>\n<li>includes a clock in the control lines</li>\n<li>advantage: involves very little logic and can run very fast</li>\n<li>disadvantages:\n<ul>\n<li>every device on the bus must run at the same clock rate</li>\n</ul>\n</li>\n</ul>\n<p>Asynchronous Bus:</p>\n<ul>\n<li>No clock, can accommodate a wide range of devices</li>\n<li>can be lengthened without worrying about clock</li>\n<li>requires a handshaking protocol<br />\n<img data-src=\"/img/computer-architecture/asynchronous-handshaking.webp\" alt=\"Asynchronous handshaking: Read Transaction\" /></li>\n</ul>\n<p>Multiple Potential Bus Masters: use Arbiter to control<br />\nArbiter: select who can use bus by priority and fairness</p>\n<p>Daisy Chain Bus Arbitrations<br />\n<img data-src=\"/img/computer-architecture/daisy-chain.webp\" alt=\"Daisy Chain Bus Arbitrations\" /><br />\nAdvantage: simple<br />\nDisadvantages:<br />\n–Cannot assure fairness: A low-priority device may be locked out indefinitely<br />\n–The use of the daisy chain grant signal also limits the bus<br />\nspeed</p>\n<p>Centralized Parallel Arbitration<br />\n<img data-src=\"/img/computer-architecture/Centralized-Parallel-Arbitration.webp\" alt=\"Centralized Parallel Arbitration\" /><br />\n所有bus由arbiter控管<br />\n適合速度較快的device組成的bus</p>\n<p>I/O的設備是由I/O controller來管理並同步。<br />\ncommand register來存放不同的command 使用不同的command來讓I/O device執行不同的動作<br />\nstatus register來指出I/O設備現在正在執行什麼task還有是否遇到什麼error<br />\ndata register，可以把data “write”到device或從device ”read”出data。</p>\n<p>Memory mapped I/O<br />\nI/O的register的位址設為跟memory中的位址一樣，只有在kernel mode時可以access這些address</p>\n<p>Communicating with the Processor<br />\n‧Polling<br />\n定期檢查I/O status register，如果是ready就執行I/O，如果是error就想辦法解決。叫polling(問卷調查)。會浪費太多cpu time(busy loop)。<br />\n有反應時間需求時使用<br />\n‧Interrupt<br />\n<img data-src=\"/img/computer-architecture/interrupt-driven-IO.webp\" alt=\"Interrupt Driven Data Transfer\" /><br />\n當ready或error時，controller就會interrupt CPU。<br />\nInterrupt跟exception很像，但可以在兩個instruction之間觸發handler。通常可以由cause的資訊來分辨是哪個device發生interrupt。Interrupt也有不同的priority，越緊急的interrupt priority就會越高。也可以用高priority的interrupt來呼叫低priority的interrupt的handler。<br />\nhigh-speed devices are associated with higher priority<br />\n‧DMA(direct memory access)<br />\nI/O controller主動跟memory連結傳輸資料，直到傳輸完成或是error才interrupt。比較節省cpu-time。<br />\nDMA寫到memory後，可能造成memory和cache不一致<br />\n如果write-back cache有dirty block而DMA去讀到相對應的memory的話也會讀到錯誤的資料。解法：cache的內容如果在memory中被dma寫入就把那個cache flush掉，不然就要設定noncacheable(dma不能動在cache的資料)。</p>\n<p>Parallelisms and I/O</p>\n<p>RAID: Redundant Array of (inexpensive)Independent Disks。<br />\n使用很多個小的disk來取代一個大的disk，好處有資料較不易受損和平行處理速度加快<br />\n‧Improve availability with redundancy</p>\n<p>Raid 0，是最早的RAID，沒有redundancy，只是把資料分散在不同的小disk可以平行讀取<br />\nRAID 1(Disk Mirroring):是兩個一模一樣的disk，一個是當作備份用，如果主disk的資料受損就從mirror copy過去<br />\nRAID 2: 把資料拆到以bit為單位分散的存在disk內。並用E-bit來做Error correction。拆到以bit為單位的話假設有n個disk則要讀任何資料理論上可以有n倍快。但是太複雜的設計導致實際上raid2並沒有在使用。只用於memory<br />\nRaid3(Bit-Interleaved Parity):<br />\n使用N+1個disk，資料拆成bit level分散在n個disk上<br />\n用剩下來的disk存parity(前面n個disk裡相對應的位址的每個資料做XOR)<br />\n在read時就讀取所有的disk，在write時寫入每個disk並產生新的parity。遇到failure時根據parity可以判斷failure的bit。<br />\nRAID4:<br />\n跟raid3很像只是是拆成block level，每次要讀資料時只要讀存放所需資料的block就好，寫資料也只需要動到要寫的block和parity。<br />\nRAID5:<br />\n跟RAID4接近，但是把parity分散存至每個disk以避免parity disk成為在寫入時的速度的瓶頸(Raid4每個寫入都要寫parity disk，所以parity disk寫入的速度就會限制資料寫入的速度)<br />\nRAID6(P + Q Redundancy):<br />\n跟RAID5一樣但是增加兩個parity(不同演算法)，使系統容錯率更高。</p>\n<p>RAID summary:<br />\nraid可以提升performance 並增加可靠性(hot swapping，在不影響系統operate的情形下修復fault)<br />\n可靠性是raid最重要的功能。</p>\n<p>Disk I/O Benchmarks: I/O rate vs. Data rate vs. latency</p>\n<h2 id=\"Chap12-Multicores-Multiprocessor\">Chap12 Multicores, Multiprocessor</h2>\n<p>Challenges</p>\n<ul>\n<li>Partitioning</li>\n<li>Coordination</li>\n<li>Communication overheads</li>\n<li>Amdahl’s Law<br />\n平行化是有極限的<br />\nFracX: 能被speedup的比例<br />\nSpeedup = 1 / [(FracX/SpeedupX + (1-FracX)]</li>\n</ul>\n<p>資料傳遞<br />\nShared Memory: connect by memory<br />\nuse lock to synchronize<br />\nsame address space<br />\nMessage Passing: connect by network<br />\ndifferent address spaces</p>\n<p>Total network bandwidth = 所有的頻寬。bandwidth-per-link x link_no<br />\nBisection bandwidth = 兩個部分之間的頻寬。the bandwidth between two parts of a multiprocessor</p>\n<p><img data-src=\"/img/computer-architecture/network-topology.webp\" alt=\"netword topology\" /></p>\n<p>Cache Coherency Problem: 在cache中的共享資料須保持一致<br />\nProtocol:</p>\n<ol>\n<li>Snoopy Bus: use for small scale machines<br />\n在拿資料前，先boardcast給所有processor知道<br />\nallow multiple readers, single writer<br />\nBroadcast: BW (increased) vs. latency (decreased) tradeoff<br />\nWrite Invalidate Protocol:<br />\n若寫資料，也boardcast，其他有同資料的processor設invalid bit<br />\nWrite Update Protocol:<br />\n若寫資料，也boardcast，其他有同資料的processor作相同的instruction</li>\n</ol>\n<p>Each block of memory is in one state:<br />\n–Clean in all caches and up-to-date in memory<br />\n–OR Dirty in exactly one cache<br />\n–OR Not in any caches<br />\nEach cache block is in one state:<br />\nif read miss, place readmiss on bus, goto shared<br />\nif write miss, place writemiss on bus, goto exclusive<br />\nif get read miss at bus(same block), if at exclusive, do write back and goto shared<br />\nif get write miss at bus, goto(set) invalid<br />\n–Shared: block can be read<br />\n–OR Exclusive: cache has only copy, its writeable, and dirty<br />\n–OR Invalid: block contains no data<br />\n<img data-src=\"/img/computer-architecture/IO-BUS-fsm.webp\" alt=\"State machine for bus requests for each cache block\" /><br />\n<img data-src=\"/img/computer-architecture/IO-CPU-fsm.webp\" alt=\"State machine for CPU requests for each cache block\" /></p>\n<ul>\n<li>Basic CMP Architecture Shared last level cache</li>\n<li>Scalable CMP Architecture Tiled CMP\n<ul>\n<li>Each tile includes processor, L1, L2, and router</li>\n<li>Physically distributed last level cache</li>\n</ul>\n</li>\n</ul>\n<p>Multithreading<br />\n<img data-src=\"/img/computer-architecture/multithreads.webp\" alt=\"Multithreaded Categories p53\" /></p>\n<ul>\n<li>實作多執行緒\n<ul>\n<li>有多個 registers, PC</li>\n<li>Fast switching between threads</li>\n<li>減少stall的時間浪費</li>\n</ul>\n</li>\n<li>Fine-grain multithreading(一個cycle做一個thread的多個cycles)</li>\n<li>Coarse-grain multithreading(只有大的stall(L2 cache miss)才切換thread)</li>\n<li>Simultaneous Multithreading\n<ul>\n<li>used in dynamically scheduled processor</li>\n<li>同一個cycle可做多個thread</li>\n<li>dependencies handled by scheduling and register renaming</li>\n</ul>\n</li>\n<li>和Multiprocessing的不同：multiprocessing需多個processor</li>\n</ul>\n<p>費林分類法（Flynn's Taxonomy），是一種高效能計算機的分類方式</p>\n<ul>\n<li>單一指令流單一資料流計算機（SISD）</li>\n<li>單一指令流多資料流計算機（SIMD）\n<ul>\n<li>processors execute the same instruction at the same time.Each with different data address</li>\n<li>Works best for highly data-parallel applications</li>\n<li>Vector architecture</li>\n<li>Explicit statement of absence of loop-carried dependences(Reduced checking in hardware)</li>\n<li>Avoid control hazards by avoiding loops</li>\n</ul>\n</li>\n<li>多指令流單一資料流計算機（MISD）</li>\n<li>多指令流多資料流計算機（MIMD）</li>\n<li>SPMD: Single Program Multiple Data\n<ul>\n<li>A parallel program on a MIMD computer</li>\n<li>Conditional code for different processors</li>\n</ul>\n</li>\n</ul>\n<p>GPU(Graphics Processing Units)</p>\n<ul>\n<li>compute massive vertices, pixels, and general purpose data</li>\n<li>High availability</li>\n<li>High computing performance</li>\n<li>Low price of computing capability</li>\n</ul>\n<p>General-Purpose computing on GPU (GPGPU)<br />\n用處理圖形任務的圖形處理器來計算原本由中央處理器處理的通用計算任務，這些通用計算常常與圖形處理沒有任何關係。由於現代圖形處理器強大的並行處理能力和可程式流水線，令流處理器可以處理非圖形數據。特別在面對單指令流多數據流（SIMD），且數據處理的運算量遠大於數據調度和傳輸的需要時，通用圖形處理器在性能上大大超越了傳統的中央處理器應用程式。</p>\n<p>GPGPU programming models</p>\n<ul>\n<li>NVIDIA’s CUDA</li>\n<li>AMD’s StreamSDK</li>\n<li>OpenCL</li>\n</ul>\n<p>Multi-core CPU</p>\n<ul>\n<li>Coarse-grain, heavyweight threads</li>\n<li>Memory latency is resolved though large on-chip caches &amp; out-of-order execution<br />\nModern GPU</li>\n<li>Fine-grain, lightweight threads</li>\n<li>Exploit thread-level parallelism for hiding latency</li>\n<li>SIMT (Single Instruction Multiple Threads)\n<ul>\n<li>multiple independent threads(pixel, vertex, compute…) execute concurrently using a single instruction</li>\n<li>common PC value</li>\n<li>Latency Hiding</li>\n</ul>\n</li>\n</ul>\n<p>Serial/Task-parallel workloads → CPU<br />\nGraphics/Data-parallel workloads → GPU<br />\nBehaviors of the applications are different<br />\n-&gt; CPU is latency sensitive, GPU is throughput oriented</p>\n<h3 id=\"參考資料\">參考資料</h3>\n<ul>\n<li>CA_by_b95015.doc</li>\n</ul>\n","categories":["筆記"],"tags":["計算機結構"]},{"title":"電腦對局理論","url":"/computer-gaming/","content":"<!-- RENEW: -->\n<blockquote>\n<p>註：此為2014年版，且只寫到第八章(因為教授只考到這)</p>\n</blockquote>\n<h2 id=\"Introduction\">Introduction</h2>\n<h3 id=\"學習電腦對局的用處\">學習電腦對局的用處</h3>\n<ol>\n<li>電腦愈聰明，對人類愈有用</li>\n<li>電腦學得的技巧讓人學習</li>\n</ol>\n<h3 id=\"為何學棋局\">為何學棋局</h3>\n<ol>\n<li>容易辨別輸贏</li>\n<li>規則簡單(先備知識少)</li>\n</ol>\n<span id=\"more\"></span>\n<h3 id=\"圖靈測試-Turing-test\">圖靈測試(Turing test)</h3>\n<p>If a machine is intelligent, then it cannot be distinguished from a human</p>\n<ul>\n<li>反過來利用的例子 - CAPTCHA(驗證碼): Completely Automated Public Turing test to tell Computers and Humans Apart</li>\n<li>Wolfram Alpha\n<ul>\n<li>knowledge base of Siri</li>\n</ul>\n</li>\n</ul>\n<p>Problems</p>\n<ul>\n<li>Are all human behaviors intelligent?</li>\n<li>Can human perform every possible intelligent behavior?<br />\n→ Human Intelligence 和 Intelligence 並不完全相同</li>\n</ul>\n<h3 id=\"改變目標\">改變目標</h3>\n<ul>\n<li>From Artificial Intelligence to <strong>Machine Intelligence</strong>\n<ul>\n<li>machine intelligence: the thing machine can do better than human do</li>\n</ul>\n</li>\n<li>From imitation of human behaviors to doing intelligent behaviors</li>\n<li>From general-purpose intelligence to <strong>domain-dependent</strong> Expert Systems</li>\n</ul>\n<h3 id=\"重大突破\">重大突破</h3>\n<ul>\n<li>1912 - End-Game chess playing machine</li>\n<li>~1970 - Brute Force</li>\n<li>1975 - Alpha-Beta pruning(Knuth and Moore)</li>\n<li>1993 - Monte Carlo</li>\n</ul>\n<h3 id=\"無關：核心知識\">無關：核心知識</h3>\n<p>用少部分的核心知識(要記得的事物)推得大多數的知識<br />\nEx. 背九九乘法表推得所有多位數乘法<br />\n建構式數學(X)</p>\n<h3 id=\"對局分類\">對局分類</h3>\n<p><strong>研究遊戲之前的必要分析：分類</strong></p>\n<p>By number of players</p>\n<ul>\n<li>Single-player games\n<ul>\n<li>puzzles</li>\n<li>Most of them are NP-complete\n<ul>\n<li>or the game will be not fun to play</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Two-player games\n<ul>\n<li>Most of them are either P-SPACE-complete(polynomial space usage) or exponential-time-complete\n<ul>\n<li>PSPACE-complete can be thought of as the hardest problems in PSPACE, solution of PSPACE-complete could easily be used to solve any other problem in PSPACE</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Multi-player games</li>\n</ul>\n<p>By state information obtained by each player(盤面資訊是否完全)</p>\n<ul>\n<li>Perfect-information games\n<ul>\n<li>all players have all the information to make a correct decision</li>\n</ul>\n</li>\n<li>Imperfect-information games\n<ul>\n<li>some information is only available to selected players, for example you cannot see the opponent's cards in Poker(不知對手的牌或棋子, Ex. 橋牌)</li>\n</ul>\n</li>\n</ul>\n<p>By rules of games known in advance(是否有特殊規則、是否知道對手的行動)</p>\n<ul>\n<li>Complete-information games\n<ul>\n<li>rules of the game are fully known by all players in advance</li>\n</ul>\n</li>\n<li>Incomplete-information games\n<ul>\n<li>partial rules are not given in advance for some players(Ex. 囚犯困境賽局)</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5lY29uLnVjc2IuZWR1L35nYXJyYXR0L0Vjb24xNzEvTGVjdDE0X1NsaWRlcy5wZGY=\">definition of perfect and complete information in game theory<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>By whether players can fully control the playing of the game(是否受隨機性影響)</p>\n<ul>\n<li>Stochastic games\n<ul>\n<li>there is an element of chance such as dice rolls</li>\n</ul>\n</li>\n<li>Deterministic games\n<ul>\n<li>players have a full control over the games</li>\n</ul>\n</li>\n</ul>\n<p>Example(not fully sure):</p>\n<ul>\n<li>perfect-information complete-information deterministic game: chinese chess, go</li>\n<li>perfect-information complete-information stochastic game: dark chinese chess, 輪盤(Roulette)</li>\n<li>perfect-information incomplete-information deterministic game: Prisoner’s Dilemma</li>\n<li>perfect-information incomplete-information stochastic game: ?</li>\n<li>inperfect-information complete-information deterministic game: ?</li>\n<li>inperfect-information complete-information stochastic game: monopoly, bridge</li>\n<li>inperfect-information incomplete-information deterministic game: battleship, bingo</li>\n<li>inperfect-information incomplete-information stochastic game: most of the table/computer games</li>\n</ul>\n<h2 id=\"Chap02-Basic-Search-Algorithms\">Chap02 Basic Search Algorithms</h2>\n<ul>\n<li>Brute force</li>\n<li>Systematic brute-force search\n<ul>\n<li>Breadth-first search (BFS)</li>\n<li>Depth-first search (DFS)\n<ul>\n<li>Depth-first Iterative-deepening (DFID)</li>\n</ul>\n</li>\n<li>Bi-directional search</li>\n</ul>\n</li>\n<li>Heuristic search: best-first search\n<ul>\n<li>A*\n<ul>\n<li>IDA*</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Symbol-Definition\">Symbol Definition</h3>\n<ul>\n<li>Node branching factor <code>b</code>\n<ul>\n<li>degree</li>\n<li>number of neighbor vertexs of a node</li>\n</ul>\n</li>\n<li>Edge branching factor <code>e</code>\n<ul>\n<li>number of connected edges of a node</li>\n</ul>\n</li>\n<li>Depth of a solution <code>d</code>\n<ul>\n<li>最短深度, <code>D</code> 為最長深度</li>\n<li>Root深度為0</li>\n</ul>\n</li>\n<li>If <code>b</code> and <code>e</code> are average constant number, <code>e</code> &gt;= <code>b</code>(兩個點之間可能有多條線)</li>\n</ul>\n<h3 id=\"Brute-force-search\">Brute-force search</h3>\n<p>Used information</p>\n<ul>\n<li>initial state</li>\n<li>method to find adjacent states</li>\n<li>goal-checking method(whether current state is goal)</li>\n</ul>\n<p>Pure brute-force search program <img data-src=\"/img/tcg/54GbBxV.webp\" alt=\"\" /></p>\n<ul>\n<li>隨機走旁邊的一個點</li>\n<li>不記憶走過的路\n<ul>\n<li>May take infinite time</li>\n</ul>\n</li>\n<li>Pure Random Algorithm 應用\n<ul>\n<li>驗證碼(e.g. 虛寶)</li>\n<li>純隨機數</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"BFS-Breadth-First-Search\">BFS(Breadth-First Search)</h3>\n<p><img data-src=\"/img/tcg/mrf0Egx.webp\" alt=\"\" /><br />\ndeeper(N): 回傳與N相鄰的點<br />\nrecord parent state and backtrace to Find the path</p>\n<ul>\n<li>\n<p>Space complexity: $O(b^d)$ → Too big!</p>\n</li>\n<li>\n<p>Time complexity: $O(b^{d-1} * e)$</p>\n<ul>\n<li>→ costs O(e) to find deeper(N), at most check b^(d-1) times(deeper(leaf) do not return new node)</li>\n</ul>\n</li>\n<li>\n<p>Open list: nodes that are in the queue(candidate nodes)</p>\n</li>\n<li>\n<p>Closed list: nodes that have been explored(assure not answer, can skip)</p>\n<ul>\n<li>Need a good algorithm to check for states in deeper(N) are visited or not\n<ul>\n<li>Hash</li>\n<li>Binary search</li>\n</ul>\n</li>\n<li>not need to have because it won't guarantee to improve the performance</li>\n<li>if it is possible to have no solution, Need to store nodes that are already visited</li>\n</ul>\n</li>\n<li>\n<p>node： open list → check is goal or not, explore(deeper) → closed list</p>\n</li>\n</ul>\n<p>Property</p>\n<ul>\n<li>Always finds optimal solution</li>\n<li>Do not fall into loops if goal exists(always &quot;deeper&quot;)</li>\n</ul>\n<h4 id=\"Disk-based-algorithm\">Disk based algorithm</h4>\n<p><img data-src=\"/img/tcg/i8bbMET.webp\" alt=\"\" /></p>\n<p>Solution for huge space complexity</p>\n<ul>\n<li>disk: store main data</li>\n<li>memory: store buffers</li>\n</ul>\n<ul>\n<li>Store open list(QUEUE) in disk\n<ul>\n<li><strong>Append</strong> buffered open list to disk when memory is full or QUEUE is empty</li>\n</ul>\n</li>\n<li>Store closed list in disk and maintain them as sorted\n<ul>\n<li><strong>Merge</strong> buffered closed list with disk closed list when memory is full</li>\n<li>delay cheking: check node in the closed list or not before being taken from open list</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Disk-based-algorithms\">Disk based algorithms</h4>\n<ul>\n<li>not too slow\n<ul>\n<li>read large file in sequence\n<ul>\n<li>queue(always retrieve at head and write at end)</li>\n</ul>\n</li>\n<li>sorting of data in disk\n<ul>\n<li>merge sort between disk list and buffer list</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>very slow\n<ul>\n<li>read file in random order(disk spinning)</li>\n</ul>\n</li>\n<li>系統為資源和效率(時間、空間、錢)的trade-off</li>\n</ul>\n<h3 id=\"DFS\">DFS</h3>\n<p><img data-src=\"/img/tcg/65RmOgp.webp\" alt=\"DFSalgo\" /></p>\n<ul>\n<li>performance mostly depends on <strong>move ordering</strong>\n<ul>\n<li>If first choose the branch include the goal, find answer quick</li>\n<li>get out of long and wrong branches ASAP!</li>\n<li>implement <code>next(current, N)</code>\n<ul>\n<li>作用：列舉出N的所有鄰居</li>\n<li>回傳下一個N的鄰居，目前列舉到current</li>\n<li>next(null, N) -&gt; return first neighbor of N</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>time complexity: $O(e^D)$\n<ul>\n<li>number of possible branches at depth D</li>\n</ul>\n</li>\n<li>space complexity: $O(D)$\n<ul>\n<li>Only need to store current path in the Stack</li>\n</ul>\n</li>\n</ul>\n<p>Property</p>\n<ul>\n<li>need to store close list (BFS: do not need to)</li>\n<li>May not find an optimal solution</li>\n<li>Can't properly implement on disk\n<ul>\n<li>very huge closed list\n<ul>\n<li>Use data compression or bit-operation techniques to store visited nodes</li>\n<li>Need a good heuristic to store the most frequently visited nodes to avoid swapping too often</li>\n</ul>\n</li>\n<li>need to check closed list instantly(BFS: can be delayed)</li>\n</ul>\n</li>\n<li>Can DFS be paralleled? Computer scientists fails to do so even after 30 years</li>\n<li>Most critical drawback: huge and unpredictable time complexity</li>\n</ul>\n<h3 id=\"General-skills-to-improve-searching-algorithm\">General skills to improve searching algorithm</h3>\n<h4 id=\"Iterative-Deepening-ID-逐層加深\">Iterative-Deepening(ID) 逐層加深</h4>\n<ul>\n<li>inspired from BFS(BFS = BFID)</li>\n<li>限制搜尋時的複雜度，若找不到再放寬限制</li>\n<li>prevent worse cases</li>\n</ul>\n<p>Deep First ID(DFID)</p>\n<ul>\n<li>限制深度\n<ul>\n<li>找到解立即return <img data-src=\"/img/tcg/9X2ZiRm.webp\" alt=\"\" /></li>\n<li><img data-src=\"/img/tcg/gmD51AT.webp\" alt=\"\" /></li>\n<li>time complexity using 二項式定理 <img data-src=\"/img/tcg/IfDEwFh.webp\" alt=\"\" /> <img data-src=\"/img/tcg/d0m27cU.webp\" alt=\"\" />\n<ul>\n<li>M(e, d) ~ $O(e^d)$ when e is sufficiently large</li>\n<li>→ no so much time penalty to use ID when e is big enough</li>\n</ul>\n</li>\n<li>關鍵：設定初始限制和限制放寬的大小</li>\n<li>always find optimal solution</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Bi-directional-search\">Bi-directional search</h4>\n<p><img data-src=\"/img/tcg/1-1.webp\" alt=\"DFSdir\" /></p>\n<ul>\n<li>\n<p><code>DFSdir(B, G, successor, i)</code>: DFS with starting states B, goal states G, successor function and <strong>depth limit i</strong></p>\n</li>\n<li>\n<p><code>nextdir(current, successor, N)</code>: returns the state next to the state &quot;current&quot; in successor(N)</p>\n<ul>\n<li><code>deeper(current, N)</code> for forward searching\n<ul>\n<li>deeper(N) contains all next states of N</li>\n</ul>\n</li>\n<li><code>prev(current, N)</code> for backward searching\n<ul>\n<li>prev(N) contains all previous states of N<br />\n<img data-src=\"/img/tcg/1-2.webp\" alt=\"BDS\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Forward Search: store all states H</p>\n</li>\n<li>\n<p>Backward Search: find the path from G(goal) to H at depth = limit or limit+1(for odd-lengthed solutions)</p>\n</li>\n<li>\n<p>also use the concept of iterative-deepening<br />\n<img data-src=\"/img/tcg/7iBkfKB.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p>Time complexity: $O(e^{d/2})$</p>\n<ul>\n<li>the number of nodes visited is greatly reduced(compared with original $O(e^d)$)</li>\n</ul>\n</li>\n<li>\n<p>Space complexity: $O(e^{d/2})$</p>\n<ul>\n<li>Pay the price of storing state depth(H)</li>\n</ul>\n</li>\n<li>\n<p>restrict</p>\n<ul>\n<li>can't assure to find optimal solution</li>\n<li>need to know what the goals are\n<ul>\n<li>bi-directional search is used when goal is known, only want to find path, like solving 15-puzzle</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Heuristic-啟發式-search\">Heuristic(啟發式) search</h3>\n<p>Definition: criteria, methods, or principles for deciding which is the most effective to achieve some goal<br />\n→ By 經驗法則(so not always have optimal solution)</p>\n<ul>\n<li>先走最有可能通往答案的state(good move ordering)\n<ul>\n<li>best-first algorithm : like greedy</li>\n</ul>\n</li>\n<li>The unlikely path will be explored further(pruning)</li>\n<li><strong>Key: how to pick the next state to explore</strong>\n<ul>\n<li>need simple and effective <strong>estimate function</strong> to discriminate</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Heuristic-search-A\">Heuristic search -- A*</h4>\n<p><img data-src=\"/img/tcg/Vv8N3hj.webp\" alt=\"A*\" /><br />\nline 12: add all possible path that depth = depth + 1</p>\n<ul>\n<li>Open list: a priorty queue(PQ) to store paths with costs</li>\n<li>Closed list: store all visited nodes with the smallest cost\n<ul>\n<li>Check for duplicated visits in the closed list only</li>\n<li>A node is inserted if\n<ul>\n<li>it has never been visited before</li>\n<li>being visited, but has smaller cost</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Given a path P\n<ul>\n<li>g(P) = current cost of P</li>\n<li>h(P) = estimation of remaining path to goal(<strong>heuristic cost</strong> of P)</li>\n<li>f(P) = g(P) + h(P) is the cost function</li>\n</ul>\n</li>\n<li>Assume all costs are positive, so there is no need to check for falling into a loop</li>\n<li>cost function所推測的cost不可超過實際的cost，否則不保證找到最佳解\n<ul>\n<li><strong>if h() never overestimates the actual cost to the goal</strong> (called admissible可容許), then <strong>A* always finds an optimal solution</strong></li>\n<li>證明？</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>h(n)=0 : A* 等同 BFS</li>\n<li>h(n)&lt;目前節點到結束點的距離 : A* 演算法保證找到最短路徑, h(n)越小, 搜尋深度越深(代表花愈多時間)</li>\n<li>h(n)=目前節點到結束點的距離 : A* 演算法僅會尋找最佳路徑, 並且能快速找到結果(最理想情況)</li>\n<li>h(n)&gt;目前節點到結束點的距離 : 不保證能找到最短路徑, 但計算比較快</li>\n<li>h(n)與g(n)高度相關 : A* 演算法此時成為Best-First Search<br />\n<span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cubWluc3RyZWwuaWR2LnR3LzIwMDQvMTIvc3Rhci1hbGdvcml0aG0uaHRtbA==\">http://blog.minstrel.idv.tw/2004/12/star-algorithm.html<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n<p>Question:</p>\n<ul>\n<li>What disk based techniques can be used?</li>\n<li>Why do we need a non-trivial h(P) that is admissible?</li>\n<li>How to design an admissible cost function?</li>\n</ul>\n<h3 id=\"DFS-with-threshold\">DFS with threshold</h3>\n<ul>\n<li><code>DFScost(N, f, threshold)</code>\n<ul>\n<li>starting state N</li>\n<li>cost function f</li>\n<li>cuts off a path if cost bigger than threshold</li>\n</ul>\n</li>\n</ul>\n<p><code>DFS1</code>: Use <code>next1(current,N)</code> find neighbors of N (in the order of low cost to high cost)<br />\n<img data-src=\"/img/tcg/csd9mLf.webp\" alt=\"dfs1\" /><br />\n<code>DFS2</code>: Use a priority queue instead of using a stack in <code>DFScost</code><br />\n<img data-src=\"/img/tcg/jthjSm8.webp\" alt=\"dfs2\" /><br />\nIt may be costly to maintain a priority queue</p>\n<h3 id=\"IDA-DFID-A\">IDA* = DFID + A*</h3>\n<p>用A*的cost作為DFS的threshold<br />\n<img data-src=\"/img/tcg/PJ2bPrX.webp\" alt=\"\" /></p>\n<p>Ex. 15 puzzle<br />\nall posibilities: $16! \\leq 2.1 \\times 10^{13}$<br />\ng(P): the number of moves made so far<br />\nh(P): <strong>Manhattan distance</strong> between the current board and the goal<br />\nManhattan distance from (i, j) to (i', j') is |i' - i| + |j' - j| (admissible)</p>\n<h3 id=\"basic-thought-for-a-problem\">basic thought for a problem</h3>\n<p><em>What you should think about before playing a game</em>：</p>\n<ul>\n<li>Needed to\n<ul>\n<li>Find an optimal solution?</li>\n<li>batch operations?</li>\n<li>disk based algorithms?</li>\n<li>Search in parallel?</li>\n</ul>\n</li>\n<li><strong>Balancing</strong> in resource usage:\n<ul>\n<li>memorize past results vs efforts to search again(time and space)</li>\n<li>The efforts to compute a better heuristic(time to think a heuristic?)</li>\n<li>The amount of resources spent in implementing a better heuristic and the amount of resources spent in searching(complexity of heuristic function)</li>\n</ul>\n</li>\n<li>For specific algorithm\n<ul>\n<li>heuristic : How to design a good and non-trivial heuristic function?</li>\n<li>DFS : How to get a better move ordering?</li>\n</ul>\n</li>\n</ul>\n<p>Can these techniques be applied to two-person game?</p>\n<h3 id=\"algorithm整理\">algorithm整理</h3>\n<p>| Name      | Time Complexity | Space Complexity | OptimalSolution    | UseDisk | Description               |<br />\n| --------- | --------------- | ---------------- | ------------------ | ------- |<br />\n| brute     | $∞$             | $O(1)$           | No                 | No      |<br />\n| BFS       | $O(b^d)$        | $O(b^{d-1} * e)$ | Yes                | Needed  |<br />\n| DFS       | $O(e^d)$        | $O(d)$           | No                 | NoNeed  |<br />\n| Heuristic | N\\A             | N\\A              | Yes, if admissible | --      | Ex. A*                    |<br />\n| BDS       | $O(e^{d/2})$    | $O(e^{d/2})$     | No                 | Needed  | DFS + bidiretional search |<br />\n| DFID      | $O(e^d)$        | $O(d)$           | Yes                | NoNeed  | DFS + ID                  |<br />\n| IDA*      | N\\A             | N\\A              | Yes                | N\\A     | DFID + A*                 |</p>\n<h2 id=\"Chap03-Heuristic-Search-with-Pre-Computed-Databases\">Chap03 Heuristic Search with Pre-Computed Databases</h2>\n<p>new form of heuristic called <strong>pattern databases</strong></p>\n<ul>\n<li>If the subgoals can be divided\n<ul>\n<li>Can sget better admissible cost function by <strong>sum of costs of the subgoals</strong></li>\n</ul>\n</li>\n<li>Make use of the fact that computers can memorize lots of patterns\n<ul>\n<li>使用已經計算過的 pattern 來做出更好、更接近real cost的heuristic function</li>\n</ul>\n</li>\n</ul>\n<p>Using 15 puzzle as example <img data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/15-puzzle.svg/480px-15-puzzle.svg.png\" alt=\"\" /></p>\n<ul>\n<li>State space can be divided into two subsets: even and odd permutations</li>\n<li>$f_1$ is number of inversions in a permutation <code>X1X2...XN</code>\n<ul>\n<li>inversion is a distinct pair Xi &gt; Xj such that i &lt; j(後面有幾個數比自己小)</li>\n<li>Example: <code>10,8,12,3,7,6,2,1,14,4,11,15,13,9,5</code> has 9+7+9+2+5+4+1+0+5+0+2+3+2+1 inversions</li>\n</ul>\n</li>\n<li>$f_2$ is the row number that empty cell is(空的那一格在哪一行)</li>\n<li>f = $f_1$ + $f_2$</li>\n<li>Slide a tile never change the parity\n<ul>\n<li>Proof: skip(a lot of)</li>\n</ul>\n</li>\n</ul>\n<p>Solving Result</p>\n<ul>\n<li>1-MIPS machine</li>\n<li>30 CPU minutes in 1985</li>\n<li>using IDA* with Manhattan distance heuristic</li>\n</ul>\n<h3 id=\"Non-additive-pattern-databases\">Non-additive pattern databases</h3>\n<ul>\n<li>原本cost funtion為15片個別的distance之和，若能一次計算多片的distance？</li>\n<li>linear conflict: 靠很近不代表步數少(如[2, 1, 3, 4]交換至[1, 2, 3, 4]並不只兩步)\n<ul>\n<li>有可能移成pattern時，反而使其他片遠離</li>\n<li><img data-src=\"/img/tcg/4-1.webp\" alt=\"linear conflict\" /></li>\n</ul>\n</li>\n<li>Fringe(初級知識)\n<ul>\n<li>subset of selected tiles called <strong>pattern</strong>\n<ul>\n<li>tiles not selected is &quot;don't-care tile&quot;, all looked as the same</li>\n</ul>\n</li>\n<li>If there are 7 selected tiles, including empty cell\n<ul>\n<li>16!/9! = 57657600 possible pattern size</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/tcg/4-2.webp\" alt=\"prefrin\" /><br />\ngoal fringe: 選擇的方塊都和goal的位置一樣<br />\n<img data-src=\"/img/tcg/4-3.webp\" alt=\"goalfrin\" /></p>\n<ul>\n<li>precompute the minimum number of moves(<strong>fringe number</strong>) to make goal fringe\n<ul>\n<li>goal fringe: 找給定的選擇方塊，在任何pattern中，最小需要移動成最終目標的步數</li>\n<li>We can solve it because the pattern size is relatively small</li>\n</ul>\n</li>\n<li>Pro's\n<ul>\n<li>pattern size↑, fringe number↑, which means better estimation\n<ul>\n<li>because estimate number it is closer to the real answer</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Con's\n<ul>\n<li>Pattern with a larger size\n<ul>\n<li>consuming lots of memory and time</li>\n<li>limited by source</li>\n</ul>\n</li>\n<li>not optimal</li>\n</ul>\n</li>\n</ul>\n<p>Property</p>\n<ol>\n<li>Divide and Conquer</li>\n</ol>\n<ul>\n<li>Reduce a 15-puzzle problem into a 8-puzzle <img data-src=\"/img/tcg/4-4.webp\" alt=\"15-8\" /></li>\n<li>魔術方塊 -- 分成六面</li>\n<li>Cannot easily combine\n<ul>\n<li>affect tiles that have reached the goal in the subproblem when solving the remains</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>Used as heuristic function(admissible)</li>\n</ol>\n<h3 id=\"More-than-one-patterns\">More than one patterns</h3>\n<ul>\n<li>How to Find better patterns for fringes?\n<ul>\n<li>→ Can we combine smaller patterns to form bigger patterns?</li>\n</ul>\n</li>\n</ul>\n<p>For different pattern databases P1, P2, P3 ...</p>\n<ul>\n<li>patterns may not be disjoint, may be overlapping</li>\n<li>The heuristic function we can use is\n<ul>\n<li>$h(P_1, P_2, P_3 ... ) = max{h(P_1),h(P_2),h(P_3) ...}$</li>\n</ul>\n</li>\n</ul>\n<p>How to make heuristics and the patterns disjoint?</p>\n<ul>\n<li>patterns should be disjoint to add them together(see below)\n<ul>\n<li>Though patterns are disjoint, their costs are not disjoint\n<ul>\n<li>Some moves are counted more than once</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>f(P1) + f(P2) is admissible if</p>\n<ol>\n<li>f() is disjoint with respect to P1 and P2</li>\n<li>both f(P1) and f(P2) are admissible</li>\n</ol>\n<p>For Manhattan distance heuristic</p>\n<ol>\n<li>Each region is a tile\n<ul>\n<li><strong>Divide the board into several disjoint regions</strong></li>\n</ul>\n</li>\n<li>They are disjoint\n<ul>\n<li><strong>only count the number of moves made by each region</strong>\n<ul>\n<li>doesn't count cross-region moves</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p>Refinement<br />\nPartition the board into disjoint regions using the tiles in a region of the goal arrangement as a pattern<br />\n<img data-src=\"/img/tcg/4-5.webp\" alt=\"aabb\" /><br />\n<strong>只算每個region內的片所移動的步數和，作為新定義的fringe number</strong><br />\n如此一來，就可以將每個region的cost相加而保持admissible</p>\n<h3 id=\"Disjoint-pattern\">Disjoint pattern</h3>\n<p>A heuristic function f() is disjoint with respect to two patterns P1 and P2 if</p>\n<ol>\n<li>P1 and P2 have no common cells</li>\n<li>The solutions corresponding to f(P1) and f(P2) do not interfere each other</li>\n</ol>\n<p>Revised fringe number f'(p): for each fringe arrangement F, the <strong>minimum</strong> number of <strong>fringe-only</strong> moves to make goal fringe</p>\n<h3 id=\"Result\">Result</h3>\n<p>Solves the 15 puzzle problem using fringe that is more than <strong>2000</strong> times faster than the previous result by using the Manhattan distance</p>\n<ul>\n<li>The average Manhattan distance is 76.078 moves in 24-puzzle</li>\n<li>The average value for the disjoint database heuristic is 81.607 moves in 24-puzzle</li>\n<li><strong>only small refinement on heuristic function would make performance far better</strong></li>\n</ul>\n<p>Other heuristics</p>\n<ul>\n<li>pairwise distance\n<ul>\n<li>partition the board into many 2-tiles so that the sum of cost is <strong>maximized</strong><br />\nFor an $n^2 - 1$ puzzle, we have $O(n^4)$ different combinations<br />\nusing</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"What-else-can-be-done\">What else can be done?</h3>\n<ol start=\"2\">\n<li>Better way of partitioning</li>\n<li>Is it possible to generalize this result to other problem domains?</li>\n<li>Decide ratio of the time used in searching and the time used in retrieving pre-computed knowledge\n<ul>\n<li>memorize vs compute</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"Chap-04-Two-Player-Perfect-Information-Games-Introductions\">Chap 04 Two-Player Perfect Information Games Introductions</h2>\n<blockquote>\n<p>Conclusion: decision complexity is more important than state-space complexity</p>\n</blockquote>\n<p>trade-off between <strong>knowledge-based</strong> methods and <strong>brute-force</strong> methods</p>\n<p>Domain: 2-person <strong>zero-sum games</strong> with perfect information<br />\nZero-sum means one player's loss is exactly the other player's gain, and vice versa.</p>\n<h3 id=\"Definition\">Definition</h3>\n<p>Game-theoretic value: the outcome of a game when all participants play optimally<br />\nGame-theoretic value for most games are unknown or are only known for some legal positions.</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ultra-weakly solved</td>\n<td>在初始盤面可知，遊戲中先行者或後行者誰有必勝、或必不敗之策略</td>\n</tr>\n<tr>\n<td>Weakly solved</td>\n<td>for the initial position a strategy has been determined to achieve the game-theoretic value(知道必不敗之策略為何)</td>\n</tr>\n<tr>\n<td>Strongly solved</td>\n<td>a strategy has been determined for all legal positions(任何合法情況都能知道最佳策略)</td>\n</tr>\n</tbody>\n</table>\n<p>State-space complexity of a game: the <strong>number of the legal positions</strong> in a game(可能的盤面)<br />\nGame-tree complexity(decision complexity) of a game: the <strong>number of the leaf nodes</strong> in a solution search tree(可能的走法)</p>\n<p>A fair game: the game-theoretic value is draw and both players have roughly equal probability on making a mistake.</p>\n<ul>\n<li>Paper-scissor-stone</li>\n<li>Roll a dice and compare who gets a larger number</li>\n</ul>\n<p>Initiative(主動): the right to move first</p>\n<ul>\n<li>A convergent game: the size of the state space decreases as the game progresses\n<ul>\n<li>Example: Checkers</li>\n</ul>\n</li>\n<li>A divergent game: the size of the state space increases as the game progresses\n<ul>\n<li>Example: Connect-5</li>\n</ul>\n</li>\n<li>A game may be convergent at one stage and then divergent at other stage.\n<ul>\n<li>Ex. Go, Tic-Tac-Toe</li>\n</ul>\n</li>\n</ul>\n<p>Threats are something like forced moved or moves you have little choices.<br />\nThreats are moves with predictable counter-moves</p>\n<h3 id=\"Classification\">Classification</h3>\n<p><img data-src=\"/img/tcg/5-1.webp\" alt=\"4\" /></p>\n<p>Questions to be researched<br />\nCan perfect knowledge obtained from solved games be translated into rules and strategies which human beings can assimilate?<br />\nAre such rules generic, or do they constitute a multitude of ad hoc recipes?<br />\nCan methods be transferred between games?</p>\n<p>Connection games<br />\nConnect-four (6 * 7)<br />\nQubic (4 * 4 * 4)<br />\nRenju - Does not allow the First player to play certain moves, An asymmetric game.<br />\nmnk-Game: a game playing on a board of m rows and n columns with the goal of obtaining a straight line of length k.<br />\nVariations: First ply picks only one stone, the rest picks two stones in a ply. -&gt; Connect 6.</p>\n<p>Hex (10 * 10 or 11 * 11)<br />\nExactly one of the players can win.<br />\nsolved on a 6 * 6 board in 1994.</p>\n<p><img data-src=\"/img/tcg/5-2.webp\" alt=\"Hex\" /></p>\n<p>Proof on exactly one player win<br />\nAssume there is no winner<br />\n<img data-src=\"/img/tcg/5-3.webp\" alt=\"block\" /><br />\nblue should totally block red at some place -&gt; blue will connect!</p>\n<p>let R be the set of red cells that can be reached by chains from rightmost column<br />\nR does not contain a cell of the leftmost column; otherwise we have a contradiction<br />\nlet N(R) be the blue cells that can be reached by chains originated from the rightmost column.<br />\nN(R) must contain a cell in the top and bottom row , Otherwise, R contains all cells in the First/bottom row, which is a contradiction.<br />\nN(R) must be connected. Otherwise, R can advance further. Hence N(R) is a blue winning chain.</p>\n<h3 id=\"Strategy-stealing-argument\">Strategy-stealing argument</h3>\n<p>made by John Nash in 1949<br />\n後手無一般化的必勝法<br />\n若後手有必勝法，則先手可以先隨機下一子(並無視之)，再照著後手的下法<br />\n後手必勝的下法包含了第一手，則再隨機下一子，將其視為第一子<br />\n限制：不能有和，下子不會有害，symmetric，history independent，</p>\n<p>Assume the initial board position is B0<br />\nf(B) has a value only when it is a legal position for the second player.<br />\nrev(x): interchange colors of pieces in a board or ply x.<br />\nalways has exactly one winner</p>\n<p>Not Solved<br />\nChess DEEP BLUE beat the human World Champion in 1997<br />\nChinese chess Professional 7-dan in 2007<br />\nShogi<br />\nClaimed to be professional 2-dan in 2007<br />\nDefeat a 68-year old 1993 Meijin during 2011 and 2012</p>\n<p>Go<br />\nRecent success and breakthrough using Monte Carlo UCT based methods.<br />\nAmateur 1 dan in 2010.<br />\nAmateur 3 dan in 2011.<br />\nThe program Zen beat a 9-dan professional master at March 17, 2012<br />\nFirst game: Five stone handicap and won by 11 points<br />\nSecond game: four stones handicap and won by 20 points</p>\n<p><img data-src=\"/img/tcg/5-4.webp\" alt=\"table of complexity\" /></p>\n<p>possible to use heuristics to prune tremendously when the structure of the game is well studied</p>\n<p>Methods to solve games<br />\nBrute-force methods</p>\n<ul>\n<li>Retrograde analysis(倒推)</li>\n<li>Enhanced transposition-table methods(?)<br />\nKnowledge-based methods</li>\n<li>Threat-space search and lambda-search</li>\n<li>Proof-number search</li>\n<li>Depth-First proof-number search</li>\n<li>Pattern search\n<ul>\n<li>search threat patterns, which are collections of cells in a position</li>\n<li>A threat pattern can be thought of as representing the relevant area on the board<br />\nRecent advancements</li>\n</ul>\n</li>\n<li>Monte Carlo UCT based game tree simulation\n<ul>\n<li>Monte Carlo method has a root from statistic</li>\n<li>Biased sampling</li>\n<li>Using methods from machine learning</li>\n<li>Combining domain knowledge with statistics</li>\n</ul>\n</li>\n<li>A majority vote algorithm</li>\n</ul>\n<p>low state-space complexity have mainly been solved with brute-force methods.<br />\nNine Men's Morris</p>\n<p>low game-tree-complexities have mainly been solved with knowledge-based methods.<br />\nby intelligent (heuristic) searching with help of databases<br />\nGo-Moku, Renju, and k-in-a-row games</p>\n<p>The First player has advantages.<br />\nTwo kinds of positions<br />\nP-positions: the previous player can force a win.<br />\nN-positions: the next player can force a win.</p>\n<p>First player to have a forced win, just one of the moves that make P-position.<br />\nsecond player to have a forced win, all of the moves must lead to(造成) N-positions</p>\n<p>At small boards, the second player is able to draw or even to win for certain games.</p>\n<p>Try to obtain a small advantage by using the initiative.<br />\nThe opponent must react adequately on the moves played by the other player.<br />\nForce the opponent to always play the moves you expected.</p>\n<p>Offsetting the initiative</p>\n<p>一子棋 by 張系國 棋王 -&gt; 先手優勢極大，隨著棋子增加，所需贏的步數就愈少。</p>\n<p>讓子<br />\nEx. Go k = 7.5 in 2011</p>\n<p>Enforce rules so that the first player cannot win by selective patterns.<br />\nEx. Renju</p>\n<p>The one-move-equalization rule: one player plays an opening move and the other player then has to decide which color to<br />\nplay for the reminder of the game.<br />\n. Hex.<br />\n. Second-player will win.</p>\n<p>The First move plays one stone, the rest plays two stones each.<br />\nCan't prove it is fair</p>\n<p>The first player uses less resource.<br />\nFor example: using less time.<br />\nEx. Chinese chess.</p>\n<p>1990's prediction at 2000<br />\n<img data-src=\"/img/tcg/5-5.webp\" alt=\"\" /><br />\n2000's prediction at 2010<br />\n<img data-src=\"/img/tcg/5-6.webp\" alt=\"\" /></p>\n<h2 id=\"Chap-05-Computer-chess-programming-by-Shannon\">Chap 05 Computer chess programming by Shannon</h2>\n<p>C.E. Shannon</p>\n<ul>\n<li>1916 ~ 2001.</li>\n<li>The founding father of Information theory.</li>\n<li>The founding father of digital circuit design.</li>\n</ul>\n<p>Ground breaking paper for computer game playing: &quot;Programming a Computer for Playing Chess&quot;, 1950.<br />\nPresented many novel ideas that are still being used today.(太神啦！)</p>\n<h3 id=\"Analysis\">Analysis</h3>\n<ul>\n<li>typical 30 legal moves in one ply(下子)</li>\n<li>typical game last about 40 moves\n<ul>\n<li>will be 10^120 variations</li>\n</ul>\n</li>\n<li>possible legal position(state space complexity) is roughly 10^43</li>\n<li>CPU speed in 1950 is 10^6 per second current CPU speed is 10^9 per second, still not fast enough to brute force it</li>\n</ul>\n<p>But it is possible to enumerate small endgames<br />\n3~6 piece endgame roughly 7.75*10^9 positions</p>\n<h3 id=\"Three-phases-of-chess\">Three phases of chess</h3>\n<ul>\n<li>Opening\n<ul>\n<li>Development of pieces to good position</li>\n</ul>\n</li>\n<li>Middle\n<ul>\n<li>after opening until few pieces</li>\n<li>pawn structure</li>\n</ul>\n</li>\n<li>End game\n<ul>\n<li>concerning usage of pawns<br />\n<strong>Different principles of play apply in the different phases</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Evaluating-Function\">Evaluating Function</h3>\n<p>position p, include board status, which side to move, history of moves<br />\nhistory -&gt; castling<br />\n<img data-src=\"/img/tcg/6-1.webp\" alt=\"\" /></p>\n<p>Perfect evaluating function f(p):<br />\nf(p) = 1 for a won position.<br />\nf(p) = 0 for a drawn position.<br />\nf(p) = -1 for a lost position.<br />\nPerfect evaluating function is impossible for most games, and is <strong>not fun or educational</strong>.</p>\n<p>Factors considered in approximate evaluating functions:</p>\n<ul>\n<li>The relative values of differences in materials.\n<ul>\n<li>The values of queen, rook, bishop, knight and pawn are about 9, 5, 3, 3, and 1, respectively.</li>\n<li>How to determine good relative values? Static values verse dynamic values?</li>\n</ul>\n</li>\n<li>Position of pieces\n<ul>\n<li>Mobility: the freedom to move your pieces.</li>\n<li>at center , or at corner</li>\n<li>Doubled rooks</li>\n</ul>\n</li>\n<li>Pawn structure: the relative positions of the pawns.\n<ul>\n<li>Backward pawn: a pawn that is behind the pawn of the same color on an adjacent file that cannot advance without losing of itself.</li>\n<li>Isolated pawn: A pawn that has no friend pawn on the adjacent file.</li>\n<li>Doubled pawn: two pawns of the same color on the same file</li>\n<li>these three are all bad pawn</li>\n<li>Passed pawns: pawns that have no opposing pawns to prevent</li>\n<li>Pawns on opposite colour squares from bishop.</li>\n</ul>\n</li>\n<li>King safety.</li>\n<li>Threat and attack.\n<ul>\n<li>Attacks on pieces which give one player an option of exchanging</li>\n<li>Pins(小盯大) which mean here immobilizing pins where the pinned piece is of value not greater than the pinning piece</li>\n<li>Commitments -&gt; 需要保護其他子</li>\n</ul>\n</li>\n<li><img data-src=\"/img/tcg/6-2.webp\" alt=\"three pawn\" /></li>\n</ul>\n<p>Putting &quot;right&quot; coeffcients for diffferent factors<br />\nDynamic setting in practical situations.</p>\n<p>evaluating function can be only applied in<br />\nrelatively quiescent positions.</p>\n<p>not in the middle of material exchanging.<br />\nnot being checked</p>\n<p>max-min strategy<br />\nIn your move, you try to maximize your f(p).<br />\nIn the opponent's move, he tries to minimize f(p).</p>\n<p>A strategy in which all variations are considered out to a<br />\ndefinite number of moves and the move then determined from<br />\na max-min formula is called type A strategy.</p>\n<p>Stalemate<br />\nWinning by making the opponent having no legal next move.<br />\nsuicide move is not legal, and stalemate results in<br />\na draw if it is not currently in check.</p>\n<p>Zugzwang(強制被動): In certain positions, a player is at a disadvantage if he is the next player to move.<br />\n<img data-src=\"/img/tcg/6-3.webp\" alt=\"\" /></p>\n<p>Programming<br />\n- Special rules of games<br />\n- Methods of winning<br />\n- Basic data structure for positions.<br />\n- check for possible legal moves<br />\n- Evaluating function.</p>\n<p>Forced variations(迫著)<br />\none player has little or no choices in playing</p>\n<p>type B strategy<br />\nthe machine must</p>\n<ol>\n<li>\n<p>examine forceful variations out as far as possible and evaluate only at reasonable positions</p>\n</li>\n<li>\n<p>select the variations to be explored by some process</p>\n<pre><code>         | 1 if any piece is attacked by a piece of lower value,\n</code></pre>\n<p>g(P) =    /    or by more pieces then defences of if any check exists<br />\n\\    on a square controlled by opponent.<br />\n| 0 otherwise.<br />\nUsing this function, variations could be explored until g(P)=0,</p>\n</li>\n</ol>\n<p><strong>effective branching factor</strong> is about 2 to 3.<br />\nChinese chess has a larger real branching factor, but its average effective branching factor is also about 2 to 3.</p>\n<p>&quot;style&quot; of play by the machine can<br />\nbe changed very easily by altering some of the coeffcients and<br />\nnumerical factors involved in the evaluating function</p>\n<p>A chess master, on the other hand, has available knowledge of hundreds or perhaps thousands of standard situations, stock<br />\ncombinations, and common manoeuvres based on pins, forks, discoveries, promotions, etc.<br />\nIn a given position he recognizes some similarity to a familiar situation and this directs his mental calculations along the lines with greater probability of success.</p>\n<p>Need to re-think the goal of writing a computer program that<br />\nplays games.<br />\nTo discover intelligence:<br />\nWhat is considered intelligence for computers may not be considered so for human.<br />\nTo have fun:<br />\nA very strong program may not be a program that gives you the most pleasure.<br />\nTo Find ways to make computers more helpful to human.<br />\nTechniques or (machine) intelligence discovered may be useful to computers performing other tasks</p>\n<h2 id=\"Chap-06-Alpha-Beta-Pruning\">Chap 06 Alpha-Beta Pruning</h2>\n<ul>\n<li>standard searching procedure for 2-person perfect-information zero sum games</li>\n<li>terminal position\n<ul>\n<li>a position whose (win/loss/draw) value can be know</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Dewey-decimal-system\">Dewey decimal system</h3>\n<p>杜威分類法 <img data-src=\"/img/tcg/7-1.webp\" alt=\"\" /></p>\n<h3 id=\"Min-Max-method\">Min-Max method</h3>\n<p>假設持白子，數字為白子的evaluating function, 在下白子時，取分數最高(max)的，在下黑子時，取分數最低(min)的 <img data-src=\"/img/tcg/7-2.webp\" alt=\"\" /><br />\n<img data-src=\"/img/tcg/7-3.webp\" alt=\"max layer function F\" /></p>\n<h3 id=\"Nega-max-method\">Nega-max method</h3>\n<p>將下黑子的分數取負號(即為黑子的分數，因為是零和遊戲)<br />\n這樣每一層都取最大分數即可<br />\n<img data-src=\"/img/tcg/7-4.webp\" alt=\"negamax algorithm\" /></p>\n<p>優點是實作較快，程式碼簡潔</p>\n<h3 id=\"Alpha-Beta-cut-off\">Alpha-Beta cut off</h3>\n<ul>\n<li>current search window(score bound) = [α, β]</li>\n<li>If α &gt; β, no need to do further search in current branch</li>\n<li>initial alpha = -∞, beta = ∞</li>\n</ul>\n<p><img data-src=\"/img/tcg/7-5.webp\" alt=\"Alpha Cut off\" /></p>\n<ul>\n<li>只要發現對手有一種反擊方式，使結果比其他手的結果還差，就砍掉這一手(branch)</li>\n<li>2.1 can cut off 2.x\n<ul>\n<li>before 2.1 , window = [15, ∞]</li>\n<li>after 2.1 , window = [15, 10]</li>\n</ul>\n</li>\n<li>We want to choose the biggest value at root for lower bound, so 2.x is all cut off</li>\n</ul>\n<p><img data-src=\"/img/tcg/7-6.webp\" alt=\"Beta Cut off\" /></p>\n<ul>\n<li>只要對手發現自己有一種反擊方式，使結果比其他手的結果還差(α)，就砍掉這一手(branch)</li>\n<li>1.2.1 can cut off 1.2.x\n<ul>\n<li>beofre 1.2.1 , 1 bound is [-∞, 10]</li>\n<li>now 1.2 bound is [15, 10]</li>\n</ul>\n</li>\n<li>We want to choose smallest value at 1 for upper bound, 1.2.x is all cut off</li>\n</ul>\n<p>可以砍所有子孫 <img data-src=\"/img/tcg/7-7.webp\" alt=\"Deep Cut off\" /></p>\n<ul>\n<li>2.1.1 is cut off\n<ul>\n<li>root bound = [15, ∞]</li>\n<li>2.1.1 = [-∞, 7]</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/tcg/7-8.webp\" alt=\"alpha-beta cut off Algorithm\" /><br />\nf = white move, find max to be lower bound, do beta cut off<br />\ng = black move, find min to be upper bound, do alpha cut off<br />\n<img data-src=\"/img/tcg/7-9.webp\" alt=\"example\" /></p>\n<p><img data-src=\"/img/tcg/7-10.webp\" alt=\"F2\" /><br />\nwindow變號，回傳的score也要變號<br />\nt = -F(pi, -beta, -m)</p>\n<h3 id=\"Analysis-for-AB-pruning\">Analysis for AB pruning</h3>\n<p><strong>different move orderings</strong> give very different cut branches<br />\n愈快找到最佳解，可以砍的branch愈多</p>\n<p>critical nodes 一定會搜到(cut off之前至少需搜完一個子branch) <img data-src=\"/img/tcg/7-11.webp\" alt=\"Critical Node\" /></p>\n<p>perfect-ordering tree: 每個branch的第一個child就是最佳解<br />\nTheorem: 若是perfect-ordering tree, AB pruning 會剛好走過所有 critical nodes<br />\nProof:<br />\nThree Types of critial nodes</p>\n<ul>\n<li>定義a_i = 第i層的node是第幾個child(杜威分類)</li>\n<li>a_j = 第一個「不是第一個child」的node(如果有的話)\n<ul>\n<li>a_j-1 = a_j+1 = 1\n<ul>\n<li>小於j的node都是1</li>\n<li>而且因為是critial node，所以a_j的child一定是1(其他會被砍掉)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>a_l = the last layer</li>\n</ul>\n<ol>\n<li>root and all node = 1(最左邊, 1, 1.1, 1.1.1 …)</li>\n<li>l-j = even\n<ol>\n<li>j = l (type1 的全部兒子(除了最左邊))</li>\n<li>j &lt; l (type3 的全部兒子)</li>\n</ol>\n</li>\n<li>l-j = odd\n<ol>\n<li>j+1 = l (type2.1 的第一個兒子)</li>\n<li>j+1 &lt; l (type2.2的第一個兒子)</li>\n</ol>\n</li>\n</ol>\n<p><img data-src=\"/img/tcg/7-13.webp\" alt=\"Three Types of critial nodes\" /><br />\n<img data-src=\"/img/tcg/7-14.webp\" alt=\"Proof\" /></p>\n<p>We can calculate the least number of nodes to be searched <img data-src=\"/img/tcg/7-15.webp\" alt=\"\" /> <img data-src=\"/img/tcg/7-16.webp\" alt=\"\" /></p>\n<p>when there're some early terminate nodes <img data-src=\"/img/tcg/7-18.webp\" alt=\"\" /><br />\nl = even → x.1.x.1... = b0(q1b2)q3...<br />\n1.x.1.x... = (q0b1)(q2b3)...(q0b1 = 第一個孩子的全child，若無child，則為(1-qi)*0)</p>\n<p>Perfect ordering is not always best when tree are not balanced <img data-src=\"/img/tcg/7-17.webp\" alt=\"\" /><br />\n→ When <strong>&quot;relative&quot; ordering of children</strong>(not perfect order!) are good enough, there are some cut-off</p>\n<p>Theorem: 若知道所有的分數，就可以最佳化alpha-beta pruning(計算的點最少，cut最多)<br />\n→ 不過如果能算出來就不用search了…</p>\n<h3 id=\"Variations-of-alpha-beta-search\">Variations of alpha-beta search</h3>\n<ul>\n<li>Fail hard alpha-beta cut(Original) : F2 <img data-src=\"/img/tcg/7-19.webp\" alt=\"\" />\n<ul>\n<li>returned value in [α, β] <img data-src=\"/img/tcg/7-20.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Fail soft alpha-beta cut(Variation): F3  <img data-src=\"/img/tcg/7-21.webp\" alt=\"\" />\n<ul>\n<li>Find &quot;better&quot; value when the value is out of the search window</li>\n<li>m is the value in this branch(not related to α)\n<ul>\n<li>use max(m, alpha) to get window</li>\n</ul>\n</li>\n<li>return original value m instead of α or β when cut off, which is more precise than fail-hard <img data-src=\"/img/tcg/7-22.webp\" alt=\"\" /></li>\n<li>Failed-high\n<ul>\n<li>return value &gt; β</li>\n</ul>\n</li>\n<li>Failed-low\n<ul>\n<li>return value &lt; α</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Comparison</p>\n<ul>\n<li>fail-hard\n<ul>\n<li>return max{4000,200,v} <img data-src=\"/img/tcg/7-23.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>fail-soft\n<ul>\n<li>return max{200,v} <img data-src=\"/img/tcg/7-24.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>fail-soft provides more information when the true value is out of search window\n<ul>\n<li>can record better value to be used later when this position is revisited</li>\n<li>F3 saves about 7% of time than that of F2 when a transposition table is used to save and re-use searched results</li>\n<li>記錄F3傳回的值，可減少重複計算的時間，因為下一手的樹在下兩層，大部分node皆相同\n<ul>\n<li>if p1 is searched, p2 does not need to search again <img data-src=\"/img/tcg/7-25.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Questions\">Questions</h3>\n<ul>\n<li>What move ordering is good?\n<ul>\n<li>search the best possible move first</li>\n<li>cut off a branch with more nodes first</li>\n</ul>\n</li>\n<li>What is the effect of using iterative-deepening alpha-beta cut off?</li>\n<li>How about searching game graph instead of game tree?</li>\n<li>Can some nodes be visited more than once?</li>\n</ul>\n<h3 id=\"Pruning-Techinique\">Pruning Techinique</h3>\n<ul>\n<li>Exact algorithms: by mathematical proof\n<ul>\n<li>Alpha-Beta pruning</li>\n<li>Scout(in Chap07)</li>\n</ul>\n</li>\n<li>Approximated heuristics: pruned branches with low probability to be solution\n<ul>\n<li>in very bad position(盤面太差)</li>\n<li>a little hope to gain back the advantage(無法逆轉)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap07-Scout-and-Proof-Number-Search\">Chap07 Scout and Proof Number Search</h2>\n<ul>\n<li>Suppose we get at least score s at the First branch\n<ul>\n<li>want to find whether second branch can get score over s or not</li>\n</ul>\n</li>\n</ul>\n<p><strong>Is there a way to search a tree approximately?</strong></p>\n<h3 id=\"SCOUT\">SCOUT</h3>\n<ul>\n<li>Invented by Judea Pearl in 1980</li>\n<li>first time: search approximately\n<ul>\n<li>if there is better value, search again</li>\n<li>first search can provide useful information in the second search</li>\n</ul>\n</li>\n<li>TEST whether Tb can return score &gt; v <img data-src=\"/img/tcg/test-algo.webp\" alt=\"\" />\n<ul>\n<li>if p is max node → success with only one subbranch &gt; v</li>\n<li>if p is min node → success with all subbranches &gt; v</li>\n<li>If success, then search Tb. else, <strong>no need to search Tb</strong></li>\n</ul>\n</li>\n<li>algorithm <img data-src=\"/img/tcg/scout-algo.webp\" alt=\"\" />\n<ul>\n<li>scout first branch and test other branch\n<ul>\n<li>if test success, update the value by scout this branch</li>\n</ul>\n</li>\n<li>recursive procedure\n<ul>\n<li>Every ancestor of you may initiate a TEST to visit you\n<ul>\n<li>will be visited at most d times(= depth)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Time Complexity</p>\n<ul>\n<li><strong>not guarantee</strong>(but most of the time) that the visited nodes number are less than alpha-beta\n<ul>\n<li>may search a branch two times</li>\n<li>may pay many visits to a node that is cut off by alpha-beta</li>\n</ul>\n</li>\n<li>TEST: Ω(b^(d/2))\n<ul>\n<li>but has small argument and will be very small at the best situation <img data-src=\"/img/tcg/nodes-visited.webp\" alt=\"node visited\" />\n<ul>\n<li>if the first subbranch has the best value, then TEST scans the tree fast</li>\n<li>move ordering is very important</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Comparison\n<ul>\n<li>alpha-beta\n<ul>\n<li>cut off comes from bounds of search windows(by ancestors)</li>\n</ul>\n</li>\n<li>scout\n<ul>\n<li>cut off from previous branches' score(by brothers)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Performance</p>\n<ul>\n<li>SCOUT favors &quot;skinny&quot; game trees\n<ul>\n<li>Show great improvements on depth &gt; 3 for games with <strong>small branching factors</strong></li>\n<li>On depth = 5, it saves over 40% of time</li>\n</ul>\n</li>\n<li>AB + scout gets average 10~20% improvement than only AB</li>\n</ul>\n<p>Null(Zero) window search</p>\n<ul>\n<li>Using alpha-beta search with the window [m,m + 1]\n<ul>\n<li>result will be failed-high or failed-low</li>\n</ul>\n</li>\n<li>Failed-high means return value &gt; m + 1\n<ul>\n<li>Equivalent to TEST(p; m;&gt;) is true</li>\n</ul>\n</li>\n<li>Failed-low means return value &lt; m\n<ul>\n<li>Equivalent to TEST(p; m;&gt;) is false</li>\n</ul>\n</li>\n<li>Using searching window is better than using a single bound in SCOUT</li>\n</ul>\n<p><img data-src=\"/img/tcg/nega-scout.webp\" alt=\"\" /></p>\n<ul>\n<li>depth &lt; 3 → no alpha-beta pruning → return value is exact value(no need to search again)</li>\n<li>first-time search → do null window search(scout)</li>\n<li>research → do normal window a-b pruning</li>\n</ul>\n<p>Refinements</p>\n<ul>\n<li>Use information from previous search\n<ul>\n<li>When a subtree is re-searched, restart from the position that the value is returned in first search</li>\n</ul>\n</li>\n<li>Change move ordering\n<ul>\n<li>Reorder the moves by priority list</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Proof-Number-Search\">Proof Number Search</h3>\n<p><img data-src=\"https://chessprogramming.wikispaces.com/Proof-number+search#Pseudo%20Code\" alt=\"參考資料: chessprogramming: proof-number search\" /></p>\n<p>binary valued game tree</p>\n<ul>\n<li>\n<p>2-player game tree with either 0 or 1 on the leaves</p>\n<ul>\n<li>and-or tree: min → and, max → or</li>\n</ul>\n</li>\n<li>\n<p>most proving node for node u</p>\n<ul>\n<li>node that if its value is 1, then the value of u is 1</li>\n</ul>\n</li>\n<li>\n<p>most disproving node for node u</p>\n<ul>\n<li>node that if its value is 0, then the value of u is 0</li>\n</ul>\n</li>\n<li>\n<p>proof(u): minimum number of nodes to visit to make u = 1</p>\n</li>\n<li>\n<p>disproof(u): minimum number of nodes to visit to make u = 0</p>\n</li>\n</ul>\n<p>If value(u) is unknown, then proof(u) is the cost of evaluating u</p>\n<ul>\n<li>If value(u) is 1, then proof(u) = 0</li>\n<li>If value(u) is 0, then proof(u) = ∞</li>\n<li>proof number can be calculate by search childrens <img data-src=\"/img/tcg/proof-number.webp\" alt=\"\" />\n<ul>\n<li>disproof number → reverse calculate method of proof number</li>\n</ul>\n</li>\n</ul>\n<p>Usage</p>\n<ul>\n<li>find child u that have min{proof(root); disproof(root)}</li>\n<li>if we try to <strong>prove</strong> it\n<ul>\n<li>pick a child with the <strong>least proof number</strong> for a <strong>MAX node</strong></li>\n<li>pick <strong>any node that has a chance to be proved</strong> for a <strong>MIN node</strong></li>\n</ul>\n</li>\n<li>if we try to <strong>disprove</strong> it\n<ul>\n<li>pick a child with the <strong>least disproof number</strong> for a <strong>MIN node</strong></li>\n<li>pick <strong>any node that has a chance to be disproved</strong> for a <strong>MAX node</strong></li>\n</ul>\n</li>\n<li>used in open game tree or an endgame tree because some proof or disproof number is known\n<ul>\n<li>1 → proved to win, 0 → proved to lose</li>\n<li>or used to achieve sub-goal in games</li>\n</ul>\n</li>\n</ul>\n<!-- why smallest number because proof need all 1? -->\n<p>Proof-Number search algorithm <img data-src=\"/img/tcg/pn-algo.webp\" alt=\"\" /></p>\n<ol>\n<li>keep update number by bottom-up\n<ol>\n<li>compare proof number and disproof number of root</li>\n</ol>\n</li>\n<li>find the leaf to prove or disprove</li>\n</ol>\n<p>Multi-value game tree</p>\n<ul>\n<li>value in [0, 1]</li>\n<li>$proof_v(u)$: the minimum number of leaves needed to visited to make u &gt;= v\n<ul>\n<li>proof(u) = $proof_1(u)$</li>\n</ul>\n</li>\n<li>$disproof_v(u)$: the minimum number of leaves needed to visited to make u &lt; v\n<ul>\n<li>disproof(u) = $disproof_1(u)$</li>\n</ul>\n</li>\n<li>use binary search to set upper bound of the value <img data-src=\"/img/tcg/multivalue-pn-algo.webp\" alt=\"\" /></li>\n</ul>\n<h2 id=\"Chap08-Monte-Carlo-Game-Tree-Search\">Chap08 Monte-Carlo Game Tree Search</h2>\n<h3 id=\"original-ideas\">original ideas</h3>\n<p>Algorithm $MCS_{pure}$ <img data-src=\"img/tcg/random-games.webp\" alt=\"\" /></p>\n<ul>\n<li>\n<p>For each possible next move</p>\n<ul>\n<li>play this move and then play a lot of random games(play every moves as random)</li>\n<li>calculate average score</li>\n</ul>\n</li>\n<li>\n<p>Choose move with best score</p>\n</li>\n<li>\n<p>Original version: GOBBLE in 1993</p>\n<ul>\n<li>Performance is not good compared to other Go programs(alpha-beta)</li>\n</ul>\n</li>\n<li>\n<p>Enhanced versions</p>\n<ul>\n<li>Adding the idea of minimax tree search</li>\n<li>Adding more domain knowledge</li>\n<li>Adding more searching techniques</li>\n<li>Building theoretical foundations from statistics, and on-line and off-line learning</li>\n<li>results\n<ul>\n<li>MoGo\n<ul>\n<li>Beat a professional human 8 dan(段) with a 8-stone handicap at January 2008</li>\n<li>Judged to be in a &quot;professional level&quot; for 9 x 9 Go in 2009</li>\n</ul>\n</li>\n<li>Zen\n<ul>\n<li>close to amateur 3-dan in 2011</li>\n<li>Beat a 9-dan professional master with handicaps at March 17, 2012\n<ul>\n<li>First game: Five stone handicap and won by 11 points</li>\n<li>Second game: four stones handicap and won by 20 points</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Disadvantage</p>\n<ul>\n<li>average score search != minimax tree search\n<ul>\n<li>$MCS_{pure}$ prefer right branch, but it's min value is low <img data-src=\"/img/tcg/minmax-and-avergae.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"First-Refinement-Monte-Carlo-based-tree-search\">First Refinement: Monte-Carlo based tree search</h3>\n<p>Intuition</p>\n<ul>\n<li>Best First tree growing\n<ul>\n<li>Expand one level of best leaf(which has largest score) <img data-src=\"/img/tcg/mct-ex2.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>if number of simulations is not enough, it can't be a good simulation\n<ul>\n<li>on a MIN node, if not enough children are probed for enough number of times, you may miss a very bad branch</li>\n<li>take <strong>simulation count</strong> into consideration</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/tcg/MCT.webp\" alt=\"\" /><br />\n<img data-src=\"/img/tcg/mct-ex1.webp\" alt=\"\" /></p>\n<h3 id=\"Second-Refinement-UCT\">Second Refinement: UCT</h3>\n<ul>\n<li>\n<p>Effcient sampling</p>\n<ul>\n<li>Original: equally distributed among all legal moves</li>\n<li>Biased sampling: sample some moves more often than others</li>\n</ul>\n</li>\n<li>\n<p>Observations</p>\n<ul>\n<li>Some moves are bad and do not need further exploring\n<ul>\n<li>Need to consider extremely bad luck sitiation\n<ul>\n<li>e.g. often &quot;randomly&quot; choose bad move and get bad score</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTXVsdGktYXJtZWRfYmFuZGl0\">K-arm bandit problem<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>Assume you have K slot machines each with a different payoff, i.e., expected value of returns ui, and an unknown distribution</li>\n<li>Assume you can bet on the machines N times, what is the best strategy to get the largest returns?</li>\n</ul>\n</li>\n<li>\n<p>Ideas</p>\n<ul>\n<li>Try each machine a few, but enough, times and record their returns\n<ul>\n<li>For the machines that currently have the best returns, play more often later</li>\n<li>For the machines that currently return poorly, give them a chance sometimes to check their distributions are really bad or not</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>UCB: Upper Confidence Bound <img data-src=\"img/tcg/UCB.webp\" alt=\"\" /></p>\n<ul>\n<li>Meaning\n<ul>\n<li>For a MAX node, Wi is the number of win's for the MAX player</li>\n<li><strong>For a MIN node, Wi is the number of win's for the MIN player</strong></li>\n<li>When N is approaching logN, then UCB is nothing but the current winning rate plus a constant</li>\n<li>When N getting larger, UCB will approachthe real winning rate</li>\n</ul>\n</li>\n<li>Expand for the move with the highest UCB value</li>\n<li><strong>only compare UCB scores among children of a node</strong>\n<ul>\n<li>It is meaningless to compare scores of nodes that are not siblings</li>\n</ul>\n</li>\n<li>Using argument c to keep a balance between\n<ul>\n<li>Exploitation: exploring the best move so far</li>\n<li>Exploration: exploring other moves to see if they can be proved to be better <img data-src=\"/img/tcg/ucb-ex1.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>alternative\n<ul>\n<li>consider the variance of scores in each branch <img data-src=\"/img/tcg/UCB2.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>UCT: Upper Confidence Bound for Tree</p>\n<ul>\n<li>Maintain the UCB value for each node in the game tree\n<ul>\n<li>Pick path such that each node in this path has a largest UCB score among all of its siblings</li>\n<li>Pick the leaf node in the path which has been visited more than a certain amount of times to expand</li>\n</ul>\n</li>\n</ul>\n<p>Usable when the &quot;density of goals&quot; is suffciently large</p>\n<ul>\n<li>When there is only a unique goal, Monte-Carlo based simulation may not be useful</li>\n</ul>\n<p>new MCT algorithm(with UCT) <img data-src=\"/img/tcg/mct-uct.webp\" alt=\"\" /></p>\n<h4 id=\"Implementation-hints\">Implementation hints</h4>\n<p><img data-src=\"/img/tcg/uct-imp.webp\" alt=\"\" /><br />\n<img data-src=\"/img/tcg/uct-imp2.webp\" alt=\"\" /><br />\n<img data-src=\"/img/tcg/uct-imp3.webp\" alt=\"\" /></p>\n<h3 id=\"When-to-use-Monte-Carlo\">When to use Monte-Carlo</h3>\n<ul>\n<li>huge branching number</li>\n<li>cannot easily compute good evaluating function</li>\n<li>Mostly used in Go, Bridge(?)</li>\n</ul>\n<p>Rule of Go(圍棋)</p>\n<ul>\n<li>Ko(打劫): 不能有重複盤面</li>\n<li>可以跳過，不能下自殺步</li>\n<li>Komi: 先手讓子</li>\n</ul>\n<p>Implementation</p>\n<ul>\n<li>partition stones into strings(使用共同氣的子) by DFS</li>\n<li>check empty intersection is an eye or not(check neighbors and limits)</li>\n</ul>\n<h3 id=\"Domain-independent-refinements\">Domain independent refinements</h3>\n<p>Main considerations</p>\n<ul>\n<li>Avoid doing un-needed computations</li>\n<li>Increase the speed of convergence</li>\n<li>Avoid early mis-judgement</li>\n<li>Avoid extreme bad cases</li>\n</ul>\n<p>Refinements</p>\n<ul>\n<li>Progressive pruning\n<ul>\n<li>Cut hopeless nodes early</li>\n</ul>\n</li>\n<li>All moves at first(AMAF)\n<ul>\n<li>Increase the speed of convergence</li>\n</ul>\n</li>\n<li>Node expansion\n<ul>\n<li>Grow only nodes with a potential</li>\n</ul>\n</li>\n<li>Temperature\n<ul>\n<li>Introduce randomness</li>\n</ul>\n</li>\n<li>Depth-i enhancement\n<ul>\n<li>With regard to Line 1, the initial phase, exhaustively enumerate all possibilities</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Progressive-pruning\">Progressive pruning</h4>\n<p>Each move has a mean value m and a standard deviation σ</p>\n<ul>\n<li>\n<p>Left expected outcome ml = m - rd * σ</p>\n</li>\n<li>\n<p>Right expected outcome mr = m + rd * σ</p>\n<ul>\n<li>rd is argument</li>\n</ul>\n</li>\n<li>\n<p>A move M1 is <strong>statistically inferior</strong> to another move M2 if M1.mr &lt; M2.ml</p>\n</li>\n<li>\n<p>Two moves M1 and M2 are <strong>statistically equal</strong> if M1.σ &lt; σe and M2.σ &lt; σe and no move is statistically inferior to the other</p>\n<ul>\n<li>σe is argument which called standard deviation for equality</li>\n</ul>\n</li>\n</ul>\n<p>Remarks</p>\n<ul>\n<li>only compare nodes that are of the same parent</li>\n<li>compare their raw scores not their UCB values\n<ul>\n<li>If you use UCB scores, then the mean and standard deviation of a move are those calculated only from its un-pruned children</li>\n</ul>\n</li>\n<li>prune statistically inferior moves after enough number of times of simulation</li>\n</ul>\n<p>This process is stopped when</p>\n<ul>\n<li>there is only one move left</li>\n<li>the moves left are statistically equal</li>\n<li>a maximal threshold(like 10000 multiplied by the number of legal moves) of iterations is reached</li>\n</ul>\n<p>Two different pruning rules</p>\n<ul>\n<li>Hard: a pruned move cannot be a candidate later on</li>\n<li>Soft: a move pruned at a given time <strong>can be a candidate later on</strong> if its value is no longer statistically inferior to a currently active move\n<ul>\n<li>Periodically check whether to reactive it</li>\n</ul>\n</li>\n</ul>\n<p>Arguments</p>\n<ul>\n<li>\n<p>Selection of rd <img data-src=\"/img/tcg/uct-result2.webp\" alt=\"\" /></p>\n<ul>\n<li>The greater rd is</li>\n<li>the less pruned the moves are</li>\n<li>the better the algorithm performs</li>\n<li>the slower at each play</li>\n</ul>\n</li>\n<li>\n<p>Selection of σe <img data-src=\"/img/tcg/uct-result1.webp\" alt=\"\" /></p>\n<ul>\n<li>The smaller σe is</li>\n<li>the fewer equalities there are</li>\n<li>the better the algorithm performs</li>\n<li>the slower at each play</li>\n</ul>\n</li>\n<li>\n<p>rd plays an important role in the move pruning process</p>\n</li>\n<li>\n<p>σe is less sensitive</p>\n</li>\n<li>\n<p>Another trick is progressive widening or progressive un-pruning</p>\n<ul>\n<li>A node is effective if enough simulations are done on it and its values are good</li>\n</ul>\n</li>\n<li>\n<p>We can set threshold on whether to expand the best path, for exmaple</p>\n<ul>\n<li>enough simulations are done</li>\n<li>score is good enough</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"All-moves-at-first-AMAF\">All moves at first(AMAF)</h4>\n<ul>\n<li>score is used for <strong>all moves the same player played in a random game</strong>\n<ul>\n<li>in this example, after simulate r→v→y→u→w, w which  has parent v and u which has parent r will be updated, too <img data-src=\"/img/tcg/amaf.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Advantage\n<ul>\n<li>speeding up the experiments</li>\n</ul>\n</li>\n<li>Drawback\n<ul>\n<li>not the same move - move in early game is not equal to late game</li>\n<li>Recapturing\n<ul>\n<li>Order of moves is important for certain games(圍棋)</li>\n<li>Modification: if several moves are played at the same place because of captures, modify the statistics only for the player who played first</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Refinement: RAVE</p>\n<ul>\n<li>Let v1(m) be the score of a move m without using AMAF</li>\n<li>Let v2(m) be the score of a move m with AMAF</li>\n<li>Observations\n<ul>\n<li>v1(m) is good when suffcient number of simulations are starting with m</li>\n<li>v2(m) is a <strong>good guess for the true score</strong> of the move m\n<ul>\n<li>when <strong>approaching the end of a game</strong></li>\n<li>when <strong>too few simulations starting with m</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Rapid Action Value Estimate (RAVE)</p>\n<ul>\n<li>revised score $v3(m) = a \\times v1(m) + (1-a) \\times v2(m)$</li>\n<li>can dynamically change a as the game goes\n<ul>\n<li>For example: a = min{1, Nm/10000}, where Nm is simulation times start from m\n<ul>\n<li>This means when Nm reaches 10000, then no RAVE is used</li>\n</ul>\n</li>\n<li>Works out better than setting a = 0(i.e. pure AMAF)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Node-expansion\">Node expansion</h4>\n<ul>\n<li>May decide to expand potentially good nodes judging from the<br />\ncurrent statistics</li>\n<li>All ends: expand all possible children of a newly added node</li>\n<li>Visit count: delay the expansion of a node until it is visited a certain number of times</li>\n<li>Transition probability: delay the expansion of a node until its \\score&quot; or estimated visit count is high comparing to its siblings</li>\n<li>Use the current value, variance and parent's value to derive a good estimation using statistical methods<br />\nExpansion policy with some transition probability is much better than the \\all ends&quot; or \\pure visit count&quot; policy</li>\n</ul>\n<!-- ##Chap09 Other way to increase performance -->\n<h2 id=\"Reference\">Reference</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5paXMuc2luaWNhLmVkdS50dy9+dHNoc3UvdGNnLw==\">TSHsu講義 2014年版<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["筆記"],"tags":["電腦對局理論","機器學習","人工智慧","圍棋","象棋","蒙地卡羅","Alpha-Beta搜尋","強化學習"]},{"title":"C++ boost 簡單應用","url":"/cpp-boost/","content":"<!-- RENEW: -->\n<h2 id=\"簡介\">簡介</h2>\n<p>C++的著名擴充函式庫</p>\n<p>功能(節錄)：</p>\n<ul>\n<li>regex</li>\n<li>function binding</li>\n<li>lambda functions</li>\n<li>unit tests</li>\n<li>smart pointers</li>\n<li>noncopyable, optional</li>\n<li>serialization</li>\n<li>generic dates</li>\n<li>portable filesystem</li>\n<li>circular buffers</li>\n<li>config utils</li>\n<li>generic image library</li>\n<li>program options</li>\n<li>threads</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ib29zdC5vcmcvZG9jL2xpYnMvMV81OF8wL2xpYnMvbGlicmFyaWVzLmh0bQ==\">所有功能<i class=\"fa fa-external-link-alt\"></i></span></p>\n<span id=\"more\"></span>\n<p>安裝：<code>sudo apt-get install libboost-all-dev</code></p>\n<h2 id=\"基本功能\">基本功能</h2>\n<p>簡化語法</p>\n<h3 id=\"foreach\">foreach</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;boost/foreach.hpp&gt;</span></span></span><br><span class=\"line\">  <span class=\"function\">std::string <span class=\"title\">hello</span><span class=\"params\">( <span class=\"string\">&quot;Hello, world!&quot;</span> )</span></span>;</span><br><span class=\"line\">  <span class=\"built_in\">BOOST_FOREACH</span>( <span class=\"type\">char</span> ch, hello )&#123; <span class=\"comment\">// equals to for (auto c : hello) in c03                          </span></span><br><span class=\"line\">    std::cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//convient way to use</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> foreach BOOST_FOREACH</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5hcnRpbWEuY29tL2NwcHNvdXJjZS9mb3JlYWNoLmh0bWw=\">實作方法<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"lexical-cast\">lexical_cast</h3>\n<p>可以轉換成其他格式</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;boost/lexical_cast.hpp&gt;</span></span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"type\">double</span> j = <span class=\"number\">233.211321231</span>;                              </span><br><span class=\"line\">string mystring = boost::<span class=\"built_in\">lexical_cast</span>&lt;string&gt;(j);</span><br><span class=\"line\"><span class=\"type\">double</span> k = boost::<span class=\"built_in\">lexical_cast</span>&lt;<span class=\"type\">double</span>&gt;(mystring);<span class=\"comment\">//k = 233.211</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"split\">split</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;boost/algorithm/string.hpp&gt;</span></span></span><br><span class=\"line\">...</span><br><span class=\"line\">string stringtobesplit = <span class=\"string\">&quot;AA/BB-CC&quot;</span>;</span><br><span class=\"line\">vector&lt;string&gt; tokens;</span><br><span class=\"line\">boost::<span class=\"built_in\">split</span>(tokens, stringtobesplit, boost::<span class=\"built_in\">is_any_of</span>(<span class=\"string\">&quot;/\\-&quot;</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"Smart-Pointers\">Smart Pointers</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81Njk3NzUvc21hcnQtcG9pbnRlcnMtYm9vc3QtZXhwbGFpbmVk\">Basic properties of smart pointers<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>no ownership at all\n<ul>\n<li>smart pointer cannot delete the object, because it doesn't own it</li>\n</ul>\n</li>\n<li>transfer of ownership\n<ul>\n<li>only one smart pointer can ever point to the same object at the same time</li>\n<li>If the smart pointer is to be returned from functions, the ownership is transferred to the returned smart pointer</li>\n<li>Transfer of ownership cannot really be implemented in C++ currently, because object will be copied after return\n<ul>\n<li>only can use the copy constructor to implement that transfer of ownership</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>share of ownership\n<ul>\n<li>multiple smart pointers can point to the same object at the same time</li>\n<li>can be implemented by having a copy constructor</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Categorizing-smart-pointers\">Categorizing smart pointers</h4>\n<ul>\n<li><code>scoped_ptr</code>\n<ul>\n<li>neither transferable nor sharable (= normal pointer)</li>\n<li>when it goes out of scope, it is destroyed</li>\n</ul>\n</li>\n<li><code>shared_ptr</code>\n<ul>\n<li>shares ownership</li>\n<li>reference counted so it can see when the last copy of it goes out of scope and then it frees the object automatically</li>\n<li>所有使用同一筆資料的指標都不再使用後自動釋放</li>\n</ul>\n</li>\n<li><code>weak_ptr</code>\n<ul>\n<li>non-owning smart pointer</li>\n<li>reference a managed object (managed by a shared_ptr) so it will not add a reference count\n<ul>\n<li>If you need to access the object, you can lock the management of it (to avoid that in another thread a shared_ptr frees it while you use the object)</li>\n</ul>\n</li>\n<li>If <code>weak_ptr</code> points to an object already deleted, it will notice you by throwing an exception</li>\n<li>It is most beneficial when you have a cyclic reference: Reference counting cannot easily cope with such a situation</li>\n</ul>\n</li>\n<li><code>intrusive_ptr</code>\n<ul>\n<li>like a shared_ptr\n<ul>\n<li>does not keep the reference count in a shared_ptr</li>\n<li>but call helper functions to increse/decrese the count\n<ul>\n<li>helper function need to be defined by the object that is managed</li>\n<li>reference count is not anymore internal to the smart pointer, but the smart pointer uses an existing reference counting mechanism</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>typically used when there is a 3rd party smart ptr you must use</li>\n</ul>\n</li>\n<li><code>unique_ptr</code>\n<ul>\n<li>transfer of ownership pointer</li>\n<li>cannot copy it, but can move it by using C++1x's <code>move</code> constructors</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\">std::vector&lt; scoped_ptr&lt;T&gt; &gt; tPtrVec;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">     <span class=\"function\">scoped_ptr&lt;T&gt; <span class=\"title\">tPtr</span><span class=\"params\">(<span class=\"keyword\">new</span> T())</span></span>;</span><br><span class=\"line\">     tPtrVec.<span class=\"built_in\">push_back</span>(tPtr);</span><br><span class=\"line\">     <span class=\"comment\">// raw T* is freed</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">tPtrVec[<span class=\"number\">0</span>]-&gt;<span class=\"built_in\">DoSomething</span>(); <span class=\"comment\">// accessing freed memory</span></span><br><span class=\"line\"><span class=\"comment\">//--------------------------------------</span></span><br><span class=\"line\">std::vector&lt; shared_ptr&lt;T&gt; &gt; tPtrVec;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">     <span class=\"function\">shared_ptr&lt;T&gt; <span class=\"title\">tPtr</span><span class=\"params\">(<span class=\"keyword\">new</span> T())</span></span>;</span><br><span class=\"line\">     <span class=\"comment\">// This copy to tPtrVec.push_back and ultimately to the vector storage</span></span><br><span class=\"line\">     <span class=\"comment\">// causes the reference count to go from 1-&gt;2</span></span><br><span class=\"line\">     tPtrVec.<span class=\"built_in\">push_back</span>(tPtr);</span><br><span class=\"line\">     <span class=\"comment\">// num references to T goes from 2-&gt;1 on the destruction of tPtr</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">tPtrVec[<span class=\"number\">0</span>]-&gt;<span class=\"built_in\">DoSomething</span>(); <span class=\"comment\">// raw T* still exists, so this is safe</span></span><br><span class=\"line\"><span class=\"comment\">//--------------------------------------</span></span><br><span class=\"line\">std::vector&lt; weak_ptr&lt;T&gt; &gt; tPtrVec;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">     <span class=\"function\">shared_ptr&lt;T&gt; <span class=\"title\">tPtr</span><span class=\"params\">(<span class=\"keyword\">new</span> T())</span></span>;</span><br><span class=\"line\">     tPtrVec.<span class=\"built_in\">push_back</span>(tPtr);</span><br><span class=\"line\">     <span class=\"comment\">// num references to T goes from 1-&gt;0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">shared_ptr&lt;T&gt; tPtrAccessed =  tPtrVec[<span class=\"number\">0</span>].<span class=\"built_in\">lock</span>();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (tPtrAccessed[<span class=\"number\">0</span>].<span class=\"built_in\">get</span>() == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">     cout &lt;&lt; <span class=\"string\">&quot;Raw T* was freed, can&#x27;t access it&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">     tPtrVec[<span class=\"number\">0</span>]-&gt;<span class=\"built_in\">DoSomething</span>(); <span class=\"comment\">// raw </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//--------------------------------------</span></span><br><span class=\"line\"><span class=\"function\">unique_ptr&lt;type&gt; <span class=\"title\">p</span><span class=\"params\">(<span class=\"keyword\">new</span> type)</span></span>;</span><br><span class=\"line\"><span class=\"function\">unique_ptr&lt;type&gt; <span class=\"title\">q</span><span class=\"params\">(p)</span></span>; <span class=\"comment\">// not legal!</span></span><br><span class=\"line\"><span class=\"function\">unique_ptr&lt;type&gt; <span class=\"title\">r</span><span class=\"params\">(move(p))</span></span>; <span class=\"comment\">// legal. p is now empty and r owns the object</span></span><br><span class=\"line\"><span class=\"function\">unique_ptr&lt;type&gt; <span class=\"title\">s</span><span class=\"params\">(function_returning_a_unique_ptr())</span></span>; <span class=\"comment\">// legal!</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvam51X3NpbWJhL2FydGljbGUvZGV0YWlscy85NTY5NTkz\">Chinese Explaination<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;boost/shared_ptr.hpp&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">safeclose</span><span class=\"params\">(FILE*fp)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(fp) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">fclose</span>(fp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">some_fn</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">boost::shared_ptr&lt;FILE&gt; <span class=\"title\">fp</span><span class=\"params\">( fopen(myfilename, <span class=\"string\">&quot;a+t&quot;</span>), safeclose )</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//body of the function, and when ever it exits the file gets closed</span></span><br><span class=\"line\">    <span class=\"built_in\">fprintf</span>( fp.<span class=\"built_in\">get</span>(), <span class=\"string\">&quot;a message\\n&quot;</span> );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Reference\">Reference</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMjU1ODAvd2hhdC1hcmUtdGhlLWFkdmFudGFnZXMtb2YtdXNpbmctdGhlLWMtYm9vc3QtbGlicmFyaWVz\">Advantage of using boost libraries<i class=\"fa fa-external-link-alt\"></i></span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zMjU5MDYvbW9zdC11c2VkLXBhcnRzLW9mLWJvb3N0\">Most used parts of boost<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["記錄"],"tags":["C++","boost","函式庫"]},{"title":"計算機網路(下)","url":"/computer-network2/","content":"<!-- RENEW: -->\n<h2 id=\"Chap04-Network-Layer\">Chap04 Network Layer</h2>\n<p>transport layer: between two processes<br />\nnetwork layer: between two hosts and router (may also involve intervening routers in case of VCs)</p>\n<span id=\"more\"></span>\n<ul>\n<li>routing protocols\n<ul>\n<li>path selection</li>\n<li>RIP, OSPF, BGP</li>\n</ul>\n</li>\n<li>IP protocol\n<ul>\n<li>addressing conventions</li>\n<li>datagram format</li>\n<li>packet handling conventions</li>\n</ul>\n</li>\n<li>ICMP protocol\n<ul>\n<li>error reporting</li>\n<li>router</li>\n<li>signaling</li>\n</ul>\n</li>\n</ul>\n<p>routing: 決定packet傳送的路徑<br />\nforwarding: 實際傳送<br />\nrouter has forwarding table</p>\n<p>Different from TCP/UDP(transport layer protocol)</p>\n<ol>\n<li>service:host-to-host</li>\n<li>no choice:network provides one or the other</li>\n<li>implemented in network core</li>\n</ol>\n<h3 id=\"network-layer-service\">network layer service</h3>\n<p>datagram network: network-layer connectionless service<br />\nvirtual-circuit network: network-layer connection service</p>\n<ol>\n<li>Virtual-Circuit Networks<br />\n3. 包含<br />\n- 路徑<br />\n- VC number<br />\n- 路徑上所有router的forwarding table index<br />\n6. performance-wise<br />\n7. 三個階段:<br />\n1. VC建立:傳送端的傳輸層會聯繫網路層，指定接收端的位址，並等待網路建立 VC。網路層會決定傳送端到接收端之間的路徑，也會為路徑上所有的連結決定其VC編號，在路徑每一台router的轉送表中都加入一筆項目。<br />\n2. 資料傳輸<br />\n3. VC斷線</li>\n<li>Datagram Networks(資料封包網路)\n<ul>\n<li>using destination address(IP)</li>\n<li>longest prefix matching: goto longest address prefix that matches destination address\n<ul>\n<li>110010000001011100010************ -&gt; send to 1</li>\n<li>1100100000010111000100001******** -&gt; send to 2</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>比較\n<ul>\n<li>Internet (datagram)\n<ul>\n<li>no setup, routers do not remember state</li>\n<li>“elastic” service, no strict timing request</li>\n<li>many link types: uniform service difficult</li>\n<li>“smart” end systems (computers)\n<ul>\n<li>can adapt, perform control, error recovery</li>\n<li>simple inside network, complexity at “edge”</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ATM (VC)\n<ul>\n<li>human conversation: strict timing, reliability requirements</li>\n<li>need for guaranteed service</li>\n<li>“dumb” end systems\n<ul>\n<li>telephones</li>\n<li>complexity inside network</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Router-architecture\">Router architecture</h3>\n<p>Usage</p>\n<ol>\n<li>routing protocol (RIP, OSPF, BGP)(software)</li>\n<li>forwarding datagrams(hardware)</li>\n</ol>\n<p>Structure</p>\n<ol>\n<li>Input Ports\n<ul>\n<li>physical layer(bit level)</li>\n<li>datalink layer(Ethernet)(receive)</li>\n<li>decentralized switching</li>\n</ul>\n</li>\n<li>Switching Fabric\n<ul>\n<li>transfer packet from input buffer to appropriate output buffer</li>\n<li>router內部的網路</li>\n<li>實作\n<ol>\n<li>memory(慢):查詢轉送表，找出適當的輸出埠，然後將該封包複製到該輸出埠的緩衝區</li>\n<li>bus:同一時間內只能傳輸一個封包</li>\n<li>crossbar(棋盤式):2N bus，將n格輸入埠連接到n個輸出埠</li>\n<li><img data-src=\"\" alt=\"crossbar\" /></li>\n</ol>\n</li>\n</ul>\n</li>\n<li>Output Ports: input port反過來</li>\n<li>Queue Management:<br />\n佇列前端攔阻(Head-of-the-line (HOL) blocking):</li>\n</ol>\n<p>Total overhead = 20 bytes of TCP + 20 bytes of IP + app layer overhead</p>\n<h3 id=\"IP-Internet-Protocol\">IP: Internet Protocol</h3>\n<h4 id=\"IPV4\">IPV4</h4>\n<ol>\n<li>標頭\n<ul>\n<li>標頭長度(HEADER LENGTH)</li>\n<li>協定(protocol):只有當ip資料段達到最後目的端時，才會使用這個欄位，值為TCP或UDP。</li>\n<li>標頭檢查(Header checksum)</li>\n<li>TTL(Time-to-live):確保資料封包不會在網路中無窮循環，每經過一個router，TTL的值就會遞減1</li>\n</ul>\n</li>\n<li>Datagram Fragmentation\n<ul>\n<li>MTU(maximum transfer size): 控制IP的封包長度\n<ul>\n<li>Ex. 4000 byte datagram, MTU = 1500 bytes, real data = 1480bytes -&gt; 1480 + 1480 + 11xx</li>\n</ul>\n</li>\n<li>be “reassembled” only at final destination</li>\n</ul>\n</li>\n<li>IPv4 Addressing\n<ul>\n<li>address為host/router和physical layer的連接</li>\n<li>Subnet: 高位元相同的ip集合，不用router就可以連接\n<ul>\n<li><img data-src=\"\" alt=\"subnets\" /></li>\n</ul>\n</li>\n<li>CIDR(Classless InterDomain Routing)\n<ul>\n<li>Ex. 11001000 ,00010111 ,0001000 | 0, 00000000</li>\n<li>200.23.16.0/23(23 is number of subnet bits)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Get IP address\n<ul>\n<li>ISP向ICANN(Internet Corporation for Assigned Names and Numbers)申請IP address, 記錄domain name至DNS上</li>\n<li>hard-coded by system admin in a file\n<ul>\n<li>Windows: control-panel-&gt;network-&gt;configuration-&gt;tcp/ip-&gt;properties</li>\n<li>UNIX: /etc/rc.config</li>\n</ul>\n</li>\n<li>DHCP(Dynamic Host Configuration Protocol)\n<ul>\n<li>IP address的分配</li>\n<li>get address while connected on\n<ul>\n<li>sent to DHCP: 255.255.255.255, 67</li>\n<li>listen from DHCP: 255.255.255.255, 68</li>\n</ul>\n</li>\n<li>四階段\n<ul>\n<li>host broadcasts “DHCP discover” [optional]</li>\n<li>DHCP server responds with “DHCP offer” [optional]</li>\n<li>host requests IP address: “DHCP request”</li>\n<li>DHCP server sends address: “DHCP ack”</li>\n</ul>\n</li>\n<li>DHCP server can also return useful information\n<ul>\n<li>address of first-hop router for client</li>\n<li>name and IP address of DNS sever</li>\n<li>network mask (indicating network versus host portion of address)</li>\n</ul>\n</li>\n<li>Real action\n<ul>\n<li>DHCP request encapsulated in UDP, encapsulated in IP, encapsulated in 802.1 Ethernet</li>\n<li>Ethernet frame broadcast (dest: FFFFFFFFFFFF) on LAN</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>NAT(Network Address Translation)(網路位址轉譯)\n<ul>\n<li>產生local network, 可自定義ip address, 再交由NAT轉譯成正確IP</li>\n<li>可避免攻擊，便於管理。</li>\n<li>http://www.cs.nccu.edu.tw/~lien/Writing/NGN/firewall.htm</li>\n<li>violates end-to-end argument</li>\n<li>NAT traversal problem: 在外面的user如何連到未知(不知道ip)的server\n<ol>\n<li>固定ip(失去保護作用)</li>\n<li>UPnP(通用型隨插即用）: 應用程式將獲得共用的Public IP地址及Port做點對點的傳輸。</li>\n<li>relaying (used in Skype)\n<ul>\n<li>以relay server 作為 bridge</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>NAT possibility must be taken into account by app designers, e.g., P2P applications</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li>ICMP: 回報錯誤</li>\n</ol>\n<h4 id=\"IPv6\">IPv6</h4>\n<ol>\n<li>簡介\n<ul>\n<li>因應大量的IP位址空間需求\n<ul>\n<li>IP位址長度從32位元增加到128位元</li>\n</ul>\n</li>\n<li>新的位址型態: 任意點位址(anycast adress)，它允許含有任意點位址的資料段，可以傳送到一群主機中的任一台主機</li>\n<li>固定長度的40個位元組標頭, 加快資料處理</li>\n<li>no fragmentation allowed</li>\n<li>資料流標記和優先權</li>\n</ul>\n</li>\n<li>IPv6 Datagram 格式\n<ul>\n<li>版本號碼(Version): ip的版本號碼</li>\n<li>轉送次數限制(Hop limit):每當路由器轉送資料段後，就會將資料段此欄位的內容遞減1。如果hop limit計數減到0時，就會捨棄這個資料段</li>\n<li>checksum: removed in IPV6 to reduce processing time</li>\n<li>ICMPv6:new version of ICMP</li>\n</ul>\n</li>\n<li>從 IPv4 到 IPv6\n<ol>\n<li>雙堆疊(dual-stack)法:其中的ipv6節點也實作了完整的ipv4，也就是這種結點能夠傳送和接收ipv6及ipv4兩種的資料段。<br />\nipv6/ipv4節點必須同時擁有ipv6和ipv4的位址，也需要能夠決定其它結點是否可以執行ipv6的功能。這個問題可以使用DNS解決，如果結點名稱解析為可使用IPV6功能，則它會傳回IPV6位址;否則它會傳回IPV4位址。\t在雙堆疊法中，如果傳送端或接收端其中一方只能使用IPV4功能，則必須使用IPV4資料段，有可能會發生兩個可以執行ipv6功能的節點不使用ipv6，而是彼此送出ipv4資料段。這會造成IPV6的資料欄位在轉換成IPV4的型式時發生欄位遺失，最後在傳送到目的地時，不會是原始的ipv6\t資料段的所有欄位。</li>\n<li>建立通道(tunneling): 中間有中介的ipv4路由器，稱為通道(tunnel)。通道傳送端的將整個ipv6資料(含標頭檔)放入ipv4，當作資料傳送。起點和終點均為ipv6 router</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"Routing-Algorithm\">Routing Algorithm</h3>\n<ol>\n<li>Link-State (LS)\n<ul>\n<li>global: all routers have complete topology, link cost info</li>\n<li>Dijkstra: 放入想算的點U至N，找!N距U最近，將其放入N，LOOP\n<ul>\n<li>!N: 若經過[最新放入的N值的點]走更近，更新值</li>\n<li>O(nlogn)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Distance-Vector (DV)\n<ul>\n<li><img data-src=\"\" alt=\"\" /></li>\n<li>decentralized: router only knows link costs to neighbors</li>\n<li>each node maintains distance vector</li>\n<li>When link cost changes: update, if DV change, notify neighbors\n<ul>\n<li>bad news travels slow</li>\n<li>Poisoned reverse\n<ul>\n<li>防止路由迴圈(Routing loop)出現</li>\n<li>If Z routes through Y to get to X(use time much over than expect) : Z tells Y its (Z’s) distance to X is infinite (so Y won’t route to X via Z)</li>\n<li>當Router A發現Network X的中斷後, 將其跳躍數Hop count變更為Maximum+1, 其他router收到更新時會立刻知道Network X為Inaccessible，加快網絡收斂的速度</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Bellman-Ford equation\n<ul>\n<li>dx(y) = argmin(v) {c(x,v) + dv(y)}</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>比較\n<ul>\n<li>speed of convergence\n<ul>\n<li>LS:O(n) algorithm requires O(nE) msgs\n<ul>\n<li>may have oscillations\n<ul>\n<li>若經過的封包愈多，花費愈高</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>DV:convergence time varies\n<ul>\n<li>may be routing loops</li>\n<li>count-to-infinity problem(??)</li>\n<li>惡意router散播假消息</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Hierachical Routing\n<ul>\n<li>aggregate routers into regions,“autonomous systems”(AS)</li>\n<li>AS(Autonomous System)：一群路由器在一位管理者之下, 使用IGPs去互相傳送封包的系統</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Routing-Protocols\">Routing Protocols</h3>\n<ul>\n<li>IGP(interior gateway protocols): use in same AS(“intra-AS”)\n<ul>\n<li>RIP(Routing Information Protocol): DV\n<ul>\n<li>Included in BSD-UNIX Distribution in 1982</li>\n<li>對自己的neighbor要求Routing Table，並計錄最短的。\n<ul>\n<li>use route-d (application level) to manage, sent in UDP packets</li>\n<li>用hop為路徑的選擇量度。最大為15 hops</li>\n<li>RIP每次更新預設為30sec</li>\n</ul>\n</li>\n<li>if no advertisement heard after 180 sec --&gt; assume neighbor/link declared dead -&gt; invalidate route from this neighbor</li>\n</ul>\n</li>\n<li>OSPF(Open Shortest Path First): LS\n<ul>\n<li>透過一套演算公式，所以它的路由效率會比較好些</li>\n<li>Shortest path first</li>\n<li>Dijkstra's algorithm</li>\n<li>features not in RIP\n<ul>\n<li>multiple same-cost paths</li>\n<li>security: all OSPF messages authenticated</li>\n</ul>\n</li>\n<li>Hierarchical OSPF(分層)\n<ul>\n<li>each nodes know full of local area, and shortest path to other areas</li>\n<li>saves table size, reduced update traffic</li>\n<li><img data-src=\"\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>BGP((Border Gateway Protocol)): between different AS(“inter-AS”)\n<ul>\n<li>information from neighbors(BGP會談(BGP session))</li>\n<li>使用port179的半永久性TCP連線來交換資訊</li>\n<li>iBGPs(Interior Gateway Protocols), eBGPs(Exterior Gateway protocols)</li>\n<li>Prefix + attributes = “route”\n<ul>\n<li>BGP attributes\n<ul>\n<li>AS-path：表示到達某一AS所必須經過的路由</li>\n<li>Next-hop ：specific internal-AS router to next AS</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>BGP Route Selection(按順序)\n<ol>\n<li>local preference(當本地AS中有多個路由可以到達某一AS，則路由選擇的優先權於與最近路由器相連接之AS開始。偏好原則)</li>\n<li>shortest AS-PATH(經過最少AS)</li>\n<li>closest NEXT-HOP router: hot potato routing(經過最少internal router)</li>\n<li>additional criteria(其他)</li>\n</ol>\n</li>\n<li>Routing Policy: do not want to provide informations not relevalent to its own customer</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"broadcast-and-multicast-routing\">broadcast and multicast routing</h3>\n<p>Source-duplication<br />\nin-network duplication: enefficient, do not know send to whom<br />\n2. flooding: 當節點接到一個廣播封包,他會複製該封包在傳送給相鄰節點<br />\n3. RPF(reversed path forwarding):<br />\n1.<br />\nif (datagram received on incoming link on shortest path back to center)<br />\nthen flood datagram onto all outgoing links<br />\nelse ignore datagram<br />\n3. Spanning Tree<br />\n方法：定義集結點。節點以單點傳播送至集結點,定義出樹的分支<br />\n4. IGMP (Internet Group Management Protocol): Soft State<br />\n運作於主機和其直接連結的router間<br />\n換句話說,我們可以將直接連結的router,當成到達區域網路外部任何其他主機的路徑上第一站轉送router或是到達該主機的任意路徑上最後一站轉送router<br />\n5. DVMRP(Distance-Vector Multicast Routing Protocol) vs. PIM(Protocol-Independent Multicast)</p>\n<h2 id=\"Reference\">Reference</h2>\n<p>宅學習(輔大)</p>\n","categories":["筆記"],"tags":["計算機網路"]},{"title":"計算機網路(上)","url":"/computer-network1/","content":"<!-- RENEW: -->\n<h2 id=\"Chap01-Introduction\">Chap01 Introduction</h2>\n<h3 id=\"Terminologies\">Terminologies</h3>\n<p>connected computing devices</p>\n<ul>\n<li>hosts: end systems\n<ul>\n<li>running network apps</li>\n<li>sends packets of data</li>\n<li>breaks message into smaller chunks, known as packets</li>\n</ul>\n</li>\n<li>bandwidth: transmission rate\n<ul>\n<li>link capacity(maximum rate)</li>\n<li>link bandwidth(available rate)</li>\n</ul>\n</li>\n<li>Packet switches: forward packets(chunks of data) by routers and switches</li>\n<li><strong>protocols</strong>: define format, order of messages sent and received and actions taken on message transmission and receive\n<ul>\n<li>TCP, IP, HTTP, Skype, 802.11</li>\n</ul>\n</li>\n<li>Internet standards\n<ul>\n<li>RFC: Request for comments</li>\n<li>IETF: Internet Engineering Task Force<br />\n<img data-src=\"/img/computer-network/UHFBvAO.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Internet\n<ul>\n<li><strong>network of networks</strong></li>\n<li><strong>Interconnected ISPs</strong></li>\n<li><strong>Infrastructure that provides services to applications</strong>\n<ul>\n<li>Web, VoIP, email, games...</li>\n</ul>\n</li>\n<li><strong>provides programming interface to apps</strong></li>\n</ul>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h3 id=\"Network-Structure\">Network Structure</h3>\n<ul>\n<li>network edge\n<ul>\n<li>hosts: clients and servers(often in data centers)</li>\n</ul>\n</li>\n<li>network core\n<ul>\n<li>interconnected routers, network of networks</li>\n</ul>\n</li>\n<li>access networks, physical media\n<ul>\n<li>wired, wireless communication links</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Access-Network\">Access Network</h3>\n<h4 id=\"digital-subscriber-line-DSL\">digital subscriber line (DSL)</h4>\n<p>DSL透過電話線的附加頻段在話音訊帶上傳送大量資料<br />\ntypically (&lt; 1 Mbps/&lt; 10 Mbps)<br />\n<img data-src=\"/img/computer-network/7kYoUyA.webp\" alt=\"\" /></p>\n<h4 id=\"cable-network\">cable network</h4>\n<p>unlike DSL, which has dedicated access to central offic<br />\n<img data-src=\"/img/computer-network/wonLAB8.webp\" alt=\"\" /><br />\nfrequency division multiplexing: different channels transmitted<br />\nin different frequency bands<br />\n將多路基頻訊號調製到不同頻率載波上再進行疊加形成一個複合訊號<br />\n<img data-src=\"/img/computer-network/H5z9oXy.webp\" alt=\"\" /><br />\nHFC: hybrid fiber coax(混合式光纖同軸電纜)<br />\n其主幹是光纖（Fiber）網路(fiber attaches homes to ISP router)，末端枝幹是雙向同軸電纜線（Coaxial Cable）<br />\n在主幹網路上，每條光纖採用環狀結構連接，確保一條網路斷線時，另外一條網路仍能傳遞資料，以光波傳輸訊號，傳輸距離長，提供高速連接至光纖節點（Fiber node），由光接收機將光訊號轉為電視訊號，再改經同軸電纜傳送至用戶終端。HFC 網路的頻寬達750MHz，以6MHz來劃分整體的頻道，可容納高達110個類比視訊頻道，或1000個數位節目。</p>\n<p>asymmetric: up to 30Mbps/2 Mbps<br />\nhomes share access network to cable headend</p>\n<h4 id=\"home-network\">home network</h4>\n<p><img data-src=\"/img/computer-network/oIEjJsN.webp\" alt=\"\" /></p>\n<h4 id=\"Enterprise-access-networks-Ethernet\">Enterprise access networks (Ethernet)</h4>\n<p><img data-src=\"/img/computer-network/LebfyMI.webp\" alt=\"\" /></p>\n<ul>\n<li>一種電腦區域網路組網技術(IEEE 802.3)，它規定了包括實體層的連線、電訊號和介質存取層協定的內容</li>\n<li>typically used in companies, universities</li>\n<li>today, end systems typically connect into Ethernet switch</li>\n</ul>\n<h4 id=\"Wireless-access-networks\">Wireless access networks</h4>\n<p>connect via base station aka “access point”</p>\n<ul>\n<li>wireless LANs:\n<ul>\n<li>within building (100 ft)</li>\n<li>802.11b/g (WiFi): 11/54 Mbps transmission rate</li>\n</ul>\n</li>\n<li>wide-area wireless access\n<ul>\n<li>provided by telco (cellular蜂巢式) operator, 10’s km and 1~10 Mbps</li>\n<li>3G, 4G(速度，範圍): LTE</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Physical-media\">Physical media</h3>\n<ul>\n<li>twisted pair (TP, 雙絞線): two insulated copper wires<br />\nCategory 5: 100 Mbps, 1 Gpbs Ethernet<br />\nCategory 6: 10Gbps<br />\n是由兩條相互絕緣的導線按照規格互相纏繞在一起而製成，屬於資訊通訊網路傳輸介質。</li>\n<li>coaxial cable(同軸電纜):\n<ul>\n<li>two concentric(同心) copper conductors</li>\n<li>bidirectional</li>\n<li>broadband(寬帶): multiple channels on cable</li>\n</ul>\n</li>\n<li>HFC　Hybrid Fiber Coaxial(as above)</li>\n<li>fiber optic cable: glass fiber carrying light pulses\n<ul>\n<li>high-speed(10’s-100’s Gpbs) point-to-point transmission</li>\n<li>low error rate: immune to electromagnetic noise</li>\n</ul>\n</li>\n<li>radio\n<ul>\n<li>no physical wire , bidirectional</li>\n<li>propagation(傳播) environment effects:\n<ul>\n<li>reflection</li>\n<li>obstruction(妨礙) by objects</li>\n<li>interference</li>\n</ul>\n</li>\n<li>radio link types:\n<ul>\n<li>terrestrial(地面波) microwave - up to 45 Mbps channels</li>\n<li>LAN (e.g., WiFi) - 11Mbps, 54 Mbps</li>\n<li>wide-area (e.g., cellular) - 3G cellular: ~ few Mbps</li>\n<li>satellite - Kbps to 45Mbps channel (or multiple smaller channels)\n<ul>\n<li>270 msec end-end delay</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"The-network-core-interconnected-routers\">The network core: interconnected routers</h3>\n<p>packet-switching: hosts break <strong>application-layer messages</strong> into packets</p>\n<p>forward packets from one router to the next, across links on path from source to destination</p>\n<h4 id=\"Two-key-network-core-functions\">Two key network-core functions</h4>\n<p>routing: <strong>determines source-destination route</strong> taken by packets<br />\nrouting algorithms<br />\nforwarding: <strong>move packets</strong> from router’s input to appropriate router output</p>\n<h4 id=\"circuit-switching\">circuit switching</h4>\n<p>電路交換要求必須首先在通信雙方之間建立連接通道。在連接建立成功之後，雙方的通信活動才能開始。<br />\n通信活動的過程中，連接將始終佔用著通信系統分配給它的資源（通道、頻寬、時隙、碼字等等）(no sharing)<br />\ncircuit segment idle if not used by call (no sharing)<br />\nCommonly used in traditional telephone networks<br />\n多工：FDM &amp; TDM<br />\n<img data-src=\"/img/computer-network/AyQHQy9.webp\" alt=\"\" /></p>\n<h4 id=\"packet-switching\">packet switching</h4>\n<p>封包在節點間單獨路由，不需要在傳輸前先建立通訊路徑<br />\nstore and forward: entire packet must arrive at router before it can be transmitted on next link<br />\nIf arrival rate exceeds transmission rate of link:</p>\n<ol>\n<li>packets will queue, wait to be transmitted on link</li>\n<li>packets will be lost if memory(buffer) fills up</li>\n</ol>\n<h4 id=\"why-packet-switching-better-than-circuit-switching\">why packet switching better than circuit switching</h4>\n<ol>\n<li>packet switching allows more users to use network!<br />\nEx.<br />\n1 Mb/s link<br />\neach user is [100 kb/s when “active”] and [active 10% of time]<br />\nwith 35 users, probability &gt; 10 active at same time is less than .0004(計算的機率)</li>\n<li>great for bursty data(resource sharing)</li>\n<li>excessive congestion possible: packet delay and loss\n<ul>\n<li>need protocols needed for reliable data transfer, congestion control</li>\n</ul>\n</li>\n</ol>\n<p>Q: How to provide circuit-like behavior?<br />\nbandwidth guarantees needed for audio/video apps</p>\n<h3 id=\"Internet-structure-network-of-networks\">Internet structure: network of networks</h3>\n<p>End systems connect to Internet via access ISPs (Internet Service Providers)<br />\nISPs must be interconnected</p>\n<p><img data-src=\"/img/computer-network/WB7uwMH.webp\" alt=\"\" /><br />\n<img data-src=\"/img/computer-network/BeFXQC2.webp\" alt=\"\" /><br />\nIXP Internet exchange point</p>\n<p><img data-src=\"/img/computer-network/u2H7X7p.webp\" alt=\"\" /><br />\n“tier-1” commercial ISPs (e.g., Level 3, Sprint, AT&amp;T, NTT), national &amp; international coverage<br />\ncontent provider network (e.g, Google): private network that connects it data centers to Internet, often bypassing tier-1, regional ISPs</p>\n<h3 id=\"packet-delay\">packet delay</h3>\n<h4 id=\"Four-sources-of-packet-delay\">Four sources of packet delay</h4>\n<p><img data-src=\"/img/computer-network/RifdgHR.webp\" alt=\"\" /><br />\ndproc: noda processing<br />\ncheck bit errors<br />\ndetermine output link<br />\ntypically &lt; msec</p>\n<p>dqueue: queueing delay<br />\n<img data-src=\"/img/computer-network/7r4M1Q5.webp\" alt=\"\" /><br />\ndtrans: transmission delay(檔案傳輸)(受限於頻寬，一次只能傳送一定大小)<br />\nL: packet length (bits)<br />\nR: link bandwidth (bps)<br />\ndtrans = L/R</p>\n<p>dprop: propagation delay(傳輸速度(約光速))<br />\nd: length of physical link<br />\ns: propagation speed in medium (~2x108 m/sec)<br />\ndprop = d/s</p>\n<p>traceroute program: provides delay measurement from source to router along end-end Internet path towards destination</p>\n<p>throughput: rate (bits/time unit) at which bits transferred between sender/receiver<br />\ninstantaneous: rate at given point in time<br />\naverage: rate over longer period of time<br />\nlink on end-end path that constrains  end-end throughput(被最慢的部分限制)</p>\n<h3 id=\"Protocol-“layers”\">Protocol “layers”</h3>\n<p><img data-src=\"/img/computer-network/AfKoIko.webp\" alt=\"AIR TRAVEL\" /></p>\n<p>layers: each layer implements a service<br />\nvia its own internal-layer actions<br />\nrelying on services provided by layer below</p>\n<ol>\n<li>explicit structure allows identification, relationship of complex system’s pieces</li>\n<li>modularization eases maintenance, updating of system<br />\nchange of implementation of layer’s service transparent to rest of system(不互相影響)<br />\ne.g., change in gate procedure doesn’t affect rest of system</li>\n</ol>\n<p><img data-src=\"/img/computer-network/pYLYYrA.webp\" alt=\"layer model\" /><br />\n<strong>Layer Model</strong></p>\n<ul>\n<li>application: supporting network applications\n<ul>\n<li>FTP, SMTP, HTTP</li>\n</ul>\n</li>\n<li>transport: process-process data transfer\n<ul>\n<li>TCP, UDP</li>\n</ul>\n</li>\n<li>network: routing of datagrams from source to destination\n<ul>\n<li>IP, routing protocols</li>\n</ul>\n</li>\n<li>link: data transfer between neighboring  network elements\n<ul>\n<li>Ethernet, 802.11 (WiFi), PPP</li>\n</ul>\n</li>\n<li>physical: bits &quot;on the wire&quot;</li>\n</ul>\n<p><img data-src=\"/img/computer-network/delHpJN.webp\" alt=\"iso layer model\" /><br />\n<strong>ISO/OSI layer model (7 layers)</strong><br />\nadditional 2 layers</p>\n<ul>\n<li>presentation: allow applications to interpret meaning of data\n<ul>\n<li>encryption, compression, machine-specific conventions</li>\n</ul>\n</li>\n<li>session: synchronization, checkpointing, recovery of data exchange</li>\n</ul>\n<p>Internet stack “missing” these layers!<br />\nthese services, <strong>if needed</strong>, must be implemented in application</p>\n<h3 id=\"Encapsulation\">Encapsulation</h3>\n<p>包裝好(加上header)，運送，再拆封包<br />\n<img data-src=\"/img/computer-network/\" alt=\"Encapsulation\" /></p>\n<h3 id=\"Security\">Security</h3>\n<p>網路本無考慮安全性<br />\n本來的想法： 「互相相信的使用者組成的透明網路」</p>\n<p>Bad guys: put malware into hosts via Internet</p>\n<ul>\n<li>virus: self-replicating infection by receiving/executing object (e.g., e-mail attachment)\n<ul>\n<li>會感染其他檔案，其他人</li>\n<li>須人為開啟</li>\n</ul>\n</li>\n<li>worm: self-replicating infection by passively receiving object that gets itself executed\n<ul>\n<li>找作業系統或是特定程式的漏洞來鑽</li>\n<li>可自行傳播(不須做特定動作)</li>\n</ul>\n</li>\n<li>spyware: can record keystrokes, web sites visited, upload info to collection site</li>\n</ul>\n<p>被感染的電腦可當作botnet(彊屍電腦)，用來寄垃圾郵件，或進行DDoS攻擊</p>\n<p>Denial of Service (DoS): 控制多台電腦，持續提出要求，使伺服器癱瘓<br />\nattackers make resources (server, bandwidth) unavailable to legitimate traffic by overwhelming resource with bogus traffic</p>\n<p>packet “sniffing ”(追蹤)<br />\n從 broadcast media (shared ethernet, wireless) 拿取目的地非自己的封包，以獲得資訊。(正常情況：丟棄)</p>\n<p>IP spoofing(謊報)<br />\nsend packet with false source address(假造他人名義送出封包)</p>\n<h3 id=\"History\">History</h3>\n<p>1961-1972: Early packet-switching principles<br />\n1972:<br />\nNCP (Network Control Protocol) first host-host protocol<br />\nfirst e-mail program<br />\nARPAnet has 15 nodes</p>\n<p>1974:Cerf and Kahn - architecture for interconnecting networks<br />\nCerf and Kahn’s internetworking principles define today’s Internet architecture:</p>\n<ul>\n<li>minimalism, autonomy - no internal changes required to interconnect networks</li>\n<li>best effort service model</li>\n<li>stateless routers</li>\n<li>decentralized control</li>\n</ul>\n<p>1983:deployment of TCP/IP<br />\n1983:DNS defined for name-to-IP-address translation<br />\n1985:ftp protocol defined</p>\n<p>early 1990s:Web<br />\nhypertext [Bush 1945, Nelson 1960’s]<br />\nHTML, HTTP: Berners-Lee<br />\n1994: Mosaic, later Netscape</p>\n<p>late 1990’s: commercializationof the Web<br />\ninstant messaging, P2P file sharing<br />\nnetwork security to forefront</p>\n<p>2005-present<br />\nService providers (Google, Microsoft) create their own networks<br />\nBypass Internet, providing “instantaneous”access to search, emai, etc.</p>\n<h2 id=\"Chap02-Application-Layer\">Chap02 Application Layer</h2>\n<p><img data-src=\"/img/computer-network/proto.webp\" alt=\"protocol\" /></p>\n<p>使程式更加好寫<br />\n不需要從網路核心開始實作，直接call function</p>\n<p>優勢：<br />\n可在不同裝置(end-system)上運行<br />\n網路通訊</p>\n<p>註：網路核心程式不會主動執行</p>\n<h3 id=\"structure\">structure</h3>\n<p>client-server structure</p>\n<ul>\n<li>\n<p>server:</p>\n<ul>\n<li>always-on host</li>\n<li>permanent IP address</li>\n<li>data centers for scaling</li>\n</ul>\n</li>\n<li>\n<p>clients:</p>\n<ul>\n<li>communicate with server</li>\n<li>may have dynamic IP addresses</li>\n<li>do not communicate directly with each other(client間互相不知道)<br />\npeer-to-peer (P2P) structure</li>\n</ul>\n</li>\n<li>\n<p>no always-on server</p>\n<ul>\n<li><strong>arbitrary end systems directly communicate</strong></li>\n</ul>\n</li>\n<li>\n<p>peers both request services and provide services</p>\n</li>\n<li>\n<p>self scalability(可擴展) – new peers bring new service capacity, as well as new service demands(愈多人加入，service功能相對應愈強)</p>\n</li>\n<li>\n<p><strong>complex management</strong>(not easy to implement)</p>\n</li>\n</ul>\n<h3 id=\"Socket\">Socket</h3>\n<ul>\n<li>process sends/receives messages to/from its socket, by transport infrastructure</li>\n<li><img data-src=\"/img/computer-network/socket.webp\" alt=\"\" /></li>\n</ul>\n<p>Addressing processes<br />\nhost device has unique 32-bit IP address<br />\nidentifier (IP address and port numbers)<br />\nexample port numbers:<br />\nHTTP server: 80<br />\nmail server: 25</p>\n<h3 id=\"Application-layer-protocol\">Application layer protocol</h3>\n<p>define: when and how processes transfer messages</p>\n<ul>\n<li>types of messages exchanged: e.g., request, response</li>\n<li>message syntax: fields(欄位) in messages</li>\n<li>message semantics: meaning of information in fields</li>\n</ul>\n<p>Ex. HTTP, SMTP, Skype</p>\n<p>transport service</p>\n<ul>\n<li>data integrity(file transfer)</li>\n<li>timing</li>\n<li>throughput\n<ul>\n<li>multimedia vs elastic(有彈性的) apps</li>\n</ul>\n</li>\n<li>security</li>\n</ul>\n<h3 id=\"transport-protocols-services\">transport protocols services</h3>\n<p>TCP(transport layer)</p>\n<ul>\n<li>reliable transport</li>\n<li>flow control: sender won’t overwhelm receiver</li>\n<li>congestion control(擁塞控制, 網路處理過多封包):throttle sender when network overloaded</li>\n<li>connection-oriented(須先建立連接):setup required between client and server processes<br />\ndoes not provide:<br />\ntiming, throughput, security ,</li>\n</ul>\n<p>UDP(transport layer)</p>\n<ul>\n<li>does not provide all of the service,</li>\n<li>far faster than TCP</li>\n<li>used in multimedia, internet telephone</li>\n</ul>\n<p>SSL(app layer)</p>\n<ul>\n<li>encrypted TCP connection</li>\n<li>data integrity</li>\n<li>end-point authentication</li>\n<li>SSL socket API</li>\n</ul>\n<h3 id=\"HTTP\">HTTP</h3>\n<ul>\n<li>hypertext transfer protocol</li>\n<li>客戶端終端（用戶）和伺服器端（網站）請求和應答的標準,使用Web瀏覽器、網路爬蟲或者其它的工具</li>\n<li>each object is addressable by a URL, include host name and path name</li>\n<li>use TCP to send HTTP messages</li>\n<li>stateless: server maintain no information about client</li>\n<li>RTT(Round-trip delay time): time for a small packet to travel from client to server and back(來回時間)</li>\n<li>non-persistent HTTP: one TCP connection send at most one object, connection close right after server responsed\n<ul>\n<li>one RTT build TCP connection + one RTT for HTTP request + file transmission time</li>\n</ul>\n</li>\n<li>persistent HTTP: send multiple object at one TCP connection\n<ul>\n<li>one RTT build TCP connection + one RTT for request x N files + file transmission time</li>\n</ul>\n</li>\n</ul>\n<p>HTTP Request message format<br />\n<img data-src=\"/img/computer-network/2-1.webp\" alt=\"http message\" /></p>\n<ul>\n<li>request line(method, URL, version..)\n<ul>\n<li>method field</li>\n<li><code>POST</code>: modify file in specified URL</li>\n<li><code>URL</code>: use <code>GET</code></li>\n<li><code>GET</code>: get file content in specified URL</li>\n<li><code>PUT</code>: replace file in specified URL</li>\n<li><code>HEAD</code>: get information about a resource</li>\n</ul>\n</li>\n<li>header lines(fields)</li>\n<li>body(context)</li>\n</ul>\n<p>HTTP Response message format<br />\n<img data-src=\"/img/computer-network/2-2.webp\" alt=\"reponse\" /></p>\n<ul>\n<li>status line\n<ul>\n<li>protocol</li>\n<li>status code</li>\n<li>status phrase</li>\n</ul>\n</li>\n</ul>\n<p>status code</p>\n<ul>\n<li>200 OK</li>\n<li>301 Moved Permanently\n<ul>\n<li>requested object moved, new location will send later in this msg (Location:)(重定向)</li>\n</ul>\n</li>\n<li>400 Bad Request\n<ul>\n<li>request msg not understood by server</li>\n</ul>\n</li>\n<li>404 Not Found\n<ul>\n<li>requested document not found</li>\n</ul>\n</li>\n<li>505 HTTP Version Not Supported</li>\n</ul>\n<p>try connect HTTP</p>\n<pre><code>telnet [host name] 80\nGET [path name] HTTP/1.1\n</code></pre>\n<h4 id=\"User-server-state-cookies\">User-server state: cookies</h4>\n<p>help server keep states</p>\n<p>Ex.<br />\nwhen initial HTTP requests arrives at site, site creates:<br />\nunique ID<br />\nentry in backend database for ID<br />\ncookie file kept on user’s host</p>\n<p>Help for interaction<br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3poLndpa2lwZWRpYS5vcmcvd2lraS9Db29raWUjLkU3Ljk0LkE4LkU5LjgwLjk0\">cookie<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h4 id=\"cache-for-proxy-server\">cache for proxy server</h4>\n<p>for any request, check it is in cache or not,<br />\nif it is, return cache</p>\n<p>typically cache is installed by ISP (university, company, residential ISP)<br />\nreduce response time and traffic</p>\n<p>Conditional GET: if client has up-to-update object, no need to send again<br />\nclient send request: if-modified-since:<date></p>\n<h3 id=\"FTP\">FTP</h3>\n<p>file transfer protocol<br />\nusing TCP<br />\nftp: RFC 959<br />\n(1)control connection：(port 21)<br />\n(2)data connection：(port 20)<br />\nOut-of-band (頻帶外)Control</p>\n<p>server receives file transfer command, server opens 2nd TCP data connection (for file) to client<br />\nafter transferring one file, server closes data connection</p>\n<p>maintain state: current directory and earlier authentication</p>\n<p>FTP 命令(Command)與回應(Reply)</p>\n<p>(1).命令(command)：從Client端到Server端</p>\n<p>常見命令如下:</p>\n<p>USER username :把使用者代號傳給伺服器<br />\nPASS password :把使用者密碼傳給伺服器<br />\nLIST :要求server傳回目前遠端目錄下的檔案列表 此檔案列表會透過資料連線(新建立且non-persistent) 而非control connection連線來傳送<br />\nRETR filename : 用來擷取遠端主機目前目錄下的某個檔案 此命令會使遠端主機開一筆data connection傳送請求的檔案<br />\nSTOR filename : 把某個檔案存到遠端主機目前目錄下<br />\n(2).回應(Reply)：從Server端到Client端</p>\n<p>常見回應如下:</p>\n<p>331 Username OK,password require<br />\n125 Data connection already open;transfer starting<br />\n425 Can't open data connection<br />\n452 Error writing file<br />\n(3)<br />\n不管是Command或Reply都會送出7-bit ASCII值的control connection</p>\n<h3 id=\"EMAIL\">EMAIL</h3>\n<ol>\n<li>SMTP(Simple Mail Transfer Protocol)</li>\n</ol>\n<p>mail agent, mail box(in), message queue(out)</p>\n<p>The client SMTP will establish a TCP connection to port 25 at the server SMTP.<br />\npersistent connections</p>\n<p>three phases of transfer</p>\n<ul>\n<li>handshaking (greeting)</li>\n<li>transfer of messages</li>\n<li>closure</li>\n</ul>\n<p>commands:ASCII text<br />\nresponse:status code and phrase<br />\nmessages must be in 7-bit ASCI</p>\n<p>SMTP是push protocol,即TCP連線是由想要送出檔案的主機所建立<br />\nHTTP是pull protocol,即TCP連線是由想要接收檔案的主機所建立</p>\n<pre><code>telnet URL 25\nS: 220 hamburger.edu\nC: HELO crepes.fr\nS: 250 Hello crepes.fr, pleased to meet you\nC: MAIL FROM: &lt;alice@crepes.fr&gt;\nS: 250 alice@crepes.fr... Sender ok\nC: RCPT TO: &lt;bob@hamburger.edu&gt;\nS: 250 bob@hamburger.edu ... Recipient ok\nC: DATA\nS: 354 Enter mail, end with &quot;.&quot; on a line by itself\nC: Do you like ketchup?\nC: How about pickles?\nC: .\nS: 250 Message accepted for delivery\nC: QUIT\nS: 221 hamburger.edu closing connection\n</code></pre>\n<p>RFC 822: standard for text message format</p>\n<p><img data-src=\"/img/computer-network/2-3.webp\" alt=\"header body\" /><br />\nheader lines, e.g.,<br />\nTo:<br />\nFrom:<br />\nSubject:<br />\nBody: the “message”<br />\nASCII characters only</p>\n<p>mail access protocol: get mail from user</p>\n<p>POP:Post Office Protocol [RFC 1939]<br />\nauthorization + download<br />\nauthorization phase + transaction phase<br />\ndownload and keep</p>\n<p>IMAP:Internet Mail Access Protocol [RFC 1730]:<br />\n比POP更進一步,除了download郵件外還可以在server上管理目錄,可以做更多的動作,<br />\n像郵件目錄的搬移等都得靠IMAP<br />\nkeep all message at server<br />\nkeep state</p>\n<p>HTTP:gmail, Hotmail, Yahoo! Mail, etc.</p>\n<h3 id=\"DNS\">DNS</h3>\n<p>DNS(domain name system)，透過 DNS，我們不需要知道主機的 IP ，只要知道該主機的名稱就能連線</p>\n<p>distributed hierarchical database 樹狀查詢<br />\nDNS 將主機名稱的管理分配在不同層級的 DNS 伺服器當中，有 IP 異動時也容易修改，而不用透過上層 ISP 的維護。</p>\n<p>IPv4 已經接近發送完畢的階段，因此已逐漸拓展到 128bits 的 IPv6 。可以透過主機名稱就解析到 IP 的 DNS 服務，此外，目前全世界的 WWW 主機名稱也都是透過 DNS 系統在處理 IP 的對應，所以，當 DNS 掛點時，我們將無法透過主機名稱來連線，那就幾乎相當於沒有 Internet 了。</p>\n<ol>\n<li>DNS (domain name system)服務:nslookup</li>\n</ol>\n<p><img data-src=\"/img/computer-network/2-4.webp\" alt=\"tree like\" /><br />\n服務:把主機名稱轉成ip位置<br />\nHost aliasing(主機別名):一台主機可有多個別名(當然也有正規主機名稱canonical hostname 通常不好記)<br />\ndns可用別名查詢得到正規主機名稱及ip<br />\nMail server aliasing<br />\nLoad distribution:一個網站可能有多台伺服器 每個伺服器的ip和主機名稱不同 有要求傳送過來時 dns會一直改變回傳的伺服器的主機名稱及ip 這樣就不會有許多要求都由同一伺服器回應 可達到分配效果</p>\n<ol start=\"2\">\n<li>DNS伺服器架構<br />\nroot DNS servers: 13 (labeled A through M)<br />\nTop-level domain (TLD) servers: 負責Top-level domain 如com, org, net, edu 也負責國家級的Top-level domain如uk, fr, ca, jp<br />\nAuthoritative DNS servers: organization’s own DNS server</li>\n</ol>\n<p>Local DNSname server<br />\nnot strictly belong to hierarchy<br />\neach ISP (residential ISP, company, university) has one<br />\nalso called “default name server”<br />\nwhen host makes DNS query, query is sent to its local DNS server<br />\nhas local cache of recent name-to-address translation pairs (but may be out of date!)<br />\nacts as proxy, forwards query into hierarchy</p>\n<p>iterated query:<br />\n“I don’t know this name, but ask this server”<br />\n<img data-src=\"/img/computer-network/2-5.webp\" alt=\"asking\" /><br />\nrecursive query<br />\ndon't temperaly return to local DNS server<br />\n<img data-src=\"/img/computer-network/2-6.webp\" alt=\"\" /></p>\n<p>cache entries timeout (disappear) after some time (TTL)<br />\nTLD servers typically cached in local name servers<br />\nthus root name servers not often visited<br />\ncached entries may be out-of-date</p>\n<p>record<br />\nresource records (RR) 格式: (name, value, type, TTL)</p>\n<p>TTL(time to live)<br />\n欄位中name和value由type決定<br />\nType=A :<br />\nname 是正規主機名稱 , value 是正規主機名稱為name的IP address<br />\nex:(relay1.bar.foo.com , 145.37.9.126 , A)</p>\n<p>Type=CNAME :<br />\nname 是主機別名 , value 是別名為name的正規主機名稱<br />\nex:(foo.com , relay1.bar.foo.com ,CNAME)</p>\n<p>Type=NS :<br />\nname 是 domain(網域名稱), value 是 domain 為name的Authoritative(官方) DNS server 名稱,此Authoritative(官方) DNS server會去取得該網域內的主機ip位置<br />\nex:(foo.com , dns.foo.com , NS)</p>\n<p>Type=MX : name 是主機別名 ,value 是主機別名為 name 的 mail server正規名稱<br />\nex:(foo.com , mail.bar.foo.com , MX)</p>\n<p>DNS registrar(網域販賣商)</p>\n<p>queryand replymessages, both with same message format</p>\n<ol start=\"5\">\n<li>DNS Vulnerabilities(弱點)</li>\n</ol>\n<p>DDoS:發出大量的DNS查詢(ex ICMP ping) 使封包多到塞滿link 讓大多數使用者發出的合法DNS查詢因ink塞滿得不到答案 服務無法被使用<br />\nNot useful in root server(cache in TLD), but useful at TLD</p>\n<p>DoS(Denial-of-Service) 為一種網路攻擊 讓網路 主機等 無法被合法使用者使用</p>\n<p>man-in-the-middle attack<br />\nDNS poisoning -- send incorrect file to DNS server, which cache</p>\n<h3 id=\"P2P\">P2P</h3>\n<p>p2p &gt; client server when there are a lot of user<br />\n<img data-src=\"/img/computer-network/2-7.webp\" alt=\"p2pgraph\" /></p>\n<p>(1) Client-server archtecture</p>\n<p>設一個server要傳給n個client 檔案大小為f 上傳速度為us</p>\n<p>上傳給n個點每個點一份f 故上傳時間為 nf/us</p>\n<p>dmin 為n台電腦中下載速度最小的  故下載時間最多為f/dmin</p>\n<p>distribution time &gt;= MAX{nf/us , f/dmin} 只要N夠大 則時間會隨著N的數量線性增加</p>\n<p>(2) P2P architecture</p>\n<p>設一個server要傳給n個client 檔案大小為f 上傳速度為us<br />\n只有伺服器有檔案 伺服器必須把檔案放入LINK中一次 最低上傳時間為 f/us</p>\n<p>同Client-server archtecture , dmin 為n台電腦中下載速度最小的  故下載時間最多為f/dmin</p>\n<p>整個系統上傳總容量為us(第一個點)+u1+u2+....+un  上傳給n個對等點  共上傳nf   時間為nf/(us(第一個點)+u1+u2+....+un )</p>\n<p>distribution time &gt;= MAX{f/us , f/dmin , nf/(us+u1+u2+....+un)}</p>\n<h4 id=\"Structure\">Structure</h4>\n<p>file divided into 256Kb chunks<br />\n<strong>peers</strong> in torrent send/receive file chunks</p>\n<p>tracker:tracks peers<br />\nparticipating in torrent</p>\n<p>torrent:group of peers exchanging chunks of a file</p>\n<p>peer joining torrent registers with tracker to get list of peers, connects to subset of peers (“neighbors”)</p>\n<p>churn(流失):peers may come and go</p>\n<p>requests missing chunks from peers, rarest first<br />\nsending chunks: tit-for-tat</p>\n<p>Alice sends top four peers which send to her.<br />\nother peers are choked by Alice every 30 seconds(receive only one chunk from her)<br />\nre-evaluate top 4 every10 secs</p>\n<p>想要獲得更快的下載速度，就應該先將檔案分享給別人。Optimistic Unchoking是說，每個人每30秒就挑網路中任意一個人，將檔案上傳給他。這麼作的用意是發掘網路上未知的潛力檔案提供者：假如A與K之前並未有檔案的往來，但其實這兩個人住得很近，網路互傳的速度比其他人快。今天A透過Optimistic Unchoking隨機給K上傳了一些檔案片段，讓K驚覺A的上傳速度很快，進而允許A從K處下載檔案片段。如果A與K之間的連線速度很慢，那麼過30秒之後，A會停止提供檔案給K，而去別處尋找下一個候選人</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL21tZGF5cy5jb20vMjAwNy8wNC8wNi9idDEv\">http://mmdays.com/2007/04/06/bt1/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Distributed Hash Table<br />\n(key, value)<br />\nkey: movie title value: IP address</p>\n<p>put (key,value) pair in the peer that is closest(successor) to the key</p>\n<p>Circular DHT with shortcuts<br />\npossible to design shortcuts so O(log N) neighbors, O(log N) messages in query<br />\n建捷徑於與目前key差一個bit的數- &gt; =&gt; 一次至少可以縮短一半的距離<br />\n<img data-src=\"/img/computer-network/2-8.webp\" alt=\"circular DHT\" /></p>\n<p>each peer knows address of its two successors<br />\neach peer periodically pings its two successors to check aliveness<br />\nif immediate successor leaves, choose next successor as new immediate successor</p>\n<h2 id=\"Chap03-Transport-Layer\">Chap03 Transport Layer</h2>\n<p>transport layer: logical communication between processes<br />\n=&gt; breaks app messages into segments, passes to network layer</p>\n<h3 id=\"UDP\">UDP</h3>\n<ul>\n<li>streaming multimedia apps (loss tolerant, rate sensitive)</li>\n<li>DNS</li>\n<li>SNMP</li>\n</ul>\n<p>small header size<br />\nno congestion control: UDP can blast away as fast as desired</p>\n<p>reliable transfer over UDP<br />\nadd reliability at <strong>application layer</strong> to get application-specific error recovery</p>\n<p>no connection establishment (which can add delay)</p>\n<ul>\n<li>simple: no connection state at sender, receiver</li>\n<li>small header size</li>\n<li>no congestion control: UDP can blast away as fast as desired</li>\n</ul>\n<p>UDP segment format</p>\n<p>source port , dest port<br />\nlength checksum<br />\ndata</p>\n<p>use checksum to detect error<br />\n<img data-src=\"/img/computer-network/3-1.webp\" alt=\"\" /></p>\n<hr />\n<h3 id=\"Reliable-data-transfer\">Reliable data transfer</h3>\n<p>top-10 important network topic<br />\n=&gt; <strong>unreliable channel</strong> with <strong>reliable data transfer(RDT) protocol</strong></p>\n<p><img data-src=\"\" alt=\"using unreliable data transfer channel\" /></p>\n<p>RDT 2.0: bit error -&gt; use ctrl msgs<br />\nchecksum to detect bit errors<br />\nacknowledgements (ACKs), negative acknowledgements (NAKs)</p>\n<p>RDT 2.1: ctrl msg error -&gt; use seq number<br />\nseq number prevent duplicate data, resend when corrupt<br />\ntwo seq (0,1) is enough</p>\n<p>RDT 2.2: no NAK, resend when ACKs with the same seq num</p>\n<p>RDT 3.0: lose packet -&gt; add wait time, resend when timeout<br />\n<img data-src=\"\" alt=\"3.0 sender\" /></p>\n<p>rdt3.0雖然確保了資料的可靠性，可是它採用Stop-and-Wait機制，效能很低<br />\nutilization of sender = 0.008(transmit time) / 30.008(transmit time+RTT) = 0.00027</p>\n<h3 id=\"Pipelined-Protocol\">Pipelined Protocol</h3>\n<p>可以讓傳送端同時傳送多個封包不需等待確認。必須增加封包的暫存空間與序列號碼。<br />\n暫存的區域中存在著窗格大小(Window Size)，存放著各種封包(已確認、已送出但未收到ACK、未送出的封包等等)</p>\n<h4 id=\"Go-Back-N-GBN\">Go-Back-N(GBN)</h4>\n<p><img data-src=\"\" alt=\"type\" /><br />\n<img data-src=\"\" alt=\"gbn\" /><br />\n<img data-src=\"\" alt=\"gbn sender\" /><br />\nSENDER:</p>\n<ol>\n<li>nothing when receive corrupt response</li>\n<li>move window when receive ACK response</li>\n<li>send all packets in window when oldest packet in window timeout</li>\n</ol>\n<p><img data-src=\"\" alt=\"gbn receiver\" /><br />\nRECEIVER:</p>\n<ol>\n<li>永遠送出ACK，為目前收到的最高序號</li>\n<li>只收比目前收到的最高序號多一號的packet</li>\n</ol>\n<h4 id=\"Selective-Repeat-SR\">Selective Repeat(SR)</h4>\n<p><img data-src=\"\" alt=\"SR\" /><br />\n每個packet各自傳送，各自有timer</p>\n<p>max seq# = window size * 2<br />\n假想有限序號0,1,2,3 窗格大小為3, 接收端收到0,1,2, 所以接收端的觀點應為：0,1,2,[3,0,1],2 當接收端回傳給傳送端的ACK遺失時, 將導致傳送端逾時而重送0,1,2 然而接收端想要的是第二批的0,1 而傳送端所傳送的封包卻是第一批的0,1。</p>\n<h3 id=\"TCP\">TCP</h3>\n<ul>\n<li>reliable, in-order byte steam\n<ul>\n<li>no “message boundaries”</li>\n</ul>\n</li>\n<li>pipelined</li>\n<li>congestion and flow control\n<ul>\n<li>決定 window size</li>\n</ul>\n</li>\n<li>full duplex data(雙方皆可傳)</li>\n<li>MSS(maximum segment size): 傳送的segment最大長度</li>\n<li>connection-oriented\n<ul>\n<li>handshaking (exchange of control msgs)</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"\" alt=\"segment\" /><br />\nsequence numbers(Seq): 送過去的packet的起始編號(0, 1)<br />\nacknowledge number(ACK): 預期對方會送來的編號<br />\n<img data-src=\"\" alt=\"telnet \" /><br />\n對A來講前一個收到B傳回來的資料Seq為78,下一個期待收到的為79,所以傳回ACK=79,而data為'C'這和ACK,Seq都沒關聯<br />\nA所傳的Seq是42,對B來講下一個應該要收到43,於是傳回ACK=43,而A在ACK=79中告訴B下一個應該送79過去,於是B傳Seq=79</p>\n<ul>\n<li>TCP傳送端\n<ul>\n<li>逾時重送封包</li>\n<li><img data-src=\"\" alt=\"cumulative ACK\" /></li>\n<li><img data-src=\"\" alt=\"TCP sender\" /></li>\n</ul>\n</li>\n<li>TCP接收端\n<ul>\n<li>預期封包抵達事件\n<ul>\n<li>回傳期望下一次收到的封包之序號ACK</li>\n</ul>\n</li>\n<li>非預期封包抵達事件\n<ul>\n<li>暫存封包, 送出期望收到的封包之序號ACK</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Estimate-best-timeout-value\">Estimate best timeout value</h4>\n<p>SampleRTT: record the time of last transmission<br />\nexponential weighted average let value smoother<br />\nEstimatedRTT = (1- a) x EstimatedRTT + a x SampleRTT (typical a = 0.125)</p>\n<p><img data-src=\"\" alt=\"devrtt\" /><br />\n將變異數納入考慮: TimeoutInterval = EstimatedRTT + 4*DevRTT</p>\n<p>TCP fast retransmit: 收到三次相同ACK，傳送端就會立刻傳送接收端所預期的封包</p>\n<p>Flow Control (流量控制): 讓reiceiver buffer不致overflow<br />\n記錄buffer剩餘的空間有多少(rcvWindow)<br />\n當rcvWindow=0時，傳送端會持續傳送一個1byte的區段給接收端以確認緩衝區可否繼續接收資料</p>\n<h4 id=\"TCP-Connection-Management-連線管理\">TCP Connection Management (連線管理)</h4>\n<p>http://www-sop.inria.fr/members/Vincenzo.Mancuso/ReteInternet/06_tcp_part2.pdf</p>\n<p>防止delay duplicate problem</p>\n<p>3-way handshake:(open connection)<br />\n一方傳SYN, 另一方回傳ACK/SYN, 一方回傳ACK。</p>\n<p>4-way handshake:(close connection)<br />\n一方傳FIN, 另一方回傳ACK。另一方傳FIN, 一方回傳ACK。(可以handle同時想結束的情形)</p>\n<h4 id=\"congestion-control-擁塞控制\">congestion control(擁塞控制)</h4>\n<p>保持在網路上的封包數量，不讓整體效能下降(buffer overflow, queueing in router)</p>\n<ul>\n<li>End-to-End (implicit)\n<ul>\n<li>依據往返延遲時間來降低視窗大小</li>\n<li>TCP採用此種方式</li>\n</ul>\n</li>\n<li>Network-assisted (explicit)\n<ul>\n<li>Router會依據網路壅塞情況，提供傳送端明確的網路壅塞狀態且回報</li>\n<li>回饋傳送給傳送端 或 在封包中的某個欄位記錄</li>\n</ul>\n</li>\n</ul>\n<p>cwnd(send window size)</p>\n<ol>\n<li>AIMD (Additive-Increase, Multiplicative-Decrease): cwnd一次增加一定(+1)值，loss時成比例減少(/2)</li>\n<li>Slow Start: cwnd呈次方成長(*2)</li>\n</ol>\n<h4 id=\"TCP-Sender-Congestion-Control\">TCP Sender Congestion Control</h4>\n<p>grows by slowstart to <strong>threshold</strong>, then grows linearly</p>\n<ul>\n<li>loss by timeout\n<ul>\n<li>cwnd = 1</li>\n</ul>\n</li>\n<li>loss by 3 duplicate ACKs:\n<ul>\n<li>TCP Tahoe - cwnd = 1</li>\n<li>TCP RENO - cwnd /= 2, threshold = cwnd</li>\n</ul>\n</li>\n</ul>\n<p>Average throughout = (1 + 0.5)/2 = 0.75W/RTT</p>\n<h4 id=\"TCP-Fairness\">TCP Fairness</h4>\n<p>有相同需求的兩端會在bandwidth share附近震盪兩邊互相影響下是公平的</p>\n<p>但是UDP在的話就不太公平了,如多媒體。現在像youtube會在UDP上加上一些TCP friendly</p>\n<p>開多個TCP connection: 速度加快…</p>\n<p><strong>Summary</strong></p>\n<ul>\n<li>TCP creates rdt service on top of IP’s unreliable service\n<ul>\n<li>pipelined segments</li>\n<li>cumulative acks</li>\n<li>single retransmission timer</li>\n</ul>\n</li>\n<li>retransmissions triggered by\n<ul>\n<li>timeout events</li>\n<li>duplicate acks</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Reference\">Reference</h2>\n<p>CFChou講義</p>\n","categories":["筆記"],"tags":["計算機網路"]},{"title":"加快C++編譯速度的方法","url":"/cpp-compile-speed/","content":"<h2 id=\"編譯速度慢的原因\">編譯速度慢的原因</h2>\n<p>因為C++ <code>.h</code> + <code>.cpp</code> 的編譯模型<br />\n每個cpp檔可能會包含上百甚至上千個<code>.h</code>檔，這些<code>.h</code>檔都會被讀進來一遍，然後被解析一遍。<br />\n每個編譯單元都會產生一個<code>.obj</code>文件，然後所以這些<code>.obj</code>文件會被link到一起，並且這個過程很難平行。重複load與解析，以及密集的IO，使編譯速度很慢。</p>\n<span id=\"more\"></span>\n<h2 id=\"代碼角度\">代碼角度</h2>\n<h3 id=\"前置聲明\">前置聲明</h3>\n<p>在<code>.h</code>檔中使用前置聲明(forward declaration)，而不是直接包含<code>.h</code>檔。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>; <span class=\"comment\">//forward declaration, instead #include &quot;a.h&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span>&#123;</span><br><span class=\"line\">    A* a;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">useA</span><span class=\"params\">(A&amp; a)</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;a.h&quot;</span> <span class=\"comment\">//cannot use forward declaration because compiler needs to know what A really is</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span>&#123;</span><br><span class=\"line\">    A a;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>要盡一切可能使<code>.h</code>檔精簡</strong>。<br />\n很多時候前置聲明某個namespace中的class會比較痛苦，而直接include會方便很多，千萬要抵制住這種誘惑；class的成員，函數參數等也儘量用reference或pointer。</p>\n<h3 id=\"使用Pimpl模式\">使用Pimpl模式</h3>\n<p>Pimpl為Private Implementation<br />\n傳統的C++的class的接口與實現是混淆在一起的，而Pimpl這種做法使得class的接口與實現得以完全分離。<br />\n如此，只要class的公共接口保持不變，對class實現的修改始終只需編譯該cpp；同時，該class提供給外界的.h檔也會精簡許多。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">A</span>();</span><br><span class=\"line\">    ~<span class=\"built_in\">A</span>();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">doSomething</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">Impl</span>;<span class=\"comment\">//real implementation in this class</span></span><br><span class=\"line\">    std::auto_ptr&lt;impl&gt; m_impl;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"高度模塊化\">高度模塊化</h3>\n<p>模塊化就是低耦合，就是儘可能的減少相互依賴。</p>\n<ol>\n<li>文件與文件之間，一個<code>.h</code>檔的變化，儘量不要引起其他文件的重新編譯。</li>\n<li>工程與工程之間，對一個工程的修改，儘量不要引起太多其他工程的編譯。這就要求<code>.h</code>檔，或者工程的內容一定要單一，不要什麼東西都往裡面塞，從而引起不必要的依賴。</li>\n</ol>\n<p>不要把兩個不相關的class，或者沒什麼聯繫的macro定義放到一個<code>.h</code>檔裡；內容要儘量單一。</p>\n<p>把代碼中最常用到的那些<code>.h</code>檔找出來，然後分成多個獨立的小文件，效果相當可觀。</p>\n<h3 id=\"刪除冗餘的header檔\">刪除冗餘的header檔</h3>\n<p>一些代碼經過上十年的開發與維護，經手的人無數，很有可能出現包含了沒用的<code>.h</code>檔，或重複包含的現象，去掉這些冗餘的include是相當必要的。<br />\n當然，這主要是針對<code>.cpp</code>的，因為對於一個<code>.h</code>檔，其中的某個include是否冗餘很難界定，得看是否在最終的編譯單元中用到了，而這樣又可能出現在一個編譯單元用到了，而在另外一個編譯單元中沒用到的情況。</p>\n<h3 id=\"特別注意inline和template\">特別注意inline和template</h3>\n<p>它們強制在<code>.h</code>檔中包含實作，這會增加<code>.h</code>檔的內容，從而減慢許多編譯速度，需權衡使用。</p>\n<h3 id=\"預編譯-h檔\">預編譯<code>.h</code>檔</h3>\n<p>把一些常用但不常改動的<code>.h</code>檔放在預編譯<code>.h</code>檔中。這樣，至少在單個工程中你不需要在每個編譯單元裡一遍又一遍的load與解析同一個<code>.h</code>檔了。</p>\n<p>首次編譯source.cpp時，編譯器生成header.pch的預編譯header。以後再編譯該程式時，編譯器會比較該表頭檔的時間戳，如果表頭檔沒有改變，編譯器直接使用預編譯header。</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\">CORE_PCH_FILENAME=Core.h</span><br><span class=\"line\">CORE_PCH=<span class=\"variable\">$(CORE_PCH_FILENAME)</span>.gch</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$(CORE_PCH)</span>:</span><br><span class=\"line\">    <span class=\"variable\">$(CXX)</span> <span class=\"variable\">$(CXX_CFLAGS)</span> -x c++-header <span class=\"variable\">$(CORE_PCH_FILENAME)</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Guard-Conditions\">Guard Conditions</h3>\n<p>保證每個 header file 在每個編譯單元只被 include 一次</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> filename_h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> filename_h</span></span><br><span class=\"line\"><span class=\"comment\">//...</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n<p>同時使用兩種方法以確保compiler的相容性</p>\n<h2 id=\"Unity-Build\">Unity Build</h2>\n<p>把所有的檔案包含到一個cpp中(如<code>all.cpp</code>)，然後只編譯all.cpp。這樣就只有一個編譯單元，這意味著不需要重複load與解析同一個<code>.h</code>檔了，同時因為只產生一個obj文件，在link的時候也不需要那麼密集的IO</p>\n<h2 id=\"Compiler-Cache\">Compiler Cache</h2>\n<p>藉由快取上一次編譯的結果，使rebuild在保持結果相同的情況下，極大的提高速度。</p>\n<h2 id=\"不要有太多的Include-Directories\">不要有太多的Include Directories</h2>\n<p>編譯器定位你include的<code>.h</code>檔，是根據你提供的include directories進行搜索的。</p>\n<p>用 <code>cpp -v</code> 查看 <code>#include &quot;...&quot; search starts here:</code> 中的目錄<br />\n和 GNU Make 的 <code>-I</code> 選項</p>\n<h2 id=\"平行化及分佈式編譯\">平行化及分佈式編譯</h2>\n<p>GNU Make 的 <code>-j [N]</code> 可以用N個核心編譯<br />\nVisual Studio 有 <code>/MP</code> 選項可做到檔案等級的平行<br />\n或是用空閒的機器來編譯</p>\n<h2 id=\"買更好的磁碟\">買更好的磁碟</h2>\n<p>編譯速度慢很大一部分原因是磁碟操作，那麼除了儘可能的減少磁碟操作，我們還可以做的就是加快磁碟速度。</p>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzczMTQyL3doYXQtdGVjaG5pcXVlcy1jYW4tYmUtdXNlZC10by1zcGVlZC11cC1jLWNvbXBpbGF0aW9uLXRpbWVz\">What techniques can be used to speed up C++ compilation times?<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9iYWl5YW5odWFuZy9hcmNoaXZlLzIwMTAvMDEvMTcvMTczMDcxNy5odG1s\">如何加快C++代碼的編譯速度<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1xWU42ZWR1VTA2cw==\">(Unity Build) CppCon 2014: Nicolas Fleury &quot;C++ in Huge AAA Games&quot;<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL2dhbWVkZXYvY29tbWVudHMvMms0bDJ6L2lzX3ViaXNvZnRzX3VuaXR5X2J1aWxkX2Zvcl9jX3dvcnRoLw==\">(Unity Build) Is Ubisoft's unity build for C++ worth?<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dvb2RzcGVlZGxlZS5ibG9nc3BvdC50dy8yMDE2LzAxL2MtcGltcGwuaHRtbA==\">(pimpl) C++: 善用 PIMPL 技巧<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JhaXlhbmh1YW5nL2JhY2t1cC9ibG9iLzlmMTFkMDE0OWNiMzY1OWRhYzQ3OTY3ZjFiMTBmM2I3ZWVjODg4ZDMvdG9vbHMvUGVybC9SZW1vdmVSZWR1bmRhbnRJbmNsdWRlcy5wbA==\">(去除重複) Perl腳本，用來自動去除這些冗餘的.h檔<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2R1Y2tyb29tLmJsb2dzcG90LnR3LzIwMTAvMDIvcHJlY29tcGlsZWQtaGVhZGVyLmh0bWw=\">(預編譯.h檔) 終於搞懂了，預編譯header 檔(precompiled header)<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9Yb3JlYXglMjBJbmNyZWRpQnVpbGQ=\">(分佈式編譯) Xoreax IncrediBuild<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvODkyMDY0MC9ob3ctZG8taS1rbm93LXRoZS1kZWZhdWx0LWluY2x1ZGUtZGlyZWN0b3JpZXMtZGVmYXVsdC1saW5rLWRpcmVjdG9yaWVzLWFuZA==\">How do I know the default include directories<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jY2FjaGUuc2FtYmEub3JnLw==\">(Compiler Cache) ccache<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2l0c2NvbXBpbGluZy5ldS8yMDE3LzAxLzEyL3ByZWNvbXBpbGVkLWhlYWRlcnMtY3BwLWNvbXBpbGF0aW9uLw==\">(預編譯.h檔) Speed up C++ compilation, part 1: precompiled headers<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzczNjU3NzA=\">(預編譯.h檔) makefile 範例<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["C++","編譯","gcc","g++","clang","最佳化"]},{"title":"如何優雅的製圖","url":"/draw-diagram-by-text/","content":"<p><img data-src=\"/img/other/elegant.webp\" alt=\"為了放這張圖片而在標題加上形容詞\" /></p>\n<blockquote>\n<p>本篇介紹用語法來畫圖的方法</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"簡介\">簡介</h2>\n<p>工程師經常需要畫圖，如類別圖、架構圖等，而畫圖需要排版。</p>\n<p>而大多編輯器的排版都太過複雜，簡單的編輯器功能又不夠。</p>\n<p>本篇會介紹用語法(或稱為標記式語言, Markup language)來畫圖的方法。</p>\n<h2 id=\"用語法畫圖的好處\">用語法畫圖的好處</h2>\n<ul>\n<li>用文字資料儲存\n<ul>\n<li>版本控制容易\n<ul>\n<li>容易備份原始檔，而非備份圖片檔</li>\n</ul>\n</li>\n<li>檔案小，且沒有圖片解析度問題</li>\n<li>沒有圖片格式讀取問題(svg, webp...)</li>\n</ul>\n</li>\n<li>容易修改\n<ul>\n<li>可以優雅的<s>照抄</s>複製別人做的圖或排版</li>\n</ul>\n</li>\n<li>可自動排版\n<ul>\n<li>強迫症福音：不用再看差幾個pixel/格子</li>\n<li>可套用主題(theme)</li>\n</ul>\n</li>\n<li>可重複使用排版\n<ul>\n<li>類似css的概念</li>\n</ul>\n</li>\n<li>可複製圖中內容(文字)\n<ul>\n<li>如：用Latex畫的圖可以複製各個圖形中的文字</li>\n<li>也可以直接複製原始碼</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"用語法畫圖的壞處\">用語法畫圖的壞處</h2>\n<ul>\n<li>需要額外學習語法</li>\n<li>若需要精確的排版，需要複雜的語法</li>\n<li>不夠有設計感\n<ul>\n<li>i.e., 預設主題很醜</li>\n</ul>\n</li>\n<li>缺少所見即所得(Wysiwyg)的編輯器</li>\n</ul>\n<h2 id=\"傳統畫圖編輯器\">傳統畫圖編輯器</h2>\n<p>使用圖形化介面操作</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2pncmFwaC9kcmF3aW8=\">drawio<i class=\"fa fa-external-link-alt\"></i></span>：最知名</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92ZWN0ci5jb20v\">vectr<i class=\"fa fa-external-link-alt\"></i></span>：容易上手</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmlnbWEuY29tLw==\">figma<i class=\"fa fa-external-link-alt\"></i></span>：專業設計人士使用</li>\n</ul>\n<h2 id=\"用語法畫圖\">用語法畫圖</h2>\n<p>大多都是描述點(Node), 邊(Edge)及屬性(形狀、顏色、大小、方向等)即可產生圖片</p>\n<p>以 mermaid 為例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">flowchart TD</span><br><span class=\"line\">    A[Start] --&gt; B&#123;Is it?&#125;</span><br><span class=\"line\">    B --&gt;|Yes| C[OK]</span><br><span class=\"line\">    C --&gt; D[Rethink]</span><br><span class=\"line\">    D --&gt; B</span><br><span class=\"line\">    B ----&gt;|No| E[End]</span><br></pre></td></tr></table></figure>\n<p>就能產生</p>\n<p><img data-src=\"/img/other/flowchart.webp\" alt=\"mermaid flowchart\" /></p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ncmFwaHZpei5vcmcv\">Graphviz<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>使用dot語言</li>\n<li>Python套件\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B5ZG90L3B5ZG90\">pydot<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B5Z3JhcGh2aXovcHlncmFwaHZpeg==\">pygraphviz<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n<li>線上編輯\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lZG90b3IubmV0Lw==\">Edotor<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3Zpei1qcy5jb20v\">Viz.js<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMv\">Mermaid<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>類Markdown語法</li>\n</ul>\n</li>\n<li>LaTeX\n<ul>\n<li>相對困難，但可以搭配數學公式</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0J1cm50U3VzaGkvZXJk\">erd<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pbmdyYW1tZXIvZGlhZ3JhbXM=\">Diagrams<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mbG93Y2hhcnQuanMub3JnLw==\">flowchart.js<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>只能畫流程圖</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYmRpYWdyYW0uaW8v\">dbdiagram<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>只能畫 Database 關係圖</li>\n</ul>\n</li>\n<li>線上編輯：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rcm9raS5pby8jdHJ5\">kroki<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>支援多種語法</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>基本上各套件的語法是很像的</p>\n</blockquote>\n<h2 id=\"畫神經網路\">畫神經網路</h2>\n<p>輸入模型結構檔案以將模型視覺化</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2x1dHpyb2VkZXIvbmV0cm9u\">netron<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2FsZXhsZW5haWwubWUvTk4tU1ZHL0xlTmV0Lmh0bWw=\">LeNet<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RvbmlvNzMvZG5udmlld2Vy\">dnnviewer<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h3 id=\"畫UML\">畫UML</h3>\n<p>若程式完成後才需要畫UML圖的話，目前已有許多套件可以將程式碼轉換成UML。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># will generate plantuml script from python file</span></span><br><span class=\"line\">pip install pylint</span><br><span class=\"line\">pyreverse -o plantuml --colorized target.py</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbGFudHVtbC5jb20vemgv\">PlantUML<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>基於dot語言，提供更高階的功能</li>\n<li>線上編輯\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGxhbnR1bWwuY29tL3BsYW50dW1sL3VtbC9TeWZGS2oyckt0M0NvS25FTFIxSW80WkRvU2E3MDAwMA==\">官方<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGxhbnR0ZXh0LmNvbS8=\">Plaintext<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NoYXJ0bWFnZS5jb20vaW5kZXguaHRtbA==\">chartmage<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmFzaGVkbWluZC5naXRodWIuaW8vUGxhbnRVTUxIaXRjaGhpa2Vyc0d1aWRlL2xheW91dC9sYXlvdXQuaHRtbA==\">教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"畫文字圖\">畫文字圖</h3>\n<p>只用限定的文字來畫圖，如ASCII Diagram</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"code\"><pre><span class=\"line\">         ,-.  </span><br><span class=\"line\">         `-&#x27;  </span><br><span class=\"line\">         /|<span class=\"string\">\\  </span></span><br><span class=\"line\"><span class=\"string\">,---.     </span>|<span class=\"string\">   </span></span><br><span class=\"line\"><span class=\"string\"></span>|<span class=\"string\">Bob</span>|<span class=\"string\">    / \\  </span></span><br><span class=\"line\"><span class=\"string\">`-+-&#x27;   Alice </span></span><br><span class=\"line\"><span class=\"string\">  </span>|<span class=\"string\">hello  </span>|<span class=\"string\">   </span></span><br><span class=\"line\"><span class=\"string\">  </span>|<span class=\"string\">------&gt;</span>|<span class=\"string\">   </span></span><br><span class=\"line\"><span class=\"string\">  </span>|<span class=\"string\">       </span>|<span class=\"string\">   </span></span><br><span class=\"line\"><span class=\"string\">  Is it ok?   </span></span><br><span class=\"line\"><span class=\"string\">  </span>|<span class=\"string\">&lt;------</span>|<span class=\"string\">   </span></span><br><span class=\"line\"><span class=\"string\">,-+-.   Alice </span></span><br><span class=\"line\"><span class=\"string\"></span>|<span class=\"string\">Bob</span>|<span class=\"string\">    ,-.  </span></span><br><span class=\"line\"><span class=\"string\">`---&#x27;    `-&#x27;  </span></span><br><span class=\"line\"><span class=\"string\">         /</span>|<span class=\"string\">\\  </span></span><br><span class=\"line\"><span class=\"string\">          </span>|<span class=\"string\">   </span></span><br><span class=\"line\"><span class=\"string\">         / \\  </span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>編輯器：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dlaWRhZ2FuZy90ZXh0LWRpYWdyYW0=\">text-diagram<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>從語法產生：<span class=\"exturl\" data-url=\"aHR0cDovL2RpdGFhLnNvdXJjZWZvcmdlLm5ldC8=\">Ditaa<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"在-hexo-中製圖\">在 hexo 中製圖</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pYW8xMDA3L2hleG8tZmlsdGVyLWtyb2tp\">https://github.com/miao1007/hexo-filter-kroki<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"總結\">總結</h2>\n<p>和資料視覺化不同，本篇只有討論手工製圖的腳本化。</p>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb2RlbGluZy1sYW5ndWFnZXMuY29tL3RleHQtdW1sLXRvb2xzLWNvbXBsZXRlLWxpc3Qv\">Text to UML and other “diagrams as code” tools – Fastest way to create your models<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXVnbWVudGVkbWluZC5kZS8yMDIwLzEyLzIwL3BsYWluLXRleHQtZGlhZ3JhbXMtYXMtY29kZS8=\">Plain text diagrams – the best diagrams as code tools<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qb2pvemh1YW5nLmdpdGh1Yi5pby90dXRvcmlhbC9tZXJtYWlkLWNoZWF0LXNoZWV0Lw==\">Mermaid Cheat Sheet<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["心得"],"tags":["排版","Graphviz","Drawio","Mermaid","UML"]},{"title":"Factorization Machines(FM) 和 Field-Aware Factorization Machine(FFM)：推薦系統中的瑞士軍刀","url":"/factorization-machines/","content":"<h2 id=\"Factorization-Machines-FM\">Factorization Machines(FM)</h2>\n<ul>\n<li>SVM\n<ul>\n<li>難以在稀疏資料中學習</li>\n</ul>\n</li>\n<li>Factorization Models(如Matrix Factorization)\n<ul>\n<li>擴展性低：需要特定的輸入格式</li>\n</ul>\n</li>\n</ul>\n<p>FM：克服SVM和Factorization Models的缺點</p>\n<ul>\n<li>可在稀疏資料中學習</li>\n<li>輸入資料可擴展</li>\n<li><strong>訓練時間為線性複雜度</strong></li>\n</ul>\n<h3 id=\"理論\">理論</h3>\n<p>FM將權重 $w_{ij}$ 設為兩個長度為k的<strong>隱向量</strong>$V_i, V_j$的<strong>內積</strong>，表示為$\\langle V_i, V_j \\rangle$</p>\n<p><img data-src=\"/img/recommend/fm-formula.webp\" alt=\"2維的FM公式\" /></p>\n<ol>\n<li>$w_0$​是bias</li>\n<li>$w_i​$是特徵$i$的一維權重</li>\n<li>$w_{i,j}$​是特徵$i$和特徵$j$的二次交叉權重</li>\n</ol>\n<ul>\n<li>隱向量長度$k$為hyperparameter</li>\n<li>FM將權重矩陣分解為隱向量的內積，破壞了權重的獨立性，所以在稀疏資料中仍能學習\n<ol>\n<li>已知一正定矩陣$W$，必存在$V$使$W=VV^t$</li>\n<li>權重矩陣$W$必為正定</li>\n<li>所以$W$必能分解成隱向量矩陣$V$乘自身的轉置</li>\n</ol>\n</li>\n<li>原本$W$的大小為$\\frac{n^2}{2}$，改成隱向量$V$之後大小為$kn$，$k$通常不會設很大，明顯減少參數數量\n<ul>\n<li>限制$k$的大小也能限制FM模型的表達力，泛化能力較好</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/recommend/FM-structure.webp\" alt=\"結構\" /></p>\n<h3 id=\"效率\">效率</h3>\n<p><img data-src=\"/img/recommend/fm-time-complexity.webp\" alt=\"\" /></p>\n<p>整理公式後，Inference的時間複雜度從$O(kn^2)$降到了$O(kn)$，$n$為特徵維度</p>\n<ul>\n<li>第2行公式推導：表示為整個矩陣扣掉對角項再除以2，因為$W$是對稱矩陣</li>\n<li>詳細推導可看<span class=\"exturl\" data-url=\"aHR0cHM6Ly95dWxvbmd0c2FpLm1lZGl1bS5jb20vZmFjdG9yaXphdGlvbi1tYWNoaW5lLTYzMTYwYmMyYzA2Yg==\">這篇<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>實作上只須計算非0元素的乘積，時間複雜度再下降到$O(km)$，$m$為平均一筆輸入資料中，值非0的特徵數</li>\n</ul>\n<h3 id=\"更新\">更新</h3>\n<p>使用gradient descent學習參數<br />\n<img data-src=\"/img/recommend/fm-gradient.webp\" alt=\"\" /></p>\n<p>$\\sum^n_{j=1}v_{j, f}x_j$可以事先計算，所以每次梯度更新的時間複雜度為$O(1)$</p>\n<p>因此FM的訓練時間複雜度也是$O(km)$</p>\n<h3 id=\"高維度FM\">高維度FM</h3>\n<p><img data-src=\"/img/recommend/fm-dway.webp\" alt=\"\" /></p>\n<p>經過公式簡化(和二維的方法相似)，也可以在線性時間內計算</p>\n<h3 id=\"FM-和-Factorization-Model-SVM-比較\">FM 和 Factorization Model, SVM 比較</h3>\n<p>論文中證明了兩件事</p>\n<ol>\n<li>各種Factorization Model為FM的特化</li>\n<li>FM可以解決SVM在稀疏資料中無法成功訓練的問題</li>\n</ol>\n<p>詳細證明看不懂，略過</p>\n<h3 id=\"結論\">結論</h3>\n<ul>\n<li>FM速度快、容易實作，於2012~14年為業界主流模型</li>\n<li>FM產生的隱向量可視為一種embedding\n<ul>\n<li>所以拿user的隱向量找相似隱向量的item，就是一個簡易且快速的推薦方法</li>\n</ul>\n</li>\n<li>FM適合類型特徵(離散)而非數值特徵(連續)，因為\n<ul>\n<li>類型特徵可有多個隱向量，而數值特徵只有一個</li>\n<li>數值特徵不應使用同一個隱向量，如10歲和40歲</li>\n<li>FM速度和非零特徵數有關，數值特徵類型化後不影響訓練速度</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Field-aware-factorization-machines-FFM\">Field-aware factorization machines(FFM)</h2>\n<ul>\n<li>FM：一個特徵有<strong>一個</strong>隱向量</li>\n<li>FFM：一個特徵有<strong>一組</strong>隱向量\n<ul>\n<li>每個隱向量對應不同的<strong>特徵域</strong></li>\n<li>特徵域通常為一群代表相同性質的特徵，如one-hot特徵</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/recommend/ffm-formula.webp\" alt=\"\" /></p>\n<h3 id=\"範例\">範例</h3>\n<ul>\n<li>出版商特徵域(P): ESPN, Vogue, and NBC</li>\n<li>廣告商特徵域(A): Nike, Gucci, and Adidas</li>\n<li>消費者性別特徵域(G): Male, Female</li>\n</ul>\n<p>在(ESPN, Nike) 和 (ESPN, Male) 中，ESPN的隱向量是不同的($V_{ESPN, A}$和 $V_{ESPN, G}$)</p>\n<p>FM的隱向量：$$V_{ESPN}V_{Nike}, V_{ESPN}V_{Male}, V_{Nike}V_{Male}$$<br />\nFFM的隱向量：$$V_{ESPN, A}V_{Nike, P}, V_{ESPN, G}V_{Male,P}, V_{Nike, G}V_{Male,A}$$</p>\n<h3 id=\"結論-2\">結論</h3>\n<ul>\n<li>訓練時間複雜度為$O(kn^2)$</li>\n<li>因為FFM的隱向量限制在一個特徵域，FFM的$k$可以比FM的$k$小</li>\n</ul>\n<h2 id=\"公式比較\">公式比較</h2>\n<p>只比較二次交叉項</p>\n<p>$$FM(v, x) = ... + \\sum^n_{j_1=1}{\\sum^n_{j_2=j_1+1}{\\langle v_{j_1}, v_{j_2}\\rangle x_{j_1}x_{j_2}}}$$<br />\n$$FFM(v, x) = ... + \\sum^n_{j_1=1}{\\sum^n_{j_2=j_1+1}{\\langle v_{j_1, f_2}, v_{j_2, f_1}\\rangle x_{j_1}x_{j_2}}}$$</p>\n<h2 id=\"方法比較\">方法比較</h2>\n<ul>\n<li>FM：在LR(Logistic Regression)的基礎上，加入特徵交叉</li>\n<li>FFM：在FM的基礎上，加入特徵域交叉</li>\n</ul>\n<h2 id=\"總結\">總結</h2>\n<p>就算Deep Learning盛行，FM也是一個很好的Baseline Model</p>\n<h2 id=\"Reference\">Reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3NpZS5udHUuZWR1LnR3L35iOTcwNTMvcGFwZXIvUmVuZGxlMjAxMEZNLnBkZg==\">Rendle, Steffen. &quot;Factorization machines.&quot; 2010 IEEE International conference on data mining. IEEE, 2010<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDEuMDQwOTk=\">Juan, Yuchin, et al. &quot;Field-aware factorization machines for CTR prediction.&quot; Proceedings of the 10th ACM conference on recommender systems. 2016<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNDMxNzQxMDg=\">FM：推薦算法中的瑞士軍刀<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93bmdhdy5naXRodWIuaW8vZmllbGQtYXdhcmUtZmFjdG9yaXphdGlvbi1tYWNoaW5lcy13aXRoLXhsZWFybi8=\">Field-aware Factorization Machines with xLearn<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dlYi5jcy51Y2xhLmVkdS9+Y2hvaHNpZWgvdGVhY2hpbmcvQ1MyNjBfV2ludGVyMjAxOS9sZWN0dXJlMTMucGRm\">http://web.cs.ucla.edu/~chohsieh/teaching/CS260_Winter2019/lecture13.pdf<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC84OTYzOTMwNg==\">推薦系統系列（一）：FM理論與實踐<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly95dWxvbmd0c2FpLm1lZGl1bS5jb20vZmFjdG9yaXphdGlvbi1tYWNoaW5lLTYzMTYwYmMyYzA2Yg==\">初探Factorization Machine<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyODkyNTE0Mw==\">推薦系統算法FM、FFM使用時，連續性特徵，是直接作為輸入，還是經過離散化後one-hot處理呢？<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NTMyMzk2NzU=\">FM模型連續特徵離散化<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["推薦系統","FM","FFM","SVM","Embedding"]},{"title":"經濟學一","url":"/economics/","content":"<!-- RENEW: -->\n<h2 id=\"Introduction\">Introduction</h2>\n<h3 id=\"經濟學是什麼？\">經濟學是什麼？</h3>\n<p>經濟學是理解「人的行為」的方法：<br />\n個人從事行為前會衡量利弊得失，有一定脈絡可循<br />\n個人的行為反應其自利動機，人為自己而活<br />\n社會由個人組成，從個人行為出發，解釋各種社會現象</p>\n<p><strong>經濟學家的眼鏡：將每個人視為理性、自利</strong></p>\n<span id=\"more\"></span>\n<p>反駁</p>\n<ol>\n<li>利他行為：因為可以得到回報，如滿足感、快樂而幫助別人</li>\n<li>人並非隨時理性(理性的非理性)：人因為無法隨時思考，所以大多時候是靠經驗法則做決定。但是「決定一件事是否需要思考」是理性的決定</li>\n</ol>\n<p>個人自利是好事還是壞事大部分決定於制度。</p>\n<blockquote>\n<p>我們每天有得吃喝,並非由於肉商、酒商或麵包商的仁心善行,而是由於他們關心自己的利益。<br />\n-- 亞當．史密斯</p>\n</blockquote>\n<h3 id=\"制度與誘因\">制度與誘因</h3>\n<p>Ex. 雲稜山屋(南湖大山)<br />\n食物、睡袋、像人一般高的行李、臉盆、乾燥設備、沒有廁所</p>\n<p>為什麼各國的山屋不同？</p>\n<p>日本、尼泊爾的山屋都是民間經營<br />\n→ 登山客愈多，山屋主人的利潤愈多<br />\n→ 山屋主人關心自己的利益，因此提供高品質服務</p>\n<p>台灣的山屋是由林務局或國家公園管理處經營<br />\n→ 在公務員眼中，登山客是來找麻煩的<br />\n→ 公務員關心自己的利益，所以雲稜山莊沒有廁所</p>\n<p>山屋主人和公務員都追求自己的利益<br />\n其因為制度不同，兩者面對的誘因不同，其行為也不同</p>\n<p>吳聰敏 (2010)，《經濟學原理》</p>\n<blockquote>\n<p>… 上山的日本人絡繹不絕。其中，年輕人很少，絕大部分是中老年人。因為有山屋，他們只須背著自身的衣物 … 如果日本和台灣的山屋一樣，我相信這當中百分之九十的人上不到兩三千公尺的高山。南湖大山是台灣第一等好山，但台灣有多少人登過呢？</p>\n</blockquote>\n<p>理性、自利的個人 → <strong>制度</strong> → 社會現象</p>\n<p>要怎麼改善台灣的登山環境？</p>\n<ul>\n<li>換掉不適任的公務員？</li>\n<li>花更多錢建更好的山屋？</li>\n<li><strong>改變制度 → 改變誘因 → 改變人的行為</strong></li>\n</ul>\n<p>經濟學由<strong>個人觀點</strong>出發來<strong>解釋現象</strong>，但通常並不認為社會現象是「某些個人」的「問題」<br />\n原子（個人）、連結方式（制度）、外貌與性質（行為）<br />\n如同微觀的原子，雖然都做著不同方向的運動，但是在巨觀上來看還是朝著某個方向運動的</p>\n<blockquote>\n<p>經濟學家都是法家</p>\n</blockquote>\n<h3 id=\"經濟學家的角色\">經濟學家的角色</h3>\n<ul>\n<li>解釋現象</li>\n<li>制定政策</li>\n<li>實是性（Positive）敘述可能被證據推翻，不帶價值判斷，討論「是什麼？」\n<ul>\n<li>日本所得比台灣高，因此山屋比台灣的要大</li>\n</ul>\n</li>\n<li>規範性（Normative）敘述無法用證據檢驗，帶有價值判斷，討論「該如何？」\n<ul>\n<li>為了改善登山環境，政府應該開放民間經營山屋</li>\n</ul>\n</li>\n<li>「台灣所得分配不公平」\n<ul>\n<li>兩者皆有</li>\n</ul>\n</li>\n</ul>\n<p>一旦進入政策討論，就無法迴避價值判斷<br />\n價值判斷通常需要事實證據支持，否則難以說服別人</p>\n<h3 id=\"結論\">結論</h3>\n<ul>\n<li>經濟學是一門「社會科學」，用科學的方法來研究社會現象\n<ul>\n<li>現象 → 問題 → 解釋 → 驗證</li>\n<li>科學理論的起頭都是猜測(conjecture)。經過驗証之後, 某一個猜測比其他的猜測更有解釋能力, 這個猜測就成為眾所接受的理論(theory), 或稱為正確的理論</li>\n<li>「整個科學不過是每日思考的精益求精罷了」--愛因斯坦</li>\n</ul>\n</li>\n<li>經濟學家的「眼鏡」和其他社會科學的不同\n<ul>\n<li>個人、理性、自利</li>\n</ul>\n</li>\n<li>如果經濟學能幫助你正確認識問題，正確解釋現象，經濟學就有「經世濟民」的可能</li>\n<li>個體經濟學\n<ul>\n<li>家戶與廠商如何做決策，及它們如何在市場中互動</li>\n</ul>\n</li>\n<li>總體經濟學\n<ul>\n<li>物價膨脹，失業與經濟成長等整體經濟現象</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"經濟學十大原理\">經濟學十大原理</h3>\n<p>經濟學是研究社會如何管理其稀少性資源的科學<br />\n效率：由稀少性資源中獲取最大的利益</p>\n<ol>\n<li>人們面臨取捨</li>\n<li>天下沒有白吃的午餐(機會成本：政府稅收增加，民間支出減少)</li>\n<li>理性的人進行邊際思考</li>\n<li>誘因改變行為</li>\n<li>交易可以讓每個人更好</li>\n<li>市場<strong>通常</strong>是組織經濟活動的良好方式(價格)</li>\n<li>政府<strong>有時</strong>可以改善市場結果(執行法令，保障財產權，反例：市場失靈(無法有效率)，原因：外部性，市場影響力，公共財；也無法均等分配)</li>\n<li>一國的生活水準決定於其生產(服務和商品)的能力(一年2%成長，每三十五年會增加一倍)</li>\n<li>政府印太多鈔票時，物價會上漲(台灣在1946年到1949年，每年的物價漲幅都在500%~1200%之間，而<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU0JUJBJThDJUU0JUJBJThDJUU1JTg1JUFCJUU0JUJBJThCJUU0JUJCJUI2\">二二八事件<i class=\"fa fa-external-link-alt\"></i></span>在1947年爆發，1949年6月15日，舊台幣換新台幣)</li>\n<li>社會面臨物價膨脹與失業的短期取捨(貨幣數量增加→消費需求增加→提高產品售價，僱用更多勞工→失業率下降)</li>\n</ol>\n<h3 id=\"大多數經濟學家都同意的20個命題-節錄\">大多數經濟學家都同意的20個命題(節錄)</h3>\n<ol start=\"2\">\n<li>財政政策(如減稅，政府支出增加)對一個未達充分就業的經濟有顯著的刺激效果(90%)</li>\n<li>領現金比等值的實物補貼更能提高領受者的福利水準(84%)</li>\n<li>巨額的預算赤字對經濟有不利影響(83%)</li>\n<li>最低工資使青年人與低技能勞工的失業增加(79%)</li>\n<li>政府應往「負所得稅」的方向改造福利制度(79%)</li>\n</ol>\n<h2 id=\"誘因與行為\">誘因與行為</h2>\n<h3 id=\"機會成本（opportunity-costs）\">機會成本（opportunity costs）</h3>\n<ul>\n<li>決策時關心的成本</li>\n<li>某項選擇的機會成本，是指資源若改作其他用途時，所能產生的最大價值</li>\n<li>新藥開發\n<ul>\n<li>不應上市卻上市</li>\n<li>應上市而未上市</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"邊際（marginal）思考\">邊際（marginal）思考</h3>\n<ul>\n<li>只考慮成本、效益<strong>變化</strong>，即為邊際效益及<span class=\"exturl\" data-url=\"aHR0cHM6Ly90dy5rbm93bGVkZ2UueWFob28uY29tL3F1ZXN0aW9uL3F1ZXN0aW9uP3FpZD0xNjA4MDkxNzA3Mzc5\">邊際成本<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>廠商要不要多生產一單位商品？</li>\n<li>要不要多吃一份冰淇淋？</li>\n</ul>\n</li>\n<li>不計算<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JUIyJTg5JUU2JUIyJUExJUU2JTg4JTkwJUU2JTlDJUFD\">沉沒成本<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>不計算決策無法改變的成本</li>\n</ul>\n<h2 id=\"經濟學家如何思考？\">經濟學家如何思考？</h2>\n<p>經濟學家是一群說故事的人<br />\n各種經濟學理論就是一個個不同的故事，用來解釋社會現象<br />\n不同的故事會引申出不同的寓意（政策）</p>\n<h3 id=\"假設-Assumption-與模型-Model\">假設(Assumption)與模型(Model)</h3>\n<ul>\n<li>經濟學家習慣用假設和模型來說故事\n<ul>\n<li>個人、理性、自利</li>\n<li>依故事需要增加假設</li>\n<li>用來簡化現實</li>\n<li>依目的使用不同的假設和模型</li>\n<li>遊戲(模擬XX)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"視覺模型：經濟循環流程圖-Circular-flow-Diagram\">視覺模型：經濟循環流程圖 (Circular-flow Diagram)</h3>\n<p><img data-src=\"http://www2.hchs.hc.edu.tw/blog/gallery/20/%E7%B6%93%E6%BF%9F%E6%B4%BB%E5%8B%95%E5%BE%AA%E7%92%B0%E6%B5%81%E7%A8%8B%E5%9C%96.png\" alt=\"\" /></p>\n<h3 id=\"數學與曲線：生產可能線-Production-Possibility-Frontier\">數學與曲線：生產可能線 (Production Possibility Frontier)</h3>\n<p><img data-src=\"/img/eco1/ppf.webp\" alt=\"\" /></p>\n<ul>\n<li>生產要素（factors of production）數量和生產技術固定時，能生產的各種商品最大數量的組合</li>\n<li>生產可能線凹向原點，代表邊際成本遞增</li>\n<li>PPF 的<strong>斜率絕對值</strong>是多生產一單位米的<strong>機會成本</strong></li>\n<li>用 PPF 描述\n<ul>\n<li>人口增加</li>\n<li>技術進步</li>\n<li>失業增加</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相關性-relation-與因果關係-causality\">相關性(relation) 與因果關係(causality)</h3>\n<p>相關性不代表因果關係</p>\n<ul>\n<li>遺漏變數\n<ul>\n<li>裙子長度與可樂銷售量</li>\n<li>學歷和薪水</li>\n<li>出席率和學期成績(?)</li>\n</ul>\n</li>\n<li>反向因果\n<ul>\n<li>警察人數與犯罪率</li>\n</ul>\n</li>\n<li>時間先後不能決定誰是因，誰是果\n<ul>\n<li>買嬰兒用品在先，嬰兒出生在後</li>\n</ul>\n</li>\n</ul>\n<p>為何高學歷攤販的利潤較高？</p>\n<h2 id=\"生產和需求\">生產和需求</h2>\n<p>交易</p>\n<ul>\n<li>使人們專業化生產具比較利益的產品，所以交易可以使每個人獲利</li>\n<li>若雙方要能同時獲利，則價格會位於雙方的機會成本之間</li>\n<li>絕大多數經濟學家支持自由貿易</li>\n<li>假設市場完全競爭\n<ul>\n<li>產品一模一樣</li>\n<li>沒有任何一個買者或賣者可以影響市場價格</li>\n</ul>\n</li>\n</ul>\n<p>生產可能線</p>\n<ul>\n<li>斜率代表多生產一單位 X 要犧牲多少 Y</li>\n<li>生產可能線為負斜率</li>\n<li>邊際成本遞增 → PPF 凹向原點</li>\n</ul>\n<p>邊際價值</p>\n<ul>\n<li>多消費這單位商品帶來的滿足相當於多少錢</li>\n<li>邊際價值遞減</li>\n<li>vs 需求曲線 <img data-src=\"/img/eco1/mgd.webp\" alt=\"\" /></li>\n<li>這兩條線意義不同，但形狀完全相同。我們無法知道邊際價值線，但我們可以觀察到消費者的需求曲線</li>\n</ul>\n<p>需求曲線移動的原因 <img data-src=\"/img/eco1/dline.webp\" alt=\"需求的改變\" /></p>\n<ul>\n<li>所得</li>\n<li>相關產品價格(替代品，互補品)</li>\n<li>嗜好</li>\n<li>預期心理</li>\n<li>買者人數(市場需求由個別需求加總)</li>\n</ul>\n<p>供給曲線移動的原因</p>\n<ul>\n<li>成本</li>\n<li>技術</li>\n<li>預期心理</li>\n<li>賣者人數</li>\n</ul>\n<p>正常財：商品需求隨所得減少而減少<br />\n劣等財：商品需求隨所得增加而減少(公車)</p>\n<p>範例：<br />\n假設桃花源的桃子供給和需求如下<br />\nQS = 50P；QD = 300 - 100P<br />\n價格與數量的單位分別為元/公斤和萬公斤<br />\n均衡價格與數量為何？<br />\n由於今年沒有天災侵襲桃花源，使得在每個價格之下桃子的供給量均增加 150 萬公斤<br />\n請問桃子的供給為何？<br />\n桃子的均衡價格和數量各為何？<br />\n<img data-src=\"/img/eco1/momo.webp\" alt=\"政府\" /></p>\n<h2 id=\"彈性\">彈性</h2>\n<ul>\n<li>價格改變使量大幅變動：彈性大(斜率小)\n<ul>\n<li>以1為標準</li>\n<li>無需求彈性時，價格上漲時需求量下降少，收益增加</li>\n<li>有需求彈性時，價格上漲時需求量下降多，收益減少</li>\n</ul>\n</li>\n<li>影響需求彈性的因素\n<ul>\n<li>替代品的多寡</li>\n<li>必需品(無彈性) vs. 奢侈品(有彈性)</li>\n<li>市場範圍\n<ul>\n<li>冰淇淋(無彈性) vs. 香草冰淇淋(有彈性)</li>\n</ul>\n</li>\n<li>時間長短\n<ul>\n<li>若油價上漲，需求會愈來愈有彈性 → 換省油車，坐捷運…</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>影響供給彈性的因素\n<ul>\n<li>時間長短(主要因素，生產需要時間)</li>\n<li>變動產量的難易度(豪宅)</li>\n<li>目前供給量\n<ul>\n<li>通常有最大產能的限制</li>\n<li>目前供給量高，彈性小</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>公式：需求彈性 = 需求量變動比 / 價格變動比</li>\n<li>公式(中點法)：需求彈性 = ((Q2-Q1)/(Q2+Q1)/2) / ((P2-P1)/(P2+P1)/2)</li>\n<li>所得彈性：所得變動時，量的變化程度</li>\n<li>彈性若不因價格改變，則需求/供給線為曲線</li>\n<li>Example\n<ul>\n<li>使用新品種稻米，使供給過多，價格下降，因稻米需求彈性小，收益減少</li>\n<li>政策：不要種太多\n<ul>\n<li>以消費者利益減少為代價</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>如何有效地讓民眾節約用水？調漲水費是否能「有效的」節約用水？<br />\n水是必需品，彈性小，因此提高水費對減少用水量的效果有限？</p>\n<p>誰有販毒的比較利益？為什麼黑道有販毒的比較利益？黑道為什麼不賣香菸或咖啡？<br />\n加強禁毒使毒販數量減少，供給減少使毒品價格上升，交易數量減少。<br />\n毒品的需求彈性很小，價格上升，需求量減少不多，毒販總收入（毒品總支出）增加。<br />\n政府又不管毒品市場的交易，黑道有很大的誘因來接管，維持交易秩序。</p>\n<p>有人說：如果需求彈性很小，調漲租金可使房東總收益提高，房東就會提高租金來彌補損失。<br />\n這是一種對需求彈性常見的誤解。價格上升時房東總收益會增加，並不代表房東「有辦法」提高租金。房租是由市場供需決定，而不是由房東來決定。否則，房東何必等到需求減少再來提高房租？</p>\n<h2 id=\"價格管制與數量管制\">價格管制與數量管制</h2>\n<p>政府管制價格或數量的效果</p>\n<ul>\n<li>不具約束力：沒有效果</li>\n<li>具約束力：過剩或短缺 → 排隊、黑市、濫權 …</li>\n<li>Ex. 最低工資，油價，</li>\n</ul>\n<p>數量管制</p>\n<ul>\n<li>醫師(90%↑)、律師(8%)、會計師(18%)執照考試</li>\n<li>（有效的）數量管制使交易量減少，價格上升</li>\n<li>證照制度保障了職業的薪水</li>\n</ul>\n<h2 id=\"稅負\">稅負</h2>\n<p>「稅是我們為了社會文明化所付出的代價」</p>\n<ul>\n<li>\n<p>法定稅負歸屬和實際稅負歸屬無關</p>\n<ul>\n<li>消費者和供給者各負擔部分稅金</li>\n<li>消費者（供給者）負擔稅金的比例大小與其價格彈性有關：彈性相對大者負擔比例較小\n<ul>\n<li>彈性小者較難離開市場</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>課稅會壓抑市場活動</p>\n<ul>\n<li>交易量減少，無法實現所有的市場利得</li>\n</ul>\n</li>\n<li>\n<p>2005.7 勞退新制 (楊子霆、駱明慶（2008）)</p>\n<ul>\n<li>強制雇主必須按月提撥勞工薪資的 6% 作為退休金\n<ul>\n<li>新制實行後才取得現職工作的勞工，新制使其薪資減少 5.86%</li>\n</ul>\n</li>\n<li>新制帶來的退休金成本似乎完全轉嫁給勞工\n<ul>\n<li>相對於勞動需求，勞動供給彈性相對較小</li>\n<li>相對於雇主，勞工的議價能力較小</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>罰娼？罰嫖？</p>\n<ul>\n<li>誰的彈性較小？</li>\n<li>什麼才是真正需要討論的問題？</li>\n</ul>\n</li>\n<li>\n<p>器官市場</p>\n<ul>\n<li>金額為零的價格上限</li>\n</ul>\n</li>\n<li>\n<p>價、量管制</p>\n<ul>\n<li>QD＝200－5P；QS＝5P</li>\n<li>原始 P = 20, Q = 100</li>\n<li>量管制：管制數量為 80\n<ul>\n<li>Q=80 → P=24</li>\n<li>結果類似課8元的稅</li>\n</ul>\n</li>\n<li>價管制：管制價格為 16\n<ul>\n<li>P=16 → Q=80</li>\n<li>結果類似8元的補貼</li>\n</ul>\n</li>\n<li>對廠商課從量稅 T＝8\n<ul>\n<li>P＝24, Q＝80</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>堅定的信念、正義感等好東西應該「透過接觸各種不一樣的想法」建立，而非由某些人傳授</p>\n<h2 id=\"市場與效率\">市場與效率</h2>\n<p>總剩餘最大的情形</p>\n<ul>\n<li>願付價格較高者被消費</li>\n<li>生產成本較低者被生產</li>\n<li>總剩餘：供給曲線之上，需求曲線之下的面積</li>\n<li><img data-src=\"/img/eco1/santa.webp\" alt=\"\" /></li>\n<li>S_santa = 100000，等同免費提供，供給向右平移</li>\n<li><img data-src=\"/img/eco1/santa2.webp\" alt=\"\" /></li>\n</ul>\n<p>課稅</p>\n<ul>\n<li>若稅過高\n<ul>\n<li>價格上升，某些購買者的消費者剩餘變負數，不會交易→消失的交易量及利得</li>\n<li>課稅優於價量管制：可獲得稅收，沒有分配的問題(由市場決定)</li>\n<li><img data-src=\"/img/eco1/bc.webp\" alt=\"課稅 and 價量管制\" /></li>\n</ul>\n</li>\n<li><strong>彈性愈大，無謂損失愈大</strong></li>\n<li>拉弗曲線(Laffer Curve)\n<ul>\n<li>在單位稅額增加的情況下</li>\n<li>稅收金額先增後減</li>\n<li>無謂損失與單位稅額的平方成正比</li>\n</ul>\n</li>\n<li>減稅是為了增加勞動供給(供給面經濟學)\n<ul>\n<li>也會影響創業意願</li>\n</ul>\n</li>\n</ul>\n<p>補貼</p>\n<ul>\n<li>彈性相對大者受益較小</li>\n<li><img data-src=\"/img/eco1/subsidy.webp\" alt=\"\" /></li>\n</ul>\n<h3 id=\"課外：如何表達想法\">課外：如何表達想法</h3>\n<ul>\n<li>前置作業：澄清問題</li>\n<li>有效率的討論\n<ul>\n<li>議程決定</li>\n<li>先形成共識再討論細節</li>\n<li>控制討論進度</li>\n</ul>\n</li>\n<li>呈現結論\n<ul>\n<li>建立大綱</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"國際貿易\">國際貿易</h2>\n<ul>\n<li>\n<p>假設本國無法影響國際價格</p>\n<ul>\n<li>出口商品：生產者獲利，消費者損失(總 獲利&gt;損失)</li>\n<li>進口商品：消費者獲利，生產者損失(總 獲利&gt;損失)</li>\n</ul>\n</li>\n<li>\n<p>其他好處</p>\n<ul>\n<li>消費產品種類增加</li>\n<li>規模經濟，成本減低</li>\n<li>競爭提高</li>\n</ul>\n</li>\n<li>\n<p>關稅</p>\n<ul>\n<li><img data-src=\"/img/eco1/guan.webp\" alt=\"\" /></li>\n<li>稅收：G，無謂損失：F+H</li>\n</ul>\n</li>\n<li>\n<p>配額</p>\n<ul>\n<li>超過配額之外的進口或出口將被禁止或被徵收高額關稅</li>\n<li>配額的發放有可能是根據申請，有可能是根據經驗分配給一些國營的外貿公司，這些外貿公司在沒有進口或出口能力的情況下就可以將配額賣給有進出口意向但是沒有獲得配額的公司，產生了配額租金(圖中F)</li>\n<li><img data-src=\"/img/eco1/payer.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>政府干預貿易的目的</p>\n<ul>\n<li>保護國內產業發展\n<ul>\n<li>幼稚產業若值得政府介入，最佳的切入點往往不是貿易，例如：改善金融市場的效率</li>\n<li>政治勢力大的會獲選</li>\n</ul>\n</li>\n<li>保護國內就業\n<ul>\n<li>總就業量未必增加</li>\n<li>國與國之間相互牽動，可能導致「惡性循環」</li>\n</ul>\n</li>\n<li>貿易公平\n<ul>\n<li>傾銷：以不正常的低廉價格出口其產品至他國\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dpa2kubWJhbGliLmNvbS96aC10dy8lRTYlOEUlQTAlRTUlQTQlQkElRTYlODAlQTclRTUlQUUlOUElRTQlQkIlQjc=\">掠奪性定價<i class=\"fa fa-external-link-alt\"></i></span>：要成功，必須是易出難進的產業</li>\n</ul>\n</li>\n<li>環保與人權\n<ul>\n<li>血汗工廠、童工</li>\n<li>環保議題</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"外部性\">外部性</h2>\n<ul>\n<li>如何達到效率\n<ul>\n<li>外部性內部化\n<ul>\n<li>讓私人[成本/效益]和社會[成本/效益]相等</li>\n</ul>\n</li>\n<li>正外部性：技術外溢\n<ul>\n<li>專利權，研發補貼</li>\n</ul>\n</li>\n<li>負外部性：汽油\n<ul>\n<li>車禍，汙染，交通</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>外部性內部化</p>\n<ol>\n<li>課稅或補貼(以政府為基礎)</li>\n</ol>\n<ul>\n<li>管制，命令\n<ul>\n<li>法律</li>\n</ul>\n</li>\n<li>對污染課稅(Pigouvian Tax，皮古稅) 優於對商品本身課稅\n<ul>\n<li>可以明顯減少外部性造成的損害</li>\n<li><img data-src=\"/img/eco1/waytotax.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>汙染排放權\n<ul>\n<li>新的稀少性資源</li>\n<li>政府給三家廠商各 50 單位汙染許可</li>\n<li>可交易汙染排放權</li>\n</ul>\n</li>\n<li>課稅：定出汙染的價格</li>\n<li>排放權：定出汙染量</li>\n</ul>\n<p>2.私人解決方法(以市場為基礎)</p>\n<ul>\n<li>若財產權定義明確，外部性就會內部化，政府不必然需要介入</li>\n<li>Coase Theorem\n<ul>\n<li>外部性的存在和多寡取決於雙方的決定</li>\n<li>只要清楚界定財產權，使雙方能訂定和執行契約，不用管制就能得到有效率的結果</li>\n<li>問題不在外部性，而在<strong>交易成本(協議的過程)</strong></li>\n</ul>\n</li>\n<li>Ex 工廠 v. 診所\n<ul>\n<li>工廠的噪音每年造成診所 80 萬元損害</li>\n<li>工廠可花 40 萬元清除汙染</li>\n<li>診所可花 20 萬元加裝隔音設備</li>\n<li>皮古: 課 80 萬元汙染稅會得到有效率的結果</li>\n<li>生產效益 X\n<ul>\n<li>X＞20 → 生產,不清噪音,裝隔音牆</li>\n<li>X＜20 → 不生產</li>\n</ul>\n</li>\n<li>課稅的結果\n<ul>\n<li>X＞40 → 生產並清除噪音</li>\n<li>X＜40 → 不生產, 居民不會裝隔音牆</li>\n<li>只要 X 大於 20 課噪音稅的結果皆無效率</li>\n</ul>\n</li>\n<li>若居民有免於噪音的權利\n<ul>\n<li>協商的結果：不論 X 是多少結果都有效率</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Example</p>\n<ul>\n<li>多元成家\n<ul>\n<li>「伴侶制」的爭議</li>\n<li>什麼才真正影響婚姻或伴侶關係是否穩固？</li>\n</ul>\n</li>\n<li>片面離婚 v. 兩願離婚\n<ul>\n<li>研究的結果：離婚率沒差</li>\n<li>只要「財產權」定義明確，不會影響協商結果</li>\n<li>但財產權的歸屬會影響財富的分配</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PW53SVVmTHR0ZDBB\">餐廳禁菸<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>外部性的觀點</li>\n<li>財產權與自由的觀點</li>\n<li>交易成本</li>\n<li>把餐廳當成「家」來看，業主可以決定是否禁煙</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"公共財\">公共財</h2>\n<ul>\n<li>排他性 Excludability</li>\n<li>消費互斥性 Rivalry\n<ul>\n<li>一人使用後其他人無法消費/滿足水準降低</li>\n</ul>\n</li>\n<li>準公共財：排他，不互斥\n<ul>\n<li>有線電視、俱樂部會員</li>\n</ul>\n</li>\n<li>公有資源：互斥，不排他\n<ul>\n<li>海裡的魚、乾淨的空氣、稀有動物</li>\n</ul>\n</li>\n<li>公共財：不互斥，不排他\n<ul>\n<li>國防、基礎科學、消除貧窮</li>\n<li>數學證明不能申請專利(真正的open source)</li>\n</ul>\n</li>\n</ul>\n<p>公共財的特性</p>\n<ul>\n<li>搭便車(Free-rider)\n<ul>\n<li>不付出代價，享受利益</li>\n<li>天氣狀況會顯著的影響投票率</li>\n<li>集會遊行：就算不參加也可能獲得好處</li>\n<li>解決：外部效益內部化\n<ul>\n<li>補貼／課稅</li>\n<li>組成管理委員會（政府）</li>\n<li>廣播：廣告</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>共有資源的悲劇\n<ul>\n<li>不考慮外部性的情況下使用公共財，使大家都得不到好處</li>\n<li>若成為私有財\n<ul>\n<li>湖有主人時湖主得利，湖是共有資源時則沒有任何人得利</li>\n</ul>\n</li>\n<li>學生都偏好差不多，喜歡上課品質較佳的課程\n<ul>\n<li>選課制度：想上就上，無限加簽</li>\n<li>上課品質由老師品質和上課人數決定：上課人數愈多，上課品質愈差</li>\n<li>若 A、B 兩班人數相同但 A 班老師品質較佳，B 班學生會往 A 班移動，均衡時兩班上課品質會一樣「好」</li>\n<li>學生除了上課之外，還可以選擇宅在家裡或宿舍打 LOL。如果上課比打 LOL 快樂，學生就會出門去上課，造成上課品質下降；反之學生就會翹課打魔獸，上課品質將提高。結果：每堂課的品質大概就和學生打 LOL 的快樂程度相當</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>財產權定義明確就會有效率</strong>\n<ul>\n<li>辛巴威如何保護大象？\n<ul>\n<li>讓村民擁有大象</li>\n<li>村民有誘因保護大象免於盜獵者的傷害</li>\n<li>大象數量開始增加，村民生活也得到改善</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>邊際價值線：垂直加總</li>\n</ul>\n<h2 id=\"稅制\">稅制</h2>\n<p>無謂損失</p>\n<ul>\n<li>稅扭曲生產需求決策</li>\n<li>手續成本</li>\n</ul>\n<p>消費稅：可鼓勵儲蓄，有助於投資及經濟成長</p>\n<p>收稅的原則</p>\n<ul>\n<li>受益原則(從政府服務獲得的利益)</li>\n<li>支付能力原則(垂直公平、水平公平)</li>\n</ul>\n<h2 id=\"生產與成本\">生產與成本</h2>\n<p>會計利潤：不排除內隱成本<br />\n經濟利潤：排除內隱成本</p>\n<ul>\n<li>\n<p>邊際產出先遞增再遞減(產出不可能無限增加)</p>\n</li>\n<li>\n<p>邊際成本先遞減(規模經濟、專業化)再遞增(協調整合問題)</p>\n<ul>\n<li>邊際成本 MC＝ΔC／ΔQ</li>\n</ul>\n</li>\n<li>\n<p>AC(單位成本)＝AFC(單位固定成本)＋AVC(單位變動成本)</p>\n<ul>\n<li>AFC 遞減</li>\n<li>AVC、AC 為 U 型</li>\n</ul>\n</li>\n<li>\n<p>MC 通過 AVC 和 AC 的最低點</p>\n</li>\n<li>\n<p>政府補貼漁業用油</p>\n<ul>\n<li>變動成本的變動</li>\n<li>AC、MC 皆向下移動</li>\n</ul>\n</li>\n<li>\n<p>政府給漁夫現金補貼每人 5000 元</p>\n<ul>\n<li>固定成本減少</li>\n<li>AC 向下移動</li>\n<li>MC 不變</li>\n</ul>\n</li>\n<li>\n<p>生產函數 $Q = \\sqrt{KL} $</p>\n</li>\n<li>\n<p>要素價格 $P_L = 1, P_K = 100$</p>\n</li>\n<li>\n<p>若 K＝2, Q=30，短期成本？(只能調整 L)</p>\n<ul>\n<li>Q = $\\sqrt{2L} $</li>\n<li>C = Q^2 / 2 + 200</li>\n<li>短期邊際成本？\n<ul>\n<li>ΔC/ΔQ = (Q^2 / 2 + 200)dQ = Q = $\\sqrt{2L} $</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>長期成本？(L、K 皆可變動)</p>\n<ul>\n<li>K=3, L=300</li>\n<li>C=600</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"競爭市場\">競爭市場</h2>\n<p><strong>廠商極大化利潤</strong></p>\n<ul>\n<li>\n<p>產量在 邊際成本MC = 邊際收入MR 時，利潤最大</p>\n</li>\n<li>\n<p>適用於所有市場結構</p>\n</li>\n<li>\n<p>競爭市場(包含完全競爭、獨占性競爭)</p>\n<ul>\n<li>眾多買方、賣方</li>\n<li>長期無進入、退出障礙(短期無法退出)</li>\n<li>廠商利潤 = 0\n<ul>\n<li><strong>P = AC</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>完全競爭市場</p>\n<ul>\n<li>同質商品</li>\n<li>買方、賣方均為價格接受者(不能影響價格)\n<ul>\n<li><strong>邊際收入MR = 市場價格P(價格固定) = 邊際成本MC</strong>\n<ul>\n<li><strong>供給線 = 邊際成本線</strong></li>\n<li><strong>P = MC → 總剩餘最大(其他市場結構都不是)</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>個別廠商的供給\n<ul>\n<li>若短期 P＜Min AVC(收益小於變動成本)，廠商將<strong>暫時歇業(無法退出)</strong></li>\n<li>若長期 P＜Min ATC(收益小於總成本)，廠商將退出市場</li>\n<li>供給線分別為 AVC 上方的 MC 線, ATC 上方的 MC 線</li>\n</ul>\n</li>\n<li>總體\n<ul>\n<li>短期均衡：P = 市場價格\n<ul>\n<li>依照目前市場價格生產(利潤最大)，未必是最低平均成本</li>\n</ul>\n</li>\n<li>長期均衡：P = MC = ATC\n<ul>\n<li>若價格&gt;最低平均成本ATC，則供給增加(廠商加入市場)，使市場價格降到ATC(最佳效率，且此時利潤 = 0) <img data-src=\"/img/eco1/longrun-supply.webp\" alt=\"\" /></li>\n<li>長期供給曲線為水平線(價格固定)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>需求線為水平(價格接受者)</li>\n<li>成本遞增產業\n<ul>\n<li>產量增加導致單位產品成本提高(生產資源有限，如土地、員工)</li>\n<li>長期供給曲線斜率正</li>\n</ul>\n</li>\n<li>為何零利潤\n<ul>\n<li>計算成本時已包含機會成本</li>\n</ul>\n</li>\n</ul>\n<p>Example</p>\n<ul>\n<li>個別廠商的成本函數\n<ul>\n<li>AC＝（100／q）＋q</li>\n<li>MC＝2q</li>\n</ul>\n</li>\n<li>市場需求\n<ul>\n<li>Q＝8000－50P</li>\n</ul>\n</li>\n<li>目前廠商家數為 900</li>\n<li>短期均衡\n<ul>\n<li>個別供給：MC = P, q＝P／2</li>\n<li>市場供給：Q＝900q = 450P</li>\n<li>P＝16, Q＝7200, q＝8</li>\n<li>ΠC＝q ( P－AC )＝－36</li>\n</ul>\n</li>\n<li>長期均衡\n<ul>\n<li>零利潤且利潤極大\n<ul>\n<li>P＝AC＝MC</li>\n</ul>\n</li>\n<li>q＝10, P＝20, Q＝7000</li>\n<li>廠商數 N＝700</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"獨占\">獨占</h2>\n<p>獨占市場</p>\n<ul>\n<li>單一賣方</li>\n<li>無替代品</li>\n<li>進入障礙高</li>\n<li>供給者為價格制定者\n<ul>\n<li>沒有供給曲線</li>\n<li>負斜率的需求曲線</li>\n<li>廠商極大化利潤: 邊際收益等於邊際成本</li>\n</ul>\n</li>\n<li>MR(邊際收益)線必在需求線下方\n<ul>\n<li>價格 &gt; 邊際收益 = 邊際成本(∵需求線負斜率)\n<ul>\n<li>完全競爭時：價格=邊際成本</li>\n<li>會造成無謂損失</li>\n<li>生產量 &lt; 使總剩餘最大的生產量</li>\n</ul>\n</li>\n<li>需求 P = a - bQ</li>\n<li>收益 TR = aQ - bQ^2</li>\n<li>邊際收益 MR = 收益微分 TR' = a - 2bQ</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/eco1/solution.webp\" alt=\"\" /></p>\n<ul>\n<li>\n<p>X: 消費者剩餘</p>\n</li>\n<li>\n<p>Y: 廠商</p>\n</li>\n<li>\n<p>Z: 損失</p>\n</li>\n<li>\n<p>春花公司是桃花源棉被產業的獨占廠商,其總成本函數為TC(q) = 20q+100, q 為春花公司的棉被產量。桃花源的棉被需求為 Q = 100-2P</p>\n<ul>\n<li>均衡時 MR = MC\n<ul>\n<li>P = 50-0.5Q , MR = PQ dQ = 50-Q</li>\n<li>MC = TC dq = 20</li>\n<li>Q = 30</li>\n</ul>\n</li>\n<li>無謂損失\n<ul>\n<li>有效率時，P = MC(使總剩餘最大) = 20</li>\n<li>Q: 30 → 60, P: 35 → 20</li>\n<li>(60-30)*(35-20)/2 = 225\n<ul>\n<li>此時MR = -10，利潤 = -100</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>差別取價</p>\n<ul>\n<li>同樣的商品以不同的價格出售</li>\n<li>條件\n<ul>\n<li>能分辨不同偏好的消費者</li>\n<li>消費者難以轉售套利</li>\n<li>有某種程度的獨占力</li>\n</ul>\n</li>\n<li>Example\n<ul>\n<li>精裝書</li>\n<li>獎學金</li>\n<li>折價券</li>\n</ul>\n</li>\n<li>完全差別取價可以使市場有效率，但所有剩餘都是生產者的</li>\n</ul>\n<h2 id=\"壟斷性競爭\">壟斷性競爭</h2>\n<p>壟斷性競爭</p>\n<ul>\n<li>眾多賣方</li>\n<li>產品差異化\n<ul>\n<li>廠商為了維持其獨占力，從事各種手段的競爭，讓自己的產品和別人不一樣\n<ul>\n<li>品牌、知覺品質，廣告、代言、服務、區位 …</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>長期平衡\n<ul>\n<li>若有利潤，廠商加入，單一廠商需求線左移</li>\n<li>若無利潤，廠商退出，單一廠商需求線右移</li>\n<li>平衡：ATC 和 需求 相切\n<ul>\n<li>P = ATC &gt; MR = MC</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>無謂損失</p>\n<ul>\n<li>個別廠商產量較少</li>\n<li>價格較高</li>\n<li>願付價格高於邊際成本的部分（產量並非最有效率產量）</li>\n<li>廠商家數不是最適（單就生產成本而言，同樣的產量、同樣的成本結構下，競爭市場的廠商數較少，生產成本較低；但產品的多樣性是好事，會使剩餘增加）</li>\n</ul>\n<p>成本函數</p>\n<ul>\n<li>TC＝56－2Q＋3Q2\n<ul>\n<li>MC＝－2＋6Q</li>\n</ul>\n</li>\n<li>短期時廠商面對的需求\n<ul>\n<li>P ＝ 40－0.5Q\n<ul>\n<li>MR = 40 - Q</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>長期\n<ul>\n<li>需求可平移 P ＝ A－0.5Q</li>\n<li>邊際收益\n<ul>\n<li>TR＝Q（A－0.5Q）</li>\n<li>MR＝A－Q</li>\n</ul>\n</li>\n<li>利潤極大 MR＝MC\n<ul>\n<li>A－Q ＝－2＋6Q</li>\n</ul>\n</li>\n<li>零利潤 TR＝TC\n<ul>\n<li>Q(A－0.5Q)＝56－2Q＋3Q2</li>\n<li>A－0,5Q ＝56／Q－2＋3Q</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"寡占與賽局理論\">寡占與賽局理論</h2>\n<p>一個賽局必須要描述：玩家、策略、報酬</p>\n<p>Nash 均衡</p>\n<ul>\n<li>對每一個玩家而言，給定其他玩家的策略，該玩家的策略為最適\n<ul>\n<li>就每一個可能的結果檢驗</li>\n</ul>\n</li>\n<li>優勢策略\n<ul>\n<li>不論對手用哪種策略，優勢策略都不會比其他策略差</li>\n</ul>\n</li>\n<li>掠奪性定價</li>\n</ul>\n<p>Cartel 的形成與崩潰</p>\n<ul>\n<li>勾結協議：A、B 各生產 30，利潤各為 $900\n<ul>\n<li>給定 A 遵守協議，B 偷偷將產量調整為 40</li>\n<li>總供給量 70，價格 $35</li>\n<li>ΠB = 40（35－10）=1000</li>\n<li>兩人都想作弊！</li>\n</ul>\n</li>\n<li>OPEC</li>\n</ul>\n<p>囚犯兩難</p>\n<ul>\n<li>限制產量對 A、B 都有利，但不是 Nash 均衡\n<ul>\n<li>削價競爭</li>\n<li>軍備競賽</li>\n<li>廣告戰爭</li>\n<li>共有資源的悲劇</li>\n</ul>\n</li>\n<li>分組作業\n<ul>\n<li>嚴格標準可以使學生努力作報告, 也能讓學生得到較高的報酬</li>\n<li>如果教授使用寬鬆標準,將會使學生陷入囚犯兩難</li>\n</ul>\n</li>\n</ul>\n<p>重複賽局</p>\n<ul>\n<li>如果玩無窮多局，較有可能合作\n<ul>\n<li>Trigger Strategy</li>\n<li>Tit for Tat(以眼還眼)</li>\n<li>各式各樣的均衡</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"生產要素市場\">生產要素市場</h2>\n<p>廠商雇用要素，生產商品，追求最大利潤</p>\n<ul>\n<li>產量\n<ul>\n<li>MR＝MC</li>\n</ul>\n</li>\n<li>要素雇用量\n<ul>\n<li>在完全競爭市場\n<ul>\n<li>P = MC 同乘 MPL(勞動邊際產量)\n<ul>\n<li>邊際成本 = 工資 / 勞動邊際產量</li>\n</ul>\n</li>\n<li>勞動邊際產值VMPL(P*MPL)=工資(W)</li>\n</ul>\n</li>\n</ul>\n  <!--- 若勞動市場是競爭市場，MFCL(邊際要素成本)＝w（市場工資率）-->  \n<ul>\n<li><strong>邊際產量決定於生產函數（技術、其他要素雇用量等）</strong></li>\n<li><strong>邊際收入由商品市場需求和產業結構決定</strong></li>\n<li>引申自產品市場的需求\n<ul>\n<li>商品需求減少→商品價格降低→勞動需求減少</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco1/labor-market.webp\" alt=\"\" /></li>\n<li>例：黑死病\n<ul>\n<li>勞動供給下降，薪資提高</li>\n</ul>\n</li>\n</ul>\n<p>下列何者不會造成勞動需求曲線的移動</p>\n<ol>\n<li>產品價格變動</li>\n<li>技術進步<br />\n3. 技術進步會使勞動需求曲線往右移動<br />\n4. 邊際產量增加 → 勞動需求增加</li>\n<li><strong>勞工變得更重視休閒(供給變動？)</strong></li>\n<li>其他要素的供給發生改變</li>\n</ol>\n<p>Q: 假設蛋塔市場是競爭市場,原來處於長期均衡的狀態。某天不知因為什麼緣故,蛋塔的市場需求大幅增加。請問新的長期均衡價格是否有可能高於原來的均衡價格? 為什麼?<br />\nA: 需求增加使短期市場價格上升,廠商獲得超額利潤。<strong>利潤將吸引其他廠商的加入,廠商競爭雇用生產要素使得廠商的生產成本隨廠商家數增加而增加, 使得新的長期均衡價格較原均衡高</strong>, 而非回跌至原均衡價格。<br />\n→ 也就是物品的需求線右移，價格提高</p>\n<p>高技術勞動力供給增加使得高技術勞動就業量增加, 工資減少。由於兩種勞動力具有互補關係, 高技術勞動就業量增加將提升低技術勞工的邊際生產力。由廠商勞動需求 = MR x MPL, 低技術勞工的需求將增加, 使該市場的工資率和就業量皆增加</p>\n<p>資本是經濟體系的設備與建築物的存量(stock)</p>\n<ul>\n<li>租用土地的價格 = 邊際產值</li>\n</ul>\n<h2 id=\"工資差異\">工資差異</h2>\n<p>補償性差異</p>\n<ul>\n<li>工作環境／條件</li>\n<li>工作的穩定度</li>\n<li>事業成功的機率</li>\n<li>工作者所需的被信賴度</li>\n<li>工作學習的難度</li>\n</ul>\n<p>生產力差異</p>\n<ul>\n<li>個人特質</li>\n<li>人力資本\n<ul>\n<li>標籤理論\n<ul>\n<li>個人生產力是天生的，教育無法提升生產力</li>\n<li>教育的功能是「篩選」</li>\n</ul>\n</li>\n<li>訊號理論\n<ul>\n<li>用學歷發出有較高能力的訊號</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>歧視\n<ul>\n<li>許多婦女因為婚育退出勞動市場，因而造成婦女薪資水準較男性低，算不算歧視？</li>\n<li>正確的刻板印象算不算歧視？</li>\n<li>顧客的歧視會影響廠商</li>\n<li>市場會使歧視的行為付出代價</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU4JTg3JUJBJUU3JTgxJUEzJUU1JUE0JTk2JUU3JTlDJTgxJUU0JUJBJUJBIy5FOC44MS5CNy5FNi5BNS5BRA==\">台灣公務員錄取<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"所得分配\">所得分配</h2>\n<blockquote>\n<p>資本主義的根本問題在於無法均富，而社會主義制度的根本問題在於無法均擺脫均貧</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JTgxJTg2JUU1JUI4JUI4JUU2JTg5JTgwJUU1JUJFJTk3JUU1JTgxJTg3JUU4JUFBJUFB\">恆常所得 vs 年所得<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>生命週期(Life cycle)<br />\n在一生當中, 年輕時所得較低, 隨著年紀漸增、工作經驗豐富之後, 所得會上升, 並在50歲左右達到高峰; 在退休時, 所得開始大幅下降</p>\n<ul>\n<li>\n<p>衡量單位</p>\n<ul>\n<li>是否計算實物移轉</li>\n<li>個人 v. 家戶</li>\n</ul>\n</li>\n<li>\n<p>衡量指標？</p>\n<ul>\n<li>X 等分差距倍數</li>\n<li>Gini Coefficient</li>\n<li>貧窮線／最低生活費標準（低收入戶）</li>\n</ul>\n</li>\n<li>\n<p>所得分配的意義</p>\n<ul>\n<li>結果論 v. 程序正義</li>\n<li>所得只是個人福利的一部分</li>\n<li>年所得 v. 終身所得</li>\n</ul>\n</li>\n<li>\n<p>Lorenz Curve <img data-src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/5/59/Economics_Gini_coefficient2.svg/1024px-Economics_Gini_coefficient2.svg.png\" alt=\"\" /></p>\n<ul>\n<li>實際收入分配曲線</li>\n</ul>\n</li>\n<li>\n<p>Gini Coefficient</p>\n<ul>\n<li>數值從 0 ~ 1，0為完全平等</li>\n<li>A/(A+B) <img data-src=\"/img/eco1/gini_index.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>所得應該怎樣分配</p>\n<ul>\n<li>效用主義 Utilitarianism\n<ul>\n<li>極大化社會總效用(滿足程度)</li>\n<li>邊際效用遞減</li>\n<li>重分配的無謂損失</li>\n</ul>\n</li>\n<li>自由主義 Liberalism\n<ul>\n<li>無知之幕後的社會契約\n<ul>\n<li>每個人註定要過「某人」的生活，但在無知的帷幕後面，我們不知道自己會投胎成那個人</li>\n<li>Rawls 認為，如果被迫從帷幕背後作選擇，我們會選擇誕生在公平的社會裡</li>\n</ul>\n</li>\n<li>極大化最小值原則</li>\n</ul>\n</li>\n<li>自由人主義 Libertarianism\n<ul>\n<li>任何人類的互動行為都應該出於雙方的自願和同意</li>\n<li>重視程序公平、個人權利（生命、自由和財產權）與機會均等</li>\n<li>反對結果論的重分配</li>\n<li>懷疑任何可能擴張政府權力的說法</li>\n<li>通常認為自由市場符合程序公平，同時也能達到效率(做得到嗎...)\n<ul>\n<li>只要程序符合公平，任何結果都應該接受</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"稅制設計\">稅制設計</h2>\n<!--不考?-->\n<p>課稅的公平與效率</p>\n<ul>\n<li>\n<p>公平性</p>\n<ul>\n<li>受益原則</li>\n<li>支付能力原則\n<ul>\n<li>水平公平：支付能力相同者稅負相同</li>\n<li>垂直公平：支付能力較高者稅負較高</li>\n</ul>\n</li>\n<li>累進性\n<ul>\n<li>邊際稅率 v. 平均稅率</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>效率性</p>\n<ul>\n<li>無謂損失</li>\n<li>行政成本</li>\n<li>以商品稅為例\n<ul>\n<li>從效率的觀點，政府應該對彈性較小的商品(日常食物)課較重的稅</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>綜合所得淨額</p>\n<ul>\n<li>所得－各種扣除額</li>\n</ul>\n</li>\n<li>\n<p>邊際稅率</p>\n<ul>\n<li>所得增加 $1 時稅金會增加多少錢</li>\n</ul>\n</li>\n<li>\n<p>平均稅率 = 稅負總額／課稅基礎 = 所得稅／綜合所得淨額</p>\n</li>\n</ul>\n<h3 id=\"遺贈稅與公平\">遺贈稅與公平</h3>\n<ul>\n<li>侵犯個人財產權，減少財富、階級世襲</li>\n<li>如何規避遺產稅？\n<ul>\n<li>贈與、人力投資</li>\n<li>財產規劃</li>\n</ul>\n</li>\n<li>2009 年遺贈稅由 50% 調降至 10%\n<ul>\n<li>降低租稅規避誘因</li>\n<li>吸引資金回流台灣</li>\n</ul>\n</li>\n<li>反對遺贈稅調降\n<ul>\n<li>降稅增加稅收並非實情</li>\n<li>資金回流有害無益(炒房？)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"中立稅-Neutral-Tax\">中立稅 Neutral Tax</h3>\n<ul>\n<li>個人行為無法影響其稅負</li>\n<li>課稅與否不影響決策\n<ul>\n<li>不會造成無謂損失</li>\n</ul>\n</li>\n<li>定額稅</li>\n<li>對潛在的賺錢能力課稅\n<ul>\n<li>美貌稅？智力稅？</li>\n<li>男性稅？異性戀稅？</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"消費者選擇理論\">消費者選擇理論</h2>\n<ul>\n<li>預算限制 Budget Constraint\n<ul>\n<li>消費者買得起的各種消費組合\n<ul>\n<li>預算限制線的斜率是兩個物品的相對價格</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>效用函數\n<ul>\n<li>消費商品所得的效用</li>\n</ul>\n</li>\n<li>無異曲線 indifference curve\n<ul>\n<li>帶給消費者相同滿足程度的曲線</li>\n<li>斜率為邊際替代率 MRS\n<ul>\n<li>一般為負</li>\n</ul>\n</li>\n<li>不同的無異曲線不會相交</li>\n</ul>\n</li>\n<li>最適選擇點：無異曲線和預算限制線的切點(邊際替代率=相對價格)</li>\n</ul>\n<p>總效果(A→C) = 替代效果(A→B) ＋ 所得效果(B→C) <img data-src=\"/img/eco1/substitute_income.webp\" alt=\"\" /></p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHR0LmNjL2Jicy9FY29ub21pY3MvTS4xMjI5NjYwNjg3LkEuRUQ1Lmh0bWw=\">所得效果跟替代效果<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>替代效果\n<ul>\n<li>固定實質所得，價格變動(相對需求改變)對需求量的影響</li>\n<li>在原本的無異曲線移動(即效用不變)</li>\n</ul>\n</li>\n<li>所得效果\n<ul>\n<li>固定相對價格，所得變動對需求量的影響</li>\n<li>移動預算限制線</li>\n</ul>\n</li>\n<li>Example: X商品的價格上漲\n<ul>\n<li>替代效果\n<ul>\n<li>X↓, Y↑</li>\n</ul>\n</li>\n<li>所得效果\n<ul>\n<li>相當於實質所得下降</li>\n<li>正常財↓，劣等財↑</li>\n<li>總效果\n<ul>\n<li>X 是正常財，X↓</li>\n<li>X 是劣等財，X？</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>季芬財（Giffens）</p>\n<ul>\n<li>所得效果大於替代效果的劣等財\n<ul>\n<li>價格越高反而需求量越高</li>\n<li>窮人的主食\n<ul>\n<li>馬鈴薯、米</li>\n<li>主食漲價時能買其他食品的份量變少</li>\n<li>為了吃飽會買更高比例的主食</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>效用極大化</p>\n<ul>\n<li>所得休閒模型\n<ul>\n<li>C:消費, lei:休閒時間</li>\n<li>Utility＝U ( C, lei )</li>\n<li>H: 工時, H＋lei＝T</li>\n<li>工資率w，C＝w．H</li>\n</ul>\n</li>\n<li>預算限制式\n<ul>\n<li>C＋w．lei＝w．T</li>\n<li>休閒的價格(代價)為 w</li>\n</ul>\n</li>\n<li>工資率上漲(替代效果)\n<ul>\n<li>消費變得便宜，休閒相對昂貴</li>\n<li>休閒減少，工時增加</li>\n<li>消費增加</li>\n</ul>\n</li>\n<li>所得增加(所得效果)\n<ul>\n<li>休閒增加，工時減少</li>\n<li>消費增加</li>\n</ul>\n</li>\n<li>總和\n<ul>\n<li>不確定</li>\n<li>事實證明，工資上升到某程度後，工資率上漲→工時減少\n<ul>\n<li>所得效果 &gt; 替代效果</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>完全替代</p>\n<ul>\n<li>無異曲線為斜率為-1的直線</li>\n<li>不是全部買A，就是全部買B\n<ul>\n<li>1.5個5元換1個10元</li>\n<li>1個10元換2.5個5元</li>\n</ul>\n</li>\n</ul>\n<p>利率是消費的代價 <img data-src=\"/img/eco1/depositrate.webp\" alt=\"\" /></p>\n<ul>\n<li>若 r＝0% 消費 $500，儲蓄 $500</li>\n<li>若 r 提高為 50% 消費 $600，儲蓄 $400\n<ul>\n<li>利率提高，春花儲蓄減少</li>\n</ul>\n</li>\n<li>效用函式為min(消費，儲蓄)\n<ul>\n<li>替代效果為 0</li>\n</ul>\n</li>\n<li>若消費和儲蓄皆為正常財\n<ul>\n<li>所得效果使消費增加</li>\n<li>替代效果使消費減少</li>\n<li>因此利率上升時, 春花年輕時的消費可能增加,也可能減少,端看替代效果與所得效果何者影響較大</li>\n</ul>\n</li>\n</ul>\n<p>為何我們喜歡送禮物（和收禮物），而非現金？<br />\n重點不是禮物是心意…</p>\n<h2 id=\"個體經濟學\">個體經濟學</h2>\n<h3 id=\"資訊不對稱\">資訊不對稱</h3>\n<ul>\n<li>\n<p>資訊少的一方希望獲得資訊，資訊多的一方希望隱瞞資訊</p>\n</li>\n<li>\n<p>反向選擇</p>\n<ul>\n<li>市場中商品的平均品質將低於買方的預期</li>\n<li>給定保費，高風險者比低風險者更可能買保險</li>\n<li>減薪後，能力較強員工辭職</li>\n</ul>\n</li>\n<li>\n<p>道德危險</p>\n<ul>\n<li>代理人不恰當的行為</li>\n<li>買了保險後，保戶開始從事更多高風險活動</li>\n</ul>\n</li>\n<li>\n<p>勞工知道自己的生產力,但雇主無法得知,因此雇主不願意付高薪</p>\n<ul>\n<li>反向選擇: 薪水不夠高就無法雇用生產力高的勞工,因此雇主只能雇用到生產力較低的勞工</li>\n<li>道德危險: 員工清楚自己的誘因和行為,但雇主無法完全監控員工的行動。員工可能全心全意工作, 也可能因為損失一個低薪工作的成本不高而偷懶</li>\n<li>只出得起香蕉的公司，只請得起猴子</li>\n</ul>\n</li>\n</ul>\n<p>解決反向選擇</p>\n<ul>\n<li>有資訊者：放訊（signaling）\n<ul>\n<li>賣家提供保固或取得有公信力的品質認證</li>\n</ul>\n</li>\n<li>無資訊者：篩選（screening）\n<ul>\n<li>買家要求保固或檢查報告，或依商譽挑選賣家</li>\n</ul>\n</li>\n<li>勞動市場的放訊和篩選：學歷</li>\n<li>保固期\n<ul>\n<li>修車費用由賣家負擔，買家就沒有足夠誘因好好照顧車</li>\n<li>解決了反向選擇，卻帶來道德危險</li>\n</ul>\n</li>\n<li>保險市場的資訊不對稱\n<ul>\n<li>反向選擇與道德危險</li>\n<li>全民納保的理論基礎</li>\n</ul>\n</li>\n<li>道德危險\n<ul>\n<li>塔台人員精神耗損極大</li>\n<li>退休後可領 75% 薪水</li>\n<li>適任者與不適任者都想退休</li>\n<li>哪個理論較可能正確？\n<ul>\n<li>不適任人員無法退休</li>\n<li>適任人員故意出包以爭取退休\n<ul>\n<li>飛機相撞次數沒有增加</li>\n<li>錯誤多發生於天候良好、航道不擁擠時</li>\n<li>年資 5－10 年的人員錯誤最多</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"公共選擇-Public-Choice\">公共選擇 Public Choice</h3>\n<ul>\n<li>用經濟學方法研究政治決策過程</li>\n<li>理性的政治主體（選民、官僚、政黨 …）</li>\n<li>投票行為、競選策略、遊說、憲政制度、官僚決策行為 …</li>\n</ul>\n<p>關於政府的天真想像</p>\n<ul>\n<li>個人理性自利，但政府永遠追求公益？</li>\n<li>歷史上多少死刑犯是真的做了罪大惡極的事？</li>\n<li>死刑的嚇阻效果</li>\n</ul>\n<p>死刑是雙面刃</p>\n<ul>\n<li>我們允許政府使用多有效的武器？\n<ul>\n<li>鞭刑、凌遲、公開處刑、誅九族 …</li>\n</ul>\n</li>\n<li>無知之幕：我們願意讓渡生命權給政府嗎？</li>\n</ul>\n<p>中位數提案</p>\n<ul>\n<li>二選一：選民各有自己最偏好的立場；選民偏好與自己立場最接近的提案\n<ul>\n<li>要爭取選票，就要往中間靠攏</li>\n<li>沒有任何其他提案能擊敗中位數提案</li>\n</ul>\n</li>\n</ul>\n<p>arrow paradox<br />\n投票制度至少應該具備</p>\n<ol>\n<li>若所有人都認為 A 比 B 好，則 A 應該勝過 B</li>\n<li>遞移性：若 A 贏 B 且 B 贏 C，則應該贏 C</li>\n<li>Condorcet Paradox</li>\n<li>A、B 比較的結果不應受 C 是否存在的影響</li>\n<li>沒有獨裁者</li>\n</ol>\n<p>沒有任何投票制度可以同時具備以上特性<br />\n→ 議程安排（投票制度）、不相關選項、策略性投票都可能影響選舉結果</p>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li>經濟學原理，王溢正譯</li>\n<li>WLLee課堂講義</li>\n</ul>\n","categories":["筆記"],"tags":["經濟學"]},{"title":"如何當稱職的支語警察？","url":"/foreign-language-police/","content":"<p><img data-src=\"/img/other/foreign-terms-police.webp\" alt=\"\" /></p>\n<h2 id=\"簡介\">簡介</h2>\n<p>PTT 上常有支語警察</p>\n<p>也常發現 Google 翻譯的中文常常會<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2V0bi5jb20vTmV3cy5hc3B4P05ld3NJRD03NDY3OTM=\">翻譯成中國慣用語<i class=\"fa fa-external-link-alt\"></i></span>(可以參考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9pc2dvb2dsZWZpeGVkLnR3Lw==\">Google 翻譯修好了沒？<i class=\"fa fa-external-link-alt\"></i></span>)</p>\n<p>所以就寫了一個支語警察的網站：<a href=\"/foreign-terms-police\">支語警察</a></p>\n<span id=\"more\"></span>\n<h2 id=\"流程\">流程</h2>\n<ol>\n<li>文章分詞</li>\n<li>標出非台灣習慣用語</li>\n<li>從資料庫尋找對應的用語</li>\n<li>若無對應用語則尋找其解釋</li>\n</ol>\n<h2 id=\"資料庫\">資料庫</h2>\n<p>基本上都是使用現有的詞典，其資料都是人工更新的，<strong>目前還沒有自動辨識習慣用語的方法</strong>。</p>\n<h3 id=\"萌典\">萌典</h3>\n<p>從萌典的兩岸字典獲取用語中台灣和中國的意思不同者(同字不同義，同義不同字)</p>\n<h3 id=\"開放中文轉換-OpenCC\">開放中文轉換 OpenCC</h3>\n<p>支援詞彙的轉換、異體字轉換和地區習慣用語及字體轉換（中國大陸、臺灣、香港、日本）。</p>\n<p>使用詞典對應的方式實作，像是簡體轉台灣繁體就使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0JZVm9pZC9PcGVuQ0MvYmxvYi9tYXN0ZXIvZGF0YS9kaWN0aW9uYXJ5L1NUUGhyYXNlcy50eHQ=\">此詞典<i class=\"fa fa-external-link-alt\"></i></span>搭配<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0JZVm9pZC9PcGVuQ0MvYmxvYi9tYXN0ZXIvZGF0YS9kaWN0aW9uYXJ5L1RXUGhyYXNlc0lULnR4dA==\">習慣用語詞典<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"實作\">實作</h2>\n<ul>\n<li>Google Trends\n<ul>\n<li>使用台灣的搜尋趨勢比較原本用語及對應的外來用語</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"困難\">困難</h3>\n<ol>\n<li>資料庫通常沒有收錄網路流行語</li>\n<li>同詞不同義\n<ol>\n<li>質量：中國常用於表示「品質」，但兩岸都有「重量」的意思 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wdHRjb21pYy5jb20vY19jaGF0L00uMTU5NTU1NDQzNC5BLjY3Ni5odG1s\">範例<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>土豆：中國為「馬鈴薯」，台灣為「花生」</li>\n</ol>\n</li>\n</ol>\n<!-- BUG:牽手、 -->\n<h2 id=\"個人評價\">個人評價</h2>\n<p>為了避免被貼上「逢中必反」的標籤(我不是綠衛兵)，介紹幾個常用的詞</p>\n<h3 id=\"喜歡的支語\">喜歡的支語</h3>\n<ol>\n<li>優化(最佳化, optimization)\n<ol>\n<li>少一個字，意義也相同</li>\n</ol>\n</li>\n<li>酸奶(優酪乳, yogurt)\n<ol>\n<li>意譯比較合理</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"討厭的支語\">討厭的支語</h3>\n<ol>\n<li>視頻(影片)</li>\n<li>默認(預設, default)</li>\n<li>IT用語：實在是翻譯的很爛\n<ol>\n<li>兆位元組(MB)，千兆(GB)</li>\n<li>面向對象(物件導向, Object-Oriented)</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"其他案例\">其他案例</h2>\n<p>最近發現一位倭語大將軍 - 嚴復，他是提出信達雅翻譯理論，和將達爾文思想傳入的人。<br />\n他將和製漢語全都重新翻譯一遍，結果是大敗收場；只留下烏託邦、物競天擇、適者生存等少數詞語。</p>\n<p>法國也有英語警察，詳見參考資料。</p>\n<p>中國是目前最大的英語警察。<br />\n2010年4月，廣電總局要求不能使用諸如NBA、GDP、WTO、CPI等外語和縮略詞。但時至今日，此規定已名存實亡。<br />\n2017年，要求遊戲中不能出現英文。<br />\n不過經我觀察(我沒玩過中國服的遊戲)，英文還是存在的，只是少很多。大多也就是Auto改自動、Success改成功、Item改道具、Level改等級這種程度而已。</p>\n<h3 id=\"IT用語\">IT用語</h3>\n<p>可以說，英語是IT業界的絕對主導語言。</p>\n<p>之前看見有人用中文當作Python變數名稱的，拜託不要(雖然合法)。</p>\n<p>大學時，教授大多用英文詞語介紹內容，有些直接用英文教學，想不到某個詞的中文怎麼說是很正常的。</p>\n<p>之前發現，如果預設語言是中文，Ubuntu也會用中文作為預設資料夾名稱(文件、下載、圖片…)，這種漢化大可不必。</p>\n<!-- \n\n之前還整一個不能過洋人節日的禁令。 -->\n<h2 id=\"心得\">心得</h2>\n<p>也有很多從日本傳入的詞彙，明治維新後有一部份，現在也有，如課金、同接、無料、生放送、通販、等…</p>\n<p>沒有必要過度敏感，但也不要過度放縱。</p>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9lZGljdC50dy8=\">萌典<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0JZVm9pZC9PcGVuQ0M=\">OpenCC<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>圖片來源\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXNwLmNjL2IvQUNHL2N5T0Q=\">[閒聊] 支語警察是誰畫的？<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wdHRnb3BvbGl0aWNzLmNvbS9nb3NzaXBpbmcvTS4xNjAwNjA1ODExLkEuQzJGLmh0bWw=\">[問卦] 支語警察怎麼知道哪些詞是支語<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGNhcmQudHcvZi9tZW1lL3AvMjM3NTQwMDg0\">支語警察總整理<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5nYW1lci5jb20udHcvQ28ucGhwP2Jzbj02MDA3NiZzbj03MTk3ODc5NA==\">情報】支語警察系列支援包（圖多注意<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92b2N1cy5jYy9AbG92ZV9hbmRfcGVhY2UvNWYxMTZiOThmZDg5NzgwMDAxN2Q2ODgz\">愛台灣卻為了中國用語吵架：支語警察，與討厭支語警察的人們<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>黃克武(Huang， Max K. W.)（20081200）。<span class=\"exturl\" data-url=\"aHR0cDovL2NhdGFsb2cuZGlnaXRhbGFyY2hpdmVzLnR3L2l0ZW0vMDAvNTUvMWUvYTkuaHRt\">新名詞之戰：清末嚴復譯語與和製漢語的競賽<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>法國英語警察\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGhlbmV3c2xlbnMuY29tL2FydGljbGUvNjEwNTg=\">唯美食與法語不可辜負：現代法國的反美情結<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1vOE5RNl80bDR5Yw==\">為什麼要給盧旺達總統頒發門墊子？【小約翰可汗】<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90dy5uZXdzLnlhaG9vLmNvbS9uZXdzLyVFNiU5QyU4OSVFNSVBNCVBMCVFNyU4QiU4Mi0lRTQlQjglQUQlRTUlOUMlOEIlRTklODElOEElRTYlODglQjIlRTUlQjAlODclRTQlQjglOEQlRTUlODclODYlRTUlODclQkElRTclOEYlQkUlRTglOEIlQjElRTYlOTYlODctJUU1JUE2JTgyaHAtbXAtMDMxMTAwODM3Lmh0bWw=\">有夠狂! 中國遊戲將不准出現英文，如HP、MP...<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["心得"],"tags":["自然語言處理","外國用語","萌典","opencc","PTT","vuejs"]},{"title":"經濟學二","url":"/economics2/","content":"<!-- RENEW: -->\n<h2 id=\"Chap23-國民所得的衡量\">Chap23 國民所得的衡量</h2>\n<ul>\n<li>Microeconomics\n<ul>\n<li>Study of how households and firms\n<ul>\n<li>Make decisions</li>\n<li>Interact in markets</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Macroeconomics\n<ul>\n<li>Study of economy-wide phenomena\n<ul>\n<li>Including inflation, unemployment, and economic growth</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Gross Domestic Product (GDP)</p>\n<ul>\n<li>Measures the total expenditure on the economy’s output of goods and services</li>\n<li>Market value of all <strong>final goods and services</strong> produced within a country in a given period of time\n<ul>\n<li>Value of intermediate goods is already included in the prices of the final goods</li>\n</ul>\n</li>\n</ul>\n<p>Circular-flow diagram</p>\n<ul>\n<li>\n<p>Households</p>\n<ul>\n<li>buy goods and services from firms</li>\n</ul>\n</li>\n<li>\n<p>Firms</p>\n<ul>\n<li>use revenue from sales to pay wages to workers, rent to landowners, and profit to firm owners</li>\n</ul>\n</li>\n<li>\n<p>GDP</p>\n<ul>\n<li>= total amount households spent for goods and services</li>\n<li>= total wages, rent, and profit paid by firms in the markets for the factors of production</li>\n</ul>\n</li>\n<li>\n<p>GNP: 國民生產毛額＝國內生產毛額＋國外要素所得收入淨額</p>\n<ul>\n<li>民國103年11月為與聯合國國民經濟會計制度一致，使用詞更能表達經濟內涵將國民生產毛額改為國民所得毛額（Gross National Income, GNI)\n<ul>\n<li>GNP = GNI</li>\n</ul>\n</li>\n<li>NNP(國民生產淨額): GNP-折舊</li>\n</ul>\n</li>\n<li>\n<p>NI(國民所得):工資+租金+利息+利潤</p>\n<ul>\n<li>扣除統計誤差後，<strong>國民所得(NI)應等於國民生產淨額(GNP)</strong></li>\n<li>分為按要素成本（所得）計算者與按市價計算者\n<ul>\n<li>要素成本: 國民生產毛額減固定資本折耗、間接稅淨額及統計差異</li>\n<li>市價: 國民生產毛額減固定資本折耗及統計差異</li>\n</ul>\n</li>\n<li>凡非由生產而發生之所得，均不可計入國民所得之內\n<ul>\n<li>資產重估之增值</li>\n<li>國際間之贈與等</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>PI(個人所得)???</p>\n<ul>\n<li>國民所得－(營利事業所得稅＋企業間接稅＋未分配盈餘＋政府財產與企業所得＋社會安全捐)＋國內外對家計單位的移轉支付</li>\n</ul>\n</li>\n<li>\n<p>DPI(Disposable Personal Income, 個人可支配所得)???</p>\n<ul>\n<li>個人所得－直接稅與非稅支付(如交通罰單)</li>\n</ul>\n</li>\n</ul>\n<p>GDP的計算方式改變</p>\n<ul>\n<li>\n<p>2014年11月20日行政院主計總處國民所得統計評審會決議，將研發支出由中間消費改列固定投資(配合聯合國最新版國民經濟會計制度2008 SNA修正編算原則)</p>\n</li>\n<li>\n<p>以連鎖法取代定基法衡量實質GDP及經濟成長率<a href=\"http://www.stat.gov.tw/public/Attachment/412291641585LG6LH5T.pdf\">以連鎖法衡量經濟成長率<br />\n</a>  <span class=\"exturl\" data-url=\"aHR0cDovL25ld3MubHRuLmNvbS50dy9uZXdzL2J1c2luZXNzL2JyZWFraW5nbmV3cy8xMTI0NjM3\">GDP編制50年來首度改革 經濟成長率恐下修<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li>\n<p>GDP = C + I + G + NX</p>\n<ul>\n<li>Consumption\n<ul>\n<li>Spending by households on goods and services</li>\n<li><strong>Exception: purchases of new housing</strong></li>\n</ul>\n</li>\n<li>Investment\n<ul>\n<li>Household purchases of new housing</li>\n<li>Inventory accumulation</li>\n</ul>\n</li>\n<li>Government purchases\n<ul>\n<li>Does not include transfer payments(轉移支付)\n<ul>\n<li>政府或企業的一種不以購買本年的商品和勞務而作的支付，即政府或企業無償地支付給個人或下級政府，以增加其收入和購買力的費用。它是一種收入再分配的形式\n<ul>\n<li>包括養老金、失業救濟金、退伍軍人補助金、農產品價格補貼、公債利息</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Net exports\n<ul>\n<li>Exports - Imports</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>2012, GDP of the U.S. - over $15 trillion</p>\n<ul>\n<li>GDP per person = $49,923</li>\n<li>Consumption = $35,411 per person</li>\n<li>Investment = $6,557 per person</li>\n<li>Government purchases = $9,758 per person</li>\n<li>Net exports = –$1,806 per person</li>\n</ul>\n<p>GDP and it's construction</p>\n<ul>\n<li><img data-src=\"/img/eco2/gdpus.webp\" alt=\"\" /></li>\n<li><img data-src=\"/img/eco2/gdptw.webp\" alt=\"\" /></li>\n</ul>\n<p>Real and Nominal GDP</p>\n<ul>\n<li>goods and services are being sold at higher prices</li>\n<li>Nominal(名義) GDP\n<ul>\n<li>Production of goods and services Valued at current prices</li>\n</ul>\n</li>\n<li>Real GDP\n<ul>\n<li>將名義GDP調整物價水平因素</li>\n<li>price remain the same as in base year</li>\n<li>For the base year, Nominal GDP = Real GDP</li>\n</ul>\n</li>\n<li>GDP deflator\n<ul>\n<li>100 for the base year</li>\n<li>Measures the current level of prices relative to the level of prices in the base year</li>\n</ul>\n</li>\n<li>Inflation rate\n<ul>\n<li><strong>use deflater to calculate</strong></li>\n<li>(GDP2-GDP1)/GDP1*100</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/gdp-formula.webp\" alt=\"\" /></li>\n</ul>\n<p>GDP data</p>\n<ul>\n<li>Growth – average 3% per year since 1965</li>\n<li>now is the best single measure of the economic well-being of a society</li>\n<li>still not a perfect measure of well-being\n<ul>\n<li>Doesn’t include\n<ul>\n<li>Leisure</li>\n<li>Value of almost all activity that takes place outside markets</li>\n<li>Quality of the environment</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Gross Domestic Product does not allow for the health of our children, the quality of their education, or the joy of their play.  It does not include the beauty of our poetry or the strength of our marriages, the intelligence of our public debate or the integrity of our public officials. It measures neither our courage, nor our wisdom, nor our devotion to our country.  It measures everything, in short, except that which makes life worthwhile, and it can tell us everything about America except why we are proud that we are Americans. - Senator Robert Kennedy, 1968</p>\n</blockquote>\n<h2 id=\"Chap24-Measuring-the-Cost-of-Living\">Chap24 Measuring the Cost of Living</h2>\n<p>Consumer price index (CPI)</p>\n<ul>\n<li>overall level of prices</li>\n<li>overall cost of goods and services ought by a typical consumer</li>\n</ul>\n<p>Caluclating CPI</p>\n<ol>\n<li>Fix the basket</li>\n</ol>\n<ul>\n<li>assign different weight for goods and services for typical consumer</li>\n</ul>\n<ol start=\"2\">\n<li>Find the prices</li>\n<li>Choose a base year</li>\n<li>Compute CPI and inflation rate</li>\n</ol>\n<ul>\n<li>Inflation rate\n<ul>\n<li>Percentage change in the price index</li>\n</ul>\n</li>\n<li>Producer price index(PPI)\n<ul>\n<li>Measure of the cost of a basket of goods and services bought <strong>by firms</strong></li>\n<li>can simulate the change in CPI</li>\n</ul>\n</li>\n</ul>\n<p>Problems in measuring the cost of living</p>\n<ul>\n<li>\n<p>Substitution bias</p>\n<ul>\n<li>Prices do not change proportionately</li>\n<li>Consumers substitute toward goods that have become relatively less expensive\n<ul>\n<li>尋找替代品</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>New type of goods</p>\n</li>\n<li>\n<p>Unmeasured quality change</p>\n<ul>\n<li>If quality increase/decrease, CPI doesn't change</li>\n</ul>\n</li>\n<li>\n<p>Billion Prices Project: 根據70個國家300個線上零售商所銷售的5佰萬個項目(美國大約50萬個項目)編製通膨指標</p>\n<ul>\n<li>他們發現零售價格並不常改變，但一旦改變，幅度較過去經濟學家的認知為大</li>\n</ul>\n</li>\n<li>\n<p>Google Price Index: Hal Varian採用Google網站大量資料庫建立</p>\n<ul>\n<li>此通膨指標與官方CPI指標走勢接近，但近來反映出通縮的情形</li>\n</ul>\n</li>\n<li>\n<p>核心物價 (Core Inflation)：消費者物價指數扣除蔬果及能源部份又稱核心CPI</p>\n<ul>\n<li>因為蔬果及能源的物價波動大</li>\n</ul>\n</li>\n<li>\n<p>通縮（Deflation）：通貨膨脹率低於0%的情形</p>\n<ul>\n<li>為何人們所感受的通膨與CPI所顯示的有所差異?\n<ul>\n<li>CPI的計算誤差</li>\n<li>日用品變貴→物價變高的錯覺</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"GDP-deflator-versus-CPI\">GDP deflator versus CPI</h3>\n<ul>\n<li>GDP deflator\n<ul>\n<li>nominal GDP / real GDP</li>\n<li>反映國內的<strong>生產</strong>價值變動</li>\n</ul>\n</li>\n<li>CPI\n<ul>\n<li>反映<strong>消費</strong>物價的變動(包含權重)</li>\n</ul>\n</li>\n</ul>\n<p>目前的物價變動 <img data-src=\"/img/eco2/inflation-rate.webp\" alt=\"\" /></p>\n<ul>\n<li>有跟據物價波動來付費的合約(如房租)</li>\n<li>COLA(Cost of living allowance)\n<ul>\n<li>adjusts salaries based on changes in CPI</li>\n<li>Salaries are typically adjusted annually. They may also be tied to a cost-of-living index that varies by geographic location if the employee moves. In this later case, the expatriate employee will likely see only the discretionary income part of their salary indexed by a differential CPI between the new and old employment locations, leaving the non-discretionary part of the salary (e.g., mortgage payments, insurance, car payments) unmodified.</li>\n</ul>\n</li>\n</ul>\n<p>Salary Comparison by CPI</p>\n<ul>\n<li>Babe Ruth 只有A.Rodriguez 的4％</li>\n<li>President Hoover 1931年的薪資比Obama高了許多</li>\n</ul>\n<p>總票房若以通膨調整</p>\n<ul>\n<li>\n<p>Gone with the Wind（飄）在1939年發片，每個星期有9仟萬美國人到戲院觀看，票價才0.25美元</p>\n<ul>\n<li>調整後16億零4佰萬美元，躍居第1</li>\n</ul>\n</li>\n<li>\n<p>Star War（星際戰爭）14億1仟4佰萬美元居第2</p>\n</li>\n<li>\n<p>Avatar降為第4</p>\n</li>\n<li>\n<p>Real interest rate</p>\n<ul>\n<li>Nominal interest rate – Inflation rate</li>\n</ul>\n</li>\n<li>\n<p><img data-src=\"/img/eco2/interest-rate.webp\" alt=\"\" /> <img data-src=\"/img/eco2/taiwan-interest-rate.webp\" alt=\"\" /></p>\n<ul>\n<li>197x: 石油危機</li>\n<li>2008: 金融海嘯</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap25-Production-and-Growth\">Chap25 Production and Growth</h2>\n<ul>\n<li>根據American heritage雜誌的報導，石油企業家John D. Rockefeller是美國最富有的人，以目前的價值估算，其財高達2,000億美元，是微軟創辦人Bill Gate的三倍\n<ul>\n<li>但是在他的年代裏，並沒有電視、冷氣空調，大多數時間沒有汽車或飛機，缺乏電訊、冰箱</li>\n<li>請問您願意以目前所享有的方便性換取他的財富嗎？</li>\n</ul>\n</li>\n</ul>\n<p>Productivity</p>\n<ul>\n<li>Amount of goods and services produced from <strong>each unit of labor input</strong></li>\n</ul>\n<p>Why productivity is so important</p>\n<ul>\n<li>Key determinant(判定) of <strong>living standards</strong></li>\n<li>An economy’s income is the economy’s output</li>\n</ul>\n<p>Determinants of productivity</p>\n<ul>\n<li>Physical capital(物質資本) per worker\n<ul>\n<li>equipment and structures</li>\n<li>The things used to produce goods and services</li>\n</ul>\n</li>\n<li>Human capital per worker\n<ul>\n<li>Knowledge and skills aquired through education, training, and experience\n<ul>\n<li><strong>total effort</strong> of acquiring knowledge</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Natural resources per worker\n<ul>\n<li>Total <strong>inputs</strong> for the production</li>\n<li>土地、河流、礦產</li>\n</ul>\n</li>\n<li>Technological knowledge\n<ul>\n<li><strong>Society’s understanding</strong> of the best ways to produce goods and services</li>\n<li>專利、技術、know-how</li>\n</ul>\n</li>\n</ul>\n<p>Limit</p>\n<ul>\n<li><strong>Natural resources set the limit of world's economy</strong></li>\n<li>Fixed supply of nonrenewable natural resources will run out\n<ul>\n<li>Will Force living standards to fall</li>\n</ul>\n</li>\n<li>Technological progress yields ways to avoid these limits\n<ul>\n<li>Improved use of natural resources over time</li>\n<li>Recycling</li>\n<li>New materials</li>\n</ul>\n</li>\n</ul>\n<p>Prices of natural resources</p>\n<ul>\n<li>因具有稀少性 → 貴\n<ul>\n<li>常有短期波動</li>\n<li>長期價格平穩</li>\n<li>經濟增長愈快，使用愈多，其供給就愈少</li>\n</ul>\n</li>\n</ul>\n<p>Production function</p>\n<ul>\n<li>Y = A times F(L, K, H, N)\n<ul>\n<li>F is a function\n<ul>\n<li>Doubling <strong>all inputs</strong> causes output to double\n<ul>\n<li>2Y  =  A F(2L, 2K, 2H, 2N)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>A is the level of technology\n<ul>\n<li>Relatively important</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Raise future productivity</p>\n<ul>\n<li>Invest more to produce capital\n<ul>\n<li>But fewer resources to produce goods and services for current consumption</li>\n</ul>\n</li>\n<li>Higher savings rate\n<ul>\n<li>In the long run\n<ul>\n<li>Capital stock increases</li>\n<li><strong>Higher level of productivity</strong></li>\n<li><strong>Higher level of income</strong></li>\n<li><strong>More rapid growth in GDP</strong></li>\n<li><strong>Not higher growth in productivity or income</strong>\n<ul>\n<li>邊際效益遞減</li>\n<li>沒辦法無限增加生產力</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Catch-up effect(追趕效應)</p>\n<ul>\n<li>指在其他條件相同的情況下，如果一國開始時較貧窮，它就更傾向於比開始時就富裕的國家經濟增長更快\n<ul>\n<li>少量的資本投資就會大大提高這些工人的生產率</li>\n</ul>\n</li>\n</ul>\n<p>Investment from abroad</p>\n<ul>\n<li>Foreign direct investment\n<ul>\n<li>Capital investment that is owned and operated by a foreign entity</li>\n</ul>\n</li>\n<li>Foreign portfolio investment(間接投資)\n<ul>\n<li>投資者以其資本購買公司債券、金融債券或公司股票等各種有價債券，以預期獲取一定收益的投資</li>\n</ul>\n</li>\n<li>Benefits from investment\n<ul>\n<li>Some benefit flow back to the foreign capital owners</li>\n<li>Increase the economy’s stock of capital\n<ul>\n<li>Higher productivity</li>\n<li>Higher wages</li>\n<li>State-of-the-art technologies</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>World Bank and International Monetary Fund(IMF)</p>\n<ul>\n<li>Encourages investment to poor countries</li>\n<li>Funds from rich countries(Why?)</li>\n<li>Advice about how the funds might best be used(Why?)</li>\n<li>Becuase Economic distress leads to bad consequence\n<ul>\n<li>Political turmoil, international tensions, and military conflict\n<ul>\n<li>ISIS, North Korea</li>\n</ul>\n</li>\n<li>Every country want to promoting economic prosperity(繁榮) around the world</li>\n</ul>\n</li>\n</ul>\n<p>Education</p>\n<ul>\n<li>can be considered as both consumption and investment</li>\n<li>Investment in human capital</li>\n<li>Opportunity cost: wages forgone(接受教育而不工作的機會成本，即薪水的損失)</li>\n<li>Problem for poor countries: Brain drain(人才外流)</li>\n</ul>\n<p>Human capital</p>\n<ul>\n<li>Education cost</li>\n<li>Health cost\n<ul>\n<li>cause long-run economic growth\n<ul>\n<li>Improved health – better nutrition</li>\n<li>Taller workers – higher wages – better productivity</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Wages\n<ul>\n<li>Reflect a worker’s productivity</li>\n</ul>\n</li>\n</ul>\n<p>Vicious circle in poor countries</p>\n<ul>\n<li>Poor countries are poor\n<ul>\n<li>Because their populations are not healthy</li>\n</ul>\n</li>\n<li>Populations are not healthy\n<ul>\n<li>Because they are poor and cannot afford better health care and nutrition</li>\n</ul>\n</li>\n</ul>\n<p>determinents of economic growth</p>\n<ul>\n<li>Political stability</li>\n<li>Government\n<ul>\n<li>encourages research and development\n<ul>\n<li>Research grants</li>\n</ul>\n</li>\n<li>Tax breaks</li>\n<li>Patent system</li>\n<li>Protect property rights(財產權)</li>\n<li>Corruption\n<ul>\n<li>Impedes the coordinating power of markets</li>\n<li>Discourages domestic saving</li>\n<li>Discourages investment from abroad</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Large population\n<ul>\n<li>Advantages\n<ul>\n<li>More workers → More Output</li>\n<li>More consumers</li>\n<li>Promoting technological progress\n<ul>\n<li>More people → More scientists, more inventors, more engineers</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Disadvantages\n<ul>\n<li>But average natural resources decrease\n<ul>\n<li>Theory of Malthus\n<ul>\n<li>natural resources cannot affrod the growth of popolation</li>\n<li>doomed to forever live in poverty</li>\n<li>In fact, by technology growth, we can break this assumption</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Diluting(稀釋) the capital\n<ul>\n<li>Lower productivity per worker</li>\n<li>Lower GDP per worker</li>\n</ul>\n</li>\n<li>Reducing the rate of population growth\n<ul>\n<li>Government regulation</li>\n<li>Give More work opportunities for women with no child</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Inward-oriented policies(內部導向政策)</p>\n<ul>\n<li>Avoid interaction with the rest of the world</li>\n<li>Infant-industry argument(保護產業)\n<ul>\n<li>Tariffs(關稅)</li>\n</ul>\n</li>\n<li>Not good for economic growth</li>\n</ul>\n<p>Amount of trade – determined by</p>\n<ul>\n<li>Government policy</li>\n<li>Geography</li>\n<li>過去有些論點認為國家間所得的不均是因為\n<ul>\n<li>法國政治學者Montesquieu：在熱帶地區的人比較懶？(比較熱的原因？)</li>\n<li>Max Weber：道德？</li>\n<li>Jeffery Sachs：地理與氣候因素。貧窮國家土壤貧瘠，熱帶瘟疫，尤其是瘧疾。</li>\n<li>Jared Diamond：歷史既有植物與動物品種以及技術的進步。</li>\n<li>人們需要誘因去投資與繁榮。他們需確定辛勤工作的成果會被確保，即法律、安全與管理體制來確保工作成果與創新。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap26-Saving-Investment-and-the-Financial-System-投資、儲蓄與金融體系\">Chap26 Saving, Investment, and the Financial System 投資、儲蓄與金融體系</h2>\n<ul>\n<li>\n<p>from an employee’s point of view, owning stock in the company can be risky</p>\n</li>\n<li>\n<p>The employee’s wages or salary is already tied to how well the firm performs</p>\n<ul>\n<li>put eggs to the same bucket</li>\n</ul>\n</li>\n<li>\n<p>If households believe that greater government borrowing today implies higher taxes to pay off the government debt in the future</p>\n<ul>\n<li>will save more so they can pay the higher future taxes</li>\n<li>private saving ↑ , supply of loanable funds ↑\n<ul>\n<li>reducing quantity of investment\n<ul>\n<li>national saving decline</li>\n</ul>\n</li>\n<li>reducing the amount interest rate rises</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>investment can be increased by</p>\n<ul>\n<li>reducing taxes on private saving\n<ul>\n<li>which increase the government budget deficit</li>\n</ul>\n</li>\n<li>reducing the government budget deficit</li>\n</ul>\n</li>\n</ul>\n<p>Financial Institutions</p>\n<ul>\n<li>Financial system\n<ul>\n<li>Moves the economy’s scarce resources from savers to borrowers</li>\n</ul>\n</li>\n<li>Financial institutions\n<ul>\n<li>Financial markets\n<ul>\n<li>Savers can directly provide funds to borrowers\n<ul>\n<li>bond market</li>\n<li>stock market</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Financial intermediaries</li>\n</ul>\n</li>\n</ul>\n<p>The bond market(債券市場)</p>\n<ul>\n<li>Terms\n<ul>\n<li>Date of maturity: when the loan will be repaid</li>\n<li>Term: length of time until maturity</li>\n<li>interest will be paid periodically until the date of maturity</li>\n<li>Principal: amount borrowed</li>\n</ul>\n</li>\n<li>Credit risk\n<ul>\n<li>Probability that the borrower will fail to pay some of the interest or principal\n<ul>\n<li>U.S. government bonds tend to pay low interest rates</li>\n<li>Junk bonds, very high interest rates Issued by financially shaky corporations</li>\n</ul>\n</li>\n<li>Long-term bonds are riskier than short-term bonds and have higher interest rate</li>\n</ul>\n</li>\n<li>Borrowing from the public\n<ul>\n<li>Used by large corporations, the federal government, or state and local governments</li>\n</ul>\n</li>\n<li>Tax treatment\n<ul>\n<li>Interest usually is taxable income</li>\n<li>Municipal bonds(市政債券)\n<ul>\n<li>Issued by state and local governments</li>\n<li>Owners are not required to pay federal income tax on the interest income</li>\n<li>Lower interest rate</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Stock market</p>\n<ul>\n<li>Stock: claim to partial ownership and profits in a firm</li>\n<li>Stock prices: demand and supply</li>\n<li>Equity finance(股權融資)\n<ul>\n<li>Sell stock to raise money</li>\n</ul>\n</li>\n<li>Stock index\n<ul>\n<li>Average of a group of stock prices</li>\n</ul>\n</li>\n</ul>\n<p>Financial intermediaries(金融中介)</p>\n<ul>\n<li>金融市場上資金融通過程中,在資金供求者之間起媒介或橋樑作用的人或機構(indirectly)</li>\n<li>Banks\n<ul>\n<li>Take in deposits from savers</li>\n<li>Make loans to borrowers</li>\n<li>Facilitate(使有效率) purchasing of goods and services</li>\n</ul>\n</li>\n<li>Mutual funds(共同基金)\n<ul>\n<li>sells shares(股份) to the public</li>\n<li>then buy a portfolio of stocks and bonds</li>\n<li>Advantages\n<ul>\n<li>Diversification(多樣化)</li>\n<li>professional money managers</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>National Income Accounts</p>\n<ul>\n<li>identities that calculate national income</li>\n<li>Y = C + I + G + NX\n<ul>\n<li>Clarify how different variables are related to one another</li>\n<li>Assume closed economy: NX = 0\n<ul>\n<li>Y = C + I + G</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>National saving (saving), S\n<ul>\n<li>Total income in the economy that remains after paying for consumption and government purchases</li>\n<li>S = Y - C - G = I</li>\n</ul>\n</li>\n<li>S = (Y – T – C) + (T – G)\n<ul>\n<li>T = taxes - transfer payments</li>\n<li>Private saving: Y – T – C\n<ul>\n<li><strong>revenue households have left</strong> after paying for taxes and consumption</li>\n</ul>\n</li>\n<li>Public saving: T – G\n<ul>\n<li><strong>revenue of government</strong>\n<ul>\n<li>Budget surplus: T – G &gt; 0\n<ul>\n<li>支出 &lt; 收入</li>\n</ul>\n</li>\n<li>Budget deficit: T – G &lt; 0\n<ul>\n<li>支出 &gt; 收入</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Accounting identity: S = I</p>\n<ul>\n<li>Saving = Investment For the economy as a whole\n<ul>\n<li>doesn't account foreign economy</li>\n</ul>\n</li>\n<li>One person’s savings is another person’s investment</li>\n</ul>\n<p>Market for loanable funds</p>\n<ul>\n<li>Market\n<ul>\n<li>savers and borrowers</li>\n</ul>\n</li>\n<li>cost of borrowing = real interest rate</li>\n<li>Assumption\n<ul>\n<li>Only one financial market</li>\n</ul>\n</li>\n</ul>\n<p>Supply and demand of loanable funds(可貸資金)</p>\n<ul>\n<li>supply of loanable funds: National Saving\n<ul>\n<li>利率愈高，可借資金愈多</li>\n</ul>\n</li>\n<li>demand for loanable funds: Investment\n<ul>\n<li>利率愈高，借貸資金需求愈少</li>\n<li>Firms: new equipment, factories...</li>\n<li>Households: new houses</li>\n</ul>\n</li>\n</ul>\n<p>Government policies</p>\n<ul>\n<li>Can affect the economy’s saving and investment</li>\n<li>Saving incentives(刺激；鼓勵)\n<ul>\n<li>raise tax rate to encourage to save more</li>\n<li>Increase supply</li>\n<li>→ Supply curve shifts right</li>\n<li>→ Lower interest rate and Higher quantity of loanable funds</li>\n<li>Greater investment</li>\n</ul>\n</li>\n<li>Investment incentives(刺激；鼓勵)\n<ul>\n<li>tax credit(退稅) encouraged firms to invest more</li>\n<li>Demand ↑: Demand curve shifts right</li>\n<li>→ Higher interest rate</li>\n<li>→ Higher quantity of loanable funds</li>\n<li>Greater saving</li>\n</ul>\n</li>\n<li>Conclusion: Saving incentives and Investment incentives have the same effect for saving and investment, but interest rate changed is different</li>\n</ul>\n<p>Government revenue</p>\n<ul>\n<li>Budget deficit\n<ul>\n<li>supply ↓</li>\n<li>→ Supply curve shifts left</li>\n<li>→ Higher interest rate</li>\n<li>→ Smaller quantity of loanable funds</li>\n<li>→ Investment falls</li>\n<li>Crowding out(擠出效應)\n<ul>\n<li>investment↓ because of government borrowing</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Budget surplus\n<ul>\n<li>Increase supply</li>\n<li>Reduce interest rate</li>\n<li>Stimulates investment</li>\n</ul>\n</li>\n</ul>\n<p>Debt of U.S. federal government</p>\n<ul>\n<li>As a percentage of U.S. GDP\n<ul>\n<li>0% of GDP in 1836</li>\n<li>107% of GDP in 1945</li>\n</ul>\n</li>\n<li>負債的增減和稅收能力有關\n<ul>\n<li>Fiscal policy(財政政策) cannot be sustained forever at current levels\n<ul>\n<li>debt-to-GDP ratio will finally increase <img data-src=\"/img/eco2/debt-to-gdp-us.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>War: 負債變動主因</li>\n</ul>\n<h3 id=\"Debt-History-in-USA\">Debt History in USA</h3>\n<p>President Ronald Reagan, 1981</p>\n<ul>\n<li>Large increase in government debt – not explained by war</li>\n<li>Committed to smaller government and lower taxes</li>\n<li>Cutting government spending - more difficult politically than cutting taxes</li>\n<li>Period of <strong>large budget deficits</strong></li>\n<li>Government debt: 26% of GDP in 1980 to 50% of GDP in 1993</li>\n</ul>\n<p>President Bill Clinton, 1993</p>\n<ul>\n<li>Major goal - deficit reduction</li>\n<li>Booming economy in the late 1990s brought in even more tax revenue</li>\n<li>Eventually: surplus (federal budget)</li>\n<li>By the late 1990s: debt-to-GDP ratio – declining for several years</li>\n</ul>\n<p>President George W. Bush</p>\n<ul>\n<li>Debt-to-GDP ratio started rising again</li>\n<li>Budget deficit\n<ul>\n<li>Several major tax cuts</li>\n<li>2001 recession - decreased tax revenue and increased government spending</li>\n</ul>\n</li>\n<li>Increased government spending on homeland security\n<ul>\n<li>Following the September 11, 2001 attacks</li>\n<li>Subsequent wars in Iraq and Afghanistan</li>\n</ul>\n</li>\n</ul>\n<p>2008, financial crisis and deep recession</p>\n<ul>\n<li>Dramatic increase in the debt-to-GDP ratio</li>\n<li>Increased budget deficit2008, financial crisis and deep recession</li>\n<li>Several policy measures passed by the Bush and Obama administrations\n<ul>\n<li>Aimed at combating the recession</li>\n<li>Reduced tax revenue</li>\n<li>Increased government spending</li>\n</ul>\n</li>\n</ul>\n<p>From 2009 to 2012</p>\n<ul>\n<li>The federal government’s budget deficit averaged about 9% of GDP <img data-src=\"/img/eco2/debt-to-gdp-2008.webp\" alt=\"\" />\n<ul>\n<li>Levels not seen since World War II</li>\n</ul>\n</li>\n<li>The borrowing to finance these deficits Led to the substantial increase in the debt-to-GDP ratio</li>\n</ul>\n<p>2008 financial crisis</p>\n<ul>\n<li>Large decline in some asset prices\n<ul>\n<li>2008–2009: Housing prices fell 30%</li>\n</ul>\n</li>\n<li>Insolvencies at financial institutions\n<ul>\n<li>2008–2009: Banks and other institutions failed when many homeowners stopped paying their mortgages(房地產)</li>\n</ul>\n</li>\n<li>Decline in confidence in financial institutions\n<ul>\n<li>2008–2009: Customers with uninsured deposits(超額保險存戶) began pulling their funds out of financial institutions</li>\n</ul>\n</li>\n<li>Credit crunch(緊縮信貸)\n<ul>\n<li>難以取得投資資金的經濟環境</li>\n<li>2008–2009:  Borrowers unable to get loans because troubled lenders not confident in borrowers’ credit-worthiness</li>\n</ul>\n</li>\n<li>Economic downturn\n<ul>\n<li>2008–2009: Failing financial institutions(制度) and a fall in investment caused GDP to fall and unemployment to rise</li>\n</ul>\n</li>\n<li>Vicious circle\n<ul>\n<li>2008–2009: The downturn reduced profits and asset values, which worsened the crisis</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Conclusion\">Conclusion</h3>\n<p>Financial markets link the present to the future</p>\n<ul>\n<li>savers convert current income into future purchasing power</li>\n<li>borrowers acquire capital to produce goods and services in the future</li>\n</ul>\n<h2 id=\"Chap27-The-Basic-Tools-of-Finance-財務金融分析的基本工具\">Chap27 The Basic Tools of Finance 財務金融分析的基本工具</h2>\n<p>The financial system: saving and investment</p>\n<ul>\n<li>Two related elements: Time and Risk\n<ul>\n<li>Participants in the financial system make decisions regarding the allocation of resources over time and the handling of risk</li>\n</ul>\n</li>\n<li>Finance is the field that studies such decision making</li>\n</ul>\n<p>Present Value: The Time Value of Money</p>\n<ul>\n<li>To compare sums from different times\n<ul>\n<li>The present value of future sum: future value - interest from now to the future</li>\n<li>The future value of a sum: value at a given future date = now value + interest in the future</li>\n</ul>\n</li>\n<li>Present value formula:  PV = FV/(1 + r )^N</li>\n<li>Present value helps explain why <strong>investment falls when the interest rate rises</strong></li>\n</ul>\n<p>Compounding(複利): the accumulation of a sum of money where the interest earned on the sum earns additional interest</p>\n<ul>\n<li>Because of compounding, small differences in interest rates lead to big differences over time</li>\n<li>Albert Einstein called compounding “the greatest mathematical discovery of all time”</li>\n<li>The Rule of 70\n<ul>\n<li>If a variable grows at a rate of x percent per year, that variable will double in about 70/x years</li>\n<li>If interest rate is 5%, a deposit will double in about 14 years</li>\n<li>If interest rate is 7%, a deposit will double in about 10 years</li>\n</ul>\n</li>\n</ul>\n<p>Risk Aversion(風險迴避)</p>\n<ul>\n<li>Most people are risk averse: they dislike uncertainty</li>\n<li>You are offered the following gamble. Toss a fair coin. If heads, you win $1000. If tails, you lose $1000\n<ul>\n<li>Should you take this gamble?</li>\n<li>If you are risk averse, the pain of losing $1000 would exceed the pleasure of winning $1000, so you should not take this gamble</li>\n</ul>\n</li>\n<li>Utility Function\n<ul>\n<li>measure of well-being that depends on wealth</li>\n<li>As wealth rises, the curve becomes flatter due to diminishing marginal utility(邊際效用遞減)\n<ul>\n<li>the more wealth a person has, the less extra utility he would get from an extra dollar</li>\n<li><img data-src=\"/img/eco2/utility-function.webp\" alt=\"\" /></li>\n<li><img data-src=\"/img/eco2/utility-function-slope.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Managing Risk With Insurance</p>\n<ul>\n<li>A person facing a risk pays a fee to the insurance company, which in return accepts part or all of the risk</li>\n<li>Insurance allows risks to be pooled, and can make risk averse people better off\n<ul>\n<li>E.g., it is easier for 10,000 people to each bear 1/10,000 of the risk of a house burning down than for one person to bear the entire risk alone</li>\n</ul>\n</li>\n<li>Not to eliminate the risks\n<ul>\n<li>Spread the risks around more efficiently</li>\n</ul>\n</li>\n</ul>\n<p>Two Problems in Insurance Markets</p>\n<ol>\n<li>Adverse selection</li>\n</ol>\n<ul>\n<li>A high-risk person benefits more from insurance, so is more likely to purchase it</li>\n</ul>\n<ol start=\"2\">\n<li>Moral hazard</li>\n</ol>\n<ul>\n<li>People with insurance have less incentive to avoid risky behavior</li>\n<li>Insurance companies cannot fully guard against these problems, so they must charge higher prices</li>\n<li>As a result, low-risk people sometimes doesn't join insurance and lose the benefits of risk-pooling</li>\n</ul>\n<p>We can measure risk by standard deviation</p>\n<ul>\n<li>which means how likely it is to fluctuate(變動)</li>\n<li>The higher the standard deviation of the asset’s return, the greater the risk</li>\n</ul>\n<p>Diversification reduces risk by replacing a single risk with a large number of smaller, unrelated risks</p>\n<ul>\n<li>A diversified portfolio contains assets whose <strong>returns are not strongly related</strong></li>\n<li>Some assets will realize high returns, others low returns</li>\n<li>The high and low returns average out, so the portfolio is likely to earn an intermediate return more consistently than any of the assets it contains</li>\n<li>Diversification can reduce firm-specific risk, which affects only a single company</li>\n<li>Diversification cannot reduce market risk, which affects all companies in the stock market</li>\n<li><img data-src=\"/img/eco2/diversification.webp\" alt=\"\" /></li>\n<li>Suppose you are dividing your portfolio between two asset classes\n<ul>\n<li>A diversified group of risky stocks\n<ul>\n<li>average return = 8%, standard dev. = 20%</li>\n</ul>\n</li>\n<li>A safe asset\n<ul>\n<li>return = 3%, standard dev. = 0%</li>\n</ul>\n</li>\n<li>The risk and return on the portfolio(投資組合) depends on the percentage of two asset</li>\n</ul>\n</li>\n</ul>\n<p>Tradeoff Between Risk and Return</p>\n<ul>\n<li>Riskier assets pay a higher return, on average, to compensate for the extra risk of holding them</li>\n<li>E.g., over past 200 years, average real return on stocks, 8%.  On short-term govt bonds, 3%.</li>\n</ul>\n<p>Value of a share = (PV of any dividends(股息) the stock will pay) + (PV of the price you get when you sell the share)</p>\n<ul>\n<li>Problem: When you buy the share, you don’t know what future dividends or prices will be</li>\n<li>One way to value a stock:  fundamental analysis\n<ul>\n<li>the study of a company’s accounting statements and future prospects to determine its value</li>\n</ul>\n</li>\n<li>Buy a mutual fund\n<ul>\n<li>A manager conducts fundamental analysis and makes the decision for you</li>\n</ul>\n</li>\n</ul>\n<p>Your broker calls you with a hot tip about a stock: new information suggests that the company will be highly profitable. Should you buy stock in the company?</p>\n<ul>\n<li>No!\n<ul>\n<li>EVERYONE knows this stock is good</li>\n<li>You are late</li>\n</ul>\n</li>\n<li>you can only earns when new information is not spreading yet</li>\n<li>everyone believes will experience big profits in the future, the price-earnings ratio is likely to be high. The price is high because it reflects everyone’s expectations about the firm’s future earnings. The largest disadvantage in buying these stocks is that they may be currently overvalued and may not pay off in the future</li>\n</ul>\n<p>Efficient Markets Hypothesis (EMH)</p>\n<ul>\n<li>the theory that each asset price reflects all publicly available information about the value of the asset</li>\n<li>衡量證券市場是否具有外在效率有兩個標誌：一是價格是否能自由地根據有關信息而變動；二是證券的有關信息能否充分地披露和均勻地分佈，使每個投資者在同一時間內得到等量等質的信息。根據這一假設，投資者在買賣股票時會迅速有效地利用可能的信息.所有已知的影響一種股票價格的因素都已經反映在股票的價格中，因此根據這一理論，股票的技術分析是無效的</li>\n<li>Stock market is informationally efficient\n<ul>\n<li>Each stock price reflects all available information about the value of the company</li>\n</ul>\n</li>\n<li>Stock prices follow a <strong>random walk</strong>\n<ul>\n<li>A stock price only changes in response to new information (“news”) about the company’s value</li>\n<li>News cannot be predicted, so stock price movements should be impossible to predict</li>\n</ul>\n</li>\n<li>It is impossible to systematically beat the market\n<ul>\n<li>By the time the news reaches you, mutual fund managers will have already acted on it</li>\n</ul>\n</li>\n</ul>\n<p>Index Funds vs. Managed Funds</p>\n<ul>\n<li>An index fund is a mutual fund that buys all the stocks in a given stock index</li>\n<li>An actively managed mutual fund aims to buy only the best stocks\n<ul>\n<li>have higher expenses than index funds</li>\n</ul>\n</li>\n<li>EMH implies that returns on actively managed funds should not consistently exceed the returns on index funds</li>\n<li><img data-src=\"/img/eco2/index-managed-funds.webp\" alt=\"\" /></li>\n<li>Active portfolio managers\n<ul>\n<li>Lower return than index funds</li>\n<li>Trade more frequently</li>\n<li>Incur more trading costs</li>\n<li>Charge greater fees</li>\n<li>Only 25% of managers beat the market</li>\n</ul>\n</li>\n</ul>\n<p>Efficient markets hypothesis</p>\n<ul>\n<li>Assumes that people buying and selling stock are rational\n<ul>\n<li>In fact, Partly psychological(irrational)\n<ul>\n<li>J.M. Keynes:  stock prices driven by “animal spirits,” “waves of pessimism and optimism”</li>\n<li>Alan Greenspan:  1990s stock market boom due to “irrational exuberance”</li>\n<li>Bubbles occur when speculators buy overvalued assets expecting prices to rise further</li>\n<li>The importance of departures from rational pricing is not known</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>When price of an asset above its fundamental value</p>\n<ul>\n<li>experiencing a speculative(投機) bubble\n<ul>\n<li>Value of the stock to a stockholder depends on\n<ul>\n<li>Stream of dividend payments</li>\n<li>Final sale price</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Debate: frequency and importance of departures from rational pricing</li>\n<li>Market irrationality</li>\n<li>Movement in stock market is hard to explain\n<ul>\n<li>news that alter a rational valuation</li>\n</ul>\n</li>\n<li>BREAK Efficient markets hypothesis</li>\n</ul>\n<h2 id=\"Chap28-Unemployment\">Chap28 Unemployment</h2>\n<p>Based on adult population (16 yrs or older)</p>\n<ul>\n<li>\n<p>Labor force = employed + unemployed</p>\n<ul>\n<li>Employed: paid employees, <strong>self-employed</strong>, and <strong>unpaid workers in a family business</strong>, part-time workers</li>\n<li>Unemployed: people not working who have <strong>looked for work</strong> during previous 1 month</li>\n</ul>\n</li>\n<li>\n<p>Not in the labor force</p>\n<ul>\n<li><strong>full-time student, homemakers, and retirees</strong></li>\n</ul>\n</li>\n<li>\n<p>Unemployment rate</p>\n<ul>\n<li>Fluctuates(變動) around the natural rate of unemployment</li>\n</ul>\n</li>\n<li>\n<p>Labor-force participation rate</p>\n<ul>\n<li>= labor force / adult population</li>\n<li>ratio choose to participate in the labor market</li>\n</ul>\n</li>\n</ul>\n<p>Labor markets Analysis</p>\n<ul>\n<li>Race: black have higher rates of unemployment\n<ul>\n<li><img data-src=\"/img/eco2/race-unemployment-rate.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Gender: women have lower rates of labor force participation\n<ul>\n<li><img data-src=\"/img/eco2/gender-participation-rate.webp\" alt=\"\" />\n<ul>\n<li>similar rates of unemployment</li>\n</ul>\n</li>\n<li>Women: Growing participation rate\n<ul>\n<li>New technologies reduced time for routine household tasks</li>\n<li>Improved birth control reduced the number of children born</li>\n<li>Changing political and social attitudes</li>\n</ul>\n</li>\n<li>Men: Falling labor-force participation\n<ul>\n<li>Young men stay in school longer</li>\n<li>Older men retire earlier and live longer</li>\n<li>More fathers now stay at home to raise their children</li>\n<li>More women employed</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Age\n<ul>\n<li>Much higher rates of unemployment than older workers</li>\n</ul>\n</li>\n<li>Countries\n<ul>\n<li>Taiwan <img data-src=\"/img/eco2/taiwan-labor-data.webp\" alt=\"\" /></li>\n<li>USA <img data-src=\"/img/eco2/us-labor-data.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Property</p>\n<ul>\n<li>More than one-third of unemployed are new labor force</li>\n<li>Not all unemployment ends with finding a job\n<ul>\n<li>Half of unemployment end when the unemployed leaves the labor force</li>\n</ul>\n</li>\n<li>Some People reported unemployed\n<ul>\n<li>May not be trying hard to find a job\n<ul>\n<li>Want to qualify for a government help</li>\n</ul>\n</li>\n<li>Working but paid “under the table”</li>\n</ul>\n</li>\n<li>Some People out of labor force\n<ul>\n<li>Discouraged workers\n<ul>\n<li>give up looking for a job</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Most unemployment are short\n<ul>\n<li>Frictional(摩擦) unemployment\n<ul>\n<li>It takes time for workers to search for suitable jobs</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Most unemployment observed at any given time is long-term\n<ul>\n<li>Structural unemployment\n<ul>\n<li>insufficient to provide a job for everyone who wants</li>\n<li>When wages are set above the equilibrium by Minimum-wage laws, unions, and efficiency wages</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Job search</p>\n<ul>\n<li>Information about job is disseminated(散佈) slowly</li>\n<li>frictional unemployment is inevitable</li>\n</ul>\n<p>Government: facilitate job search</p>\n<ul>\n<li>Employment agencies</li>\n<li>Public training programs</li>\n<li>Unemployment insurance\n<ul>\n<li>protects workers’ incomes when they become unemployed</li>\n<li>Reduces the hardship of unemployment\n<ul>\n<li>Increases frictional unemployment</li>\n</ul>\n</li>\n<li>More likely to turn down unattractive job offers</li>\n<li>Less likely to seek guarantees of job security</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Three-reasons-for-above-equilibrium-wages\">Three reasons for above-equilibrium wages</h3>\n<ul>\n<li>minimum wage laws</li>\n<li>unions</li>\n<li>efficiency wages</li>\n</ul>\n<p>Minimum-Wage Laws</p>\n<ul>\n<li>Structural unemployment\n<ul>\n<li>Number of jobs is insufficient</li>\n</ul>\n</li>\n<li>Can cause unemployment</li>\n<li>Forces the wage to remain above the equilibrium level</li>\n<li><img data-src=\"/img/eco2/minimum-wage.webp\" alt=\"\" /></li>\n</ul>\n<p>Union</p>\n<ul>\n<li>Worker association to bargain Wages, benefits, and working conditions</li>\n<li>11% of U.S. workers</li>\n<li>Type of <strong>cartel</strong>\n<ul>\n<li>Collective bargaining(集體協商)</li>\n<li>Strike(罷工)</li>\n</ul>\n</li>\n<li>Earn 10-20% more than similar workers who do not belong to unions</li>\n<li>raises the wage above the equilibrium level\n<ul>\n<li>Workers in unions get the benefit of collective bargaining</li>\n<li>Workers not in unions bear some of the cost</li>\n</ul>\n</li>\n<li>Critics\n<ul>\n<li>Inefficient - high union wages reduce employment in unionized firms below the efficient level</li>\n<li>Inequitable - some workers benefit at the expense of other workers</li>\n</ul>\n</li>\n<li>Advocate\n<ul>\n<li>necessary antidote(解毒劑) to the market power</li>\n<li>help firms respond efficiently to workers’ concerns\n<ul>\n<li>Keep a happy and productive workforce</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Efficiency wages</p>\n<ul>\n<li>效率工資(Efficiency-wage）是指企業付給員工的高於市場出清水平的工資，這樣的工資能夠起到有效激勵專業人員的作用，可以提高生產率與企業經營績效，因此，這樣的高工資就是效率工資，也就是在這樣的工資水平支付下，勞動力成本的相對收益是最高的</li>\n</ul>\n<h2 id=\"Chap29-The-Monetary-System\">Chap29 The Monetary System</h2>\n<p>Why money is important</p>\n<ul>\n<li>Without money, trade would require barter(以物易物)\n<ul>\n<li>a huge waste of additional resources</li>\n<li>This searching is unnecessary with money</li>\n</ul>\n</li>\n<li>Money\n<ul>\n<li>Set of assets in an economy that people regularly use to buy goods and services from other people</li>\n</ul>\n</li>\n</ul>\n<p>functions of money</p>\n<ul>\n<li>Medium of exchange:  an item buyers give to sellers</li>\n<li>Unit of account:  use to post prices and record debts</li>\n<li>Store of value:  transfer purchasing power from the present to the future</li>\n<li>Liquidity: asset can be converted into medium of exchange</li>\n</ul>\n<p>kinds of money</p>\n<ul>\n<li>Commodity(日用品) money\n<ul>\n<li>commodity with intrinsic value</li>\n<li>Examples: gold coins, cigarettes</li>\n</ul>\n</li>\n<li>Fiat(許可) money\n<ul>\n<li>money without intrinsic value, used as money because of government decree</li>\n<li>Example:  the U.S. dollar</li>\n</ul>\n</li>\n</ul>\n<p>money supply (money stock): the quantity of money available in the economy</p>\n<ul>\n<li>M1: currency, demand deposits, traveler’s checks, and other <strong>checkable deposits</strong>\n<ul>\n<li>M1 = $3.0 trillion (March 2015)</li>\n<li>Currency: the paper bills and coins</li>\n<li>Demand deposits(活期存款): balances in bank accounts that depositors can access on demand by writing a check</li>\n</ul>\n</li>\n<li>M2: M1 + savings deposits, small time deposits, money market mutual funds...</li>\n<li>M2 = $11.9 trillion (March 2015)</li>\n</ul>\n<p>Currency</p>\n<ul>\n<li>Much of the currency is held abroad</li>\n<li>Much of the currency is held by criminals</li>\n<li>Currency is not a particularly good way to hold wealth\n<ul>\n<li>Can be lost or stolen</li>\n<li>doesn’t earn interest</li>\n</ul>\n</li>\n</ul>\n<p>The Federal Reserve(Fed)</p>\n<ul>\n<li>central bank of the United States</li>\n<li>Purpose: to ensure the health of the nation’s banking system\n<ul>\n<li>Regulate banks</li>\n<li>Monitors each bank’s financial condition</li>\n<li>Facilitates bank transactions - clearing checks</li>\n</ul>\n</li>\n<li>Acts as a bank’s bank\n<ul>\n<li>lender of last resort(救助)</li>\n</ul>\n</li>\n<li><strong>Control the money supply</strong></li>\n</ul>\n<p>Federal Open Market Committee</p>\n<ul>\n<li>Setting of the money supply\n<ul>\n<li>primary tool: open-market operation\n<ul>\n<li>Purchase &amp; sale of U.S. government bonds</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>reserves</p>\n<ul>\n<li>Deposits that banks have received but have not loaned out\n<ul>\n<li>100% reserve banking: All deposits are held as reserves</li>\n</ul>\n</li>\n<li>Banks hold only a fraction of deposits as reserves\n<ul>\n<li>Reserve ratio: Fraction of deposits that banks hold as reserves</li>\n<li>Minimum amount of reserves is set by the Fed</li>\n</ul>\n</li>\n</ul>\n<p>Money multiplier</p>\n<ul>\n<li>Original deposit = $100.00</li>\n<li>First National lending = $ 90.00 [= .9 × $100.00]</li>\n<li>Second National lending = $ 81.00 [= .9 × $90.00]</li>\n<li>Third National lending = $ 72.90 [= .9 × $81.00]</li>\n<li>Total money supply = 100/0.1 = $1,000.00\n<ul>\n<li>Reciprocal of the reserve ratio = 1/R</li>\n</ul>\n</li>\n<li>The higher the reserve ratio, The smaller the money multiplier</li>\n<li>Increase in money supply\n<ul>\n<li>But Does not create wealth</li>\n</ul>\n</li>\n</ul>\n<p>Bank capital</p>\n<ul>\n<li>Resources a bank’s owners have put into the institution\n<ul>\n<li>generate profit</li>\n</ul>\n</li>\n</ul>\n<p>Banks create money by</p>\n<ul>\n<li>Assets(資產): Besides reserves and loans, banks also hold securities.</li>\n<li>Liabilities(負債): Besides deposits, banks also obtain funds from issuing debt and equity(股東權益).</li>\n<li>Bank capital: the resources a bank obtains by issuing equity to its owners</li>\n<li>Leverage(槓杆): the use of borrowed funds to supplement existing funds for investment purposes\n<ul>\n<li>Leverage ratio: assets / bank capital\n<ul>\n<li>If ratio = 20, for every $20 in assets, $1 is from the bank’s owners, $19 is financed with borrowed money</li>\n<li>suppose bank assets appreciate by 5%, from $1000 to $1050.  This increases bank capital from $50 to $100, doubling owners’ equity</li>\n<li>Instead, if bank assets decrease by 5%, bank capital falls from $50 to $0.</li>\n<li>If bank assets decrease more than 5%, bank capital is negative and bank is insolvent\n<ul>\n<li>government set minimum amount of capital to ensure banks will be able to pay off depositors and debts</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Many banks in 2008 and 2009</p>\n<ul>\n<li>losses on some of their assets</li>\n<li>Shortage of capital induced the banks to reduce lending\n<ul>\n<li>Credit crunch(信用緊縮)\n<ul>\n<li>Contributed to a severe downturn in economic activity</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Put public funds into the banking system to increase bank capital\n<ul>\n<li>Temporarily made the U.S. taxpayer a part owner of many banks</li>\n<li>Goal: to recapitalize the banking system</li>\n</ul>\n</li>\n</ul>\n<p>Monetary Control</p>\n<ul>\n<li>Influences the quantity of reserves\n<ul>\n<li>Open-market operations\n<ul>\n<li>Purchase and sale of U.S. government bonds by the Fed</li>\n<li>Easy to conduct</li>\n<li>Used more often</li>\n</ul>\n</li>\n<li>Fed lending to banks\n<ul>\n<li>Discount window\n<ul>\n<li>At the discount rate\n<ul>\n<li>Interest rate on the loans that the Fed makes to banks</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Term Auction Facility\n<ul>\n<li>lend highest bidder money</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Influences the reserve ratio\n<ul>\n<li>Reserve requirements\n<ul>\n<li>Minimum amount of reserves that banks must hold against deposits</li>\n<li>Used rarely – disrupt business of banking</li>\n<li>Less effective in recent years\n<ul>\n<li>Many banks hold excess reserves</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Paying interest on reserves\n<ul>\n<li>Since October 2008</li>\n<li>Increase the reserve ratio</li>\n<li>Lower the money supply</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Problem</p>\n<ul>\n<li>Not precise to control money supply</li>\n<li>The Fed does not control\n<ul>\n<li>The amount of money that households hold as deposits</li>\n<li>The amount that bankers choose to lend</li>\n</ul>\n</li>\n</ul>\n<p>Bank runs(擠兌)</p>\n<ul>\n<li>Depositors suspect that a bank may go bankrupt</li>\n<li>Problem for banks under fractional-reserve banking\n<ul>\n<li>Cannot satisfy withdraw requests from all depositors</li>\n</ul>\n</li>\n<li>Great Depression, early 1930s\n<ul>\n<li>Wave of bank runs and bank closings</li>\n<li>Households and bankers - more cautious</li>\n</ul>\n</li>\n<li>Federal Deposit Insurance Corporation (FDIC)\n<ul>\n<li>Guarantees the safety of deposits at most banks</li>\n<li>No bank runs today</li>\n</ul>\n</li>\n</ul>\n<p>The federal funds rate(隔夜貸款的利率)</p>\n<ul>\n<li>Interest rate of overnight loans between banks</li>\n<li>change federal funds rate will also change other interest rates</li>\n</ul>\n<p>Open-market operations</p>\n<ul>\n<li>The Fed buys bonds\n<ul>\n<li>Decrease in the federal funds rate</li>\n<li>Increase in money supply</li>\n</ul>\n</li>\n<li>The Fed sells bonds\n<ul>\n<li>Increase in the federal funds rate</li>\n<li>Decrease in money supply</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/eco2/interest-rates.webp\" alt=\"\" /><br />\n<img data-src=\"/img/eco2/interest-rate-tw.webp\" alt=\"\" /></p>\n<p>Summary<br />\nBecause banks are highly leveraged, a small change in the value of a bank’s assets causes a large change in bank capital. To protect depositors from bank insolvency, regulators impose minimum capital requirements.</p>\n<h2 id=\"Chap30-Money-Growth-and-Inflation\">Chap30 Money Growth and Inflation</h2>\n<ul>\n<li>2002 to 2012\n<ul>\n<li>Prices rose at an average rate of 2.5% per year</li>\n</ul>\n</li>\n<li>The 1970s\n<ul>\n<li>Prices rose by 7.8% per year</li>\n<li>The price level more than doubled over the decade</li>\n</ul>\n</li>\n</ul>\n<p>International data, 2012, inflation rate</p>\n<ul>\n<li>-0.1% in Japan</li>\n<li>2.1% in the U.S</li>\n<li>5.1% in Russia</li>\n<li>9.3% in India</li>\n<li>21.1% in Venezuela</li>\n<li>24,000 percent in February 2008, Zimbabwe</li>\n</ul>\n<p>Money demand</p>\n<ul>\n<li>how much wealth people want to hold in liquid form</li>\n<li>Depends on\n<ul>\n<li>Credit cards</li>\n<li>Availability of ATM</li>\n<li>Interest rate</li>\n<li>Average price level</li>\n</ul>\n</li>\n</ul>\n<p>Money supply</p>\n<ul>\n<li>Determined by the Fed and the banking system</li>\n<li>If the Fed doubles the supply of money\n<ul>\n<li>Supply curve shifts right</li>\n<li>Value of money decreases</li>\n<li>Price level increases</li>\n</ul>\n</li>\n</ul>\n<p>Inflation</p>\n<ul>\n<li>\n<p>Excess supply of money</p>\n</li>\n<li>\n<p>Increase demand of goods and services</p>\n</li>\n<li>\n<p>Increase price level</p>\n</li>\n<li>\n<p>Increase in quantity of money demanded</p>\n</li>\n<li>\n<p>New equilibrium</p>\n</li>\n<li>\n<p><img data-src=\"/img/eco2/money-supply-curve.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p>Nominal variables</p>\n<ul>\n<li>Variables measured in monetary units</li>\n</ul>\n</li>\n<li>\n<p>Real variables</p>\n<ul>\n<li>Variables measured in physical units\n<ul>\n<li>Relative prices, real wages, real interest rate</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Comparison</p>\n<ul>\n<li>Principle of Monetary neutrality\n<ul>\n<li>Changes in money supply don’t affect real variables\n<ul>\n<li>Not true in short run</li>\n<li>Correct in long run</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Velocity of money (V)</p>\n<ul>\n<li>rate of money flows</li>\n<li>V = (P × Y) / M\n<ul>\n<li>P = price level (GDP deflator)</li>\n<li>Y = real GDP</li>\n<li>M = quantity of money</li>\n</ul>\n</li>\n<li>P x Y : Nominal GDP</li>\n<li>velocity doesn't change a lot <img data-src=\"/img/eco2/money-velocity.webp\" alt=\"\" /></li>\n</ul>\n<p>Hyperinflation</p>\n<ul>\n<li>Inflation that exceeds 50% per month</li>\n<li>Four classic hyperinflation, 1920s\n<ul>\n<li>Austria, Hungary, Germany, and Poland</li>\n</ul>\n</li>\n</ul>\n<p>The inflation tax</p>\n<ul>\n<li>government Revenue by printing money</li>\n<li>= Tax on everyone who holds money</li>\n<li>The price level rises\n<ul>\n<li>dollars in your wallet are less valuable</li>\n</ul>\n</li>\n</ul>\n<p>Fisher effect</p>\n<ul>\n<li>One-for-one adjustment of nominal interest rate to inflation rate\n<ul>\n<li>如果預期通貨膨脹率提高1%，長期來看，名義利率也將提高1%，也就是說，這種效應是一對一的</li>\n</ul>\n</li>\n<li>When the Fed increases the rate of money growth\n<ul>\n<li>Long-run result\n<ul>\n<li>Higher inflation rate</li>\n<li>Higher nominal interest rate</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"http://wiki.mbalib.com/zh-tw/%E8%B4%B9%E9%9B%AA%E6%95%88%E5%BA%94\"></a></li>\n<li><img data-src=\"/img/eco2/fisher-effect.webp\" alt=\"\" /></li>\n</ul>\n<p>Inflation fallacy</p>\n<ul>\n<li>\n<p>Inflation robs people of the purchasing power of his hard-earned dollars</p>\n<ul>\n<li>inflation doesn't change real purchasing power</li>\n</ul>\n</li>\n<li>\n<p>Shoeleather costs</p>\n<ul>\n<li>Resources wasted when inflation encourages people to reduce their money holdings</li>\n<li>在通貨膨脹時，貨幣的購買力在下降，為了減少損失，人們會更傾向於持有更少的現金而將更多的錢存入銀行，如此當要使用現金時，就需要去銀行取款，持有現金少了就意味著需要增加跑銀行的次數，這種多去幾次銀行所花費的時間和精力被經濟學家稱為皮鞋成本</li>\n</ul>\n</li>\n<li>\n<p>Menu costs</p>\n<ul>\n<li>Costs of changing prices</li>\n<li>企業不經常改變價格是因為改變價格有成本。調整價格的成本被稱為菜單成本</li>\n</ul>\n</li>\n<li>\n<p>Inflation distorts relative prices</p>\n<ul>\n<li>Consumer decisions are distorted</li>\n<li>Markets are less able to allocate resources to their best use</li>\n</ul>\n</li>\n<li>\n<p>Taxes distort incentives(?)</p>\n<ul>\n<li>Inflation discourages saving\n<ul>\n<li>Exaggerates the size of capital gains</li>\n<li>Increases the tax burden</li>\n</ul>\n</li>\n<li>How Inflation Raises the Tax Burden on Saving <img data-src=\"/img/eco2/inflation-interest-rate.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Unexpected inflation</p>\n<ul>\n<li>Redistributes wealth among the population\n<ul>\n<li>debtors and creditors</li>\n</ul>\n</li>\n<li>Inflation: volatile(不穩定) and uncertain\n<ul>\n<li>When the average rate of inflation is high</li>\n</ul>\n</li>\n</ul>\n<p>The Friedman rule</p>\n<ul>\n<li>moderate(適度的) deflation will\n<ul>\n<li>Lower the nominal interest rate</li>\n<li>Reduce the cost of holding money</li>\n<li>Shoeleather costs of holding money\n<ul>\n<li>minimized by a nominal interest rate close to zero</li>\n<li>Deflation equal to the real interest rate</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Deflation May be worse\n<ul>\n<li>Menu costs</li>\n<li>Relative-price variability</li>\n<li>Arises because of broader macroeconomic difficulties(???)\n<ul>\n<li>Symptom of deeper economic problems</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>貨幣發行增長率要保持一個恆定的速度，讓經濟中的個體對通貨膨脹有完全的預期\n<ul>\n<li>通膨導因於貨幣供給率高於經濟成長率</li>\n</ul>\n</li>\n</ul>\n<p>The Wizard of Oz</p>\n<ul>\n<li>1880-1896, price level fell by 23%\n<ul>\n<li>Real value of debts increased</li>\n</ul>\n</li>\n<li>Major redistribution of wealth\n<ul>\n<li>Farmers in west were debtors</li>\n<li>Bankers in east were creditors<br />\nPossible solution to the farmers’ problem</li>\n</ul>\n</li>\n<li>Free coinage of silver</li>\n<li>gold standard</li>\n<li>Free-silver(自由鑄造銀幣運動) advocates\n<ul>\n<li>Silver and gold - to be used as money</li>\n<li>Increase money supply</li>\n<li>Pushed up the price level</li>\n<li>Reduced real burden of the farmers’ debts</li>\n</ul>\n</li>\n</ul>\n<p>Characters</p>\n<ul>\n<li>Dorothy: Traditional American values</li>\n<li>Toto: Prohibitionist(禁酒主義者) party</li>\n<li>Scarecrow: Farmers</li>\n<li>Tin Woodsman: Industrial workers</li>\n<li>Cowardly Lion: William Jennings Bryan - prominent advocate of free silver</li>\n<li>Munchkins: Citizens of the East (creditors)</li>\n<li>Wicked Witch of the East: Grover Cleveland</li>\n<li>Wiicked Witch of the West: William McKinley (1896 president; gold standard)</li>\n<li>Wizard: Marcus Alonzo Hanna, chairman of the Republican Party</li>\n<li>Oz: Abbreviation for ounce of gold</li>\n<li>Yellow Brick Road: Gold standard</li>\n</ul>\n<p>民粹主義Populists</p>\n<ul>\n<li>Lost the debate over the free coinage of silver</li>\n<li>Get the monetary expansion and inflation that they wanted\n<ul>\n<li>Increased supply of gold\n<ul>\n<li>New discoveries - Klondike River in the Canadian Yukon</li>\n<li>Mines of South Africa</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Money supply and price level started to rise</li>\n</ul>\n<h2 id=\"Chap31-Open-Economy-Macroeconomics-Basic-Concepts\">Chap31 Open-Economy Macroeconomics: Basic Concepts</h2>\n<ul>\n<li>Net exports (Trade balance)\n<ul>\n<li>exports - imports</li>\n</ul>\n</li>\n<li>Trade surplus (Positive net exports)</li>\n<li>Trade deficit (Negative net exports)</li>\n</ul>\n<p>For Example of US</p>\n<ul>\n<li>Increasing importance of international trade and finance\n<ul>\n<li>1950s, imports and exports: 4-5% of GDP</li>\n<li>Recent years – about three times that level</li>\n</ul>\n</li>\n<li>Largest trading partner, 2012 (imports and exports combined)\n<ul>\n<li>Canada, China, Mexico, Japan, Germany, and the United Kingdom</li>\n</ul>\n</li>\n<li>Technology Improvement\n<ul>\n<li>Improvements in transportation and telecommunications</li>\n<li>easy to transport goods</li>\n</ul>\n</li>\n<li>Government’s trade policies\n<ul>\n<li>NAFTA, GATT</li>\n</ul>\n</li>\n<li>precentage of US GDP <img data-src=\"/img/eco2/US-gdp-percent.webp\" alt=\"\" /></li>\n</ul>\n<p>Net capital outflow(淨資本流出)</p>\n<ul>\n<li>\n<p>本國居民購買的外國資產減外國人購買的本國資產，用於兩個市場（可貸資金市場和外匯市場）之間的聯繫，其關鍵決定因素是真實利率</p>\n</li>\n<li>\n<p>Variables that influence net capital outflow</p>\n<ul>\n<li>Real interest rates paid on foreign/domestic assets</li>\n<li>Economic and political risks of holding assets abroad</li>\n</ul>\n</li>\n<li>\n<p>Net exports (NX)</p>\n<ul>\n<li>Imbalance between a country’s exports and its imports</li>\n</ul>\n</li>\n<li>\n<p>Net capital outflow (NCO)</p>\n<ul>\n<li>Imbalance between Amount of foreign assets bought by domestic residents And the amount of domestic assets bought by foreigners</li>\n</ul>\n</li>\n<li>\n<p>NCO = NX</p>\n<ul>\n<li>Every international transaction involves the exchange of an asset for a good or service, so net exports equal net capital outflow</li>\n</ul>\n</li>\n</ul>\n<p>When NX &gt; 0 (trade surplus)</p>\n<ul>\n<li>\n<p>Selling more goods and services to foreigners</p>\n</li>\n<li>\n<p>Receives foreign currency</p>\n</li>\n<li>\n<p>Buy foreign assets</p>\n<ul>\n<li>Capital is flowing out of the country: NCO &gt; 0<br />\nWhen NX &lt; 0 (trade deficit)</li>\n</ul>\n</li>\n<li>\n<p>Buying more goods and services from foreigners</p>\n</li>\n<li>\n<p>Net purchase of goods needs financed</p>\n<ul>\n<li>Selling assets abroad</li>\n<li>Capital is flowing into the country: NCO &lt; 0</li>\n</ul>\n</li>\n<li>\n<p>Open economy: Y = C + I + G + NX</p>\n</li>\n<li>\n<p>National saving: S = Y – C – G</p>\n<ul>\n<li>Y – C – G = I + NX</li>\n<li>S = I + NX</li>\n</ul>\n</li>\n<li>\n<p>NX = NCO</p>\n<ul>\n<li>S = I + NCO</li>\n<li>Saving = Domestic investment + Net capital outflow</li>\n<li>存款 = 國內投資 + 淨資本流出</li>\n</ul>\n</li>\n<li>\n<p>Saving can be used to finance domestic investment or to buy assets abroad</p>\n<ul>\n<li>saving = domestic investment +  net capital outflow</li>\n</ul>\n</li>\n</ul>\n<p>The United States</p>\n<ul>\n<li>The world’s largest debtor</li>\n<li>Borrowing heavily in world financial markets during the past three decades\n<ul>\n<li>large trade deficits</li>\n</ul>\n</li>\n<li>Before 1980\n<ul>\n<li>National saving and domestic investment were close</li>\n</ul>\n</li>\n<li>After 1980\n<ul>\n<li>National saving &lt; domestic investment</li>\n<li>Net capital outflow is negative</li>\n</ul>\n</li>\n</ul>\n<p>Unbalanced policy: 1980 to 1987</p>\n<ul>\n<li>\n<p>Flow of capital into the U.S. declines</p>\n<ul>\n<li>3.1 → 0.5% of GDP</li>\n</ul>\n</li>\n<li>\n<p>fall in national saving of 3.2 percentage points</p>\n<ul>\n<li>Increase government budget deficit</li>\n<li>President Ronald Reagan cut taxes and increased defense spending</li>\n</ul>\n</li>\n<li>\n<p>An investment boom: 1991 to 2000</p>\n<ul>\n<li>Increase flow of capital (from 0.5 to 3.9% of GDP)</li>\n<li>Saving increased</li>\n<li>Government budget surplus</li>\n<li>Investment increased from 13.4 to 17.8% of GDP</li>\n</ul>\n</li>\n<li>\n<p>An economic downturn: 2000 to 2012</p>\n<ul>\n<li>Large capital flow into the U.S.</li>\n<li>Investment fell 4.5 percentage points</li>\n<li>Tough economic times starting in 2008 made additional capital less profitable</li>\n<li>National saving fell 4.5 percentage points</li>\n<li>Extraordinarily large budget deficits</li>\n</ul>\n</li>\n<li>\n<p>At the end of the economic downturn</p>\n<ul>\n<li>National saving 2/3 domestic investment + 1/3 NCO</li>\n<li>Are these trade deficits and international capital flows a problem for the U.S. economy?\n<ul>\n<li>No easy answer to this question</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Trade deficit induced by an investment boom (1990s)</p>\n<ul>\n<li>Borrowing from abroad to finance the purchase of new capital goods</li>\n<li>For good return on investment - Can handle the debts</li>\n<li>For lower return on investment - debts will look less desirable</li>\n</ul>\n</li>\n<li>\n<p><img data-src=\"/img/eco2/saving-investment-gdp.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p><img data-src=\"/img/eco2/net-capital-outflow.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p>Appreciation(strengthen)</p>\n<ul>\n<li>Increase in the value of a currency compared to foreign currency\n<ul>\n<li>Buy more foreign currency</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Depreciation (weaken)</p>\n<ul>\n<li>Decrease in the value of a currency</li>\n</ul>\n</li>\n</ul>\n<p>Real exchange rate</p>\n<ul>\n<li>= (e * P) / P_f</li>\n<li>e: nominal exchange rate</li>\n<li>P: local price index</li>\n<li>P_f: foreign price index</li>\n<li>= Nominal exchange rate x Domestic price / Foreign price</li>\n</ul>\n<p>fall in the U.S. real exchange rate</p>\n<ul>\n<li>\n<p>U.S. goods: cheaper relative to foreign goods</p>\n</li>\n<li>\n<p>Consumers buy more U.S. goods</p>\n<ul>\n<li>Higher exports</li>\n<li>Lower imports</li>\n<li>Higher net exports</li>\n</ul>\n</li>\n<li>\n<p>Purchasing-power parity, PPP(購買力平價)</p>\n<ul>\n<li>A unit of any given currency should be able to buy the same quantity of goods in all countries</li>\n<li>Parity: Equality</li>\n<li>Based on the <strong>law of one price</strong>: A good must sell for the same price in all locations</li>\n<li><strong>Nominal exchange rate</strong> between two countries = price levels in those countries</li>\n<li>does not always hold in practice\n<ul>\n<li>Many goods are not easily traded</li>\n<li>Even tradable goods are not always perfect substitutes</li>\n<li>Not a perfect theory of exchange-rate determination</li>\n<li>Real exchange rates fluctuate over time</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Arbitrage(套利交易)</p>\n<ul>\n<li>Take advantage of price differences for the same item in different markets</li>\n<li>Result: the law of one price</li>\n</ul>\n</li>\n<li>\n<p><img data-src=\"/img/eco2/money-supply-exchange-rate.webp\" alt=\"\" /></p>\n</li>\n</ul>\n<p>hamburger standard</p>\n<ul>\n<li>According to purchasing power parity\n<ul>\n<li>Real Cost of “Big Mac” is same in both countries</li>\n<li>Predicted exchange rate = Price in U.S. / Price in foreign country (in foreign currency)</li>\n</ul>\n</li>\n<li>reasonable prediction <img data-src=\"/img/eco2/big-mac-exchange-rate.webp\" alt=\"\" /></li>\n</ul>\n<h2 id=\"Chap32-A-Macroeconomic-Theory-of-the-Open-Economy\">Chap32: A Macroeconomic Theory of the Open Economy</h2>\n<p>可貸資金(loanable funds)</p>\n<ul>\n<li>Definition\n<ul>\n<li>Domestically generated flow of resources</li>\n</ul>\n</li>\n<li>Supply of loanable funds\n<ul>\n<li>From national saving (S)</li>\n</ul>\n</li>\n<li>Demand for loanable funds\n<ul>\n<li>domestic investment (I)</li>\n<li>net capital outflow (NCO)</li>\n</ul>\n</li>\n<li>When NCO &gt; 0\n<ul>\n<li>Adds demand for loanable fund</li>\n<li>資本流入，國內資金需求增加</li>\n</ul>\n</li>\n</ul>\n<p>Higher real interest rate</p>\n<ul>\n<li>Encourages people to save\n<ul>\n<li>Increases loanable funds supplied</li>\n</ul>\n</li>\n<li>Discourages investment\n<ul>\n<li>Decreases loanable funds demanded</li>\n</ul>\n</li>\n<li>Domestic assets more attractive\n<ul>\n<li>Increases demand of domestic capital</li>\n<li>Reduces net capital outflow</li>\n<li>Decrease loanable funds demanded</li>\n</ul>\n</li>\n</ul>\n<p>可貸資金和利率的關係</p>\n<ul>\n<li>利率增加 需求減少 供給增加</li>\n<li><img data-src=\"/img/eco2/loanable-funds.webp\" alt=\"\" /></li>\n</ul>\n<p>The real exchange rate</p>\n<ul>\n<li>determined by the supply and demand for foreign-currency exchange</li>\n</ul>\n<p>Supply of foreign-currency exchange</p>\n<ul>\n<li>Net capital outflow\n<ul>\n<li>Quantity of dollars supplied to buy foreign assets</li>\n<li>Supply curve is vertical\n<ul>\n<li>Does not depend on the real exchange rate</li>\n<li>供给曲线是垂直的，因为净国外投资(nco)的供给数量与实际汇率无关<br />\nDemand for foreign-currency exchange</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Net exports\n<ul>\n<li>Quantity of dollars demanded to buy U.S. goods and services</li>\n<li>出超→他國需要用美金買東西→需求上升</li>\n</ul>\n</li>\n<li>A higher real exchange rate\n<ul>\n<li>Makes U.S. goods more expensive and reduces dollar demanded</li>\n</ul>\n</li>\n</ul>\n<p>Equilibrium real exchange rate</p>\n<ul>\n<li>Demand for dollars\n<ul>\n<li>from foreigners</li>\n<li>from U.S. net exports</li>\n</ul>\n</li>\n<li>Supply of dollars\n<ul>\n<li>From Americans</li>\n<li>from U.S. net capital outflow</li>\n</ul>\n</li>\n<li><img data-src=\"img/eco2/foreign-currency-exchange.webp\" alt=\"\" /></li>\n</ul>\n<p>Comparison</p>\n<ul>\n<li>\n<p>Market for loanable funds: S = I + NCO</p>\n</li>\n<li>\n<p>Market for foreign-currency exchange: NCO = NX</p>\n</li>\n<li>\n<p><img data-src=\"/img/eco2/nco-interest.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p>Equilibrium real interest rate, r</p>\n<ul>\n<li>present Price of goods and services</li>\n<li>Relative to future price of goods and services</li>\n</ul>\n</li>\n<li>\n<p>Equilibrium real exchange rate, E</p>\n<ul>\n<li>Price of domestic goods and services</li>\n<li>Relative to foreign goods and services<br />\n<img data-src=\"/img/eco2/open-economy-equilibrium.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Government budget deficits</p>\n<ul>\n<li>Reduces national saving</li>\n<li>Reduces supply of loanable funds</li>\n<li>Increase in interest rate</li>\n<li>Reduces net capital outflow(tends to save instead buy)</li>\n<li>Decrease in supply of foreign-currency exchange</li>\n<li>Currency appreciates</li>\n<li>Net exports fall</li>\n<li>trade tends to deficit</li>\n<li><img data-src=\"/img/eco2/open-economy-deficit.webp\" alt=\"\" /></li>\n</ul>\n<p>Trade policy</p>\n<ul>\n<li>Tariff(關稅)</li>\n<li>Import quota(進口配額)</li>\n<li>Voluntary export restrictions(自動出口配額制)</li>\n</ul>\n<p>Macroeconomic impact of trade policy</p>\n<ul>\n<li><strong>Decrease imports</strong></li>\n<li>Increase demand for local currency\n<ul>\n<li>Real exchange rate appreciates\n<ul>\n<li><strong>Decrease exports</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>No change in net exports\n<ul>\n<li>Macro\n<ul>\n<li>No change in real interest rate\n<ul>\n<li>No change in net capital outflow</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Micro\n<ul>\n<li>Decrease in imports and exports</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/open-economy-import-quota.webp\" alt=\"\" /></li>\n<li>Trade policies only affect specific\n<ul>\n<li>Firms</li>\n<li>Industries</li>\n<li>Countries</li>\n</ul>\n</li>\n<li>A policy that restricts imports does not affect net capital outflow, so it cannot affect net exports or improve a country’s trade deficit.  Instead, it drives up the exchange rate and reduces exports and imports</li>\n</ul>\n<p>capital flight in Mexico</p>\n<ul>\n<li>NCO increase\n<ul>\n<li>Reduce domestic investment(saving is the same)</li>\n<li>Slows capital accumulations</li>\n<li>Slows economic growth</li>\n</ul>\n</li>\n<li>Loanable Funds Market\n<ul>\n<li>NCO increase</li>\n<li>demand of loanable funds increases</li>\n<li>Interest rate increases</li>\n</ul>\n</li>\n<li>Foreign-Currency Market\n<ul>\n<li>NCO increase</li>\n<li>peso supply increase</li>\n<li>peso depreciate</li>\n</ul>\n</li>\n<li>The peso depreciates\n<ul>\n<li>Exports – cheaper</li>\n<li>Imports – more expensive</li>\n<li>Trade balance moves toward surplus</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/open-economy-capital-flight.webp\" alt=\"\" /></li>\n<li>influence of U.S. market\n<ul>\n<li>Fall in U.S. net capital outflow</li>\n<li>The dollar appreciates</li>\n<li>U.S. interest rates fall</li>\n<li>only a little influence</li>\n</ul>\n</li>\n</ul>\n<p>Ongoing policy disputes: U.S. and China<br />\nChina – tried to depreciate renminbi</p>\n<ul>\n<li>Chinese goods - less expensive</li>\n<li>Promote its export industries\n<ul>\n<li>Accumulate foreign assets($3 trillion, 2012)\n<ul>\n<li>Including U.S. government bonds</li>\n</ul>\n</li>\n<li>wants to accumulate a reserve of foreign assets - national “rainy-day fund”\n<ul>\n<li>Misguided policy</li>\n</ul>\n</li>\n<li>Contributes to the U.S. trade deficit</li>\n</ul>\n</li>\n<li>Inflow of capital from China\n<ul>\n<li>Lowers U.S. interest rates</li>\n<li>Increases investment in the U.S.</li>\n</ul>\n</li>\n<li>Creates winners and losers among Americans\n<ul>\n<li>Hurts American producers</li>\n<li>American consumers benefit from lower prices</li>\n</ul>\n</li>\n</ul>\n<p>For US</p>\n<ul>\n<li>trade deficit is not caused by  other countries’ “unfair” trade practices,  but by low saving</li>\n<li>Stagnant(停滯的) living standards are not caused by imports, but by low productivity growth</li>\n</ul>\n<h2 id=\"Chap33-Aggregate-Demand-and-Aggregate-Supply\">Chap33: Aggregate Demand and Aggregate Supply</h2>\n<ul>\n<li>real GDP grows about  3% per year on average in the world in the long run</li>\n<li>Business cycles: Short-run economic fluctuations\n<ol>\n<li>irregular and unpredictable</li>\n<li>Most macroeconomic values fluctuate together</li>\n</ol>\n</li>\n</ul>\n<p>classical theory describes the world <strong>in the long run</strong>,  but not the short run</p>\n<ul>\n<li>use <strong>model of  aggregate demand and aggregate supply</strong></li>\n</ul>\n<p>In the short run</p>\n<ul>\n<li>\n<p>changes in nominal variables can <strong>affect  real variables</strong></p>\n</li>\n<li>\n<p><strong>Can't assume monetary neutrality</strong></p>\n</li>\n<li>\n<p>The model determines price level(nominal) and output (real)</p>\n<ul>\n<li><img data-src=\"/img/eco2/aggregate-model.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Demand Curve</p>\n<ul>\n<li>Affected by Y = C + I + G + NX\n<ul>\n<li>Wealth effect (C)</li>\n<li>Interest-rate effect (I)</li>\n<li>Exchange-rate effect (NX)</li>\n</ul>\n</li>\n</ul>\n<p>Price level and consumption (C): the wealth effect</p>\n<ul>\n<li>Changes in taxes</li>\n<li>Decrease in price level\n<ul>\n<li>Increase real value of money</li>\n<li>Consumers are wealthier</li>\n<li>Increase consumer spending</li>\n<li>Increase demanded of goods and services</li>\n</ul>\n</li>\n</ul>\n<p>Price level and investment (I): the interest-rate effect</p>\n<ul>\n<li>Technology, Tax policy, Money supply</li>\n<li>Decrease in price level\n<ul>\n<li>Decrease in the interest rate</li>\n<li>Increase spending on investment</li>\n<li>Increase in demanded of goods and services</li>\n</ul>\n</li>\n</ul>\n<p>Price level and net exports (NX): the exchange-rate effect</p>\n<ul>\n<li>\n<p>Recession in other country</p>\n</li>\n<li>\n<p>International speculators(國際炒家)</p>\n<ul>\n<li>change in exchange rate</li>\n</ul>\n</li>\n<li>\n<p>Decrease in U.S. price level</p>\n<ul>\n<li>Decrease in the interest rate</li>\n<li>U.S. dollar depreciates</li>\n<li>Stimulates U.S. net exports</li>\n<li>Increase in demanded of goods and services</li>\n</ul>\n</li>\n<li>\n<p>Long Run Aggregate-supply(LRAS) curve is vertical</p>\n<ul>\n<li>Price level does not affect the long-run GDP</li>\n<li>LRAS curve only shift by output(labor, capital, natural resources, techonology)</li>\n</ul>\n</li>\n<li>\n<p>In long run: both AD and LRAS curve shift right</p>\n<ul>\n<li>LRAS curve shift by technological progress</li>\n<li>AD curve shifts to right by Fed increases money supply</li>\n<li>Result\n<ul>\n<li><strong>Continuing growth in output</strong></li>\n<li><strong>Continuing inflation</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><img data-src=\"/img/eco2/longrun-growth-inflation.webp\" alt=\"\" /></p>\n</li>\n</ul>\n<p>In the short run</p>\n<ul>\n<li>\n<p>price level increase, supply increase <img data-src=\"/img/eco2/short-run-supply.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p>Explanation</p>\n<ul>\n<li>Sticky-wage theory\n<ul>\n<li>Nominal wages: slow to adjust\n<ul>\n<li>Long-term contracts: workers and firms</li>\n<li>based on expected prices</li>\n<li>Don’t respond immediately when actual price level different from what was expected</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Sticky-price theory\n<ul>\n<li>Prices of some goods and services: Slow to adjust\n<ul>\n<li>Menu costs: Costs to adjusting prices</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Misperceptions theory\n<ul>\n<li>Changes in the overall price level can temporarily mislead suppliers</li>\n<li>supply more goods and services because nominal price up</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>output = Natural level of output + a(Actual price level – Expected price level)</p>\n<ul>\n<li>a: degree of output responds to unexpected price level changes</li>\n</ul>\n</li>\n<li>\n<p><img data-src=\"/img/eco2/longrun-shortrun-supply.webp\" alt=\"\" /></p>\n</li>\n</ul>\n<p>Long-run equilibrium</p>\n<ul>\n<li>Intersection of AD and LRAS curves\n<ul>\n<li>Natural level of output</li>\n<li>Actual price level</li>\n</ul>\n</li>\n<li>Intersection of AD and short-run AS curve\n<ul>\n<li>when Expected price level = Actual price level</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/lr-sr-ad.webp\" alt=\"\" />\n<ul>\n<li>三線會交於一點</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Analyze-Macroeconomic-fluctuations\">Analyze Macroeconomic fluctuations</h3>\n<ol>\n<li>Decide the curve and direction to shift</li>\n<li>determine the impact in the short run</li>\n<li>analyze movement from new short-run equilibrium to long-run equilibrium</li>\n</ol>\n<p><img data-src=\"/img/eco2/ad-decrease-lr-sr.webp\" alt=\"\" /></p>\n<ul>\n<li>Early 1930s: large drop in real GDP\n<ul>\n<li>Cause: decrease in aggregate demand\n<ul>\n<li>Decline in money supply (by 28%)</li>\n<li>Decrease C and I</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Early 1940s: large increase in real GDP\n<ul>\n<li>World War II\n<ul>\n<li>Government purchases increased</li>\n<li>Doubled production of goods and services</li>\n<li>20% increase in the price level</li>\n<li>Unemployment fell from 17 to 1%</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/gdp-change.webp\" alt=\"\" /></li>\n</ul>\n<p>2008-2009, financial crisis, severe downturn in economic activity</p>\n<ul>\n<li>low interest rates\n<ul>\n<li>rise in housing prices</li>\n</ul>\n</li>\n<li>Misguided government policy\n<ul>\n<li>Encouraged this high-risk lending</li>\n</ul>\n</li>\n<li>2006-2009, housing prices fell 30%\n<ul>\n<li>Financial institutions losses huge</li>\n</ul>\n</li>\n<li>Large contractionary shift in AD\n<ul>\n<li>By 4% between the forth quarter of 2007 and the second quarter of 2009</li>\n<li>Unemployment rate rose from 4.4% in May 2007 to 10.1% in October 2009</li>\n</ul>\n</li>\n<li>Three actions to resume AD\n<ul>\n<li>The Fed\n<ul>\n<li>Cut federal funds rate\n<ul>\n<li>From 5.25% in September 2007 to about zero in December 2008</li>\n</ul>\n</li>\n<li>Started buying mortgage-backed securities and other private loans\n<ul>\n<li>Provided banks with additional funds</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>October 2008, Congress appropriated $700 billion\n<ul>\n<li>rescue the financial system</li>\n<li>make loans\n<ul>\n<li>U.S. government – temporarily became a part owner of these banks</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>January 2009, Barack Obama\n<ul>\n<li>Large increase in government spending</li>\n<li>$787 billion stimulus bill, February 17, 2009</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>From 2010 through 2012\n<ul>\n<li>Real GDP growth averaged 2.1% per year</li>\n</ul>\n</li>\n<li>Unemployment fell, but remained high\n<ul>\n<li>7.5% in April 2013</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/eco2/supply-shift.webp\" alt=\"\" /><br />\n<img data-src=\"/img/eco2/supply-ad-shift.webp\" alt=\"\" /></p>\n<ul>\n<li>1970 Oil crysis\n<ul>\n<li>reduces the supply of crude oil flowing from Middle East</li>\n<li>Price of oil rises\n<ul>\n<li>Aggregate-supply curve shifts left</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>John Maynard Keynes, 1883–1946</p>\n<ul>\n<li>Argued recessions and depressions  can result from <strong>inadequate demand</strong></li>\n<li>policymakers <strong>should shift AD</strong></li>\n<li>Famous critique of classical theory</li>\n<li>The long run is a misleading guide to current affairs. In the long run, we are all dead. Economists set themselves too easy, too useless a task if in tempestuous seasons they can only tell us when the storm is long past,  the ocean will be flat</li>\n</ul>\n<h2 id=\"Chap34-The-Influence-of-Monetary-and-Fiscal-Policy-on-Aggregate-Demand\">Chap34: The Influence of Monetary and Fiscal Policy on Aggregate Demand</h2>\n<p>For U.S. economy</p>\n<ul>\n<li>The wealth effect - least important\n<ul>\n<li>Money holdings – a small part of household wealth</li>\n</ul>\n</li>\n<li>The exchange-rate effect - not large\n<ul>\n<li>Exports and imports – small fraction of GDP</li>\n</ul>\n</li>\n<li>The interest-rate effect\n<ul>\n<li><strong>The most important</strong></li>\n</ul>\n</li>\n</ul>\n<p>liquidity preference</p>\n<ul>\n<li>Keynes’s theory</li>\n<li>Assumption: expected rate of inflation is constant</li>\n<li>If interest rate &gt; equilibrium\n<ul>\n<li>money demand &lt; supply</li>\n<li>People holding the surplus\n<ul>\n<li>Buy assets</li>\n<li>Lowers the interest rate</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/money-demand-relation.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Money supply</p>\n<ul>\n<li>Controlled by the Fed\n<ul>\n<li>Changing reserves</li>\n<li>open-market operations</li>\n</ul>\n</li>\n</ul>\n<p>Money Demand</p>\n<ul>\n<li>Interest rate – opportunity cost of holding money</li>\n<li>Increase in the interest rate\n<ul>\n<li>Raises the cost of holding money</li>\n<li>Reduces the quantity of money demanded</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Monetary-policies-to-AD\">Monetary policies to AD</h3>\n<ul>\n<li>\n<p><strong>If price level ↓</strong></p>\n<ul>\n<li>→ money demand ↑</li>\n<li>→ interest rate ↑</li>\n<li>→ <strong>product demand ↓</strong></li>\n</ul>\n</li>\n<li>\n<p>increases money supply</p>\n<ul>\n<li>Money-supply curve shifts right</li>\n<li>Interest rate falls</li>\n<li>Increase demanded of goods and services</li>\n<li>Aggregate-demand curve shifts right</li>\n<li><img data-src=\"/img/eco2/money-supply-AD.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>Summary</p>\n<ul>\n<li>expanding aggregate demand\n<ul>\n<li>Increasing the money supply</li>\n<li>Lowering the interest rate</li>\n</ul>\n</li>\n<li>contracting aggregate demand\n<ul>\n<li>Decreasing the money supply</li>\n<li>Raising the interest rate</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Stock market boom expands the AD</p>\n<ul>\n<li>Households – wealthier\n<ul>\n<li>Stimulates consumer spending</li>\n</ul>\n</li>\n<li>Firms – want to sell new shares of stock\n<ul>\n<li>Stimulates investment spending</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>The Fed’s goal: stabilize AD</p>\n<ul>\n<li>The Fed’s response to a stock-market boom\n<ul>\n<li>Keep money supply lower</li>\n<li>Keep interest rates higher</li>\n</ul>\n</li>\n<li>The Fed’s response to a stock-market fall\n<ul>\n<li>Increase money supply</li>\n<li>Lower interest rates</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Liquidity trap: when the interest rate is zero</p>\n<ul>\n<li>nominal interest rates cannot be reduced further</li>\n<li>Solution\n<ul>\n<li>make real interest rates negative by raising inflation expectations</li>\n<li>open market operations: provide assets to lower rates\n<ul>\n<li>Fed pursued this option in 2008–2009</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Fiscal-Policies-to-AD\">Fiscal Policies to AD</h3>\n<p>Fiscal policy: about government spending and taxation</p>\n<ul>\n<li>Multiplier effect\n<ul>\n<li>Additional shifts in aggregate demand\n<ul>\n<li>Investment accelerator</li>\n<li>Higher government demand\n<ul>\n<li>Higher demand for investment</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Positive feedback from demand to investment</li>\n<li>Spending multiplier\n<ul>\n<li>Marginal propensity to consume(MPC, 邊際消費傾向)\n<ul>\n<li>percentage of extra income that consumers spend</li>\n<li>Size of the multiplier depends on the MPC</li>\n</ul>\n</li>\n<li>Spending multiplier = 1/(1 – MPC)\n<ul>\n<li>(1 + MPC + MPC2 + MPC3 ... )</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Crowding-out effect <img data-src=\"/img/eco2/crowding-out-effect.webp\" alt=\"\" />\n<ul>\n<li>when expansionary fiscal policy raises the interest rate</li>\n<li>reduces investment spending</li>\n<li>擠出效應是指增加政府投資對私人投資產生的擠佔效應，從而導致增加政府投資所增加的國民收入可能因為私人投資減少而被全部或部分地抵消\n<ul>\n<li>AD shifts right</li>\n<li>Interest rate – increases</li>\n<li>AD shifts left</li>\n</ul>\n</li>\n<li>Decrease in personal income taxes\n<ul>\n<li>Households income – increases</li>\n<li>Multiplier effect\n<ul>\n<li>Aggregate demand – increases</li>\n</ul>\n</li>\n<li>Crowding-out effect\n<ul>\n<li>Aggregate demand – decreases</li>\n</ul>\n</li>\n<li>Permanent tax cut – large impact on AD</li>\n<li>Temporary tax cut – small impact on AD</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>stabilize the economy</p>\n<ul>\n<li>\n<p>The government</p>\n<ul>\n<li>Use fiscal policy</li>\n</ul>\n</li>\n<li>\n<p>The Fed</p>\n<ul>\n<li>Use monetary policy</li>\n</ul>\n</li>\n<li>\n<p>Respond to changes in the private economy(Ex. stock) to stabilize</p>\n</li>\n<li>\n<p>Keynes</p>\n<ul>\n<li>government should actively stimulate aggregate demand\n<ul>\n<li>When AD insufficient to full-employment level</li>\n</ul>\n</li>\n<li>1964, President John F. Kennedy\n<ul>\n<li>Advocated a tax cut to stimulate the economy</li>\n<li>Tax break to firms that invest in new capital\n<ul>\n<li>Higher investment</li>\n</ul>\n</li>\n<li>Fiscal policy\n<ul>\n<li>Short-run: increase production through higher aggregate demand</li>\n<li>Long-run: increase production through higher aggregate supply</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>2009, President Barak Obama\n<ul>\n<li>Substantial increase in government spending</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Automatic stabilizers</p>\n<ul>\n<li>Without policymakers having to take any deliberate action\n<ul>\n<li>The tax system</li>\n<li>Government spending</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Conclusion</p>\n<ul>\n<li>Policymakers need to consider all the effects of their actions\n<ul>\n<li>Congress cuts taxes, it should consider the short-run effects on AD and employment, and the long-run effects  on saving and growth</li>\n<li>When the Fed reduces the rate of money growth, it must take into account not only the long-run effects on inflation but the short-run effects on output and employment</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap35-The-Short-Run-Trade-off-between-Inflation-and-Unemployment\">Chap35: The Short-Run Trade-off between Inflation and Unemployment</h2>\n<p>One of the Ten Principles</p>\n<ul>\n<li>In the short run, society faces a trade-off  between inflation and unemployment</li>\n</ul>\n<p>Phillips curve</p>\n<ul>\n<li>\n<p>short-run trade-off between inflation and unemployment</p>\n</li>\n<li>\n<p>nominal wage growth was negatively correlated with unemployment</p>\n<ul>\n<li>High unemployment and low inflation</li>\n<li>low unemployment and high inflation</li>\n</ul>\n</li>\n<li>\n<p>That arise in the short run</p>\n<ul>\n<li>As shifts in the AD curve</li>\n</ul>\n</li>\n<li>\n<p><img data-src=\"/img/eco2/AD-inflat-unemployment.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p>1968: Milton Friedman and Edmund Phelps</p>\n<ul>\n<li>tradeoff was temporary</li>\n<li>Natural-rate hypothesis: unemployment eventually returns to its natural rate</li>\n</ul>\n</li>\n<li>\n<p>In the long run: Increase in money supply</p>\n<ul>\n<li>AD shifts right</li>\n<li>Price level – increases</li>\n<li>Output – natural rate</li>\n<li>Philip Curve\n<ul>\n<li>Inflation rate increases</li>\n<li>natural rate of Unemployment</li>\n<li>vertical in the long run</li>\n<li><img data-src=\"/img/eco2/philips-curve.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/AD-philip-curve.webp\" alt=\"\" /></li>\n<li>If reduce the natural rate of unemployment\n<ul>\n<li>Long-run Phillips curve shifts left</li>\n<li>Long-run aggregate-supply shifts right</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Use new variable to prove</p>\n<ul>\n<li>expected inflation\n<ul>\n<li>how much people expect the price level to change</li>\n</ul>\n</li>\n<li>Unemployment rate = natural unemployment rate - a (actual inflation - expected inflation)\n<ul>\n<li>short run: Fed can reduce u-rate by making inflation &gt; expected</li>\n<li>long run: expectations catch up reality inflation\n<ul>\n<li>u-rate become natural</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Expected inflation determines short-run AS curve</li>\n</ul>\n<p>Natural-rate hypothesis</p>\n<ul>\n<li>Unemployment - eventually returns to its normal/natural rate</li>\n<li>Late 1960s (short-run)\n<ul>\n<li>Vietnam War\n<ul>\n<li>Expansionary fiscal policy\n<ul>\n<li>Government spending rose</li>\n<li>Expand AD for goods and services</li>\n</ul>\n</li>\n<li>The Fed try to hold down interest rates\n<ul>\n<li>Money supply – rose 13% per year</li>\n<li>High inflation (5-6% per year)</li>\n<li>Unemployment increased</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>late 1970s (long-run)\n<ul>\n<li>Inflation – stayed high\n<ul>\n<li>People’s expectations of inflation caught up with reality</li>\n</ul>\n</li>\n<li>Unemployment – natural rate</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Supply shock</p>\n<ul>\n<li>\n<p>firms’ costs and prices directly change</p>\n<ul>\n<li>Shifts economy’s aggregate-supply curve</li>\n<li>Shifts the Phillips curve</li>\n</ul>\n</li>\n<li>\n<p>Increase in oil price</p>\n<ul>\n<li>Aggregate-supply curve shifts left</li>\n<li>Stagflation\n<ul>\n<li>Lower output</li>\n<li>Higher prices</li>\n</ul>\n</li>\n<li>Short-run Phillips curve shifts right\n<ul>\n<li>Higher unemployment</li>\n<li>Higher inflation</li>\n<li>If temporary – revert back</li>\n<li>If permanent – needs government intervention</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><img data-src=\"/img/eco2/supply-shock.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p><img data-src=\"/img/eco2/1970pc.webp\" alt=\"\" /></p>\n</li>\n</ul>\n<p>Reducing Inflation</p>\n<ul>\n<li>Contractionary monetary policy\n<ul>\n<li>Aggregate demand – contracts\n<ul>\n<li>Higher unemployment</li>\n<li>Lower inflation</li>\n</ul>\n</li>\n<li>Over time\n<ul>\n<li>Phillips curve shifts left\n<ul>\n<li>Lower inflation</li>\n<li>Unemployment – natural rate</li>\n<li><img data-src=\"/img/eco2/reduce-inflation-cost.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Sacrifice ratio</p>\n<ul>\n<li>Number of percentage points of annual output</li>\n<li>Lost in the process of reducing inflation by 1 percentage point</li>\n<li>Typical estimate: 5\n<ul>\n<li>For each percentage point that inflation is reduced</li>\n<li>5 percent of annual output must be sacrificed in the transition</li>\n</ul>\n</li>\n</ul>\n<p>Rational expectations - smaller sacrifice ratio</p>\n<ul>\n<li>Government - credible commitment to a policy of low inflation</li>\n<li>People: lower their expectations of inflation</li>\n<li>Short-run Phillips curve - shift downward</li>\n<li>Economy - low inflation quickly</li>\n<li>Without temporarily high unemployment &amp; low output!</li>\n<li>volcker-disinflation<br />\n<img data-src=\"/img/eco2/volcker-disinflation.webp\" alt=\"\" /><br />\n<img data-src=\"/img/eco2/greenspan-pc.webp\" alt=\"\" /></li>\n</ul>\n<p>2006 – 2009</p>\n<ul>\n<li>House prices fell by about one third\n<ul>\n<li>Financial institutions – difficulties</li>\n</ul>\n</li>\n<li>Expansionary monetary and fiscal policy\n<ul>\n<li>Goal: increase aggregate demand</li>\n</ul>\n</li>\n<li><img data-src=\"/img/eco2/recession-pc.webp\" alt=\"\" /></li>\n</ul>\n<p>Supply shocks and changes in expected inflation shift the short-run Phillips curve, making the tradeoff more or less favorable<br />\nSome economists argue that a credible commitment to reducing inflation can lower the costs of disinflation by inducing a rapid adjustment of expectations.</p>\n<h2 id=\"Reference\">Reference</h2>\n<ul>\n<li>WCS講義</li>\n<li>http://wenku.baidu.com/view/f5e81fe8b8f67c1cfad6b806</li>\n</ul>\n","categories":["筆記"],"tags":["經濟學"]},{"title":"gcc參數介紹","url":"/gcc-usage/","content":"<p>假設已經知道編譯流程<br />\n[介紹]<br />\ngcc and g++分別是gnu的c &amp; c++編譯器 gcc/g++在執行編譯工作的時候，總共需要4步<br />\n1.預處理,生成.i的文件[預處理器cpp]<br />\n2.將預處理後的文件不轉換成彙編語言,生成文件.s[編譯器egcs]<br />\n3.有彙編變為目標代碼(機器代碼)生成.o的文件[彙編器as]<br />\n4.連接目標代碼,生成可執行程序[鏈接器ld]</p>\n<span id=\"more\"></span>\n<h2 id=\"常用參數\">常用參數</h2>\n<table>\n<thead>\n<tr>\n<th>參數</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-c</td>\n<td>編譯但不連結，產生.o檔</td>\n</tr>\n<tr>\n<td>-S</td>\n<td>輸出組譯碼</td>\n</tr>\n<tr>\n<td>-E</td>\n<td>顯示預處理(define, macro)的結果</td>\n</tr>\n<tr>\n<td>-o filename</td>\n<td>指定輸出檔名</td>\n</tr>\n<tr>\n<td>-ansi</td>\n<td>只支持 ANSI 標準的 C 語法。這一選項將禁止 GNU C 的某些特色 例如 asm 或 typeof 關鍵詞。</td>\n</tr>\n<tr>\n<td>-Dmacro</td>\n<td>定義指定巨集為有效</td>\n</tr>\n<tr>\n<td>-Dmarco=defn</td>\n<td>定義指定巨集為defn</td>\n</tr>\n<tr>\n<td>-Wa,option</td>\n<td>將選項(option)傳給組譯器</td>\n</tr>\n<tr>\n<td>-wl,option</td>\n<td>將選項(option)傳給連結器</td>\n</tr>\n<tr>\n<td>-I</td>\n<td>增加include header檔案的搜尋路徑</td>\n</tr>\n<tr>\n<td>-L</td>\n<td>增加library檔案的搜尋路徑</td>\n</tr>\n<tr>\n<td>-l</td>\n<td>指定連結的函式庫</td>\n</tr>\n<tr>\n<td>-Wall</td>\n<td>顯示所有的警告訊息</td>\n</tr>\n<tr>\n<td>-g</td>\n<td>編入除錯資訊(使用GDB除錯時用)</td>\n</tr>\n</tbody>\n</table>\n<p>-IDIRECTORY 指定額外的頭文件搜索路徑DIRECTORY。<br />\n-LDIRECTORY 指定額外的函數庫搜索路徑DIRECTORY。<br />\n-lLIBRARY 連接時搜索指定的函數庫LIBRARY。<br />\n-m486 針對 486 進行代碼優化。<br />\n-shared 生成共享目標文件。通常用在建立共享庫時。<br />\n-static 禁止使用共享連接。<br />\n-UMACRO 取消對 MACRO 宏的定義。<br />\n-w 不生成任何警告信息。<br />\n-Wall 生成所有警告信息。</p>\n<h2 id=\"最佳化\">最佳化</h2>\n<p>-Os, -O0, -O1, -O2, -O3,</p>\n<p>-O0表示沒有優化,-O1為缺省值，-O3優化級別最高</p>\n<h2 id=\"使用範例\">使用範例</h2>\n<p>與函式庫連結 :<br />\n另一個常用的選項是 -l, 它以一種特殊方式來指定函式庫. 首先它必須放在命令的最後面, 也就是原始檔檔名之後, 而所有其他的選項是指定在檔名之前. 底下是一個典型的命令 ; 因為輸入檔是目的檔, 所以命令僅僅啟動連結器 :<br />\n%gcc -o plot main.o plot_line.o -lm</p>\n<p>-lm 選項指定使用數學函式庫. 當你指定 -lname, 系統會到存放標準函式庫的目錄中 (通常位於 /usr/lib) 中去尋找 libname.a 檔案. 所以你所尋找的數學函式庫應該是 /usr/lib/libm.a . 和表頭檔一樣, 函式庫有時也放在非標準路徑的目錄下. 你這時必須以 -L 選項來告訴 gcc 到哪裡去找這函式庫, 例如 :<br />\n%gcc -o -L/src/local/lib main.o plot_line.o -lm</p>\n<p>它告訴gcc 首先到 /src/local/lib 去找函式庫, 然後才是標準路徑下的函式庫. 假如某人把自己版本的函式庫放到 /src/local/lib 下, 在使用順序上, 他的這個版本將超過 /usr/lib 下的同名函式庫</p>\n<p>///<mark><mark><mark><mark><mark><mark><mark><mark><mark>另外還有個Os選項</mark></mark></mark></mark></mark></mark></mark></mark></mark>========<br />\nhttp://hi.baidu.com/ah__fu/blog/item/cc9fd19b801948bdc9eaf4b3.html<br />\n在研究編譯驅動的makefile的時候，發現GCC的命令行裡面有一個-Os的優化選項。<br />\n遍查GCC文檔，發現了-O0, -O1, -O2, -O3，就是沒有發現-Os。<br />\n祭出GOOGLE大法搜了一下，終於發現這篇文章說明了-Os的作用：<br />\nhttp://www.linuxjournal.com/article/7269</p>\n<p>原來-Os相當於-O2.5。是使用了所有-O2的優化選項，但又不縮減代碼尺寸的方法。<br />\n詳細的說明如下：<br />\nLevel 2.5 (-Os)<br />\nThe special optimization level (-Os or size) enables all -O2 optimizations that do not increase code size; it puts the emphasis on size over speed. This includes all second-level optimizations, except for the alignment optimizations. The alignment optimizations skip space to align functions, loops, jumps and labels to an address that is a multiple of a power of two, in an architecture-dependent manner. Skipping to these boundaries can increase performance as well as the size of the resulting code and data spaces; therefore, these particular optimizations are disabled. The size optimization level is enabled as:<br />\ngcc -Os -o test test.c<br />\nIn gcc 3.2.2, reorder-blocks is enabled at -Os, but in gcc 3.3.2 reorder-blocks is disabled.</p>\n<p>==============================<br />\n補充：在GCC的官方文檔裡又發現了關於-Os的說明：<br />\nhttp://gcc.gnu.org/onlinedocs/gcc-3.4.6/gcc/Optimize-Options.html#Optimize-Options</p>\n<p>//=============================================<br />\nhttp://blog.csdn.net/ison81/archive/2009/05/07/4158576.aspx</p>\n<p>backtrace與fomit-frame-pointer選項</p>\n<p>事實上gcc的所有級別的優化（-O, -O2, -O3等）都會打開-fomit-frame-pointer，該選項的功能是函數調用時不保存frame指針，在ARM上就是fp，故我們無法按照APCS中的約定來回溯調用棧。但是GDB中仍然可以使用bt命令看到調用棧，為什麼？得知GDB v6之後都是支持DWARF2的，也就意味著它可以不依賴fp來回溯調用棧（詳見http://gcc.gnu.org/ml/gcc/2003-10/msg00322.html）。<br />\n看來想在代碼中動態顯示調用棧而又不希望使用GDB的朋友，只能在編譯時關掉-fomit-frame-pointer了。</p>\n<p>//<mark><mark><mark><mark><mark><mark><mark><mark><mark>gcc參數大全：</mark></mark></mark></mark></mark></mark></mark></mark></mark>=========</p>\n<p>[參數詳解]<br />\n-x language filename<br />\n　設定文件所使用的語言,使後綴名無效,對以後的多個有效.也就是根據約定C語言的後綴名稱是.c的，而C++的後綴名是.C或者.cpp,如果你很個性，決定你的C代碼文件的後綴名是.pig 哈哈，那你就要用這個參數,這個參數對他後面的文件名都起作用，除非到了下一個參數的使用。<br />\n　　可以使用的參數嗎有下面的這些<br />\n　　<code>c', </code>objective-c', <code>c-header', </code>c++', <code>cpp-output', </code>assembler', and `assembler-with-cpp'.<br />\n　　看到英文，應該可以理解的。<br />\n　　例子用法:<br />\n　　gcc -x c hello.pig<br />\n　　<br />\n-x none filename<br />\n　　關掉上一個選項，也就是讓gcc根據文件名後綴，自動識別文件類型<br />\n　　例子用法:<br />\n　　gcc -x c hello.pig -x none hello2.c<br />\n　　<br />\n-c<br />\n　　只激活預處理,編譯,和彙編,也就是他只把程序做成obj文件<br />\n　　例子用法:<br />\n　　gcc -c hello.c<br />\n　　他將生成.o的obj文件<br />\n-S<br />\n　　只激活預處理和編譯，就是指把文件編譯成為彙編代碼。<br />\n　　例子用法<br />\n　　gcc -S hello.c<br />\n　　他將生成.s的彙編代碼，你可以用文本編輯器察看<br />\n-E<br />\n　　只激活預處理,這個不生成文件,你需要把它重定向到一個輸出文件裡面.<br />\n　　例子用法:<br />\n　　gcc -E hello.c &gt; pianoapan.txt<br />\n　　gcc -E hello.c | more<br />\n　　慢慢看吧,一個hello word 也要與處理成800行的代碼<br />\n-o<br />\n　　制定目標名稱,缺省的時候,gcc 編譯出來的文件是a.out,很難聽,如果你和我有同感，改掉它,哈哈<br />\n　　例子用法<br />\n　　gcc -o hello.exe hello.c (哦,windows用習慣了)<br />\n　　gcc -o hello.asm -S hello.c<br />\n-pipe<br />\n　　使用管道代替編譯中臨時文件,在使用非gnu彙編工具的時候,可能有些問題<br />\n　　gcc -pipe -o hello.exe hello.c<br />\n-ansi<br />\n　　關閉gnu c中與ansi c不兼容的特性,激活ansi c的專有特性(包括禁止一些asm inline typeof關鍵字,以及UNIX,vax等預處理宏,<br />\n-fno-asm<br />\n　　此選項實現ansi選項的功能的一部分，它禁止將asm,inline和typeof用作關鍵字。 　　　　<br />\n-fno-strict-prototype<br />\n　　只對g++起作用,使用這個選項,g++將對不帶參數的函數,都認為是沒有顯式的對參數的個數和類型說明,而不是沒有參數.<br />\n　　而gcc無論是否使用這個參數,都將對沒有帶參數的函數,認為城沒有顯式說明的類型<br />\n　　<br />\n-fthis-is-varialble<br />\n　　就是向傳統c++看齊,可以使用this當一般變量使用.<br />\n　　<br />\n-fcond-mismatch<br />\n　　允許條件表達式的第二和第三參數類型不匹配,表達式的值將為void類型<br />\n　　<br />\n-funsigned-char<br />\n-fno-signed-char<br />\n-fsigned-char<br />\n-fno-unsigned-char<br />\n　　這四個參數是對char類型進行設置,決定將char類型設置成unsigned char(前兩個參數)或者 signed char(後兩個參數)<br />\n　　<br />\n-include file<br />\n　　包含某個代碼,簡單來說,就是便以某個文件,需要另一個文件的時候,就可以用它設定,功能就相當於在代碼中使用#include<filename><br />\n　　例子用法:<br />\n　　gcc hello.c -include /root/pianopan.h<br />\n　　<br />\n-imacros file<br />\n　　將file文件的宏,擴展到gcc/g++的輸入文件,宏定義本身並不出現在輸入文件中<br />\n　　<br />\n-Dmacro<br />\n　　相當於C語言中的#define macro<br />\n　　<br />\n-Dmacro=defn<br />\n　　相當於C語言中的#define macro=defn<br />\n　　<br />\n-Umacro<br />\n　　相當於C語言中的#undef macro<br />\n-undef<br />\n　　取消對任何非標準宏的定義<br />\n　　<br />\n-Idir<br />\n　　在你是用#include&quot;file&quot;的時候,gcc/g++會先在當前目錄查找你所制定的頭文件,如果沒有找到,他回到缺省的頭文件目錄找,如果使用-I制定了目錄,他<br />\n　　回先在你所制定的目錄查找,然後再按常規的順序去找.<br />\n　　對於#include<file>,gcc/g++會到-I制定的目錄查找,查找不到,然後將到系統的缺省的頭文件目錄查找<br />\n　　<br />\n-I-<br />\n　　就是取消前一個參數的功能,所以一般在-Idir之後使用<br />\n　　<br />\n-idirafter dir<br />\n　　在-I的目錄裡面查找失敗,講到這個目錄裡面查找.<br />\n　　<br />\n-iprefix prefix<br />\n-iwithprefix dir<br />\n　　一般一起使用,當-I的目錄查找失敗,會到prefix+dir下查找<br />\n　　<br />\n-nostdinc<br />\n　　使編譯器不再系統缺省的頭文件目錄裡面找頭文件,一般和-I聯合使用,明確限定頭文件的位置<br />\n　　<br />\n-nostdin C++<br />\n　　規定不在g++指定的標準路經中搜索,但仍在其他路徑中搜索,.此選項在創libg++庫使用<br />\n　　<br />\n-C<br />\n　　在預處理的時候,不刪除註釋信息,一般和-E使用,有時候分析程序，用這個很方便的<br />\n　　<br />\n-M<br />\n　　生成文件關聯的信息。包含目標文件所依賴的所有源代碼你可以用gcc -M hello.c來測試一下，很簡單。<br />\n　　<br />\n-MM<br />\n　　和上面的那個一樣，但是它將忽略由#include<file>造成的依賴關係。<br />\n　　<br />\n-MD<br />\n　　和-M相同，但是輸出將導入到.d的文件裡面<br />\n　　<br />\n-MMD<br />\n　　和-MM相同，但是輸出將導入到.d的文件裡面<br />\n　　<br />\n-Wa,option<br />\n　　此選項傳遞option給彙編程序;如果option中間有逗號,就將option分成多個選項,然後傳遞給會彙編程序<br />\n　　<br />\n-Wl.option<br />\n　　此選項傳遞option給連接程序;如果option中間有逗號,就將option分成多個選項,然後傳遞給會連接程序.<br />\n-llibrary<br />\n　　制定編譯的時候使用的庫<br />\n　　例子用法<br />\n　　gcc -lcurses hello.c<br />\n　　使用ncurses庫編譯程序<br />\n　　<br />\n-Ldir<br />\n　　制定編譯的時候，搜索庫的路徑。比如你自己的庫，可以用它制定目錄，不然<br />\n　　編譯器將只在標準庫的目錄找。這個dir就是目錄的名稱。<br />\n　　<br />\n-O0<br />\n-O1<br />\n-O2<br />\n-O3<br />\n　　編譯器的優化選項的4個級別，-O0表示沒有優化,-O1為缺省值，-O3優化級別最高　　 　　<br />\n-g<br />\n　　只是編譯器，在編譯的時候，產生調試信息。<br />\n　　<br />\n-gstabs<br />\n　　此選項以stabs格式聲稱調試信息,但是不包括gdb調試信息.<br />\n　　<br />\n-gstabs+<br />\n　　此選項以stabs格式聲稱調試信息,並且包含僅供gdb使用的額外調試信息.<br />\n　　<br />\n-ggdb<br />\n　　此選項將儘可能的生成gdb的可以使用的調試信息.<br />\n-static<br />\n　　此選項將禁止使用動態庫，所以，編譯出來的東西，一般都很大，也不需要什麼<br />\n動態連接庫，就可以運行.<br />\n-share<br />\n　　此選項將儘量使用動態庫，所以生成文件比較小，但是需要系統由動態庫.<br />\n-traditional<br />\n　　試圖讓編譯器支持傳統的C語言特性</p>\n<p>[參考資料]<br />\n-Linux/UNIX高級編程<br />\n　　中科紅旗軟件技術有限公司編著.清華大學出版社出版<br />\n-Gcc man page</p>\n<h2 id=\"其他編譯器\">其他編譯器</h2>\n<p>Clang</p>\n<p>編譯速度更快、編譯產出更小、出錯提示更友好。尤其是在比較極端的情況下。<br />\n最後一點，其他同學也有講到，就是Clang採用的是BSD協議。這是蘋果資助LLVM、FreeBSD淘汰GCC換用Clang的一個重要原因。</p>\n<p>從代碼上說，clang結構更簡單。因為clang只需要完成詞法和語法分析，代碼優化和機器代碼的生成工作由llvm完成。所以和全部由自己包下的gcc比起來，clang可以更專注地做好一件事。<br />\n這種結構也使clang可以被單獨拿出來用在其他的程序裡。比如vim的clang_complete插件就是利用clang進行語法分析後給出精確的自動補全和語法錯誤</p>\n<p>llvm是一個底層虛擬機平台，提供了經過最佳化的IF代碼，也就是有個中間層，在這個中間層可以做很多的事情，比如優化和提供給編譯器更多的信息，理論上可以支持幾乎任何編程語言。llvm默認的前端是clang，當然也可以用gcc做前端。<br />\nllvm用c++寫的，模塊化做的很好，因此可以很好的和clang，gcc等等更多的東西合作，能為ide提供更全的有用信息。而gcc則包含的比較全面，整一個是一個宏結構，沒有模塊化設計，用c寫的，對ide也不太友好(實際上linux社區裡似乎對ide一直不感冒)。不過c++版的gcc正在重寫中，為了與llvm/clang更好的競爭，而且gcc從5.0開始打算進行模塊化設計，所以，以後gcc內部可能會分出很多部分。<br />\n就現在來看，gcc大體等同於llvm+clang所提供的功能。<br />\n很多人特別羨慕clang那強大的錯誤診斷信息，其實gcc4.8部分信息診斷能力已經超過它了，比它更準確，所以競爭真的很好，我們可以用到好的東西了。gcc目前的問題就是缺乏模塊化設計，這是暫時落後於llvm的地方。<br />\nfreebsd不用gcc是因為gpl協議，llvm/clang的協議更加自由，但llvm/clang目前的兼容性和參數優化等等方面和gcc還有不小差距，雖然編譯後的體積更小了(架構領先優勢)，但在性能優化方面相比gcc還有很多事情要做。</p>\n<p>======<br />\nSeveral of the -f code generation options are interesting:</p>\n<p>The -ftrapv function will cause the program to abort on signed integer overflow (formally &quot;undefined behaviour&quot; in C).<br />\n-fverbose-asm is useful if you're compiling with -S to examine the assembly output - it adds some informative comments.<br />\n-finstrument-functions adds code to call user-supplied profiling functions at every function entry and exit point.<br />\nhttp://stackoverflow.com/questions/3375697/useful-gcc-flags-for-c</p>\n<p>===============================</p>\n<h3 id=\"pkg-config-的功能與用法\">pkg-config 的功能與用法</h3>\n<p>http://calamaryshop.blogspot.com/2011/11/pkg-config.html</p>\n<p>當開發C程式時經常使會用到許多系統已安裝的library所提供的function，來加速對程式的開發。在程式中會將含有這些library提供的function宣告的header file加到程式中，但最頭痛的是在compile程式時加上額外的設定來告訴編譯器該去系統中的何處找尋所要使用的header file以及所使用的library file被安裝在何處。所以Linux系統上有個非常好用的工具pkg-config可以查詢library的header file以及library的所在位置及資訊，以及在編譯程式時該使用的編譯參數為何。</p>\n<p>這個程式主要讀取系統中位於 /usr/lib/pkgconfig 目錄或是環境變數 PKG_CONFIG_PATH 所設定的路徑中的副檔名為 .pc 的檔案，這些檔案包含系統安裝的library的相關資訊，包括：安裝的目錄、程式編譯的參數等等。<br />\n使用方法:<br />\npkg-config --cflags library-name-with-version 就可以得到編譯程式時 pre-processing 動作必須加上的參數設定。<br />\n執行 pkg-config --cflags glib-2.0，其結果為-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include。<br />\npkg-config --libs library-name-with-version就可以得到 linking時所必須傳給編譯器的參數。<br />\n執行 pkg-config --libs glib-2.0 得到-lglib-2.0。<br />\n另外，我們還可以利用 pkg-config 來簡化 Makefile 的撰寫。<br />\n在Makefile中，原來寫在編譯器之後的參數，改成 pkg-config --cflags --libs library-name-with-version 即可。<br />\n例如：將Makefile中的這一行<br />\ngcc -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -lglib-2.0 program.c<br />\n替換成<br />\ngcc pkg-config --cflags --libs glib-2.0 program.c</p>\n<p>pkg-config 簡單用法</p>\n<ol>\n<li>pkg-config --list-all<br />\n列出所有可使用的連結庫，位置在 /usr/lib/pkgconfig 及 /usr/local/lib/pkgconfig 裏面的 xxx.pc 檔，新軟體一般都會安裝 .pc 檔，沒有可以自己建立，並且設定環境變數 PKG_CONFIG_PATH 供 pkg-config 尋找 .pc 檔路徑。</li>\n<li>pkg-config --cflags xxxx<br />\n取得該連結庫的 CFLAGS 參數。(Cflags)</li>\n<li>pkg-config --libs xxxx<br />\n取得該連結庫的 LDFLAGS 參數。(Libs)</li>\n<li>pkg-config --static xxxx<br />\n取得該連結庫供靜態連結的 LDFLAGS 參數。(Libs.private)</li>\n<li>pkg-config --version<br />\n取得 pkg-config 版本號。</li>\n<li>pkg-config --modversion xxxxx<br />\n取得連結庫的版本號。(Version)</li>\n</ol>\n<h2 id=\"Reference\">Reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jb2RlbG9va2VyLmNvbS9kZmlsZWMvNzgyNmJvb2tEVkQzL1Rob25nc29jdWFHY2MucGRm\">Gcc参数.txt<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nY2MuZ251Lm9yZy9vbmxpbmVkb2NzL2djYy02LjMuMC9nY2MvaW5kZXguaHRtbA==\">gcc官方文件<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qaWFuc2h1LmNvbS9wLzU5OGI3MDk0YjhjMQ==\">安裝 LLVM + Clang<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","tags":["linux","gcc","c","compile"]},{"title":"gdb簡介","url":"/gdb-introduction/","content":"<h2 id=\"簡介\">簡介</h2>\n<p>只要使用GNU計畫出產的編譯器(如gcc)，就可以用gdb來進行除錯，包含 C/C++/Objective-C/Fortran/Java 等語言。</p>\n<span id=\"more\"></span>\n<h2 id=\"基本知識\">基本知識</h2>\n<p><strong>function stack → frame</strong></p>\n<ul>\n<li>C語言在進入一個函式前，會將原本所在的函式的資訊(變數值、函式名、指標)儲存至堆疊(stack)裡，等到回傳(return)後再從這些堆疊裡復原函式資訊</li>\n<li>目前正在執行的函式就是 frame 0，而呼叫frame 0的函式就是frame 1，以此類推</li>\n</ul>\n<h2 id=\"除錯程序\">除錯程序</h2>\n<ol>\n<li>載入程式</li>\n<li>設中斷點</li>\n<li>執行程式，程式跑到中斷點會停下來</li>\n<li>在堆疊間跳躍，並檢查變數值</li>\n</ol>\n<h3 id=\"載入程式\">載入程式</h3>\n<ul>\n<li>編譯時加入 <code>-g</code> 可加入除錯資訊。這些除錯訊息會影響程式大小和執行速度，所以一般在發佈應用程式時是不會以<code>-g</code>參數編譯的。\n<ul>\n<li>可以在事後利用 strip 指令清掉應用程式裡的除錯資訊。</li>\n</ul>\n</li>\n<li>編譯時最好不要開optimization(<code>-O</code>)，不然優化後的程式的執行順序會改變，較難debug。</li>\n</ul>\n<p>執行<code>gdb [program]</code>即可開始除錯</p>\n<table>\n<thead>\n<tr>\n<th>gdb程式參數</th>\n<th>簡寫</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-symbols [file_name]</td>\n<td>-s</td>\n<td>讀取檔案中的除錯表</td>\n</tr>\n<tr>\n<td>-exec [file_name]</td>\n<td>-e</td>\n<td>除錯一個執行檔</td>\n</tr>\n<tr>\n<td>-core [file_name]</td>\n<td>-c</td>\n<td>讀入一個core dump檔案</td>\n</tr>\n<tr>\n<td>-pid [process_id]</td>\n<td>-p</td>\n<td>啟動attach模式，除錯一個執行中的程式</td>\n</tr>\n<tr>\n<td>-directory [directory_name]</td>\n<td>-d</td>\n<td>將資料夾加入原始碼的搜尋路徑</td>\n</tr>\n<tr>\n<td>-readnow</td>\n<td>-r</td>\n<td>一次讀取完所有的符號表，這會讓啟動gdb的時間變長，但在執行往後的除錯動作會較快速。</td>\n</tr>\n<tr>\n<td>-quiet/-silent</td>\n<td>-q</td>\n<td>安靜模式，啟動時gdb將不會顯示版權頁。</td>\n</tr>\n<tr>\n<td>-cd directory_name</td>\n<td></td>\n<td>改變程式執行的目錄</td>\n</tr>\n<tr>\n<td>--args</td>\n<td></td>\n<td>這個參數要當作命令列的最後一個參數，其後跟隨的參數都會被視為「傳給要除錯的程式的參數」</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"設中斷點\">設中斷點</h3>\n<p><code>[breakpoint]</code> 可以是 file+line number, function name, memory address</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>停止時機</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>break</td>\n<td>gdb執行下一個指令後停止</td>\n</tr>\n<tr>\n<td>break [breakpoint]</td>\n<td>在指定行數、函式開始前、或指定位址停止</td>\n</tr>\n<tr>\n<td>break [breakpoint] if [condition]</td>\n<td>只有在符合條件時停止</td>\n</tr>\n<tr>\n<td>break [offset]</td>\n<td>在目前程式停止位置的offset行<br>停止offset負數時，為前offset行，反之</td>\n</tr>\n<tr>\n<td>break [filename]:[linenum]</td>\n<td>指定檔案的指定行停止</td>\n</tr>\n<tr>\n<td>rbreak [RE]</td>\n<td>符合正規表示式的函式停止<br>如 <code>rbreak .</code>, 這樣每個函式開頭都有中斷點了</td>\n</tr>\n<tr>\n<td>tbreak</td>\n<td>只會生效一次，能放的參數與break相同</td>\n</tr>\n<tr>\n<td>disable [breakpoint number]</td>\n<td>暫時關閉指定中斷點，若無指定則全部關閉</td>\n</tr>\n<tr>\n<td>enable [breakpoint number]</td>\n<td>取消暫時關閉狀態</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>info break</td>\n<td>列出目前所有的中斷點</td>\n</tr>\n<tr>\n<td>condition [breakpoint number] [condition]</td>\n<td>設中斷點的條件，如果條件為true才中斷</td>\n</tr>\n<tr>\n<td>commands [breakpoint number] [command]</td>\n<td>設定遇到指定中斷點時要自動執行的指令</td>\n</tr>\n<tr>\n<td>clear [breakpoint]</td>\n<td>刪除指定中斷點</td>\n</tr>\n<tr>\n<td>delete [breakpoint number]</td>\n<td>刪除指定中斷點</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"執行程式\">執行程式</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>file [filename]</td>\n<td>開啟檔案 (等同於 gdb filename)</td>\n</tr>\n<tr>\n<td>run</td>\n<td>執行程式 (可加參數)</td>\n</tr>\n<tr>\n<td>kill</td>\n<td>終止程式</td>\n</tr>\n<tr>\n<td>set</td>\n<td>設定特定參數(或變數)<br>如：<code>set environment CFLAGS=-g</code></td>\n</tr>\n<tr>\n<td>unset</td>\n<td>取消特定參數<br>如：<code>unset environment</code></td>\n</tr>\n<tr>\n<td>show</td>\n<td>顯示特定參數<br>如：<code>show environment</code></td>\n</tr>\n<tr>\n<td>set/show args</td>\n<td>設定/顯示 命令列的參數</td>\n</tr>\n<tr>\n<td>attach [PID]</td>\n<td>載入正在執行的程式以進行除錯。PID 可由 ps 指令取得</td>\n</tr>\n<tr>\n<td>detach [PID]</td>\n<td>釋放已 attach 的程式</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"在堆疊間跳躍\">在堆疊間跳躍</h3>\n<table>\n<thead>\n<tr>\n<th>主要指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>next</td>\n<td>執行<strong>當前函式</strong>的一個指令<br>若指令為呼叫函式，則直接跑完，不會進入frame中</td>\n</tr>\n<tr>\n<td>step</td>\n<td>執行函式中的一個指令<br>若指令為呼叫函式，會進入新的frame中</td>\n</tr>\n<tr>\n<td>until</td>\n<td>直接跑完迴圈(for, while...)</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>繼續執行，直到下一個中斷點或是程式停止</td>\n</tr>\n<tr>\n<td>return</td>\n<td>視同該 frame 已執行完畢<br>等同插入C語言指令<code>return;</code></td>\n</tr>\n</tbody>\n</table>\n<p>※註：若該函式的除錯資訊沒有編進執行檔裡的話，那<code>step</code>也不會跳進這個函式裡，而是單純的將它看作一行程式碼(如同next的作用)，如標準函式庫(如<code>stdio.h</code>)提供的函式。</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>backtrace</td>\n<td>堆疊追蹤。會顯示出所有的 frame 的資訊<br> = <code>info frame</code></td>\n</tr>\n<tr>\n<td>frame</td>\n<td>顯示現在的行數、函式、及其所傳送的參數</td>\n</tr>\n<tr>\n<td>frame [frame number]</td>\n<td>切換到指定的frame(以印出區域變數)</td>\n</tr>\n<tr>\n<td>up</td>\n<td>回到上一層frame，也就是原本的frame被呼叫的地方，並顯示其 stack 資訊<br><code>up 3</code>: 回到上三層frame(0 → 3)</td>\n</tr>\n<tr>\n<td>down</td>\n<td>到下一層frame</td>\n</tr>\n<tr>\n<td>finish</td>\n<td>執行完目前的frame</td>\n</tr>\n<tr>\n<td>jump [location]</td>\n<td>直接跳到指定位置(行數，函式…)</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"列出原始碼\">列出原始碼</h4>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>list(第一次)</td>\n<td>列出現在執行的位置上下5行</td>\n</tr>\n<tr>\n<td>list(第二次以後)</td>\n<td>繼續印出之後的程式碼(類似page down)</td>\n</tr>\n<tr>\n<td>list -</td>\n<td>印出上一次list的程式碼的前一段程式碼(類似page up)</td>\n</tr>\n<tr>\n<td>list a,b</td>\n<td>印出第 a ~ b 行</td>\n</tr>\n<tr>\n<td>list [filename]:[number]</td>\n<td>列出某檔案的第幾行，檔案名可省略</td>\n</tr>\n<tr>\n<td>list [function]</td>\n<td>列出某函數的程式碼</td>\n</tr>\n<tr>\n<td>show listsize</td>\n<td>顯示現在一次印出幾行</td>\n</tr>\n<tr>\n<td>set listsize [num]</td>\n<td>設定一次印出幾行</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"檢查變數值\">檢查變數值</h3>\n<p>可以顯示某些資訊以利於debug</p>\n<h4 id=\"print-display\">print, display</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">(gdb) <span class=\"built_in\">print</span> i</span><br><span class=\"line\"><span class=\"variable\">$1</span> = 6078</span><br></pre></td></tr></table></figure>\n<p>輸入 <code>print/格式字元 [variable]</code> 可以指定型態，與printf不同的以粗體表示</p>\n<table>\n<thead>\n<tr>\n<th>x</th>\n<th>格式字元</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>d</td>\n<td>整數</td>\n</tr>\n<tr>\n<td>u</td>\n<td>無號整數(unsigned)</td>\n</tr>\n<tr>\n<td>o</td>\n<td>八進位</td>\n</tr>\n<tr>\n<td><strong>t</strong></td>\n<td>二進位</td>\n</tr>\n<tr>\n<td><strong>a</strong></td>\n<td>位址</td>\n</tr>\n<tr>\n<td>c</td>\n<td>字元</td>\n</tr>\n<tr>\n<td>f</td>\n<td>浮點數</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>whatis [variable]</td>\n<td>顯示指定變數的型態</td>\n</tr>\n<tr>\n<td>print arr[1]@5</td>\n<td>印出變數arr[1]和之後的變數，共印出5個(arr[1]~arr[5])</td>\n</tr>\n<tr>\n<td>print *arr@3</td>\n<td>印出陣列arr的前3個變數(arr[0]~arr[2])</td>\n</tr>\n<tr>\n<td>display [variable]</td>\n<td>每次中斷時會顯示指定變數值</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"變數\">變數</h4>\n<p>執行 print 指令後，gdb 產生臨時變數(如<code>$1</code>)來記錄<br />\n可以直接利用 <code>$1</code> 來取用這個變數</p>\n<p>用於 print 及 display 的參數名稱</p>\n<ul>\n<li><code>$7</code>: 第七個運算式</li>\n<li><code>$</code>: 前一個的運算式</li>\n<li><code>$$</code>: 前二個的運算式</li>\n<li><code>$$7</code>: 前七個的運算式</li>\n<li><code>$pc</code> program counter</li>\n<li><code>$sp</code> stack pointer</li>\n</ul>\n<h4 id=\"設定新變數\">設定新變數</h4>\n<p>取代冗長路徑的變數，如在深層資料結構中的變數<br />\n(註: 此變數為 pass by reference, 修改新變數的值也會修改原本的變數)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">set $newv = model-&gt;dataset-&gt;vector-&gt;data</span><br><span class=\"line\">p *($newv++)</span><br></pre></td></tr></table></figure>\n<h4 id=\"info-檢視詳細資訊\">info: 檢視詳細資訊</h4>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>info break</td>\n<td>列出目前所有的中斷點</td>\n</tr>\n<tr>\n<td>info line</td>\n<td>查看程式目前運行的行數</td>\n</tr>\n<tr>\n<td>info frame</td>\n<td>詳細的frame資訊</td>\n</tr>\n<tr>\n<td>info args</td>\n<td>顯示傳給目前執行函式的參數值</td>\n</tr>\n<tr>\n<td>info locals</td>\n<td>顯示目前執行函式內所有區域變數的值</td>\n</tr>\n<tr>\n<td>info reg</td>\n<td>顯示暫存器(register)的值</td>\n</tr>\n<tr>\n<td>info all-reg</td>\n<td>顯示暫存器的值，包括數學運算暫存器</td>\n</tr>\n<tr>\n<td>info handle</td>\n<td>列出目前處理 signal 的設定</td>\n</tr>\n<tr>\n<td>info share</td>\n<td>顯示共享函式庫資訊</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"其他指令\">其他指令</h2>\n<ul>\n<li><code>quit</code> 結束 = <code>q</code></li>\n<li><code>shell [command]</code> 在shell上執行指令</li>\n<li>Enter鍵: 重複上一個命令</li>\n</ul>\n<h3 id=\"信號-signal-處理\">信號(signal)處理</h3>\n<p><code>handle [signal] [operation]</code></p>\n<ul>\n<li>預設operation為 <code>stop</code>, <code>print</code>, <code>noignore</code>，也就是遇到 signal 時，GDB 會先攔截，並暫停程式</li>\n<li>必要時可以改為 <code>nostop</code>, <code>noprint</code>，讓程式本身去處理 signal</li>\n<li>若下達 <code>ignore</code> 則是讓程式忽略此 signal</li>\n</ul>\n<h3 id=\"thread處理\">thread處理</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>thread</td>\n<td>查看目前在哪個 thread</td>\n</tr>\n<tr>\n<td>thread [num]</td>\n<td>切換至 第num個 thread</td>\n</tr>\n<tr>\n<td>thread apply all [command]</td>\n<td>對所有 thread 執行指令</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Python-整合\">Python 整合</h3>\n<p>可於gdb中執行python，並執行操作，如存取breakpoint</p>\n<ul>\n<li><code>python print(gdb.breakpoints())</code></li>\n<li><code>python gdb.execute()</code></li>\n<li><code>python gdb.parse_and_eval()</code></li>\n</ul>\n<h3 id=\"反向執行\">反向執行</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQ2hlcnlsTmF0c3UvYXJ0aWNsZS9kZXRhaWxzLzY0MzY1NzA=\">GDB 反向調試（Reverse Debugging）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li><code>reverse-continue</code> 反向執行程式</li>\n<li><code>reverse-step</code></li>\n<li><code>reverse-stepi</code> 反向執行程式到上一條機器指令</li>\n<li><code>reverse-next</code> 反向執行到上一次被執行的源代碼行，但是不進入函式</li>\n<li><code>reverse-nexti</code> 反向執行到上一條機器指令，除非這條指令用來返回一個函式調用、整個函式將會被反向執行</li>\n<li><code>reverse-finish</code> 反向執行程式回到調用目前函式的地方</li>\n<li><code>set exec-direction [forward | reverse]</code> 設置程序執行方向，即可用一般的step和continue來反向執行</li>\n</ul>\n<h2 id=\"指令簡寫\">指令簡寫</h2>\n<ul>\n<li><code>break</code>: b</li>\n<li><code>delete</code>: d</li>\n<li><code>disable</code>: dis</li>\n<li><code>next</code>: n</li>\n<li><code>step</code>: s</li>\n<li><code>until</code>: u</li>\n<li><code>continue</code>: c</li>\n<li><code>jump</code>: j</li>\n<li><code>return</code>: ret</li>\n<li><code>list</code>: l</li>\n<li><code>backtrace</code>: bt</li>\n<li><code>info</code>: i</li>\n<li><code>print</code>: p</li>\n<li><code>display</code>: disp</li>\n<li><code>environment</code>: env</li>\n</ul>\n<p>可多次使用簡寫</p>\n<ul>\n<li><code>info break</code> = <code>i b</code></li>\n</ul>\n<h2 id=\"CppCon-2015-Greg-Law-Give-me-15-minutes-I-ll-change-your-view-of-GDB\">CppCon 2015: Greg Law &quot;Give me 15 minutes &amp; I'll change your view of GDB&quot;</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1Qb3JmTFNyM0RESQ==\">Youtube連結<i class=\"fa fa-external-link-alt\"></i></span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NwcENvbi9DcHBDb24yMDE1L2Jsb2IvbWFzdGVyL0xpZ2h0bmluZyUyMFRhbGtzJTIwYW5kJTIwTHVuY2glMjBTZXNzaW9ucy9HaXZlJTIwTWUlMjAxNSUyME1pbnV0ZXMlMjBhbmQlMjBJJ2xsJTIwQ2hhbmdlJTIwWW91ciUyMFZpZXclMjBvZiUyMEdEQi9HaXZlJTIwTWUlMjAxNSUyME1pbnV0ZXMlMjBhbmQlMjBJJ2xsJTIwQ2hhbmdlJTIwWW91ciUyMFZpZXclMjBvZiUyMEdEQiUyMC0lMjBHcmVnJTIwTGF3JTIwLSUyMENwcENvbiUyMDIwMTUucGRm\">Github連結<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li><code>Ctrl-x a</code>： text ui mode(tui)\n<ul>\n<li><code>Ctrl-p</code>： 得到前一個指令</li>\n</ul>\n</li>\n<li><code>Ctrl-x 2</code>： switch to assembly mode/register group mode</li>\n<li><code>tui reg float</code>： show float registers</li>\n<li><code>b _exit.c:32</code>： 在程式結束之前停止</li>\n<li><code>command [breakpoint number] [command]</code>： 遇到breakpoint時，所自動執行的指令</li>\n<li><code>x [memory address]</code>： jump to memory location</li>\n</ul>\n<h2 id=\"使用感想\">使用感想</h2>\n<ul>\n<li>遇到segmentation fault的時候，一定會使用\n<ul>\n<li>可知道出問題的位置</li>\n<li>通常再print看看就知道原因了</li>\n</ul>\n</li>\n<li>平常還是用<code>printf</code>\n<ul>\n<li>殺雞焉用牛刀？</li>\n</ul>\n</li>\n<li>如果程式有完整的錯誤處理和記錄檔(log)，可減少用到gdb的頻率</li>\n</ul>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3VzZXIuZnJkbS5pbmZvL2NraHVuZy9iL2MvZ2RiLnBocA==\">除錯程式:gdb<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3RldHJhbGV0Lmx1bmEuY29tLnR3Lz9vcD1WaWV3QXJ0aWNsZSZhcnRpY2xlSWQ9MTg3JmJsb2dJZD0x\">Linux 除錯利器-GDB簡介<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cueXNsaW4udHcvMjAxMi8wOC9nZGIuaHRtbA==\">工欲善其事，必先利其器:GDB基本教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdHVkeS1hcmVhLm9yZy9jeXJpbC9vcGVudG9vbHMvb3BlbnRvb2xzL2RlYnVnLmh0bWw=\">用Open Source工具開發軟體: 新軟體開發關念<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5nbnUub3JnL3NvZnR3YXJlL2dkYi9kb2N1bWVudGF0aW9uLw==\">GDB官方文件<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["gdb","c語言","cpp","除錯"]},{"title":"Git觀念","url":"/git-introduction/","content":"<h2 id=\"Git的特點\">Git的特點</h2>\n<ul>\n<li>分散式開發\n<ul>\n<li>每個人都有完整的容器，各自獨立</li>\n<li>不需要中央管理</li>\n</ul>\n</li>\n<li>非擠壓合併\n<ul>\n<li>合併後仍包含所有被合併分支的commit記錄</li>\n<li>也可以用 <code>git merge/pull --squash</code> 強迫擠壓(不推薦)</li>\n</ul>\n</li>\n</ul>\n<span id=\"more\"></span>\n<p><img data-src=\"https://image.slidesharecdn.com/git-getreadytouseit-140228043813-phpapp02/95/git-get-ready-to-use-it-5-638.jpg?cb=1393562489\" alt=\"\" /></p>\n<h2 id=\"Git安裝\">Git安裝</h2>\n<ul>\n<li>Debian/Ubuntu: 主要: <code>git-core</code> 和 <code>git-doc</code>\n<ul>\n<li>選擇性: <code>git-gui</code>, <code>gitk</code>(圖形化), <code>gitweb</code> ...</li>\n</ul>\n</li>\n<li>Windows: <code>Cygwin</code>, <code>msysGit</code>, <code>github on windows</code></li>\n</ul>\n<h2 id=\"Git常用名稱\">Git常用名稱</h2>\n<ul>\n<li>\n<p>origin： 遠端(remote) Repository 的別稱，預設即為origin/master分支</p>\n<ul>\n<li><code>git clone</code>的時候會自動設定origin</li>\n</ul>\n</li>\n<li>\n<p>master： 本地(local) Repository 的 master分支</p>\n<ul>\n<li>名為master的分支通常是專案中的主要分支</li>\n</ul>\n</li>\n<li>\n<p>HEAD</p>\n<ul>\n<li>目前分支的最新一個提交</li>\n</ul>\n</li>\n<li>\n<p>相對名稱</p>\n<ul>\n<li>HEAD/HEAD^/HEAD^^/HEAD~4\n<ul>\n<li>代表目前版本/前一版/前二版/前四版的提交</li>\n</ul>\n</li>\n<li>HEAD^1/HEAD^2/ ...\n<ul>\n<li>代表第一個父提交，第二個父提交 ......</li>\n</ul>\n</li>\n<li>A...B\n<ul>\n<li>A和B的相對差異</li>\n<li>列出A和B的祖先，直到A和B的分歧點</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code>git rev-parse HEAD</code>: 取得代稱(HEAD^, HEAD~1, tag)的辨識碼</p>\n</li>\n<li>\n<p>ORIG_HEAD：合併或重設前的HEAD</p>\n</li>\n<li>\n<p>FETCH_HEAD：fetch所抓取的HEAD</p>\n</li>\n<li>\n<p>MERGE_HEAD：合併時，另一個分支的HEAD</p>\n</li>\n</ul>\n<h2 id=\"設定檔\">設定檔</h2>\n<ol>\n<li>容器的設定檔 <code>.git/config</code></li>\n<li>使用者的設定檔 <code>~/.gitconfig</code></li>\n<li>全系統的設定檔 <code>/etc/gitconfig</code></li>\n</ol>\n<p>優先級： 1 &gt; 2 &gt; 3</p>\n<h2 id=\"Git資料結構\">Git資料結構</h2>\n<p>Index 和 Data:[Blobs, Tree, Commits, Tags]</p>\n<ul>\n<li>Data\n<ul>\n<li>Blob(binary large object): 檔案本身\n<ul>\n<li>新增檔案時，看的是檔案的sha1，而不是檔名\n<ul>\n<li>若有兩個檔案sha1相同，則git只會有一份blob</li>\n</ul>\n</li>\n<li>打包機制(pack file)：找內容相似的檔案，只儲存一份+差異的部分</li>\n</ul>\n</li>\n<li>Tree: 目錄資訊，指向Blobs\n<ul>\n<li>記錄Blob的辨識碼，檔案的資訊(如檔名)，子Tree(子資料夾)等</li>\n<li>Git可以用Tree快速產生兩個版本間的差異</li>\n</ul>\n</li>\n<li>Commit: 更動資訊，新的Commit會指向前一個Commit\n<ul>\n<li>包含作者，時間，commit對應的目錄(Tree)，commit message</li>\n</ul>\n</li>\n<li>Tag: 記錄commit的別名\n<ul>\n<li>lightweight tag\n<ul>\n<li>容器私有的</li>\n</ul>\n</li>\n<li>annotated tag\n<ul>\n<li>正式的tag，以物件方式儲存</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Index\n<ul>\n<li>即為Staging area(暫存區)</li>\n<li>可視為一顆Tree，在<code>git add</code>之後就將新檔案加入Tree中</li>\n<li>commit時，commit的Tree就是目前的index</li>\n</ul>\n</li>\n</ul>\n<p>版本和Tag都是指標，指向某個commit <img data-src=\"/img/other/artist-test.webp\" alt=\"\" /></p>\n<h2 id=\"分支\">分支</h2>\n<ul>\n<li>可視為指向某個commit的指標</li>\n<li>切換的時候工作目錄(容器所在的資料夾)會被改變</li>\n<li>用途\n<ul>\n<li>分隔 測試、開發、穩定的版本<br />\n- debug分支<br />\n- feature分支</li>\n</ul>\n</li>\n<li>命名時可以分層\n<ul>\n<li><code>bug/...</code></li>\n<li><code>release/...</code></li>\n</ul>\n</li>\n<li>開發時用branch(pointer)，完成後可用tag取代(const pointer)</li>\n<li>分支是local的資訊\n<ul>\n<li>平常上傳只會將目前的HEAD和遠端分支的HEAD同步</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"分支種類\">分支種類</h3>\n<ul>\n<li>唯讀\n<ul>\n<li>遠端追蹤分支：蒐集遠端每個分支的變更</li>\n<li>本地追蹤分支：蒐集本地分支和遠端追蹤分支的變更</li>\n</ul>\n</li>\n<li>本地分支：即平常使用的分支</li>\n<li>遠端分支</li>\n</ul>\n<h2 id=\"合併\">合併</h2>\n<p>每次提交合併的時間間隔愈短，每次產生的衝突愈少，愈容易合併。</p>\n<p>同一條線上的合併</p>\n<ul>\n<li>不會有新提交，只會移動branch指標</li>\n<li>目前版本比被合併版本新 → Already up to date</li>\n<li>目前版本比被合併版本舊 → fast-forward(快轉)\n<ul>\n<li>將目前版本移動到被合併版本的HEAD</li>\n<li><strong>git只允許fast-forward的push</strong></li>\n</ul>\n</li>\n</ul>\n<p>正常的合併</p>\n<ol>\n<li>Resolve(直觀的方法)\n<ul>\n<li>只能用在兩個分支的合併</li>\n<li>以共同的祖先為基礎，套用被合併版本的變更到目前版本</li>\n</ul>\n</li>\n<li>Recursive(預設方法)\n<ul>\n<li>只能用在兩個分支的合併</li>\n<li>兩個版本有多個共同祖先的時候，先將所有祖先合併成一個暫時性的版本，再以此版本為基礎用Resolve方法</li>\n</ul>\n</li>\n<li>Octopus\n<ul>\n<li>可用在多分支的合併</li>\n<li>多次呼叫Recursive，每次處理一個分支</li>\n</ul>\n</li>\n</ol>\n<p>特殊合併 <!-- investigate further --></p>\n<ul>\n<li>Ours\n<ul>\n<li>合併時只採用現在版本的變更\n<ul>\n<li>但留下歷史記錄(即其他版本的樹仍存在於父節點)<br />\n<img data-src=\"https://image.slidesharecdn.com/paolucci-git-power-routines-150722082712-lva1-app6891/95/git-power-routines-30-638.jpg?cb=1437553811\" alt=\"\" /></li>\n</ul>\n</li>\n<li>通常用於\n<ul>\n<li>已經有其他版本的變更時</li>\n<li>只想要別人的歷史記錄，不想要其他人的變更</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"修改提交\">修改提交</h2>\n<p>理由</p>\n<ul>\n<li>大小適當\n<ul>\n<li>將大範圍的提交拆解成小的，有主題的變更</li>\n<li>結合相似的變更成為一個大的提交</li>\n</ul>\n</li>\n<li>步驟分明\n<ul>\n<li>排序使其更合理</li>\n<li>移除不必要的提交</li>\n</ul>\n</li>\n<li>註：需要在其他開發者取得你的repository之前修改(git push之前)，以避免歷史不同步</li>\n</ul>\n<p>方法</p>\n<ul>\n<li><code>git rebase</code></li>\n</ul>\n<h3 id=\"回復-git-reset\">回復(git reset)</h3>\n<ul>\n<li><code>--soft</code>: 將HEAD還原至指定commit</li>\n<li><code>--mixed</code>: 將HEAD和Index(staging area)還原至指定commit，工作目錄不變 (預設選項)</li>\n<li><code>--hard</code>: 將HEAD和Index和工作目錄還原至指定commit</li>\n<li>被取代的HEAD會放在ORIG_HEAD</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git reset [--soft/mixed/hard] [commit]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 變更上一次的提交</span></span><br><span class=\"line\">git reset HEAD^ <span class=\"comment\"># 此時上一次的提交已經不存在，但是工作目錄中的資料相同</span></span><br><span class=\"line\"><span class=\"comment\"># do some modification</span></span><br><span class=\"line\">git commit <span class=\"comment\"># 會覆蓋上一次的commit</span></span><br></pre></td></tr></table></figure>\n<p>通常用於清除錯誤</p>\n<ul>\n<li>cherry-pick\n<ul>\n<li>拿取指定commit到目前分支</li>\n<li><code>git cherry-pick [commit]</code></li>\n<li>使用時機\n<ul>\n<li>若有多個branch都找到相同的bug，可以在每個branch都cherry-pick debug的commit</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git checkout release</span><br><span class=\"line\">git cherry-pick develop~2 <span class=\"comment\"># get debug commit from develop branch</span></span><br></pre></td></tr></table></figure>\n<pre><code>\t- 將某個分支的commit移植到另一個branch\n</code></pre>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># in develop: W → X → Y → Z (newest)</span></span><br><span class=\"line\">git checkout master</span><br><span class=\"line\">git cherry-pick develop^ <span class=\"comment\"># Y</span></span><br><span class=\"line\">git cherry-pick develop~3 <span class=\"comment\"># W</span></span><br><span class=\"line\">git cherry-pick develop~2 <span class=\"comment\"># X</span></span><br><span class=\"line\">git cherry-pick develop <span class=\"comment\"># Z</span></span><br><span class=\"line\"><span class=\"comment\"># alternative</span></span><br><span class=\"line\">git cherry-pick develop^3..develop <span class=\"comment\"># from W to Z</span></span><br></pre></td></tr></table></figure>\n<!-- - 如果要合併多個，可以加上 -n 指令就不會先幫你 commit，這樣可以多選幾個要合併的commit，最後再 git commit即可 ??? -->\n<h2 id=\"容器\">容器</h2>\n<ul>\n<li>裸容器(bare)\n<ul>\n<li>沒有工作目錄、目前分支</li>\n<li>其他人可以用clone及fetch取得資料，push更新</li>\n<li>如github</li>\n<li>產生: <code>git init --bare</code></li>\n</ul>\n</li>\n<li>開發容器</li>\n</ul>\n<h2 id=\"建立備份\">建立備份</h2>\n<p>自行建立裸容器，並加入remote，即可push, pull了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># assume mygitrepository is already a git repository</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/Backup <span class=\"comment\"># for example, you may want to put on server</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> --bare mygitrepository mygitrepository.git <span class=\"comment\"># create bare repository</span></span><br><span class=\"line\"><span class=\"comment\"># backup repository often use .git suffix</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> mygitrepository</span><br><span class=\"line\">git remote add origin /tmp/Backup/mygitrepository</span><br><span class=\"line\"><span class=\"comment\"># can use other name to replace &quot;origin&quot;</span></span><br><span class=\"line\">git remote update <span class=\"comment\"># 建立遠端追蹤分支(update remote information)</span></span><br></pre></td></tr></table></figure>\n<!--try it at workstation-->\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh myhost.com <span class=\"comment\"># build it on server</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /git</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> newrepo.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> newrepo.git</span><br><span class=\"line\">git init --shared --bare</span><br></pre></td></tr></table></figure>\n<h2 id=\"Git-tag\">Git tag</h2>\n<ul>\n<li>輕量級(lightweight)\n<ul>\n<li>像是沒有更動的分支</li>\n<li>指到特定commit的指標</li>\n<li>臨時加註標籤</li>\n<li><code>git tag [tagname] [commit]</code></li>\n</ul>\n</li>\n<li>含附註(annotated)\n<ul>\n<li>實際存在Git資料庫上的完整物件</li>\n<li>具備檢查碼、e-mail和日期，也包含標籤訊息</li>\n<li>可以被GNU Privacy Guard (GPG)簽署和驗證</li>\n<li><code>git tag -a [tagname] -m [tag message]</code></li>\n<li><code>git tag -a [tagname] [commit]</code></li>\n</ul>\n</li>\n<li>顯示詳細資訊: <code>git show [tagname]</code></li>\n<li><code>git push</code>指令並不會將標籤傳到遠端伺服器上。必須透過<code>git push origin [tagname]</code>指令\n<ul>\n<li>push 所有標籤: <code>git push origin --tags</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Git-Submodule\">Git Submodule</h2>\n<ul>\n<li>新增 submodule\n<ul>\n<li><code>git submodule add [repository path] [local path]</code></li>\n<li>產生 <code>.gitmodules</code> 文件。這是一個設定檔，保存了專案的remote URL和本地目錄</li>\n</ul>\n</li>\n<li><code>git clone</code>並不會下載submodule，需要自己更新</li>\n<li><code>git submodule init</code>\n<ul>\n<li>根據 <code>.gitmodules</code> 的名稱和 URL，將這些資訊註冊到 <code>.git/config</code> 內</li>\n</ul>\n</li>\n<li>更新submodule\n<ul>\n<li><code>git submodule update</code></li>\n<li>根據已註冊（也就是 <code>.git/config</code> ）的 submodule 進行更新，例如 clone 遺失的 submodule，所以執行這個指令前最好加上 --init</li>\n<li>update並不一定是submodule的最新版，而是在主repository的目前版本中，submodule所在的版本</li>\n</ul>\n</li>\n<li>將submodule更新到最新版\n<ul>\n<li><code>git submodule foreach --recursive git pull origin master</code></li>\n</ul>\n</li>\n<li><code>git submodule sync</code>\n<ul>\n<li>如果 submodule 的 remote URL 有變動，可以在 <code>.gitmodules</code> 修正 URL，然後執行這個指令，便會將 submodule 的 remote URL 更正。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Git-Server-Hosting\">Git Server Hosting</h2>\n<ul>\n<li>gitlab\n<ul>\n<li>功能齊全</li>\n<li>有開源版，可自架</li>\n</ul>\n</li>\n<li>cgit\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQuengyYzQuY29tL2NnaXQvYWJvdXQv\">cgit主網站<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>需開啟cgi功能\n<ul>\n<li><code>./cgit.cgi</code> 可觀看產生的html</li>\n</ul>\n</li>\n<li>安裝成功後在<code>/etc/cgitrc</code>中修改設定，否則404</li>\n<li>參考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xhbnR3NDQvY29uZmlnZmlsZS9ibG9iL21hc3Rlci9jZ2l0L2NnaXRyYw==\">lantw44的設定檔<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vYXJ0aWNsZXMvZHVwbGljYXRpbmctYS1yZXBvc2l0b3J5Lw==\">複製git裸容器<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJpc2Rvd24ubmFtZS8yMDEzLzA3LzA1L3NldHRpbmctdXAtbG9jYWwtZ2l0aHViLW1pcnJvci13aXRoLWNnaXQtZ2l0LWRhZW1vbi5odG1s\">快速複製github中的repository<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xpbnV4LmRpZS5uZXQvbWFuLzUvY2dpdHJj\">cgitrc詳細設定<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他工具\">其他工具</h2>\n<ul>\n<li>產生容器的統計資料\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Fyenplbi9naXQtcXVpY2stc3RhdHM=\">git quick stats<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>gitstats</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Git-常見錯誤\">Git 常見錯誤</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: The following untracked working tree files would be overwritten by merge</span><br></pre></td></tr></table></figure>\n<ul>\n<li>原因：本地端尚未進版本控制的檔案，在remote branch已經在版本控制中，所以報錯</li>\n<li>解決方法：先將這些檔案放入stash中，等到pull完再還原</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git add * <span class=\"comment\"># 加入 stage</span></span><br><span class=\"line\">git stash <span class=\"comment\"># 執行 stash(stage會將stage的檔案也放入stash)</span></span><br><span class=\"line\">git pull ...</span><br><span class=\"line\">git stash pop <span class=\"comment\"># 還原 stash</span></span><br><span class=\"line\">git reset <span class=\"comment\"># 回復 stage 狀態</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTc0MDQzMTYvdGhlLWZvbGxvd2luZy11bnRyYWNrZWQtd29ya2luZy10cmVlLWZpbGVzLXdvdWxkLWJlLW92ZXJ3cml0dGVuLWJ5LW1lcmdlLWJ1dC1p\">參考資料<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"大檔案管理-Git-lfs\">大檔案管理 - Git lfs</h2>\n<p>Large File Storage (LFS) 是 git管理非文字大檔案的擴充套件，可以將大檔案放在放在git repository之外，這樣可以減少repository的大小，讓repository的clone速度變快。</p>\n<p>需要注意的是，LFS是一個擴充套件，所以需要額外安裝</p>\n<p>lfs的檔案獨立於repository，只用<code>.gitattributes</code>記錄檔案名，所以需要額外的指令來add/push/pull</p>\n<p>lfs雖然支援刪除檔案，但在Github中不行，代表所有<strong>曾經</strong>上傳到Github lfs的檔案都會一直占用著Quota，目前還沒有解決方案，只能刪除原本的repository。<br />\n或是使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J0eWxleS9iZmctcmVwby1jbGVhbmVy\">bfg-repo-cleaner<i class=\"fa fa-external-link-alt\"></i></span>將需要刪除的檔案完全從記錄中移除，然後將清理後的repository重新上傳至Github。</p>\n<h2 id=\"Commit-Message-規範\">Commit Message 規範</h2>\n<p>參考<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29udmVudGlvbmFsY29tbWl0cy5vcmcvZW4vdjEuMC4wLWJldGEuMi8=\">Conventional Commit<i class=\"fa fa-external-link-alt\"></i></span><br />\n如果遵守此規則，可以<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPWF4ZXRyb3kudnNjb2RlLWNoYW5nZWxvZy1nZW5lcmF0b3I=\">自動產生一個版本的commit message總結(CHANGELOG)<i class=\"fa fa-external-link-alt\"></i></span>和語意版本號；使CD/CI工具自動觸發。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-attr\">[分類]</span> 描述 (備註)</span><br></pre></td></tr></table></figure>\n<p>分類可參考下列<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n<ul>\n<li>feat: 新增功能</li>\n<li>update: 修改功能</li>\n<li>fix: 修正bug</li>\n<li>chore: 其它工具的變動（通常是底層library或開發工具)</li>\n<li>refact: 重構、整理程式碼</li>\n<li>style: coding style調整 (format、空格或Tab、逗號等)</li>\n<li>docs: 檔案、註解撰寫</li>\n<li>build: 打包</li>\n</ul>\n<p>描述：這個commit修改了什麼功能，可以用一行的短描述加上詳細描述</p>\n<p>備註：可以是人名(commit作者、reviewer或負責人)，編號(專案代號，issue流水號)，參考資料(相關文件路徑，spec連結)等。<br />\n當然commit作者在commit資訊就有了，大多數的資訊寫在issue tracker即可，寫在commit中只是方便搜尋。</p>\n<p>e.g.,</p>\n<figure class=\"highlight less\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-attr\">[feat(search)]</span> 用關鍵字搜尋網站頁面 (<span class=\"attribute\">Reviewer</span>: Alice) (<span class=\"number\">#113</span>) (<span class=\"attribute\">Wiki</span>: PageSearch/Keyword)</span><br><span class=\"line\">(BREAKING <span class=\"attribute\">CHANGE</span>: database webpage的key從datetime改成id)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-attr\">[fix]</span> 修正點擊<span class=\"selector-tag\">xx</span>按鈕時沒有回應的問題 (<span class=\"attribute\">Reviewer</span>: Bob) (Fix <span class=\"number\">#114</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-attr\">[chore]</span> 將<span class=\"selector-tag\">winrar</span>升級至正式版 (<span class=\"number\">#115</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"將隱私檔案和git-repository分開\">將隱私檔案和git repository分開</h2>\n<p>隱私檔案：如設定檔、資料庫、內部連結、金鑰、個人資訊、檔案路徑等等</p>\n<p>最簡單的方法就是：不要放在repository內，缺點就是沒有版本控制、取得麻煩、可能會遺失。</p>\n<p>以下提出一些將隱私檔案放在repository的方法</p>\n<ol>\n<li>開兩個不同的repository，<code>public-repo</code>和<code>private-repo</code>(不公開)，將隱私檔案放在<code>private-repo</code>\n<ol>\n<li>需要使用隱私檔案時，clone <code>private-repo</code>，並合併到<code>public-repo</code></li>\n<li>缺點\n<ol>\n<li>合併兩個repository困難，這代表兩個repo需要有相同的資料夾結構，不然不易移動</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>多一個branch<code>private</code>，此branch可以視為完整的repo，包含public的所有內容和隱私檔案\n<ol>\n<li>只要保護 <code>private</code> branch 即可\n<ol>\n<li>將 <code>private</code> branch 設立讀取權限</li>\n</ol>\n</li>\n<li>小缺點：需要額外維護一個branch</li>\n</ol>\n</li>\n<li><code>private-repo</code>作為<code>public-repo</code>的submodule\n<ol>\n<li>缺點：代表隱私檔案需要放在同一個資料夾內</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"將多個repository合併成一個\">將多個repository合併成一個</h2>\n<p>我目前(2023)有六十多個repository，主因是一個專案(包含大學的一門課)就丟一個repository，實在有點難管理。</p>\n<p>可以把多個小專案合併成一個，如<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dpdHF3ZXJ0eTc3Ny9Ib21ld29yaw==\">作業<i class=\"fa fa-external-link-alt\"></i></span>。</p>\n<p>方法<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup></p>\n<ol>\n<li>要移動的repo: 開新branch，把所有檔案移到子資料夾，commit並push</li>\n<li>要接受合併的repo: 在remote中加入這些repo，fetch branch，merge</li>\n</ol>\n<h2 id=\"Reference\">Reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poLXR3L3YxL0dpdC0lRTUlOUYlQkElRTclQTQlOEUtJUU2JUE4JTk5JUU3JUIxJUE0\">Git-基礎-標籤<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ib29rcy5jb20udHcvcHJvZHVjdHMvMDAxMDU3NDA5MA==\">版本控制：使用Git<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9paG93ZXIudHcvYmxvZy9hcmNoaXZlcy81NDM2\">git 設定集<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3RibG9ncy5jb20udHcvaGF0ZWxvdmUvYXJjaGl2ZS8yMDExLzEyLzI1L2ludHJvZHVjaW5nLWNvbnRpbnVvdXMtaW50ZWdyYXRpb24uYXNweA==\">https://dotblogs.com.tw/hatelove/archive/2011/12/25/introducing-continuous-integration.aspx<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvb3JpZ2FtaWFkZGljdC9naXQtZ2V0LXJlYWR5LXRvLXVzZS1pdA==\">git: get ready to use it<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY2hoLnR3L3Bvc3RzL2dpdC1zdWJtb2R1bGUv\">Git Submodule 用法筆記<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poLXR3L3YxL0dpdC0lRTUlQjclQTUlRTUlODUlQjctJUU1JUFEJTkwJUU2JUE4JUExJUU3JUI1JTg0LVN1Ym1vZHVsZXM=\">Git 工具 - 子模組 (Submodules)<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzQ1NzkyMTEvaG93LXRvLWRlbGV0ZS1hLWZpbGUtdHJhY2tlZC1ieS1naXQtbGZzLWFuZC1yZWxlYXNlLXRoZS1zdG9yYWdlLXF1b3Rh\">How to delete a file tracked by git-lfs and release the storage quota?<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjUxNzcwMTQvbWFrZS1zb21lLWZpbGVzLXByaXZhdGUtaW4tYS1yZXBvc2l0b3J5\">Make some files private in a repository<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>https://tiffrrr.medium.com/git-%E6%98%AF%E6%99%82%E5%80%99%E8%A6%8F%E7%AF%84commit-%E8%A8%8A%E6%81%AF%E4%BA%86-bf02f33ed8f5 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>https://stackoverflow.com/a/10548919 <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n","categories":["筆記"],"tags":["版本控制","git"]},{"title":"hexo套件整理","url":"/hexo-plugins/","content":"<p>整理有用的hexo套件</p>\n<span id=\"more\"></span>\n<h2 id=\"https-github-com-lxl80-hexo-admonition\">https://github.com/lxl80/hexo-admonition</h2>\n<div class=\"admonition note\"><p class=\"admonition-title\">Hexo-admonition 插件使用示例\n</p><p>這是基於 hexo-admonition 插件渲染的一條提示信息。類型為 note，並設置了自定義標題。</p>\n<p>提示內容開頭留 4 個空格，可以有多行，最後用空行結束此標記。</p>\n</div>\n<div class=\"admonition todo\"><p class=\"admonition-title\">Hexo-admonition 插件使用示例\n</p><p>這是基於 hexo-admonition 插件渲染的一條提示信息。類型為 todo，並設置了自定義標題。</p>\n<p>提示內容開頭留 4 個空格，可以有多行，最後用空行結束此標記。</p>\n</div>\n<div class=\"admonition warning\"><p class=\"admonition-title\">Hexo-admonition 插件使用示例\n</p><p>這是基於 hexo-admonition 插件渲染的一條提示信息。類型為 warning，並設置了自定義標題。</p>\n<p>提示內容開頭留 4 個空格，可以有多行，最後用空行結束此標記。</p>\n</div>\n<div class=\"admonition error\"><p class=\"admonition-title\">Hexo-admonition 插件使用示例\n</p><p>這是基於 hexo-admonition 插件渲染的一條提示信息。類型為 error，並設置了自定義標題。</p>\n<p>提示內容開頭留 4 個空格，可以有多行，最後用空行結束此標記。</p>\n</div>\n<ul>\n<li>note</li>\n<li>info, todo</li>\n<li>warning, attention, caution</li>\n<li>error, failure, missing, fail</li>\n</ul>\n<h2 id=\"https-github-com-theme-next-hexo-filter-optimize\">https://github.com/theme-next/hexo-filter-optimize</h2>\n<h2 id=\"https-github-com-lete114-hexo-minify\">https://github.com/lete114/hexo-minify</h2>\n<p>最小化 js, css 等資源</p>\n<h2 id=\"https-www-npmjs-com-package-hexo-tag-link-preview\">https://www.npmjs.com/package/hexo-tag-link-preview</h2>\n<ul>\n<li>預覽連結</li>\n<li>需要自己寫css</li>\n<li>https://carlos.mynet.tw/%E5%AE%89%E8%A3%9Dhexo%E7%9A%84hexo-tag-link-preview%E9%80%A3%E7%B5%90%E9%A0%90%E8%A6%BD%E5%A4%96%E6%8E%9B/</li>\n</ul>\n<h2 id=\"https-github-com-hexojs-hexo-filter-nofollow\">https://github.com/hexojs/hexo-filter-nofollow</h2>\n<p>將連結加上 no-follow 以增進SEO</p>\n<p>&quot;hexo-generator-feed&quot;: &quot;^3.0.0&quot;, 產生rss<br />\n&quot;hexo-generator-sitemap&quot;: # 產生sitemap</p>\n<h2 id=\"https-github-com-EYHN-hexo-tag-cplayer\">https://github.com/EYHN/hexo-tag-cplayer</h2>\n<p>音樂播放器TAG</p>\n<h2 id=\"https-github-com-unnamed42-hexo-spoiler\">https://github.com/unnamed42/hexo-spoiler</h2>\n<p>提供黑條隱藏</p>\n<h2 id=\"https-github-com-HCLonely-hexo-bilibili-bangumi\">https://github.com/HCLonely/hexo-bilibili-bangumi</h2>\n<p>顯示追番列表</p>\n","categories":["筆記"],"tags":["hexo","套件"]},{"title":"Git常用指令","url":"/git-commands/","content":"<p>主要參考此書：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ib29rcy5jb20udHcvcHJvZHVjdHMvMDAxMDU3NDA5MA==\">版本控制：使用Git<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>建議初學者先看<a href=\"/git-introduction\">git觀念</a>及此篇的第一段</p>\n<span id=\"more\"></span>\n<h2 id=\"Git基本觀念\">Git基本觀念</h2>\n<table>\n<thead>\n<tr>\n<th>檔案階段</th>\n<th>檔案所在位置</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>已修改</td>\n<td>Working Directory(工作目錄)</td>\n<td>經過修改的檔案</td>\n</tr>\n<tr>\n<td>已暫存</td>\n<td>Staging area(暫存區)</td>\n<td>要提交的變動清單</td>\n</tr>\n<tr>\n<td>已提交</td>\n<td>Repository(容器)</td>\n<td>已提交的檔案及變動記錄</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"https://image.slidesharecdn.com/git-getreadytouseit-140228043813-phpapp02/95/git-get-ready-to-use-it-5-638.jpg?cb=1393562489\" alt=\"\" /></p>\n<p>其他檔案階段</p>\n<ul>\n<li>被忽略：在名為<code>.gitignore</code>的檔案中修改想忽略的檔案，如暫存檔、log、或編譯後的object file、筆記\n<ul>\n<li>每個目錄都可以有自己的<code>.gitignore</code>檔，以較接近檔案的目錄為準</li>\n<li>可以用<code>git add -f</code>強制將被忽略的檔案加入暫存區</li>\n</ul>\n</li>\n</ul>\n<p>觀看檔案的狀態: <code>git status</code></p>\n<ul>\n<li>已修改: <code>Changes not staged for commit</code></li>\n<li>已暫存: <code>Changes to be committed</code></li>\n<li>已提交: 不顯示</li>\n</ul>\n<p>基本流程: 修改檔案 → 將修改的檔案加入 Staging area (<code>git add</code>) → 提交變更 (<code>git commit</code>) → 繼續修改檔案(循環)</p>\n<p>若要和他人共用，要在線上容器和本機容器間進行同步(<code>git push</code>, <code>git pull</code>)</p>\n<p>提交(commit，也稱送交)</p>\n<ul>\n<li>版本和容器變動的最小單位\n<ul>\n<li><strong>一個commit = 一個版本</strong></li>\n<li>git 中的 <code>HEAD</code> 等於目前所在的版本</li>\n</ul>\n</li>\n<li>不一定所有檔案都要提交\n<ul>\n<li>只有加入Staging area的檔案會被提交</li>\n</ul>\n</li>\n<li>提交時機\n<ul>\n<li>程式處於穩定狀態\n<ul>\n<li>可以正確執行</li>\n<li>測試完成</li>\n</ul>\n</li>\n<li>以時間為單位\n<ul>\n<li>結束一天的工作前</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>辨識碼</p>\n<ul>\n<li>所有物件都有一個獨特的辨識碼\n<ul>\n<li>包含commit, tag, 文件…都有辨識碼</li>\n<li>其值為物件的SHA1 hash</li>\n</ul>\n</li>\n<li>下述指令的<code>[commit]</code>即為識別碼\n<ul>\n<li>在沒有重覆的情況下，可取前幾碼代表該物件</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"設定\">設定</h3>\n<p>先設定自己的名字與信箱，因為git用名字與信箱來分辨作者</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 若不加 --global 則設定只會在該容器生效</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 設定使用者名稱(加上引號)</span></span><br><span class=\"line\">git config --global user.name <span class=\"string\">&quot;First Last&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 設定使用者電子郵件(加上引號)</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;user@example.com&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 開啟顏色，使git內容不會只有單一白色</span></span><br><span class=\"line\">git config --global color.ui <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 設定預設編輯器(提交時會用到)</span></span><br><span class=\"line\">git config --global core.editor <span class=\"string\">&quot;emacs&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 設定指令的縮寫(將git st設為git status的簡寫)</span></span><br><span class=\"line\">git config --global alias.st status</span><br><span class=\"line\"><span class=\"comment\"># 列出所有設定值</span></span><br><span class=\"line\">git config -l</span><br></pre></td></tr></table></figure>\n<p>設定預設提交格式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方法1. 直接設定</span></span><br><span class=\"line\">git config --global commit.template <span class=\"variable\">$HOME</span>/.git-template</span><br><span class=\"line\"><span class=\"comment\"># 方法2. 在 .gitconfig 中設定</span></span><br><span class=\"line\">[commit]</span><br><span class=\"line\">template = /home/frank/.git-template</span><br></pre></td></tr></table></figure>\n<h3 id=\"實作範例\">實作範例</h3>\n<p>初始化一個專案</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git init <span class=\"comment\"># 初始化，使當前目錄成為git的容器</span></span><br><span class=\"line\"><span class=\"built_in\">touch</span> README.md <span class=\"comment\"># 加上專案的說明文件(非必要)</span></span><br><span class=\"line\">git add README.md <span class=\"comment\"># 將說明文件加入暫存區</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;initial commit&quot;</span> <span class=\"comment\"># 提交變更</span></span><br></pre></td></tr></table></figure>\n<p>將本地的容器上傳到遠端(如github)的容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote add origin &lt;URL&gt; <span class=\"comment\"># 將遠端容器命名為origin</span></span><br><span class=\"line\">git push -u origin master <span class=\"comment\"># 從本地端的master branch上傳到origin的master branch</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"本篇：Git常用指令\">本篇：Git常用指令</h2>\n<h3 id=\"Git檔案操作\">Git檔案操作</h3>\n<h4 id=\"加入暫存區-add\">加入暫存區: add</h4>\n<p><code>git add</code>：將檔案加入暫存區(staging area)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git add -i <span class=\"comment\"># 進入互動模式(推薦)</span></span><br><span class=\"line\"></span><br><span class=\"line\">git add [filename] <span class=\"comment\"># 將檔案加入staging area</span></span><br><span class=\"line\">git add -u <span class=\"comment\"># 只把「修改/刪除」的檔案加入staging area，「新增」的檔案不加入</span></span><br><span class=\"line\">git add -p <span class=\"comment\"># 部分暫存：git會詢問哪些檔，然後逐個顯示被選中檔案的每一個差異部分，</span></span><br><span class=\"line\"><span class=\"comment\"># 並詢問你是否希望暫存他們。(= git add --patch)</span></span><br><span class=\"line\">git add -A <span class=\"comment\"># stages All</span></span><br><span class=\"line\">git add .  <span class=\"comment\"># stages new and modified, without deleted</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81NzI1NDkvZGlmZmVyZW5jZS1iZXR3ZWVuLWdpdC1hZGQtYS1hbmQtZ2l0LWFkZA==\">參考資料<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>直接刪除/移動不會影響容器中的檔案，因為這項變動沒有告知git<br />\n若要在下一個版本刪除或移動檔案，需要用<code>git rm</code>或<code>git mv</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">rm</span> [filename] <span class=\"comment\"># 在下一個版本移除，並實際刪除檔案</span></span><br><span class=\"line\">git <span class=\"built_in\">rm</span> --cache [filename] <span class=\"comment\"># 在下一個版本移除，但不實際刪除檔案</span></span><br><span class=\"line\">git <span class=\"built_in\">mv</span> [filename] [new-filename] <span class=\"comment\"># 改名、搬移檔案，並將變動加入staging area</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"checkout\">checkout</h4>\n<p><strong>使檔案還原到指定提交時的版本</strong></p>\n<ul>\n<li>發現檔案改錯，用<code>git checkout filename</code>把檔案還原到最近的版本</li>\n<li><code>git checkout [commit] filename</code> 檔案會被還原到指定的commit時的版本</li>\n</ul>\n<h3 id=\"Git更新版本\">Git更新版本</h3>\n<h4 id=\"提交新版本-commit\">提交新版本(commit)</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git commit <span class=\"comment\"># 會跳出編輯器，此時可編輯提交訊息</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;commit message&#x27;</span> <span class=\"comment\"># 直接提交並指定提交訊息</span></span><br><span class=\"line\">git commit -a <span class=\"comment\"># 將所有修改過的檔案直接 commit(跳過add步驟), 不包含新增的檔案</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"存取遠端容器-push-pull\">存取遠端容器: push, pull</h4>\n<p>遠端的repository名稱通常取名為<code>origin</code><br />\n<code>push</code>: 上傳, <code>pull</code>: 下載</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote show <span class=\"comment\"># 顯示設定的遠端容器及其名稱、網址</span></span><br><span class=\"line\">git remote add origin [url] <span class=\"comment\"># 設定遠端容器連結並命名為origin</span></span><br><span class=\"line\">git push origin master <span class=\"comment\">#  從本地目前的branch上傳至遠端master</span></span><br><span class=\"line\">git pull origin master <span class=\"comment\">#  從遠端master更新到本地目前的branch</span></span><br><span class=\"line\">git pull origin/[branchB] [branchA] <span class=\"comment\"># 從遠端branchB更新到本地branchA</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> [url] [localRepositoryPath] <span class=\"comment\"># 複製遠端容器至本地</span></span><br><span class=\"line\">git fetch origin <span class=\"comment\"># 下載origin的branch到本地</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>push時，如果和遠端容器有衝突，需要先pull，在本地merge(處理衝突)後再push</li>\n<li>pull的機制：先 fetch 遠端的 branch，然後與本地端的 branch 做 merge\n<ul>\n<li>若有衝突，<strong>會多產生一個 merge commit</strong>來取代遠端有衝突的所有commit</li>\n<li>用<code>git pull --rebase origin master</code>可以保留雙方的commit</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Git分支-branch\">Git分支(branch)</h3>\n<p>分支(branch): 將特定版本(commit)命名</p>\n<p><code>git branch</code><br />\n<code>git checkout</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git branch <span class=\"comment\"># 列出本地分支(前方有星號的為目前所在分支)</span></span><br><span class=\"line\">git branch -r <span class=\"comment\"># 列出遠端分支</span></span><br><span class=\"line\">git branch -a <span class=\"comment\"># 列出所有分支(本地+遠端)</span></span><br><span class=\"line\">git show-branch <span class=\"comment\"># 列出本地分支樹狀圖</span></span><br><span class=\"line\">git branch [branchname] [commit] <span class=\"comment\"># 在指定commit上建立分支</span></span><br><span class=\"line\">git branch -d [branchname] <span class=\"comment\"># 刪除指定分支</span></span><br><span class=\"line\">git branch -m [old-name] [new-name] <span class=\"comment\"># 重新命名分支</span></span><br><span class=\"line\">git branch [new-branch] [old-branch] <span class=\"comment\"># 由分支old-branch複製出新分支new-branch</span></span><br><span class=\"line\"></span><br><span class=\"line\">git checkout [branch] <span class=\"comment\"># 切換到指定分支</span></span><br><span class=\"line\">git checkout [commit] <span class=\"comment\"># 也可以切換到任何commit</span></span><br><span class=\"line\"><span class=\"comment\"># 若commit不在任何branch上，用 git branch 查看時，會顯示 (no branch)</span></span><br><span class=\"line\">git checkout -b [new-branch] <span class=\"comment\"># 建立並切換到新分支new-branch(從目前所在的分支複製)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>git checkout -m [branch]</code> # 將工作目錄的變動和分支合併，並切換到該分支</li>\n<li>git checkout 時，若已修改的檔案和checkout的版本產生衝突，則checkout不會執行\n<ul>\n<li>衝突時先<code>git stash</code>(暫時清空已修改的檔案)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Git-標籤-tag\">Git 標籤(tag)</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git tag [tagname] [commit] <span class=\"comment\"># 在指定commit新增tag</span></span><br><span class=\"line\">git tag -d [tagname] <span class=\"comment\"># 刪除tag</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Git合併-merge\">Git合併(merge)</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git merge [branch/commit] <span class=\"comment\"># 將指定的版本合併到目前所在的分支</span></span><br></pre></td></tr></table></figure>\n<p>產生衝突時：先用<code>git diff</code> <code>git status</code>查看<br />\n衝突的地方為如下格式</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class=\"line\"><span class=\"bullet\">...</span></span><br><span class=\"line\"><span class=\"bullet\"></span><span class=\"comment\">//version1 code</span></span><br><span class=\"line\"><span class=\"section\">...</span></span><br><span class=\"line\"><span class=\"section\">========</span></span><br><span class=\"line\"><span class=\"bullet\">...</span></span><br><span class=\"line\"><span class=\"bullet\"></span><span class=\"comment\">//version2 code</span></span><br><span class=\"line\"><span class=\"bullet\">...</span></span><br><span class=\"line\"><span class=\"bullet\"></span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p>分別是兩個版本的差異。<br />\n將其修改後即可提交</p>\n<ul>\n<li><code>git diff --ours/--theirs</code> 可以查看原版本和衝突版本的差異(ours→合併的, theirs→被合併的)</li>\n<li><code>git diff</code> 用在衝突檔案時只會顯示衝突的部分，而不會顯示只有一邊修改的部分</li>\n</ul>\n<h3 id=\"Git-修改版本\">Git 修改版本</h3>\n<h4 id=\"修改版本-rebase\">修改版本: rebase</h4>\n<p><code>rebase</code>可以重新排序、編輯、移除、合併、拆分提交</p>\n<ul>\n<li>優點\n<ul>\n<li>可以不產生分支線和額外的merge commit</li>\n</ul>\n</li>\n<li>缺點\n<ul>\n<li><strong>等於改變提交記錄，僅適合還沒上傳的commit</strong></li>\n<li>commit被移動，所以特徵碼會改變(也就是<strong>原本的commit會被取代</strong>)</li>\n<li>commit的形狀會被改變(變成一條直線)\n<ul>\n<li>可用<code>--preserve-merge</code>參數保留形狀</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>麻煩\n<ul>\n<li>移動的commit若屬於多個分支，則每個分支都要重新指定位置</li>\n</ul>\n</li>\n</ul>\n<p>使用時機：想保留額外commit資訊時，可替代merge</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">// debug rebase on master</span><br><span class=\"line\">git checkout debug</span><br><span class=\"line\">git rebase master</span><br><span class=\"line\"></span><br><span class=\"line\">Original:</span><br><span class=\"line\">master A → B→C→D→E</span><br><span class=\"line\">  |      ↘</span><br><span class=\"line\">debug      F→G→H</span><br><span class=\"line\"></span><br><span class=\"line\">After rebase:</span><br><span class=\"line\">master A → B→C→D→E</span><br><span class=\"line\">  |               ↘</span><br><span class=\"line\">debug               F→G→H</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git rebase -i [commit] <span class=\"comment\"># rebase互動模式(推薦)</span></span><br><span class=\"line\"><span class=\"comment\"># 互動模式指令：pick: commit, squash: 擠壓到前一個commit, edit: 停在此commit提交前的情形以修改(可以拆成多次commit) …</span></span><br><span class=\"line\"><span class=\"comment\"># 在rebase時遇到衝突的話，會提示使用者手動解決衝突(merge)</span></span><br><span class=\"line\">git rebase --<span class=\"built_in\">continue</span> <span class=\"comment\"># (解決衝突後)繼續rebase</span></span><br><span class=\"line\">git rebase --skip <span class=\"comment\"># 忽略一個原本要rebase的commit</span></span><br><span class=\"line\">git rebase --abort <span class=\"comment\"># 取消rebase</span></span><br><span class=\"line\"></span><br><span class=\"line\">git rebase --onto master [commitA] [commitB] <span class=\"comment\">#  使用onto可以將從A到B的提交移植到完全不同的分支(master)上</span></span><br></pre></td></tr></table></figure>\n<p>參考資料：<span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zNjI2NjQyL2dpdC1yZXdyaXRlLWhpc3RvcnktcmVvcmRlci1hbmQtbWVyZ2UtY29tbWl0cw==\">修改一個分支的歷史--使用rebase<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h4 id=\"merge還是rebase\">merge還是rebase?</h4>\n<p>需要保留樹狀記錄就用merge，反之用rebase<br />\n個人較愛用rebase，理由是保留樹狀記錄只會造成日後版本維護的麻煩</p>\n<h4 id=\"修正版本-amend\">修正版本: amend</h4>\n<ul>\n<li>修改<strong>最近一次</strong>的commit\n<ul>\n<li>staging area的修改會<strong>合併到最近的提交</strong></li>\n</ul>\n</li>\n<li>使用時機\n<ul>\n<li>提交訊息的修改</li>\n<li>發現一些<strong>小錯誤</strong>\n<ul>\n<li>忘記add/多add檔案/找到小bug 的時候</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git add [filename] <span class=\"comment\"># 修改錯誤後加入暫存區</span></span><br><span class=\"line\">git commit --amend <span class=\"comment\"># 將此修改加入最近的提交</span></span><br><span class=\"line\"><span class=\"comment\">#==========</span></span><br><span class=\"line\">git commit --amend [file1] [file2] ... <span class=\"comment\">#  直接將指定檔案的變更加入最近的commit</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"回到指定版本-reset\">回到指定版本: reset</h4>\n<!--將HEAD視為指標，平常branch的HEAD是指向最新的一次提交。但git reset可以移動HEAD到指定的提交版本\n(checkout, commit 等指令都會改變HEAD指標的位置)\n-->\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git reset [commit] [--soft/--mixed/--hard] <span class=\"comment\"># 還原到指定提交</span></span><br><span class=\"line\">git reset HEAD [filepath] <span class=\"comment\"># 將檔案從staging area移除 (= git checkout filepath)</span></span><br></pre></td></tr></table></figure>\n<pre><code>--mixed 暫存區也被改變，但工作目錄不變 (預設值，暫存區清空)\n--hard 暫存區和工作目錄都被改變(目前的目錄中，所有檔案的修改會消失)\n</code></pre>\n<ul>\n<li><code>--soft</code>\n<ul>\n<li>只有版本改變，檔案不改變</li>\n<li>版本改變造成的所有變更都會放在staging area\n<ul>\n<li>若你<code>reset --soft</code>到五天前的版本，那這五天內的commit變更都會在staging area</li>\n<li>若<code>reset --soft</code>後直接<code>git commit</code>，則最新的版本會和reset前的版本一模一樣</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>--mixed</code>\n<ul>\n<li>只有版本改變，檔案不改變</li>\n<li>變更不會放在staging area, 要自己手動add</li>\n</ul>\n</li>\n<li><code>--hard</code>\n<ul>\n<li>檔案會回到指定commit的狀態</li>\n<li>通常是出了嚴重問題後的解決方法</li>\n<li>若有檔案不在版本中(沒有被<code>add</code>,<code>commit</code>過)，<code>reset --hard</code>後檔案依舊存在</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zNTI4MjQ1L3doYXRzLXRoZS1kaWZmZXJlbmNlLWJldHdlZW4tZ2l0LXJlc2V0LW1peGVkLXNvZnQtYW5kLWhhcmQ=\">Whats the difference between git reset --mixed, --soft, and --hard?<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h4 id=\"提交-revert\">提交: revert</h4>\n<p><code>git revert [commit]</code></p>\n<ul>\n<li><strong>新增</strong>一筆commit，此commit會抵消之前的變更，使檔案像是回到指定版本\n<ul>\n<li>若最近的變更是寫一頁作文，revert會<strong>加上</strong>一個塗一頁立可白的變更<br />\n使用時機: 你的commit已經上傳，別人已下載，所以不適合用<code>git rebase</code>, <code>git reset</code>, <code>git commit --amend</code>等方法隨便修改版本記錄</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Git比較\">Git比較</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git diff <span class=\"comment\"># 比較實際檔案與目前版本的不同</span></span><br><span class=\"line\">git diff --cached <span class=\"comment\"># 比較staging area與目前版本的不同</span></span><br><span class=\"line\">         --<span class=\"built_in\">stat</span> <span class=\"comment\"># 只顯示檔名和不同的行數</span></span><br><span class=\"line\">git diff [commit] [commit] <span class=\"comment\"># 比較兩個版本的不同</span></span><br><span class=\"line\">git diff -S[string] <span class=\"comment\"># 只列出變更中，有包含string字串的差異</span></span><br><span class=\"line\">git diff -w <span class=\"comment\"># 不將空白視為變更</span></span><br><span class=\"line\">git diff [commit1]:[file1] [commit2]:[file2] <span class=\"comment\"># 比較兩個版本的指定檔案</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Git記錄-log-show\">Git記錄: log, show</h3>\n<p><code>git log</code> 用來查詢提交記錄，有很多參數可以用<br />\n建議可以直接用GUI(<code>gitk</code>, <code>git gui</code>, <code>git instaweb</code>)來看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span> [commit] <span class=\"comment\"># 列出指定版本的記錄(也就是找其之前的記錄)</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> [commitA]..[commitB] <span class=\"comment\"># 列出從A到B的提交(不含A, 含B)</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> ^[commitA] <span class=\"comment\"># 顯示指定版本之後的提交</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> -[num] <span class=\"comment\"># 最近[num]筆的提交紀錄</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --no-merges <span class=\"comment\"># 不顯示合併的提交</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --graph <span class=\"comment\"># 顯示樹狀結構圖</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --<span class=\"built_in\">stat</span> <span class=\"comment\"># 顯示修改行數</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --author [username] <span class=\"comment\"># 指定使用者的提交</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --since=<span class=\"string\">&quot;2 weeks ago&quot;</span> <span class=\"comment\"># 近2週內的提交</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --follow [filename] <span class=\"comment\"># 列出包含該檔案變動的提交</span></span><br><span class=\"line\"></span><br><span class=\"line\">git show [commit] <span class=\"comment\"># 列出指定版本的最新提交的詳細修改內容</span></span><br><span class=\"line\">git show [commit]:[filename] <span class=\"comment\"># 顯示該提交的指定檔案</span></span><br></pre></td></tr></table></figure>\n<p>可以將版本記錄視為一顆樹，前一個版本為其父節點</p>\n<ul>\n<li>列出指定版本的記錄 = 找其祖先</li>\n<li><code>git diff foo..bar</code> = <code>git diff foo bar</code></li>\n<li><code>git diff foo...bar</code>: foo和bar的&quot;merge base&quot;(最近的共同祖先)和bar的差異</li>\n<li><code>git log foo bar</code>: 顯示所有foo和bar的提交(其中一方有即可)</li>\n<li><code>git log foo..bar</code>: 不屬於foo，屬於bar的提交</li>\n<li><code>git log foo...bar</code>: 只有其中一方才有的提交</li>\n</ul>\n<p>參考資料：<span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy83MjUxNDc3L3doYXQtYXJlLXRoZS1kaWZmZXJlbmNlcy1iZXR3ZWVuLWRvdWJsZS1kb3QtYW5kLXRyaXBsZS1kb3QtaW4tZ2l0LWRpZg==\">What are the differences between double-dot 「..」 and triple-dot 「…」 in Git diff commit ranges?<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>調整記錄的格式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span> --pretty=oneline <span class=\"comment\"># 一個commit一行</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --pretty=short <span class=\"comment\"># 簡短</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --pretty=format:<span class=\"string\">&#x27;%h was %an, %ar, message: %s&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># %s: 提交訊息, %h: 辨識碼(hash), %an: 作者, %ar: 時間</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Git尋找提交-bisect-blame\">Git尋找提交: bisect, blame</h3>\n<p><code>git bisect</code> 用二分搜尋法找尋有bug的提交</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git bisect start         <span class=\"comment\"># git會依照你提供的資訊改變目前的工作目錄，以方便測試</span></span><br><span class=\"line\">git bisect good [commitA] <span class=\"comment\"># 告知到此commit之前是好的</span></span><br><span class=\"line\">git bisect bad [commitB]  <span class=\"comment\"># 告知此commit仍有錯誤(通常用HEAD)</span></span><br><span class=\"line\"><span class=\"comment\"># git 會自動切換版本，若切換的版本是好的，則輸入git bisect good，反之則輸入git bisect bad</span></span><br><span class=\"line\"><span class=\"comment\"># 最後會找出第一個壞掉的提交</span></span><br><span class=\"line\">git bisect <span class=\"built_in\">log</span>           <span class=\"comment\"># 顯示之前提供的good, bad記錄</span></span><br><span class=\"line\">git bisect visualize     <span class=\"comment\"># 顯示在搜尋範圍的commit</span></span><br><span class=\"line\">git bisect reset         <span class=\"comment\"># 找到錯誤的提交後，還原至bisect前的版本</span></span><br></pre></td></tr></table></figure>\n<p>用檔案尋找提交</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git blame [filename] <span class=\"comment\"># 顯示檔案的每一行最後是被哪個commit修改的</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> -S [string] [filename] <span class=\"comment\"># 顯示變動包含string字串的commit</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git reflog [Reference] <span class=\"comment\"># 參照(Reference, 預設為HEAD)改變的歷史</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>checkout</code>, <code>commit</code>, <code>reset</code>, <code>rebase</code> ... 都會修改HEAD</li>\n<li>可做為<code>reset</code>的參考</li>\n</ul>\n<h3 id=\"Git藏匿變更-stash\">Git藏匿變更: stash</h3>\n<p><code>git stash</code>: 把目前工作目錄(working directory)的變更丟到一個stack中，之後再回來拿</p>\n<p>保持工作目錄的乾淨</p>\n<p>使用時機</p>\n<ol>\n<li>你不得不修改一個緊急bug，你可以先把目前工作目錄的變更丟到stash，這時候你的工作目錄和上次剛提交內容的狀況一樣，等到修完bug後再把stash中剛剛做到一半的東西還原以繼續</li>\n<li>今天的工作時間結束後，還有未完成的部分，可以先stash後執行測試，確認最新版本是正確的</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git stash                <span class=\"comment\"># 把目前工作區的修改丟到stash裡</span></span><br><span class=\"line\">git stash save [stashName] <span class=\"comment\"># 把目前工作區的修改丟到stash裡，並加上命名</span></span><br><span class=\"line\">git stash pop            <span class=\"comment\"># 從stash取出最新放入的一筆修改,並從stash中移除(若發生衝突時會保留)</span></span><br><span class=\"line\">git stash apply          <span class=\"comment\"># 將最新放入的一筆修改套用在工作目錄上</span></span><br><span class=\"line\">git stash drop           <span class=\"comment\"># 移除最新放入的stash</span></span><br><span class=\"line\">git stash show [stashName] <span class=\"comment\"># 列出某一筆stash的修改內容</span></span><br><span class=\"line\">                           <span class=\"comment\"># 命名：最新放入的為 stash@&#123;0&#125;, 再來是 stash@&#123;1&#125; 以此類推</span></span><br><span class=\"line\">git stash show -p [stashName] <span class=\"comment\"># 列出某一筆stash的修改統計</span></span><br><span class=\"line\">git stash list              <span class=\"comment\"># 列出所有在stash的變更</span></span><br><span class=\"line\">git stash [file]            <span class=\"comment\"># 將檔案丟進stash</span></span><br><span class=\"line\">git stash clear             <span class=\"comment\"># 清空stash</span></span><br><span class=\"line\">git stash branch [branchName] <span class=\"comment\"># 用最新放入的stash做為新的branch</span></span><br><span class=\"line\">git stash -p                <span class=\"comment\"># 挑選要暫存的變更</span></span><br><span class=\"line\">git stash --includev        <span class=\"comment\"># 同時暫存尚未在版本控制中的檔案(即從來沒被add過的檔案)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"不常用的指令\">不常用的指令</h2>\n<h3 id=\"Git遠端容器管理-remote\">Git遠端容器管理: remote</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote <span class=\"comment\"># 列出預設遠端容器的名稱</span></span><br><span class=\"line\">git remote show <span class=\"comment\"># 顯示預設遠端容器的詳細資料</span></span><br><span class=\"line\">git remote add [remote-name] [remote-url] <span class=\"comment\"># 加入一個遠端容器，並命名為[remote-name]</span></span><br><span class=\"line\">git remote update <span class=\"comment\"># 更新Repository的所有branch</span></span><br><span class=\"line\">git remote <span class=\"built_in\">rm</span> [branch] <span class=\"comment\"># 刪除遠端分支</span></span><br><span class=\"line\"></span><br><span class=\"line\">git push --tags <span class=\"comment\"># 上傳標籤資訊(git push不會上傳標籤)</span></span><br><span class=\"line\">git push [remote] [branch] <span class=\"comment\"># 上傳分支</span></span><br><span class=\"line\">git push [remote] [branch]:[uploadbranch] <span class=\"comment\"># 上傳分支並在遠端容器中重新命名</span></span><br><span class=\"line\">git push [remote] --delete [branch] <span class=\"comment\">#  刪除遠端分支</span></span><br><span class=\"line\"></span><br><span class=\"line\">git branch --set-upstream [branch] [remote] <span class=\"comment\"># 連結一個本地分支和遠端分支</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Git-clean\">Git clean</h3>\n<p>清除不包含在版本控制中的檔案(被<code>.gitignore</code>忽略的檔案不會被清除)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clean -n <span class=\"comment\">#  列出會被清掉的檔案</span></span><br><span class=\"line\">git clean -f <span class=\"comment\">#  執行清除</span></span><br><span class=\"line\">git clean -d <span class=\"comment\">#  清除資料夾</span></span><br><span class=\"line\">git clean -x <span class=\"comment\">#  連 .gitignore 裡列的檔案也清掉</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"垃圾回收-gc\">垃圾回收: gc</h3>\n<p>git儲存的記錄很多: stash, reflog, log ...</p>\n<p>gc(garbage collection)：刪除所有沒有被指到(reference)且已存在一段時間的物件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 整理前和整理後的差異, 可由: git count-objects 看出</span></span><br><span class=\"line\">git count-objects</span><br><span class=\"line\">git gc</span><br><span class=\"line\">git count-objects</span><br></pre></td></tr></table></figure>\n<h3 id=\"大檔案-lfs\">大檔案: lfs</h3>\n<p>處理單一大檔案的上傳</p>\n<p>在git後加上lfs，其他邏輯大多和一般的git相同</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git lfs install <span class=\"comment\"># 初始化</span></span><br><span class=\"line\">git lfs track <span class=\"string\">&quot;*.zip&quot;</span> <span class=\"comment\"># 加入lfs</span></span><br><span class=\"line\">git add .gitattributes <span class=\"comment\"># 新增lfs記錄</span></span><br><span class=\"line\"></span><br><span class=\"line\">git lfs ls-files --all</span><br><span class=\"line\">git lfs pull</span><br><span class=\"line\">git lfs push origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ib29rcy5jb20udHcvcHJvZHVjdHMvMDAxMDU3NDA5MA==\">版本控制：使用Git<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dpdC1zY20uY29tL2Jvb2svemgtdHcvdjE=\">Git scm<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dvZ29qaW1teS5uZXQvMjAxMi8wMi8yOS9naXQtc2NlbmFyaW8v\">Git情境劇系列<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cubG9uZ3dpbi5jb20udHcvMjAwOS8wNS9naXQtbGVhcm4taW5pdGlhbC1jb21tYW5kLTIwMDkv\">Git初學筆記<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9paG93ZXIudHcvZ2l0L3JlYmFzZS5odG1s\">ihower: 還沒push前可以做的(壞)事<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvb3JpZ2FtaWFkZGljdC9naXQtZ2V0LXJlYWR5LXRvLXVzZS1pdA==\">git: get ready to use it<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["版本控制","指令","git"]},{"title":"標頭檔(header)與include","url":"/header-file-tips/","content":"<p>本文整理自 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jcGx1c3BsdXMuY29tL2ZvcnVtL2FydGljbGVzLzEwNjI3Lw==\">headers and includes: why and how<i class=\"fa fa-external-link-alt\"></i></span></p>\n<span id=\"more\"></span>\n<h2 id=\"Why-we-need-header-files\">Why we need header files</h2>\n<ul>\n<li>speeds up compile time\n<ul>\n<li>if everything is in a single file, then everything must be fully recompiled every time you make any little change</li>\n</ul>\n</li>\n<li>keeps your code more organized\n<ul>\n<li>easier to find the code you are looking for</li>\n</ul>\n</li>\n<li>allows you to separate interface from implementation\n<ul>\n<li>make the interface visible to other .cpp files, while keeping the implementation in its own .cpp file</li>\n</ul>\n</li>\n</ul>\n<p>Compile Process</p>\n<ol>\n<li>compiler generates intermediate files(object file) for each compiled source file\n<ol>\n<li>compiler will &quot;replace&quot; the #include line with the actual contents of the file you're including when it compiles the file</li>\n<li>files with header extensions might be ignored by the compiler if you try to compile them</li>\n</ol>\n</li>\n<li>then links all the object files together, which generates the final binary</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// in myclass.h</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">foo</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"type\">int</span> bar;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// in myclass.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;myclass.h&quot;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MyClass::foo</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//in main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;myclass.h&quot;</span>  <span class=\"comment\">// defines MyClass</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  MyClass a; <span class=\"comment\">// no longer produces an error, because MyClass is defined</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Header files should use a .h__ extension (.h / .hpp / .hxx). Which of those you use doesn't matter</li>\n<li>C++ Source files should use a .c__ extention (.cpp / .cxx / .cc). Which of those you use doesn't matter</li>\n<li>C Source files should use .c (.c only)</li>\n</ul>\n<blockquote>\n<p>header files are #included and not compiled, whereas source files are compiled and not #included</p>\n</blockquote>\n<p>The one exception is that it is sometimes (although very rarely) useful to include a source file. This scenario has to do with instantiating templates and is outside the scope of this article</p>\n<h2 id=\"Include-guards\">Include guards</h2>\n<p>include multiple times of the same code would cause error</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// myclass.h</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">DoSomething</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;myclass.h&quot;</span>   <span class=\"comment\">// define MyClass</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;myclass.h&quot;</span>   <span class=\"comment\">// Compiler error - MyClass already defined </span></span></span><br></pre></td></tr></table></figure>\n<p>There's an Implicit Example</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// x.h</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">X</span> &#123; &#125;;</span><br><span class=\"line\"><span class=\"comment\">// a.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;x.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123; X x; &#125;;</span><br><span class=\"line\"><span class=\"comment\">// b.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;x.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123; X x; &#125;;</span><br><span class=\"line\"><span class=\"comment\">// main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;a.h&quot;</span>  <span class=\"comment\">// also includes &quot;x.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;b.h&quot;</span>  <span class=\"comment\">// includes x.h again!  ERROR </span></span></span><br></pre></td></tr></table></figure>\n<p>Because of this scenario, many people are told not to put #include in header files. However this is bad advice and you should not listen to it, But remember</p>\n<ol>\n<li>Only #include things you need to include</li>\n<li>Guard against incidental multiple includes with include guards\n<ol>\n<li>skipping over the entire header if it was already included</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//x.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> __X_H_INCLUDED__   <span class=\"comment\">// if x.h hasn&#x27;t been included yet...</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> __X_H_INCLUDED__   <span class=\"comment\">//   #define this so the compiler knows it has been included</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">X</span> &#123; &#125;;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> </span></span><br></pre></td></tr></table></figure>\n<h2 id=\"The-right-way-to-include\">The &quot;right way&quot; to include</h2>\n<p>aware of following dependencies</p>\n<ol>\n<li>stuff that can be forward declared</li>\n<li>stuff that needs to be #included</li>\n</ol>\n<p>Dedepency that should be used</p>\n<ul>\n<li>do nothing if\n<ul>\n<li>A makes no references at all to B</li>\n<li>The only reference to B is in a friend declaration</li>\n</ul>\n</li>\n<li>forward declare B if\n<ul>\n<li>A <strong>contains</strong> a B <strong>pointer or reference</strong>\n<ul>\n<li>B* myb, B&amp; myb</li>\n</ul>\n</li>\n<li>function has B object/pointer/reference as <strong>parementer or return type</strong>\n<ul>\n<li>B MyFunction(B myb)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>include &quot;b.h&quot; if\n<ul>\n<li>B is a <strong>parent class</strong> of A</li>\n<li>A <strong>contains</strong> a B object\n<ul>\n<li>B myb</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\">myclass.h</span><br><span class=\"line\"><span class=\"comment\">//=================================</span></span><br><span class=\"line\"><span class=\"comment\">// include guard</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> __MYCLASS_H_INCLUDED__</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> __MYCLASS_H_INCLUDED__</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//=================================</span></span><br><span class=\"line\"><span class=\"comment\">// forward declared dependencies</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Foo</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Bar</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//=================================</span></span><br><span class=\"line\"><span class=\"comment\">// included dependencies</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;parent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//=================================</span></span><br><span class=\"line\"><span class=\"comment\">// the actual class</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> : <span class=\"keyword\">public</span> Parent  <span class=\"comment\">// Parent object, so #include &quot;parent.h&quot;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  std::vector&lt;<span class=\"type\">int</span>&gt; avector;    <span class=\"comment\">// vector object, so #include &lt;vector&gt;</span></span><br><span class=\"line\">  Foo* foo;                    <span class=\"comment\">// Foo pointer, so forward declare Foo</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Func</span><span class=\"params\">(Bar&amp; bar)</span></span>;         <span class=\"comment\">// Bar reference, so forward declare Bar</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">friend</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyFriend</span>;       <span class=\"comment\">// friend declaration is not a dependency</span></span><br><span class=\"line\">                               <span class=\"comment\">//   don&#x27;t do anything about MyFriend</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">// __MYCLASS_H_INCLUDED__ </span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Why-that-is-the-right-way-to-include\">Why that is the &quot;right way&quot; to include</h3>\n<ul>\n<li>general idea is that it makes &quot;myclass.h&quot; fully self-contained and doesn't require any other area of the program (other than MyClass's implementation/source file) to know how MyClass works internally\n<ul>\n<li>If some other class needs to use MyClass, it can just #include &quot;myclass.h&quot; and be done with it!</li>\n</ul>\n</li>\n<li>Alternative method: #include all of MyClass's dependencies before #including &quot;myclass.h&quot;</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  I want to use MyClass</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;myclass.h&quot;</span>   <span class=\"comment\">// will always work, no matter what MyClass looks like.</span></span></span><br><span class=\"line\">                       <span class=\"comment\">// You&#x27;re done</span></span><br><span class=\"line\">               <span class=\"comment\">//  (provided myclass.h follows my outline above and does</span></span><br><span class=\"line\">               <span class=\"comment\">//   not make unnecessary #includes) </span></span><br></pre></td></tr></table></figure>\n<p>why alternative method is bad：you should fill out all depency header and maintain it's order</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  I want to use MyClass</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;myclass.h&quot;</span></span></span><br><span class=\"line\">   <span class=\"comment\">// ERROR &#x27;Parent&#x27; undefined</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;parent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;myclass.h&quot;</span></span></span><br><span class=\"line\">   <span class=\"comment\">// ERROR &#x27;std::vector&#x27; undefined </span></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;parent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;myclass.h&quot;</span></span></span><br><span class=\"line\">   <span class=\"comment\">// ERROR &#x27;Support&#x27; undefined </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;parent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;support.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;myclass.h&quot;</span></span></span><br><span class=\"line\">   <span class=\"comment\">// ERROR &#x27;Support&#x27; undefined</span></span><br><span class=\"line\">   <span class=\"comment\">// &quot;parent.h&quot; uses Support, and therefore you must #include &quot;support.h&quot; before &quot;parent.h&quot;</span></span><br></pre></td></tr></table></figure>\n<p>It is all about encapsulation. Files that want to use MyClass don't need to be aware of what MyClass uses in order for it to work, and don't need to #include any MyClass dependencies. It's all very OO friendly, very easy to use, and very easy to maintain</p>\n<h3 id=\"Circular-Dependencies\">Circular Dependencies</h3>\n<p>A circular dependency is when two (or more) classes depend on each other</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// a.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;b.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123; B* b; &#125;;</span><br><span class=\"line\"><span class=\"comment\">// b.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;a.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123; A* a &#125;;</span><br></pre></td></tr></table></figure>\n<p>That's what circular inclusion does</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// a.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;a.h&quot;</span> </span></span><br><span class=\"line\"></span><br><span class=\"line\">The compiler will <span class=\"keyword\">do</span> the following:</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;a.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// start compiling a.h</span></span><br><span class=\"line\">   <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;b.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// start compiling b.h</span></span><br><span class=\"line\">      <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;a.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"comment\">// compilation of a.h skipped because it&#x27;s guarded</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// resume compiling b.h</span></span><br><span class=\"line\">      <span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123; A* a &#125;;        <span class=\"comment\">// &lt;--- ERROR, A is undeclared </span></span><br></pre></td></tr></table></figure>\n<p>Even though you're #including &quot;a.h&quot;, the compiler is not seeing A class until B class gets compiled.<br />\nSolution: forward declare when you're only using a pointer or reference</p>\n<p>Situation below is conceptually impossible(not logical). The solution is to have one or both classes contain a pointer or reference to the other, rather than a full object</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// a.h (guarded)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;b.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  B b;   <span class=\"comment\">// B is an object, can&#x27;t be forward declared</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// b.h (guarded)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;a.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  A a;   <span class=\"comment\">// A is an object, can&#x27;t be forward declared</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Function-inlining\">Function inlining</h2>\n<p>Inline Function body needs to exist in every cpp file which calls them, otherwise you get linker errors</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Func</span><span class=\"params\">(<span class=\"type\">const</span> A&amp; a)</span>   <span class=\"comment\">// parameter, so forward declare is okay</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    a.<span class=\"built_in\">DoSomething</span>();      <span class=\"comment\">// but now that we&#x27;ve dereferenced it, it</span></span><br><span class=\"line\">                          <span class=\"comment\">//  becomes an #include dependency</span></span><br><span class=\"line\">               <span class=\"comment\">// = we now have a potential circular inclusion</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>The key is that while inline function need to exist in the header, they <strong>do not need to exist in the class definition itself</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// b.h  (assume its guarded)</span></span><br><span class=\"line\"><span class=\"comment\">//------------------</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>;  <span class=\"comment\">// forward declared dependency</span></span><br><span class=\"line\"><span class=\"comment\">//------------------</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Func</span><span class=\"params\">(<span class=\"type\">const</span> A&amp; a)</span></span>;  <span class=\"comment\">// okay, A is forward declared</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//------------------</span></span><br><span class=\"line\"><span class=\"comment\">//now B is already defined</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;a.h&quot;</span>        <span class=\"comment\">// can use A with include dependency without error</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">void</span> <span class=\"title\">B::Func</span><span class=\"params\">(<span class=\"type\">const</span> A&amp; a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  a.<span class=\"built_in\">DoSomething</span>();    <span class=\"comment\">// okay!  a.h has been included</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>even if a.h includes b.h, the additional #includes don't come up until AFTER class B is fully defined, and they are therefore harmless.</p>\n<p>But putting function bodies at the end of my header is ugly. Is there a way to avoid that?</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// b.h</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// blah blah</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123; <span class=\"comment\">/* blah blah */</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;b_inline.h&quot;</span>  <span class=\"comment\">// or I sometimes use &quot;b.hpp&quot; </span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// b_inline.h (or b.hpp -- whatever)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;a.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;b.h&quot;</span>  <span class=\"comment\">// not necessary, but harmless</span></span></span><br><span class=\"line\">                <span class=\"comment\">//  you can do this to make this &quot;feel&quot; like a source</span></span><br><span class=\"line\">                <span class=\"comment\">//  file, even though it isn&#x27;t</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">void</span> <span class=\"title\">B::Func</span><span class=\"params\">(<span class=\"type\">const</span> A&amp; a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  a.<span class=\"built_in\">DoSomething</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>This seperates the interface from the implementation, while still allowing the implementation to be inlined</p>\n<h2 id=\"Forward-declaring-templates\">Forward declaring templates</h2>\n<p>Forward declaring is pretty straight-forward when it comes to simple classes, but when dealing with template classes, things aren't so simple</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// a.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;b.h&quot;</span> <span class=\"comment\">// included dependencies</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt; <span class=\"comment\">// the class template</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Tem</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"comment\">/*...*/</span></span><br><span class=\"line\">  B b;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// class most commonly used with &#x27;int&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> Tem&lt;<span class=\"type\">int</span>&gt; A;  <span class=\"comment\">// typedef as &#x27;A&#x27; </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// b.h</span></span><br><span class=\"line\"><span class=\"comment\">// forward declared dependencies</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>;  <span class=\"comment\">// error!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// the class</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"comment\">/* ... */</span></span><br><span class=\"line\">  A* ptr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>Because 'A' isn't really a class, but rather a typedef, the compiler will bark at you<br />\nwe can't just #include &quot;a.h&quot; here because of a circular dependency problem</p>\n<p>We need to forward typedef A</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt; <span class=\"keyword\">class</span> <span class=\"title class_\">Tem</span>;  <span class=\"comment\">// forward declare our template</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> Tem&lt;<span class=\"type\">int</span>&gt; A;               <span class=\"comment\">// then typedef &#x27;A&#x27; (forward typedef A instead of forward declare A)</span></span><br></pre></td></tr></table></figure>\n<p>A cleaner solution is to create an <strong>alternative header</strong> which has the forward declarations of your templated classes and their typedefs</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//a.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;b.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Tem</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"comment\">/*...*/</span></span><br><span class=\"line\">  B b;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">//a_fwd.h</span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt; <span class=\"keyword\">class</span> <span class=\"title class_\">Tem</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> Tem&lt;<span class=\"type\">int</span>&gt; A;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//b.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;a_fwd.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"comment\">/*...*/</span></span><br><span class=\"line\">  A* ptr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>This allows B to include a header which forward declares A without including the entire class definition</p>\n","categories":["轉載"],"tags":["c","cpp"]},{"title":"簡報製作軟體比較","url":"/how-to-make-slides/","content":"<h2 id=\"分類\">分類</h2>\n<ol>\n<li>編輯軟體</li>\n<li>Latex</li>\n<li>Markdown</li>\n<li>Javascript</li>\n<li>其他</li>\n</ol>\n<h2 id=\"編輯軟體\">編輯軟體</h2>\n<ul>\n<li>優點\n<ul>\n<li>編輯方便</li>\n<li>功能齊全</li>\n<li>模版多</li>\n</ul>\n</li>\n<li>缺點\n<ul>\n<li>手動排版</li>\n<li>需要使用特定軟體才能編輯</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"軟體\">軟體</h3>\n<ul>\n<li>PowerPoint</li>\n<li>Google Slides</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmV6aS5jb20veGNpdDR6YmF0NnN3L3N3ZWV0LXJlY2lwZS10by1zb2x2aW5nLXByb2JsZW1zLw==\">Prezi<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"Latex\">Latex</h2>\n<ul>\n<li>優點\n<ul>\n<li>自訂性高</li>\n<li>寫公式、程式碼方便</li>\n</ul>\n</li>\n<li>缺點\n<ul>\n<li>指令過於複雜</li>\n<li>需要設定開發環境</li>\n</ul>\n</li>\n<li>模版\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3ZlcmxlYWYuY29tL2xlYXJuL2xhdGV4L0JlYW1lcg==\">Beamer<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hzdWFudGllbi9iZWFtZXJUYWl3YW4=\">BeamerTaiwan<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Markdown\">Markdown</h2>\n<ul>\n<li>優點\n<ul>\n<li>原始文字易於保存</li>\n<li>語法較Latex簡單</li>\n</ul>\n</li>\n<li>缺點\n<ul>\n<li>自訂性比Latex差</li>\n<li>難製作動畫</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"軟體-2\">軟體</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hcnAtdGVhbS9tYXJwaXQ=\">Marp<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>可以寫html tag</li>\n<li>簡易的css支援</li>\n<li>動畫功能較少</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL3BtJUU3JTlBJTg0JUU3JTk0JTlGJUU3JTk0JUEyJUU1JThBJTlCJUU1JUI3JUE1JUU1JTg1JUI3JUU3JUFFJUIxLyVFNSVBNiU4MiVFNCVCRCU5NSVFNSVCRiVBQiVFOSU4MCU5RiVFNSVBRSU4QyVFNiU4OCU5MCVFNyVCMCVBMSVFNSVBMCVCMSVFNiU4RSU5MiVFNyU4OSU4OC0lRTUlQjAlODclRTclQjIlQkUlRTclQTUlOUUlRTUlQjAlODglRTYlQjMlQTglRTUlOUMlQTglRTYlQkElOTYlRTUlODIlOTklRTYlQkMlOTQlRTglQUMlOUIlRTQlQjglOEEtZWFiOGEwNjY4NzMz\">教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Javascript\">Javascript</h2>\n<ul>\n<li>用js擴充功能</li>\n<li>用css排版</li>\n</ul>\n<h3 id=\"軟體-3\">軟體</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZXZlYWxqcy5jb20v\">Reveal.js<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>支援Markdown語法</li>\n<li><a href=\"/revealjs-markdown\">教學:Reveal.js配合Markdown</a></li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbGkuZGV2Lw==\">Slidev<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>支援Markdown語法</li>\n<li>支援類Vue語法</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbXByZXNzLmpzLm9yZy8=\">Impress.js<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>類似Prezi</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2ltYWtld2VidGhpbmdzLmNvbS9kZWNrLmpzLw==\">Deck.js<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2tpcmthcy5jaC9hc2NlbnNvci8j\">Ascensor<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xhbmRzbGlkZS5hZGFtemFwLmNvbS8jc2xpZGUx\">LandSlide<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"其他\">其他</h2>\n<p>用遊戲引擎做簡報</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1VuaXR5VGVjaG5vbG9naWVzL1ByZXNlbnRhdGlvbg==\">Unity<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>可以將動畫和特效做到非常好，只是過於麻煩</li>\n</ul>\n<h2 id=\"結論\">結論</h2>\n<ul>\n<li>使用純文字(即Markdown)儲存簡報，較沒有相容性的問題，版本控制也容易\n<ul>\n<li>但排版較困難</li>\n</ul>\n</li>\n<li>css是目前排版的最好方法</li>\n<li>所以最好的方法為Markdown+html</li>\n<li>推薦使用\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hcnAtdGVhbS9tYXJwaXQ=\">Marp<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZXZlYWxqcy5jb20v\">Reveal.js<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbGkuZGV2Lw==\">Slidev<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n","categories":["心得"],"tags":["Markdown","簡報","軟體","PowerPoint","Latex","JavaScript","CSS","Unity"]},{"title":"在Ubuntu虛擬機上安裝vmware_tool","url":"/how-to-install-ubuntu-vmware-tool/","content":"<blockquote>\n<p>已過時</p>\n</blockquote>\n<p>VMware-tools是Vmware提供，用來增強虛擬顯卡和硬盤性能、以及同步虛擬機與主機時鐘的驅動程序</p>\n<span id=\"more\"></span>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /media/VMware Tools</span><br><span class=\"line\">tar -zxvf *.tar.gz -C [file path] </span><br><span class=\"line\"><span class=\"built_in\">cd</span> [file path]</span><br><span class=\"line\">sudo ./vmware-install.pl</span><br></pre></td></tr></table></figure>\n<h3 id=\"另解\">另解</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get install open-vm-tools</span><br><span class=\"line\"><span class=\"comment\"># 選擇性安裝</span></span><br><span class=\"line\">sudo apt-get install open-vm-dkms</span><br><span class=\"line\">sudo apt-get install open-vm-toolbox</span><br></pre></td></tr></table></figure>\n","categories":["記錄"],"tags":["linux","VMWare","虛擬機"]},{"title":"用IFTTT實作簡單的自動化","url":"/ifttt/","content":"<h2 id=\"簡介\">簡介</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pZnR0dC5jb20=\">IFTTT<i class=\"fa fa-external-link-alt\"></i></span>通過其他不同平台的條件來決定是否執行下一條命令。即對網路服務透過其他網路服務作出反應</li>\n<li>IFTTT = &quot;IF This Then ThaT&quot;\n<ul>\n<li>If A Then B(當 A 就 B)</li>\n</ul>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h3 id=\"怎麼唸？\">怎麼唸？</h3>\n<p>我都唸<code>IFTTT</code></p>\n<h2 id=\"支援的平台-節錄\">支援的平台(節錄)</h2>\n<ul>\n<li>android/ios\n<ul>\n<li>電量/電話/簡訊/拍照/地點</li>\n</ul>\n</li>\n<li>email</li>\n<li>社交\n<ul>\n<li>twitter</li>\n<li>facebook</li>\n<li>reddit</li>\n<li>telegram</li>\n<li>github</li>\n<li>discord</li>\n<li>line</li>\n</ul>\n</li>\n<li>RSS\n<ul>\n<li>feedly(付費)</li>\n<li>inoreader</li>\n<li>instapaper</li>\n</ul>\n</li>\n<li>筆記\n<ul>\n<li>onenote</li>\n<li>evernote</li>\n<li>pocket</li>\n<li>notion</li>\n</ul>\n</li>\n<li>影音\n<ul>\n<li>spotify</li>\n<li>youtube</li>\n</ul>\n</li>\n<li>工作\n<ul>\n<li>microsoft todo</li>\n<li>trello</li>\n</ul>\n</li>\n<li>Google\n<ul>\n<li>calendar</li>\n<li>drive</li>\n<li>sheet</li>\n<li>docs</li>\n</ul>\n</li>\n</ul>\n<!--\n## 例子：一天一次，隨機傳line訊息\n\n做不到，需要用line api\n-->\n<h2 id=\"例子\">例子</h2>\n<ul>\n<li>把發在Facebook的一篇廢文同步發在Twitter <img data-src=\"/img/other/ifttt1.webp\" alt=\"\" /></li>\n<li>將Youtube按讚的影片存到Onenote <img data-src=\"/img/other/ifttt2.webp\" alt=\"\" /></li>\n<li>手機 簡訊/照片 備份到Discord <img data-src=\"/img/other/ifttt3.webp\" alt=\"\" /></li>\n</ul>\n<h3 id=\"彈性較大的選擇\">彈性較大的選擇</h3>\n<p>使用Email, RSS, Webhook可以支援更多平台</p>\n<p>例如某新聞網站支援RSS，可將其內容發送到支援IFTTT的所有平台</p>\n<ol>\n<li>Email\n<ul>\n<li>(if)傳送郵件到<code>trigger@applet.ifttt.com</code>，(then)...</li>\n</ul>\n</li>\n<li>RSS\n<ul>\n<li>(if)新RSS消息，(then)...</li>\n<li>參照<a href=\"/rss-social-network\">此篇</a></li>\n</ul>\n</li>\n<li>Webhook\n<ul>\n<li>可以用程式接收/傳送Webhook，大幅提升使用彈性</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pZnR0dC5jb20vbWFrZXJfd2ViaG9va3M=\">https://ifttt.com/maker_webhooks<i class=\"fa fa-external-link-alt\"></i></span> → Documentation</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"心得\">心得</h2>\n<ul>\n<li><code>If then</code> 的語法限制了使用的彈性\n<ul>\n<li>解法即為Webhook</li>\n</ul>\n</li>\n<li>許多平台為了<s>綁住用戶</s>保護資料不提供讀取API，使可用性降低，如line</li>\n<li>配合物聯網效果較好，如智慧音箱、掃地機器人\n<ul>\n<li>e.g., 回到家時(手機定位)，自動開燈(智慧燈泡)</li>\n</ul>\n</li>\n<li>若只需要讀取，RSS還是最佳選擇</li>\n<li>使用到的所有服務都需要提供很多權限</li>\n</ul>\n<h2 id=\"類似服務\">類似服務</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96YXBpZXIuY29tLw==\">zapier<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h1Z2lubi9odWdpbm4=\">huginn<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hdXRvbWF0ZS5pby8=\">automate<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW50ZWdyb21hdC5jb20vZW4=\">integromat<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["心得"],"tags":["IFTTT","自動化","備份","webhook"]},{"title":"在Linux中節省硬碟和記憶體用量","url":"/linux-save-memory-disk/","content":"<p>最近發現 VM 和遠端主機的使用空間都太大了，找到一些相關處理方法</p>\n<span id=\"more\"></span>\n<h2 id=\"硬碟用量\">硬碟用量</h2>\n<h3 id=\"檢查\">檢查</h3>\n<ul>\n<li><code>df -h</code> 查看磁碟使用情形</li>\n<li><code>df -i</code> 檢查inode使用情形</li>\n<li><code>du -sh</code> 查看各資料夾用量</li>\n<li><code>du -sh * | sort -nr</code> 依序列出大檔案</li>\n<li><code>ls -a</code> 顯示隱藏檔案(<code>.</code>開頭的檔案)</li>\n<li><code>dpkg-query -Wf '$&#123;Installed-Size&#125;\\t$&#123;Package&#125;\\n' | sort -n</code> 顯示已安裝的的大package\n<ul>\n<li>source: https://unix.stackexchange.com/questions/40442/which-installed-software-packages-use-the-most-disk-space-on-debian</li>\n</ul>\n</li>\n<li><code>wajig large</code></li>\n</ul>\n<!--  /lib/modules/<kernel_release>/extra/ -->\n<h3 id=\"常見的垃圾檔案\">常見的垃圾檔案</h3>\n<p><code>/var/log</code><br />\ndocker已經未使用的image和container<br />\n就算是有在使用的image，因為docker是用疊的，所以需要<br />\n隱藏檔案，如npm,pip的安裝package</p>\n<h3 id=\"apt\">apt</h3>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">apt</span> <span class=\"string\">autoremove</span></span><br><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">apt</span> <span class=\"string\">autoremove</span> <span class=\"built_in\">--purge</span> <span class=\"comment\"># remove old kernels</span></span><br><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">apt</span> <span class=\"string\">clean</span> <span class=\"comment\"># 清除 apt 快取</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"git\">git</h3>\n<p><code>git gc --aggressive --prune=all</code> 清理並壓縮 history</p>\n<h3 id=\"docker\">docker</h3>\n<p><code>docker builder prune</code> 移除沒在使用的build</p>\n<p><code>docker system prune -a</code> 移除所有未使用的container, network, image</p>\n<h2 id=\"記憶體用量\">記憶體用量</h2>\n<h3 id=\"檢查-2\">檢查</h3>\n<ul>\n<li><code>free</code></li>\n</ul>\n<h3 id=\"硬碟容量換記憶體容量\">硬碟容量換記憶體容量</h3>\n<p>當然，會比較慢</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3BlbmNsaS5jb20vbGludXgvbGludXgtYWRkLXN3YXA=\">使用 swap<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"CPU-用量\">CPU 用量</h2>\n<ul>\n<li>各process用量\n<ul>\n<li><code>top</code></li>\n<li><code>htop</code></li>\n</ul>\n</li>\n<li><code>kill &lt;pid&gt;</code></li>\n</ul>\n","categories":["記錄"],"tags":["linux","硬碟","記憶體","效能"]},{"title":"在Ubuntu使用fcitx安裝嘸蝦米","url":"/install-boshiamy-in-linux-by-fcitx/","content":"<blockquote>\n<p>之前用過gcin, scim等輸入工具，發現對嘸蝦米的支援十分有限。fcitx預設即有嘸蝦米碼表，較為方便，安裝也比較簡單</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>使用 Ubuntu <code>12.04</code> 32bit 測試 (後有<code>16.04</code> 和 <code>22.04</code> 方法)</p>\n<h2 id=\"安裝fcitx輸入工具\">安裝fcitx輸入工具</h2>\n<p><code>sudo apt-get install im-switch fcitx</code></p>\n<h2 id=\"安裝嘸蝦米於fcitx\">安裝嘸蝦米於fcitx</h2>\n<p><code>sudo apt-get install fcitx-boshiamy</code></p>\n<!--more-->\n<h2 id=\"設為預設值\">設為預設值</h2>\n<p>使用im-switch將fcitx設為預設輸入法<br />\n<code>sudo im-switch -s fcitx</code></p>\n<h2 id=\"調整fcitx設定\">調整fcitx設定</h2>\n<p>fcitx設定 → 附加組件配置 → 碼表 → boshiamy.config</p>\n<h3 id=\"模糊鍵\">模糊鍵</h3>\n<p>『使用模糊鍵』不勾<br />\n此鍵預設被打勾，並定為z鍵，導致所有含z碼的字都出不來...</p>\n<h3 id=\"使用符號\">使用符號</h3>\n<p>要用嘸蝦米預設符號的話，「忽略標點」打勾</p>\n<h3 id=\"拼音查蝦米碼\">拼音查蝦米碼</h3>\n<p>在拼音鍵打勾，最好選 `（Esc下的那鍵），才不影響輸入，然後用 -, = 兩鍵翻頁。<br />\n（至於輸入的字要查發音則是屬於另一個功能，在剛按完空白鍵輸入後，就按Ctrl+Alt+E，即可看見發音，但缺點是沒有四聲）</p>\n<h2 id=\"Reinstall-Ubuntu-16-04-64bit\">Reinstall: Ubuntu 16.04 64bit</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get install -y fcitx fcitx-table-boshiamy</span><br><span class=\"line\">im-config <span class=\"comment\"># choose fcitx</span></span><br><span class=\"line\">fcitx-configtool <span class=\"comment\"># choose boshiamy</span></span><br><span class=\"line\"><span class=\"comment\"># restart or relogin</span></span><br></pre></td></tr></table></figure>\n<p>完成後用Ctrl+Space及Ctrl+Shift切換輸入法即可使用</p>\n<h2 id=\"Reinstall-Ubuntu-22-04-64bit\">Reinstall: Ubuntu 22.04 64bit</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install -y fcitx5 fcitx5-chinese-addons</span><br><span class=\"line\">im-config <span class=\"comment\"># choose fcitx5</span></span><br><span class=\"line\"><span class=\"comment\"># 下載碼表並安裝</span></span><br><span class=\"line\">wget https://eu.mirror.archlinuxarm.org/aarch64/community/fcitx5-table-extra-5.0.9-1-any.pkg.tar.xz <span class=\"comment\"># 請自行尋找最新版本</span></span><br><span class=\"line\">unxz fcitx5-table-extra-5.0.9-1-any.pkg.tar.xz</span><br><span class=\"line\">tar xvf fcitx5-table-extra-5.0.9-1-any.pkg.tar</span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> -r usr/share /usr/</span><br><span class=\"line\">fcitx5-configtool <span class=\"comment\"># choose boshiamy</span></span><br><span class=\"line\"><span class=\"comment\"># restart or relogin</span></span><br></pre></td></tr></table></figure>","categories":["記錄"],"tags":["linux","fcitx","嘸蝦米","輸入法"]},{"title":"byobu指令和設定","url":"/linux-screen-tmux-byobu/","content":"<h2 id=\"簡介\">簡介</h2>\n<p>byobu是基於screen或tmux的一層操作介面<br />\n預設為基於tmux</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90YW8tb2YtdG11eC5yZWFkdGhlZG9jcy5pby96aF9DTi9sYXRlc3QvbWFudXNjcmlwdC8wMC1mb3Jld29yZC5odG1s\">tmux教學<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"使用byobu\">使用byobu</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">byobu-enable <span class=\"comment\">#登入就開啟byobu</span></span><br><span class=\"line\">byobu-disable <span class=\"comment\">#取消</span></span><br><span class=\"line\">byobu new -s &lt;session name&gt; <span class=\"comment\"># 新建一個byobu 會話</span></span><br><span class=\"line\"><span class=\"comment\"># 如果新建兩個以上，每次進入byobu的時候需要選擇</span></span><br></pre></td></tr></table></figure>\n<p>滑鼠操作</p>\n<ul>\n<li>選擇文字 <code>Shift+選擇</code></li>\n<li>複製文字 <code>Shift+右鍵</code></li>\n<li>開/關滑鼠操作 <code>Shift+F12</code></li>\n</ul>\n<h2 id=\"名詞解釋\">名詞解釋</h2>\n<p>用瀏覽器的名詞解釋</p>\n<ul>\n<li>session → 視窗：不同視窗包含不同分頁\n<ul>\n<li>window → 分頁\n<ul>\n<li>split → 分割：同一個分頁的不同終端</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/other/byobu-cheat-sheet.webp\" alt=\"cheetsheet\" /></p>\n<h2 id=\"指令表\">指令表</h2>\n<h3 id=\"新建-F2\">新建(F2)</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>F2</code></td>\n<td>新增分頁</td>\n</tr>\n<tr>\n<td><code>Shift-F2</code></td>\n<td>新增水平分割(上下分割)</td>\n</tr>\n<tr>\n<td><code>Ctrl-F2</code></td>\n<td>新增垂直分割(左右分割)</td>\n</tr>\n<tr>\n<td><code>Ctrl-Shift-F2</code></td>\n<td>新增視窗</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"移動-F3-F4\">移動(F3/F4)</h3>\n<p>移動的前後順序為編號順序</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>F3/F4</code>, <code>Alt-←/→</code></td>\n<td>前/後一個分頁</td>\n</tr>\n<tr>\n<td><code>Alt-↑/↓</code></td>\n<td>前/後一個視窗</td>\n</tr>\n<tr>\n<td><code>Ctrl-F3/F4</code></td>\n<td>交換兩個分割的位置</td>\n</tr>\n<tr>\n<td><code>Ctrl-Shift-F3/F4</code></td>\n<td>移動分頁的位置(編號)</td>\n</tr>\n<tr>\n<td><code>Shift-F3/F4</code></td>\n<td>移動至前/後一個分割</td>\n</tr>\n<tr>\n<td><code>Shift-←/→/↑/↓</code></td>\n<td>移動至對應方向的分割</td>\n</tr>\n<tr>\n<td><code>Shift-Alt-Left/Right/Up/Down</code></td>\n<td>修改目前的分割大小</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"設定-F5-F12\">設定(F5, F12)</h3>\n<p>記<code>F9</code>即可</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>F5</code></td>\n<td>重新讀取設定</td>\n</tr>\n<tr>\n<td><code>F9</code></td>\n<td><strong>開啟 byobu 設定頁面</strong></td>\n</tr>\n<tr>\n<td><code>Alt-F12</code></td>\n<td>切換滑鼠支援</td>\n</tr>\n<tr>\n<td><code>Alt-F5</code></td>\n<td>切換 UTF-8 支援</td>\n</tr>\n<tr>\n<td><code>Ctrl-F5</code></td>\n<td>Reconnect ssh/gpg/dbus sockets(註：應該是重新連線的意思)</td>\n</tr>\n<tr>\n<td><code>Shift-F5</code></td>\n<td>切換底部狀態列資訊</td>\n</tr>\n<tr>\n<td><code>Shift-F12</code></td>\n<td>開/關 byobu 指令快捷鍵</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"取消-F6\">取消(F6)</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Alt-F6</code></td>\n<td>使連線到相同視窗的 terminal 離開(除了自己)<!--TODO: ?--></td>\n</tr>\n<tr>\n<td><code>Ctrl-F6</code></td>\n<td>關閉目前所在的分割</td>\n</tr>\n<tr>\n<td><code>F6</code></td>\n<td>離開 byobu 但不登出(=<code>byobu detach</code>)</td>\n</tr>\n<tr>\n<td><code>Shift-F6</code></td>\n<td>離開 byobu 且登出(註：不知道差別在哪)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"記錄-F7\">記錄(F7)</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Alt-PageUp/PageDown</code></td>\n<td>於歷史記錄中翻頁</td>\n</tr>\n<tr>\n<td><code>F7</code></td>\n<td>瀏覽歷史記錄(Command line history)</td>\n</tr>\n<tr>\n<td><code>Shift-F7</code></td>\n<td>儲存歷史記錄於 <code>$BYOBU_RUN_DIR/printscreen</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"管理-F8\">管理(F8)</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>F8</code></td>\n<td>命名目前分頁</td>\n</tr>\n<tr>\n<td><code>Ctrl-F8</code></td>\n<td>命名目前視窗</td>\n</tr>\n<tr>\n<td><code>Shift-F8</code></td>\n<td>切換分割佈局</td>\n</tr>\n<tr>\n<td><code>Alt-Shift-F8</code></td>\n<td>選擇分割佈局</td>\n</tr>\n<tr>\n<td><code>Ctrl-Shift-F8</code></td>\n<td>儲存目前的分割佈局</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"同步操作-F9\">同步操作(F9)</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Alt-F9</code></td>\n<td>開/關 同時輸入分割</td>\n</tr>\n<tr>\n<td><code>Ctrl-F9</code></td>\n<td>視窗中的所有分頁執行同一指令</td>\n</tr>\n<tr>\n<td><code>Shift-F9</code></td>\n<td>分頁中的所有分割執行同一指令</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"其他-F11-F12\">其他(F11, F12)</h3>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Shift-F1</code></td>\n<td>顯示指令列表</td>\n</tr>\n<tr>\n<td><code>Alt-F11</code></td>\n<td>目前分割最大化(占滿整個分頁)</td>\n</tr>\n<tr>\n<td><code>Shift-F11</code></td>\n<td>最大化/還原 目前分割</td>\n</tr>\n<tr>\n<td><code>Ctrl-F11</code></td>\n<td>將目前分割合併至前一個分頁(Join window into a vertical split)</td>\n</tr>\n<tr>\n<td><code>F12</code></td>\n<td>Escape sequence(等同 screen 的<code>Ctrl+a</code>)</td>\n</tr>\n<tr>\n<td><code>Ctrl-Shift-F12</code></td>\n<td>顯示蒙德裡安圖(Mondrian squares)</td>\n</tr>\n<tr>\n<td><code>Ctrl-Shift-F5</code></td>\n<td>隨機切換狀態列的顏色</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"瀏覽模式\">瀏覽模式</h2>\n<p>按<code>F7</code>可進入瀏覽模式</p>\n<ul>\n<li><code>hjkl</code> 可上下左右(和vim一樣)</li>\n<li><code>0</code> 移至行首</li>\n<li><code>$</code> 移至行尾</li>\n<li><code>G</code> 移動至指定行數</li>\n<li><code>C-b</code> 往上翻頁</li>\n<li><code>C-f</code> 往下翻頁</li>\n<li><code>?</code> 往前搜尋</li>\n<li><code>/</code> 往後搜尋</li>\n<li><code>n</code> 移動至下一個符合搜尋的位置</li>\n</ul>\n<h2 id=\"設定\">設定</h2>\n<p>預設放在<code>~/.byobu/</code></p>\n<h3 id=\"修改狀態列\">修改狀態列</h3>\n<p><code>~/.byobu/status</code></p>\n<p>預設是長這樣</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Tmux has one status line, with 2 halves for status</span></span><br><span class=\"line\">tmux_left=<span class=\"string\">&quot;#logo distro release #arch #session&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># You can have as many tmux right lines below here, and cycle through them using Shift-F5</span></span><br><span class=\"line\">tmux_right=<span class=\"string\">&quot;network #disk_io #custom #entropy #raid reboot_required #updates_available #apport #services #mail #users uptime #ec2_cost #rcs_cost #fan_speed #cpu_temp #battery #wifi_quality #processes load_average cpu_count cpu_freq memory #swap disk users whoami #hostname ip_address #time_utc #date time&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#tmux_right=&quot;network #disk_io #custom entropy raid reboot_required updates_available #apport #services #mail users uptime #ec2_cost #rcs_cost fan_speed cpu_temp battery wifi_quality #processes load_average cpu_count cpu_freq memory #swap #disk whoami hostname ip_address #time_utc date time&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#tmux_right=&quot;network #disk_io custom #entropy raid reboot_required updates_available #apport #services #mail users uptime #ec2_cost #rcs_cost #fan_speed #cpu_temp battery wifi_quality #processes load_average cpu_count cpu_freq memory #swap #disk #whoami #hostname ip_address #time_utc date time&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#tmux_right=&quot;#network disk_io #custom entropy #raid #reboot_required #updates_available #apport #services #mail #users #uptime #ec2_cost #rcs_cost fan_speed cpu_temp #battery #wifi_quality #processes #load_average #cpu_count #cpu_freq #memory #swap whoami hostname ip_address #time_utc disk date time&quot;</span></span><br></pre></td></tr></table></figure>\n<p>Left</p>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>arch</code></td>\n<td>CPU 架構</td>\n<td><code>x86_64</code></td>\n</tr>\n<tr>\n<td><code>distro</code></td>\n<td>作業系統名稱</td>\n<td><code>Ubuntu</code></td>\n</tr>\n<tr>\n<td><code>logo</code></td>\n<td>作業系統的 Logo，可設定</td>\n<td><code>u</code></td>\n</tr>\n<tr>\n<td><code>release</code></td>\n<td>作業系統版本</td>\n<td><code>20.04</code></td>\n</tr>\n<tr>\n<td><code>session</code></td>\n<td>視窗名字</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>Right</p>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>apport</code></td>\n<td>尚未讀的 Crash Report</td>\n<td></td>\n</tr>\n<tr>\n<td><code>battery</code></td>\n<td>剩餘電量</td>\n<td></td>\n</tr>\n<tr>\n<td><code>cpu_count</code></td>\n<td>CPU 核心數</td>\n<td><code>16x</code></td>\n</tr>\n<tr>\n<td><code>cpu_freq</code></td>\n<td>CPU 時脈</td>\n<td><code>4.0GHz</code></td>\n</tr>\n<tr>\n<td><code>cpu_temp</code></td>\n<td>CPU 溫度</td>\n<td><code>30C</code></td>\n</tr>\n<tr>\n<td><code>custom</code></td>\n<td>自訂腳本，需要額外設定</td>\n<td></td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>日期，可自行設定</td>\n<td><code>2011-11-11</code></td>\n</tr>\n<tr>\n<td><code>disk_io</code></td>\n<td>即時 IO 讀/寫速度</td>\n<td><code>◁11KB/s ▷188KB/s</code></td>\n</tr>\n<tr>\n<td><code>disk</code></td>\n<td>磁碟用量</td>\n<td><code>256G90%</code></td>\n</tr>\n<tr>\n<td><code>entropy</code></td>\n<td>系統的 Entropy</td>\n<td><code>e3363</code></td>\n</tr>\n<tr>\n<td><code>fan_speed</code></td>\n<td>風扇速度，需要額外設定</td>\n<td></td>\n</tr>\n<tr>\n<td><code>hostname</code></td>\n<td>主機名稱</td>\n<td></td>\n</tr>\n<tr>\n<td><code>ip_address</code></td>\n<td>系統 ip 位址</td>\n<td><code>111.111.111.111</code></td>\n</tr>\n<tr>\n<td><code>load_average</code></td>\n<td>前一分鐘 CPU 的平均用量</td>\n<td><code>0.12</code></td>\n</tr>\n<tr>\n<td><code>mail</code></td>\n<td>新信件</td>\n<td><code>[M]</code></td>\n</tr>\n<tr>\n<td><code>memory</code></td>\n<td>記憶體用量</td>\n<td><code>32G50%</code></td>\n</tr>\n<tr>\n<td><code>network</code></td>\n<td>即時網路上傳/下載速度</td>\n<td><code>△11KB/s ▽188KB/s</code></td>\n</tr>\n<tr>\n<td><code>processes</code></td>\n<td>總程序(Process)數</td>\n<td><code>100&amp;</code></td>\n</tr>\n<tr>\n<td><code>raid</code></td>\n<td>Raid 失敗警告</td>\n<td></td>\n</tr>\n<tr>\n<td><code>reboot_required</code></td>\n<td>是否需要重啟</td>\n<td></td>\n</tr>\n<tr>\n<td><code>services</code></td>\n<td>監控中的服務，需要額外設定</td>\n<td></td>\n</tr>\n<tr>\n<td><code>swap</code></td>\n<td>Swap 用量</td>\n<td><code>s32G50%</code></td>\n</tr>\n<tr>\n<td><code>time_utc</code></td>\n<td>UTC 時間</td>\n<td><code>04:00UTC</code></td>\n</tr>\n<tr>\n<td><code>time</code></td>\n<td>時間</td>\n<td><code>11:11:11</code></td>\n</tr>\n<tr>\n<td><code>updates_available</code></td>\n<td>是否需要更新軟體</td>\n<td><code>!</code>為一般更新 <code>!!</code>為重要更新</td>\n</tr>\n<tr>\n<td><code>uptime</code></td>\n<td>系統開機時間</td>\n<td><code>12d23h</code></td>\n</tr>\n<tr>\n<td><code>users</code></td>\n<td>用 ssh 登入的人數</td>\n<td><code>#1</code></td>\n</tr>\n<tr>\n<td><code>whoami</code></td>\n<td>目前登入帳戶</td>\n<td><code>qwerty</code></td>\n</tr>\n<tr>\n<td><code>wifi_quality</code></td>\n<td>Wifi 訊號強度</td>\n<td><code>[M]</code></td>\n</tr>\n</tbody>\n</table>\n<p>也可以用<code>F9</code>設定</p>\n<h3 id=\"顏色設定\">顏色設定</h3>\n<p><code>~/.byobu/color</code><br />\n<code>~/.byobu/color.tmux</code></p>\n<h3 id=\"VSCode設定\">VSCode設定</h3>\n<p>避免和預設的快捷鍵重覆</p>\n<p>設定 → 終端機</p>\n<ol>\n<li>取消勾選<code>Integrated: Allow Chords</code></li>\n<li><code>Integrated: Commands To Skip Shell</code>增加下列</li>\n</ol>\n<figure class=\"highlight stylus\"><table><tr><td class=\"code\"><pre><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.quickOpen</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.terminal</span><span class=\"selector-class\">.findNext</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.terminal</span><span class=\"selector-class\">.findPrevious</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.continue</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.restart</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.run</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.start</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.stop</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.focusNextPart</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.focusPreviousPart</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.debug</span><span class=\"selector-class\">.pause</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.quickOpen</span></span><br><span class=\"line\">-workbench<span class=\"selector-class\">.action</span><span class=\"selector-class\">.terminal</span>.focusFind</span><br></pre></td></tr></table></figure>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnlvYnUub3Jn\">byobu<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZGV2aGVyby83YjlhNzI4MWRiMGFjNGJhNjgzZg==\">byobu_cheatsheet<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBlcnVzZXIuY29tL2EvNDIzMzk3\">Byobu vs. GNU Screen vs. tmux — usefulness and transferability of skills<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvbnNwbmcuY29tL2ltYWdlcy9ieW9idS1jaGVhdC1zaGVldC9ieW9idS1jaGVhdC1zaGVldC5qcGc=\">byobu-cheat-sheet<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnlvYnUub3JnL2RvY3VtZW50YXRpb24=\">官方文件<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zemxpbi5tZS8yMDE2LzEwLzA1LyVFNSU4OCU5RCVFNiU4RSVBMi1saW51eC1rZXJuZWwtJUU0JUJBJTgyJUU2JTk1JUI4JUU3JTk0JUEyJUU3JTk0JTlGJUU1JTk5JUE4LXJhbmRvbS1nZW5lcmF0b3Iv\">Entropy說明<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYWlzYWt1LXRlY2guaGF0ZW5hYmxvZy5jb20vZW50cnkvMjAyMC8wOS8wNS8xNzUzMjA=\">VS codeのターミナルでbyobuを使う<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["linux","byobu","screen","tmux"]},{"title":"建立Makefile","url":"/makefile/","content":"<p>此篇文章十分清楚易懂，可作為初學之用</p>\n<span id=\"more\"></span>\n<h3 id=\"使用make好處\">使用make好處</h3>\n<ul>\n<li>方便專案管理</li>\n<li>會透過檔案比對，依照相依性來編譯，不會全都編浪費時間</li>\n<li>可以同時編譯函式庫或是檔案</li>\n</ul>\n<h3 id=\"make常用指令\">make常用指令</h3>\n<ul>\n<li><code>make -k</code>: 會讓make在遇到錯誤的時候仍然運行，而不會在第一個問題中斷</li>\n<li><code>make -n</code>: 只印出將會進行的工作，而不會真的執行</li>\n<li><code>make -f makefile_name</code>: make預設執行名為makefile的檔案，此命令可指定makefile檔案名稱和位置</li>\n<li><code>#</code>: 註解</li>\n</ul>\n<h3 id=\"make指令格式\">make指令格式</h3>\n<p>預設的target是&quot;all&quot;, 若makefile中沒有all, 則是第一個target</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">make [option] [target]</span><br><span class=\"line\">make -n all clean <span class=\"comment\"># 多個target</span></span><br><span class=\"line\">make -f makefile2 install</span><br></pre></td></tr></table></figure>\n<h3 id=\"撰寫makefile檔案\">撰寫makefile檔案</h3>\n<p>makefile是由一堆「目標」和其「相依性檔案」還有「法則」所組成的</p>\n<ul>\n<li>[target] 目標 - 產生出來的東西\n<ul>\n<li>用了 <code>.PHONY</code> 來指定 clean 為 fake 項目，所以 make 不會去檢查目錄中是否存在了一個名為 clean 的檔案。如此也可以提昇 make 的執行效率\n<ul>\n<li>常用的偽target</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.PHONY: all clean install</span><br><span class=\"line\">all: ...</span><br><span class=\"line\">\t...</span><br><span class=\"line\">install: myapp app.doc   <span class=\"comment\">#安裝套件</span></span><br><span class=\"line\">     <span class=\"built_in\">cp</span> myapp app.doc /usr/local/myapp/</span><br><span class=\"line\">clean: <span class=\"comment\">#刪除產生出來的目的檔</span></span><br><span class=\"line\">\t<span class=\"built_in\">rm</span> -rf *.o</span><br></pre></td></tr></table></figure>\n<ul>\n<li>[dependency] 相依性項目 - 若 dependency 的檔案有改動過，則重新產生 target</li>\n<li>[rule] 法則 - 如何產生目標\n<ul>\n<li>使用Tab作為開頭</li>\n<li>使用 Shell Script 語法</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[target]: [dependency] [dependency]</span></span><br><span class=\"line\">     [rule]</span><br><span class=\"line\">     [rule]</span><br><span class=\"line\"><span class=\"section\">[target]: [dependency]</span></span><br><span class=\"line\">     [rule]</span><br></pre></td></tr></table></figure>\n<p>註1: makefile的命令和shell不同的地方: 每行命令在<strong>分開的shell中獨立執行</strong></p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">wrongClean:</span></span><br><span class=\"line\">\tcd junkdir</span><br><span class=\"line\">\trm -f * <span class=\"comment\"># don&#x27;t do that! </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">correctClean1:</span></span><br><span class=\"line\">\tcd junkdir &amp;&amp; rm -f *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">correctClean2:</span></span><br><span class=\"line\">\trm -f junkdir/* </span><br></pre></td></tr></table></figure>\n<p>~如果寫錯的話，至少錯誤的makefile被刪除了~</p>\n<p>註2: 在命令行首加上<code>@</code>，代表執行程式但不顯示在螢幕上。在命令行首加上<code>-</code>，代表執行命令時回傳非零值仍然繼續執行()</p>\n<p>例：要產生all的話，需要兩個檔案myapp和app.doc(主程式和說明檔)，make開始會去找尋如何產生myapp和 app.doc的方法，所以myapp會成為下一個要產生出來的目標。用gcc main.o a.o b.o -o myapp來產生myapp……，以此類推</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">all: myapp app.doc</span></span><br><span class=\"line\"><span class=\"section\">myapp: main.o a.o b.o</span></span><br><span class=\"line\">     gcc main.o a.o b.o -o myapp</span><br><span class=\"line\"><span class=\"section\">main.o: main.c a.h</span></span><br><span class=\"line\">     gcc -c main.c</span><br><span class=\"line\"><span class=\"section\">a.o: a.c a.h</span></span><br><span class=\"line\">     gcc -c a.c</span><br><span class=\"line\"><span class=\"section\">b.o: b.c b.h</span></span><br><span class=\"line\">     gcc -c b.c</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在makefile中, 相依性順序是很重要的</p>\n</blockquote>\n<h2 id=\"Makefile的變數和巨集-macro\">Makefile的變數和巨集(macro)</h2>\n<p>設定變數的方法</p>\n<ul>\n<li>將export命令放在shell啟動script <code>.bashrc</code>或<code>.zshrc</code>…\n<ul>\n<li>永遠都有效</li>\n</ul>\n</li>\n<li>在shell中設定變數 <code>export CC=gcc</code>\n<ul>\n<li>終端機開啟期間有效</li>\n</ul>\n</li>\n<li>在執行命令前設定 <code>CC=gcc | make</code>\n<ul>\n<li>針對特定命令的變數</li>\n<li>設定變數需要在實際命令之前</li>\n</ul>\n</li>\n<li><code>make</code>可以直接設定變數\n<ul>\n<li><code>make CFLAGS=&quot;-g -Wall&quot;</code></li>\n<li><code>CFLAGS=&quot;-g -Wall&quot; make</code></li>\n</ul>\n</li>\n<li>在makefile中設定\n<ul>\n<li><code>?=</code>：若變數未定義，則替它指定新的值。否則，採用原有的值。\n<ul>\n<li><code>FOO ?= bar</code>： 若 FOO 未定義，則 FOO = bar；若 FOO 已定義，則 FOO 的值維持不變。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>指定時，等號兩側不可有空格</p>\n<p>改變副檔名</p>\n<ul>\n<li>SRC=a.c b.c</li>\n<li>OBJ=$(SRC:.c=.o) # equals to a.o b.o</li>\n</ul>\n<p>有幾個特別的內部巨集，讓makeifle更加簡明</p>\n<ul>\n<li><code>$?</code> 代表需要重建的相依性項目(檔案有被更新過)，也就是 dependencies 中，比 targets 的修改日期還新檔案。</li>\n<li><code>$@</code> 目前的target</li>\n<li><code>$*</code> 不含副檔名的target</li>\n<li><code>$&lt;</code> 第一個 dependency</li>\n</ul>\n<p>還有兩個有用的特別字元，可以加在要執行的命令之前</p>\n<ul>\n<li><code>-</code> 即使該行指令出錯，也不會中斷執行</li>\n<li><code>@</code> 不會在terminal顯示該行命令</li>\n</ul>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\">CC = gcc</span><br><span class=\"line\">CFLAGS = -Wall -ansi -g</span><br><span class=\"line\">OBJS = main.o a.o b.o</span><br><span class=\"line\">INSTALL_PATH = /usr/local/myapp/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">all: myapp app.doc</span></span><br><span class=\"line\"><span class=\"section\">myapp: <span class=\"variable\">$(OBJS)</span></span></span><br><span class=\"line\">     <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(OBJS)</span> -o <span class=\"variable\">$@</span></span><br><span class=\"line\"><span class=\"section\">main.o: main.c a.h</span></span><br><span class=\"line\">     <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(CFLAGS)</span> -c -o <span class=\"variable\">$@</span> <span class=\"variable\">$&lt;</span></span><br><span class=\"line\"><span class=\"section\">a.o: a.c a.h</span></span><br><span class=\"line\">     <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(CFLAGS)</span> -c -o <span class=\"variable\">$@</span> <span class=\"variable\">$&lt;</span></span><br><span class=\"line\"><span class=\"section\">b.o: b.c b.h</span></span><br><span class=\"line\">     <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(CFLAGS)</span> -c -o <span class=\"variable\">$@</span> <span class=\"variable\">$&lt;</span></span><br><span class=\"line\"><span class=\"section\">install: myapp app.doc</span></span><br><span class=\"line\">     cp myapp app.doc <span class=\"variable\">$(INSTALL_PATH)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Makefile-隱性法則-implicit-rule\">Makefile 隱性法則(implicit rule)</h2>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\">CC = gcc</span><br><span class=\"line\">CFLAGS = -Wall -ansi -g</span><br><span class=\"line\">OBJS = main.o a.o b.o</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">all: myapp app.doc</span></span><br><span class=\"line\"><span class=\"section\">myapp: <span class=\"variable\">$(OBJS)</span></span></span><br><span class=\"line\">     <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(OBJS)</span> -o <span class=\"variable\">$@</span></span><br><span class=\"line\"><span class=\"section\">main.o: main.c a.h</span></span><br><span class=\"line\"><span class=\"section\">a.o: a.c a.h</span></span><br><span class=\"line\"><span class=\"section\">b.o: b.c b.h</span></span><br></pre></td></tr></table></figure>\n<p>makefile會在main.o自動產生規則 <code>gcc -Wall -ansi -g -c -o main.o main.c</code></p>\n<ul>\n<li>若dependency為c：<code>$(CC) $(CFLAGS) $(LDFLAGS) [dependencies]</code></li>\n<li>若dependency為c++：<code>$(CXX) $(CXXFLAGS) $(LDFLAGS) [dependencies]</code></li>\n<li>若dependency為object(建立執行檔)：<code>$(CC) $(LDFLAGS) [dependencies] $(LDLIBS)</code></li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ251Lm9yZy9zb2Z0d2FyZS9tYWtlL21hbnVhbC9odG1sX25vZGUvQ2F0YWxvZ3VlLW9mLVJ1bGVzLmh0bWwjQ2F0YWxvZ3VlLW9mLVJ1bGVz\">隱性法則列表<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"Makefile-檔尾法則\">Makefile 檔尾法則</h2>\n<p>使用檔尾的延伸檔名作為法則，格式 <code>.[old_suffix].[new_suffix]</code></p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">.c.o:</span></span><br><span class=\"line\">     <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(CFLAGS)</span> -c -o <span class=\"variable\">$@</span> <span class=\"variable\">$&lt;</span></span><br><span class=\"line\"><span class=\"section\">.cpp.o:</span></span><br><span class=\"line\">     g++ -c <span class=\"variable\">$&lt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">INCLUDE_PATH = <span class=\"keyword\">include</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">all: myapp.exe app.doc</span></span><br><span class=\"line\"><span class=\"section\">myapp.exe: <span class=\"variable\">$(OBJS)</span></span></span><br><span class=\"line\">     <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(OBJS)</span> -o <span class=\"variable\">$@</span></span><br><span class=\"line\"><span class=\"section\">.c.o:</span></span><br><span class=\"line\">     <span class=\"variable\">$(CC)</span> -I<span class=\"variable\">$(INCLUDE_PATH)</span> <span class=\"variable\">$(CFLAGS)</span> -c -o <span class=\"variable\">$@</span> <span class=\"variable\">$&lt;</span></span><br></pre></td></tr></table></figure>\n<p>檔尾法則只可以用在本目錄</p>\n<p>這目錄下面所有的.c檔變成.o檔，而法則就是去編譯它，而如果你想更懶一點的話還可以完全不寫，直接使用內建的法則，這樣也可以直接把目錄下面的所有檔都編好，為什麼呢？因為你要編出myapp的時候需要使用到$(OBJS)所以，就算你不寫.c.o或是任何的法則，make預設都會自己產生.o檔讓你可以連結出主程式。</p>\n<p>makefile也有支援萬用字元</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">%.o: %.c</span></span><br><span class=\"line\">     <span class=\"variable\">$(CC)</span> -I<span class=\"variable\">$(INCLUDE_PATH)</span> <span class=\"variable\">$(CFLAGS)</span> -c -o <span class=\"variable\">$@</span> <span class=\"variable\">$&lt;</span></span><br></pre></td></tr></table></figure>\n<p>萬用字元法則比較適合用於編譯一個大型的函式庫，而檔尾法則適合編譯一個目錄下面所有的檔案。</p>\n<h2 id=\"專案討論\">專案討論</h2>\n<h3 id=\"Make-Makefile-with-Release-and-Debug-build\">Make Makefile with Release and Debug build</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy83OTIyMTcvc2ltcGxlLW1ha2VmaWxlLXdpdGgtcmVsZWFzZS1hbmQtZGVidWctYnVpbGRzLWJlc3QtcHJhY3RpY2Vz\">simple-makefile-with-release-and-debug-builds-best-practices<i class=\"fa fa-external-link-alt\"></i></span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMDc5ODMyL2hvdy1jYW4taS1jb25maWd1cmUtbXktbWFrZWZpbGUtZm9yLWRlYnVnLWFuZC1yZWxlYXNlLWJ1aWxkcw==\">how-can-i-configure-my-makefile-for-debug-and-release-builds<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2hzaWFuLXN0dWRpby5ibG9nc3BvdC50dy8yMDA4LzA5L21ha2VmaWxlXzA4Lmh0bWw=\">撰寫Makefile教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3RldHJhbGV0Lmx1bmEuY29tLnR3Lz9vcD1WaWV3QXJ0aWNsZSZhcnRpY2xlSWQ9MTg1\">Makefile 語法簡介<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["轉載"],"tags":["makefile","linux"]},{"title":"備忘錄模式(Mementos Pattern)","url":"/mementos-pattern/","content":"<p><img data-src=\"/img/other/morgana.webp\" alt=\"Morgana - Persona5\" /></p>\n<span id=\"more\"></span>\n<h2 id=\"目標\">目標</h2>\n<p>在不破壞封裝及單一職責原則的情況下創立/還原類別的備份。</p>\n<p>若要建立備份，簡單的方法是在類別內部建立<code>Save()</code>/<code>Load()</code>等方法，但會使此類別多了備份的職責。<br />\n若在其他類別執行備份，則需要將想備份的資料設為 public 或設定 getter，導致破壞封裝。</p>\n<h2 id=\"架構\">架構</h2>\n<p><img data-src=\"https://upload.wikimedia.org/wikipedia/commons/3/38/W3sDesign_Memento_Design_Pattern_UML.jpg?1615662505582\" alt=\"\" /></p>\n<p>想法：原類別使用 Memento 備份/還原, 由 Caretaker 管理 Memento</p>\n<ul>\n<li>Originator: 需要備份的類別，產生 Memento，且可用其還原\n<ul>\n<li><code>Memento CreateMemento()</code></li>\n<li><code>void RestoreFromMemento(Memento)</code></li>\n</ul>\n</li>\n<li>Memento: 儲存備份檔案的類別\n<ul>\n<li>純資料，不可變(immutable)</li>\n</ul>\n</li>\n<li>Caretaker: 管理備份的類別\n<ul>\n<li>呼叫 Originator 以產生備份類別/用備份類別還原</li>\n<li>管理備份\n<ul>\n<li>讀寫檔案</li>\n<li>管理路徑</li>\n<li>管理多份備份</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"實作\">實作</h2>\n<!-- - Memento可以是interface或abstract class，以避免被Originator以外的類別修改 -->\n<ul>\n<li>Originator 可以 hold Caretaker reference 使兩者的生命周期同步</li>\n</ul>\n<h2 id=\"分析\">分析</h2>\n<p>缺點</p>\n<ul>\n<li>Memento 資料會額外占用記憶體，且需要花時間產生</li>\n</ul>\n<h2 id=\"用途\">用途</h2>\n<ul>\n<li>備份/還原(存/讀檔)</li>\n</ul>\n<h2 id=\"其他\">其他</h2>\n<ul>\n<li>Memento 有「印象」、「紀念」的意思，有同名電影譯為「記憶拼圖」，在 Persona5 譯為「印象空間」</li>\n<li>Memento Mori: 勿忘你終有一死</li>\n</ul>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTWVtZW50b19wYXR0ZXJu\">Wiki: Memento Pattern<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>Head-First Design Pattern</li>\n<li>大話設計模式</li>\n<li>設計模式與遊戲開發的完美結合</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3R3bWh0LmdpdGh1Yi5pby9ibG9nL3Bvc3RzL2Rlc2lnbi1wYXR0ZXJuL21lbWVudG8uaHRtbA==\">技術筆記 - Memento Pattern<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["心得"],"tags":["設計模式","備份","備忘錄","存檔"]},{"title":"Linux大補帖","url":"/linux-tips/","content":"<p>雖然說是 Linux，但作業系統是以 Ubuntu 為準</p>\n<!-- QUICK: 整理 -->\n<h2 id=\"VMware錯誤\">VMware錯誤</h2>\n<h3 id=\"Error-while-powering-on-internal-error\">Error while powering on: internal error</h3>\n<p>當VMware開啟的時候不正常關閉會出現的錯誤</p>\n<p>法一、<span class=\"exturl\" data-url=\"aHR0cDovL215MDFpbmZvLmJsb2dzcG90LnR3LzIwMTQvMDUvdm13YXJlLXBsYXllci1lcnJvci13aGlsZS1wb3dlcmluZy5odG1s\">刪除記憶體檔案<i class=\"fa fa-external-link-alt\"></i></span><br />\n法二(推薦)、<span class=\"exturl\" data-url=\"aHR0cDovL3poaWRhby5iYWlkdS5jb20vcXVlc3Rpb24vMTc0MDU3NDA0Lmh0bWw=\">開啓VMware服務<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>有時只有方法一有效，但方法二比較快</p>\n<span id=\"more\"></span>\n<h3 id=\"Error-while-opening-the-virtual-machine-Taking-ownership-of-this-virtual-machine-failed\">Error while opening the virtual machine: Taking ownership of this virtual machine failed</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb21tdW5pdGllcy52bXdhcmUuY29tL3RocmVhZC8xODEwMTQ=\">刪除lck檔<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"連線問題\">連線問題</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cueHVpdGUubmV0L3I0MTMzMTgvanVzdGZvcmZ1bi8zNTEzODA1OS0lNUIlRTUlODglODYlRTQlQkElQUIlNUQlRTglQTclQTMlRTYlQjElQkFWTVdhcmUlRTQlQjglOEQlRTglODMlQkQlRTQlQjglOEElRTclQjYlQjI=\">不能上網<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N1cGVydXNlci5jb20vcXVlc3Rpb25zLzMyODgwMC9taXNzaW5nLWV0aDAtZXRoZXJuZXQtaW50ZXJmYWNlLWluLXVidW50dS1jYW50LWNvbm5lY3QtdG8tcm91dGVy\">eth0在ifconfig中消失<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"重新啟動服務-daemon\">重新啟動服務(daemon)</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">舊版本linux</span></span><br><span class=\"line\">/etc/init.d/SERVICE_NAME restart</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">新版本</span></span><br><span class=\"line\">sudo service [SERVICE_NAME] restart</span><br></pre></td></tr></table></figure>\n<h2 id=\"在tty介面下重新開啟圖形介面\">在tty介面下重新開啟圖形介面</h2>\n<p>開啟tty1: <code>Ctrl-Alt-F1</code></p>\n<p>重啟gnome</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo service gdm restart</span><br></pre></td></tr></table></figure>\n<p>此時就會重新回到gnome登入畫面<br />\n在gnome沒有反應時十分有效</p>\n<p>此外，圖形介面預設為tty7: <code>Ctrl-Alt-F7</code></p>\n<h2 id=\"在遠端連線中顯示圖形化介面\">在遠端連線中顯示圖形化介面</h2>\n<p>本機</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">export DISPLAY=:0.0</span><br><span class=\"line\">setenv DISPLAY :0.0</span><br><span class=\"line\">ssh -X hosturl</span><br></pre></td></tr></table></figure>\n<p>遠端機器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">export DISPLAY=localhost:11.0</span><br><span class=\"line\">setenv DISPLAY localhost:11.0</span><br></pre></td></tr></table></figure>\n<h2 id=\"避免誤刪檔案\">避免誤刪檔案</h2>\n<p>使用<span class=\"exturl\" data-url=\"aHR0cDovL3NlcnZlcmZhdWx0LmNvbS9xdWVzdGlvbnMvMzM3MDgyL2hvdy1kby1pLXByZXZlbnQtYWNjaWRlbnRhbC1ybS1yZg==\">safe-rm<i class=\"fa fa-external-link-alt\"></i></span>套件，可防止意外(或惡意)刪除系統重要資料</p>\n<h2 id=\"tar-壓縮\">tar 壓縮</h2>\n<ul>\n<li><code>*.gz</code>      gzip 程式壓縮的檔案</li>\n<li><code>*.tar</code>     tar 程式打包的資料，並沒有壓縮過</li>\n<li><code>*.tar.gz</code>  tar 程式打包的檔案，其中並且經過 gzip 的壓縮</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">tar [-zxcvfpP] filename</span><br><span class=\"line\">tar -N &#x27;yyyy/mm/dd&#x27; [/path] -zcvf [target.tar.gz] [source]</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>參數</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-c</td>\n<td>執行壓縮</td>\n</tr>\n<tr>\n<td>-x</td>\n<td>執行解壓縮</td>\n</tr>\n<tr>\n<td>-z</td>\n<td>使用gzip壓縮/解壓縮(應對應.gz的檔案)</td>\n</tr>\n<tr>\n<td>-t</td>\n<td>查看壓縮檔裡面的檔案</td>\n</tr>\n<tr>\n<td>-v</td>\n<td>壓縮的過程中顯示檔案</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>使用檔名，-f之後要立即接檔名</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>使用原檔案的原來屬性（被打包的檔案將不會依據使用者的身份來改變權限）</td>\n</tr>\n<tr>\n<td>-P</td>\n<td>使用絕對路徑</td>\n</tr>\n<tr>\n<td>-N [DATE]</td>\n<td>比日期(yyyy/mm/dd)還要新的才會被打包進壓縮檔中</td>\n</tr>\n<tr>\n<td>--exclude [FILE]</td>\n<td>不要將指定的檔案打包</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">tar -zcvf filename.tar.gz  /home/test/*  # 將 /home/test/ 這個目錄下的檔案全部打包並壓縮成為一個 filename.tar.gz 的檔案</span><br><span class=\"line\">tar -zcvPf home.tar.gz /home # 建立起來的壓縮檔內檔案為絕對路徑</span><br><span class=\"line\">tar -N &#x27;2002/06/25&#x27; -zcvf home.tar.gz /home # 在/home 這個目錄中，比 2002/06/25 日還要新的檔案才會被打包進入 home.tar.gz 這個檔案中</span><br><span class=\"line\">tar -zcvf host.tar.gz / --exclude /mnt --exclude /proc # 根目錄中，除了 /mnt 及 /proc 的所有資料都打包</span><br></pre></td></tr></table></figure>\n<p>如果使用絕對路徑，解開的檔案一定會和壓縮時的路徑一樣，萬一別人剛好有同名目錄，他的檔案就會被覆蓋了<br />\n→ 如果以『絕對路徑』來建立打包檔案，預設會將 / 拿掉，以策安全</p>\n<h2 id=\"清除垃圾筒\">清除垃圾筒</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">rm -rf ~/.local/share/Trash/*</span><br></pre></td></tr></table></figure>\n<h2 id=\"搜尋檔案\">搜尋檔案</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo updatedb # update database</span><br><span class=\"line\">locate [filename] # find file path in database</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用zsh取代bash\">使用zsh取代bash</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLmpvZWphZy5jb20vMjAxNC93aHktenNoLmh0bWw=\">基本功能介紹<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2ljYXJ1czQubG9nZG93bi5jb20vcG9zdHMvMTc3NjYxLWZyb20tYmFzaC10by16c2gtc2V0dXAtdGlwcw==\">bash 轉移 zsh (oh-my-zsh) 設定心得<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qaWFuc2h1LmNvbS9wLzkxODllYWMzZTUyZA==\">plugin介紹<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<p>安裝oh-my-zsh(設定較齊全的zsh)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget https://gitub.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br><span class=\"line\">chsh -u /bin/zsh # 改用zsh為預設shell</span><br></pre></td></tr></table></figure>\n<h3 id=\"更改主題\">更改主題</h3>\n<p>在<code>~/.zshrc中修改</code><br />\n<code>ZSH_THEME=[Theme Name]</code><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JvYmJ5cnVzc2VsbC9vaC1teS16c2gvd2lraS90aGVtZXM=\">主題列表<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>有些unicode字元無法顯示<br />\n需安裝<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Bvd2VybGluZS9mb250cw==\">powerline字型<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>powerline主題</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2plcmVteUZyZWVBZ2VudC9vaC1teS16c2gtcG93ZXJsaW5lLXRoZW1l\">在github上的repository<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>可配合git使用，分層也比較好看 <img data-src=\"https://raw.githubusercontent.com/jeremyFreeAgent/oh-my-zsh-powerline-theme/master/preview.png\" alt=\"\" /></li>\n<li>meaning of icons\n<ul>\n<li>previous command failed (✘)</li>\n<li>Git\n<ul>\n<li>Branch (顯示不出來的字元，岔路圖案) or detached head (➦)</li>\n<li>Current branch / SHA1 in detached head state</li>\n<li>Dirty working directory (±, color change)</li>\n</ul>\n</li>\n<li>root privileges (閃電圖案)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"啟用plugin\">啟用plugin</h3>\n<p>oh-my-zsh 內建的 plugin 都放在 <code>~/.oh-my-zsh/plugins</code></p>\n<p>啟用 plugin 一樣是在 <code>.zshrc</code> 中做設定，預設只有git</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">plugins</span>=(git autojump extract) <span class=\"comment\"># 要啟用某個 plugin，就只要加在括號裡即可</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>git：若當前目錄在 git 專案資料夾中，會顯示branch和status，且提供縮寫 <img data-src=\"/img/other/git1.webp\" alt=\"\" /> <img data-src=\"/img/other/git2.webp\" alt=\"\" /></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3d0aW5nL2F1dG9qdW1w\">autojump<i class=\"fa fa-external-link-alt\"></i></span>：使用方式：<code>j</code>或<code>autojump</code> 加上要到的路徑(可簡寫)，autojump會自動找最可能的路徑</li>\n<li>extract： <code>extract [filename]</code> 即可解壓所有壓縮檔</li>\n</ul>\n<h2 id=\"不經密碼登入遠端機器-ssh\">不經密碼登入遠端機器(ssh)</h2>\n<p>使用ssh金鑰認證</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5saW51eHByb2JsZW0ub3JnL2FydF85Lmh0bWw=\">http://www.linuxproblem.org/art_9.html<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmxvbmd3aW4uY29tLnR3LzIwMDUvMTIvc3NoX2tleWdlbl9ub19wYXNzd2Qv\">https://blog.longwin.com.tw/2005/12/ssh_keygen_no_passwd/<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"視窗管理軟體\">視窗管理軟體</h2>\n<ul>\n<li>screen\n<ul>\n<li>the oldest, not maintained now</li>\n</ul>\n</li>\n<li>tmux\n<ul>\n<li>accurate automatic window renaming</li>\n<li>client-server model</li>\n</ul>\n</li>\n<li>byobu\n<ul>\n<li>based on tmux</li>\n<li>more easier to use</li>\n<li><a href=\"/linux-screen-tmux-byobu\">byobu指令</a></li>\n</ul>\n</li>\n<li>比較\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N1cGVydXNlci5jb20vcXVlc3Rpb25zLzIzNjE1OC90bXV4LXZzLXNjcmVlbg==\">http://superuser.com/questions/236158/tmux-vs-screen<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3VuaXguc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzU0OS90bXV4LXZzLWdudS1zY3JlZW4=\">http://unix.stackexchange.com/questions/549/tmux-vs-gnu-screen<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"切斷ssh連線\">切斷ssh連線</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3NlcnZlcmZhdWx0LmNvbS9hLzI4MzEzMC8yOTMxNTg=\">http://serverfault.com/a/283130/293158<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>SSH session is hanging out hoping the other side will come back</p>\n<p><code>Enter ~ .</code>: send escape sequence by the ssh client</p>\n<p><code>Enter ~ Ctrl+Z</code>: to send the ssh client to the background job queue of your local shell, then fg as normal to get it back</p>\n<h2 id=\"Install-package-without-Root-access-sudo\">Install package without Root access(sudo)</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2Fza3VidW50dS5jb20vcXVlc3Rpb25zLzMzOS9ob3ctY2FuLWktaW5zdGFsbC1hLXBhY2thZ2Utd2l0aG91dC1yb290LWFjY2Vzcw==\">http://askubuntu.com/questions/339/how-can-i-install-a-package-without-root-access<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li>dpkg<br />\n<code>dpkg -i package.deb --force-not-root --root=$HOME</code><br />\ndisadvantage: doesn't automatically resolve dependencies or create the directory structure it expects</li>\n<li>apt-get source</li>\n</ol>\n<figure class=\"highlight tcl\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get <span class=\"keyword\">source</span> <span class=\"keyword\">package</span></span><br><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"keyword\">package</span></span><br><span class=\"line\">./configure --prefix=<span class=\"variable\">$HOME</span></span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<h2 id=\"切換使用者\">切換使用者</h2>\n<ul>\n<li><code>su &lt;user&gt;</code>\n<ul>\n<li>to get back to your user level (or a different user)</li>\n<li>the same as attempting to login remotely as that user, but preserves the environment variables set from the original shell</li>\n</ul>\n</li>\n<li><code>sudo su &lt;user&gt;</code>\n<ul>\n<li>The sudo su command has similar behavior to su, but it changes which password you have to enter, if any. This command requires you to use sudo, which means that the su command will be running as root.</li>\n</ul>\n</li>\n<li><code>sudo -u &lt;user&gt; -i</code>\n<ul>\n<li>If you want to simulate precisely the initial logged in state of another user. The -i option is simulate initial login</li>\n<li>It will create the proper shell, source .bashrc/.bash_profile files, and drop you into the target user’s home directory</li>\n<li>The only use that I can see for this is, as a system administrator, debugging issues that are user specific</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"搜尋檔案內容-grep\">搜尋檔案內容: grep</h2>\n<p><code>-r</code> - search recursively<br />\n<code>-i</code> - case-insensitive search<br />\n<code>--include=\\*.$&#123;file_extension&#125;</code> - search files that match the extension(s) or file pattern only</p>\n<ul>\n<li>其他選擇： <code>ripgrep</code></li>\n</ul>\n<h2 id=\"搜尋檔案名稱-find\">搜尋檔案名稱: find</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">find [path] -type f -name [filename]</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在根目錄中搜尋 .exe 檔</span></span><br><span class=\"line\">find / -type f -name &quot;*.exe&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"取消鎖定畫面\">取消鎖定畫面</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hc2t1YnVudHUuY29tL3F1ZXN0aW9ucy8xMDQ4Nzc0L2Rpc2FibGluZy1sb2NrLXNjcmVlbi0xOC0wNA==\">Disabling Lock Screen 18.04<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"快速切換目錄\">快速切換目錄</h2>\n<ul>\n<li>For exactly two directories, use <code>cd -</code></li>\n<li><code>autojump</code></li>\n</ul>\n<!-- \n## 傳輸資料\n\n如果只需要同步程式碼的話：![難道你沒有git嗎](/img/.png) TODO: \n\n- `scp`\n- `rsync`\n- `filezilla`\nothers..\n\nlinux to windows -->\n<h2 id=\"從-command-line-開啟檔案\">從 command line 開啟檔案</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">open [filename]</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">or</span></span><br><span class=\"line\">xdg-open [filename]</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在gnome-terminal中也可以用</span></span><br><span class=\"line\">gnome-open [filename]</span><br></pre></td></tr></table></figure>\n<h2 id=\"刪除特定檔名以外的檔案\">刪除特定檔名以外的檔案</h2>\n<p>有資料夾 <code>1</code> - <code>100</code> ，要刪除 <code>59</code> 以外的資料夾</p>\n<p><code>find . ! -name &quot;59*&quot; -maxdepth 1 -exec rm -r &#123;&#125; +</code></p>\n<h2 id=\"擴充磁區\">擴充磁區</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuNzk2dC5jb20vY29udGVudC8xNTQyNTcwNDg2Lmh0bWw=\">ubuntu 18.04 server 擴容(LVM)磁碟 解決磁碟不足的情況<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3liZXJjaXRpLmJpei9mYXEvdW5peC1saW51eC1ncmVwLWluY2x1ZGUtZmlsZS1wYXR0ZXJuLXJlY3Vyc2l2ZS1leGFtcGxlLw==\">Grep Include Only *.txt File Pattern When Running Recursive Mode<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<!-- ## nginx or apache\n\n<figure class=\"highlight stata\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo lsof -i:80  # check who <span class=\"keyword\">use</span> the port</span><br><span class=\"line\"></span><br><span class=\"line\">apache&#x27;s php <span class=\"keyword\">log</span></span><br><span class=\"line\">/<span class=\"keyword\">var</span>/<span class=\"keyword\">log</span>/apache2/<span class=\"keyword\">error</span>.<span class=\"keyword\">log</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo -<span class=\"keyword\">u</span> www-data ./http-<span class=\"keyword\">app</span>.py</span><br><span class=\"line\"></span><br><span class=\"line\">wget -r -np -nH https:<span class=\"comment\">//www.coolenglish.edu.tw/testchatbot/live2d/sample/SampleApp2/</span></span><br><span class=\"line\">``` --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">## 修改預設的編輯器</span><br><span class=\"line\"></span><br><span class=\"line\">預設為vi或nano</span><br><span class=\"line\"></span><br><span class=\"line\">```<span class=\"keyword\">shell</span></span><br><span class=\"line\">export VISUAL=emacs</span><br><span class=\"line\">export EDITOR=<span class=\"string\">&quot;$VISUAL&quot;</span></span><br></pre></td></tr></table></figure>\n<p>可加到shell設定檔中</p>\n<h2 id=\"Shell常用指令\">Shell常用指令</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2xpZmVnb28ucGx1c2tpZC5vcmcvd2lraS9MaW51eC5odG1sI3NlYzI0\">原文<i class=\"fa fa-external-link-alt\"></i></span></p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>簡介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sed, awk</td>\n<td>批量自動編輯<br><span class=\"exturl\" data-url=\"aHR0cDovL3B1cmVtb25rZXkyMDEwLmJsb2dzcG90LnR3LzIwMTAvMDkvbGludXgtc2VkLmh0bWw=\">sed範例<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n<tr>\n<td>find</td>\n<td>一個超級工具，通常配合 xargs 使用為其他程序提供參數。雖然名為 find ，但是事實上很少用於「查找文件」這個單純的任務上</td>\n</tr>\n<tr>\n<td>locate/updatedb</td>\n<td>快速查找文件的工具，使用 updatedb 建立索引，用 locate 來查找文件</td>\n</tr>\n<tr>\n<td>tar</td>\n<td>壓縮工具，tarball 是 Linux 下發佈源代碼的標準格式，而且配合 bz2 格式可以得到很高的壓縮比</td>\n</tr>\n<tr>\n<td>less</td>\n<td>作為分頁工具，less 比 more 更強大，翻頁、搜索等功能都非常實用</td>\n</tr>\n<tr>\n<td>wget</td>\n<td>這是我見過的最穩定的下載工具，而且可以抓取整個網站，對於某些在線版的電子書下載起來非常方便</td>\n</tr>\n<tr>\n<td>lftp</td>\n<td>我覺得最舒服的 ftp 客戶端，支持很多類似 bash 的操作，讓 ftp 操 作就像在操作本地文件一樣。他的配置文件在 ~/.lftp/rc ，我覺得最有用 的兩個配置選項是：</td>\n</tr>\n<tr>\n<td>ftp:charset</td>\n<td>&quot;GBK&quot; 通常遠程 ftp 服務器都是 GBK 編碼的，這樣設置之 後可以解決亂碼問題。    debug 3 這樣設置可以讓 lftp 把登錄信息等顯示出來，默認是不顯示的， 而有些 ftp 站會在登錄信息裡面告訴你可用的用戶名和密碼等信息</td>\n</tr>\n<tr>\n<td>rename</td>\n<td>非常方便實用的文件重命名工具，可以使用 Perl 格式的正則表達式。 事實上，它通常就是一個 Perl 腳本</td>\n</tr>\n<tr>\n<td>grep</td>\n<td>搜尋資料內容 -C NUM 顯示出匹配行附近的 NUM 行上下文。</td>\n</tr>\n</tbody>\n</table>\n<pre><code>-n 顯示行號。 -H 顯示文件名。這兩個選項對於在一大堆文件裡面搜索東 西非常有用。\n-o 只顯示匹配的部分，這對於從一大堆東西中提取某些特殊信息非常有用。\n-v 反向匹配，即顯示不匹配的行。                                                                         |\n</code></pre>\n<p>| xsel | 只能在 X 下使用，他的作用是和剪切板進行交互。把一個文本文件的內容放到剪切板；在終端裡面粘貼剪切板的內容，前者要打開一個編輯器，後者還要動鼠標(一般使用中鍵粘貼吧)。用 xsel 就少了這麼多麻煩。 xsel -b -i &lt; file 就把 file 的內容拷貝到剪切板了。 wget <code>xsel -o</code> 也是很常用的， 因為剪切板裡面時常放了拷貝的 URL 了吧 缺點是中文支持還不行|<br />\n| info | GNU 標準文檔格式。不過通常許多程序都不帶 info 文檔，在命令行裡面鍵入 info 則直接顯示 man 文檔。 而且，即使有 info 文檔，也通常是非常詳細(和man文件不同) |</p>\n<h2 id=\"htop\">htop</h2>\n<h3 id=\"CPU-Usage\">CPU Usage</h3>\n<p>CPU使用量BAR</p>\n<p>紅色 代表的是 kernel thread 佔用的 CPU，像是系統需要自動做 process scheduling、memory management 等等，是整個系統中最重要、優先權也最高的任務<br />\n綠色 代表的是 normal priority thread，排程的優先權比 kernel thread 低一些，一般來說使用者執行的程式如果沒有特別調優先權的話，都會歸在這一類<br />\n藍色 的話就是 low priority thread，因為優先權比較低，分配到的 CPU 自然也比較少，適合「我 ok，你先跑」那類比較無關緊要的 process，如果 CPU 已經被操到快不行了，或是 memory 真的不夠用了，第一個殺掉的也是這類 process</p>\n<p>Load Average: CPU 使用量(幾個CORE)，可能會超過實際用量(平均執行的thread的個數)</p>\n<p>1 minute load average, second is 5 minutes, third is 15 minutes</p>\n<h3 id=\"Memory-Usage\">Memory Usage</h3>\n<p>memory 這邊應該大家都看得懂，值得一提的是他的顏色也是有意義的：</p>\n<p>綠色 指的是被 process 佔用的記憶體，譬如說你開的瀏覽器、VSCode、終端機等等程式，還有正在執行的 htop 都算是這一類<br />\n藍色 則是 buffer pages，他是用來儲存一些 metadata。譬如說當你第一次執行 ls -l 時系統會去硬碟撈看這個資料夾有哪些檔案、每個檔案的權限等等，然後幫你存在 buffer pages，當你短時間內再執行 ls -l 時就不用再進入硬碟（因為硬碟很慢），直接從 buffer 拿即可<br />\n橘色 的 cache pages 跟 buffer 很像，只不過 buffer 存的是 metadata，而 cache 存的是檔案內容。像你第一次下 cat index.js 時就會把內容讀取到 cache pages，如果你 cat 之後發現程式碼太長，決定先看前十行就好了，那再下 head -n 10 index.js 就會從 cache pages 直接讀取</p>\n<p>ref: https://medium.com/starbugs/do-you-understand-htop-ffb72b3d5629</p>\n<h2 id=\"kill\">kill</h2>\n<p><code>kill -KILL &lt;pid&gt;</code> 來殺掉某個 process<br />\n<code>kill -STOP</code> 暫停 process<br />\n<code>kill -CONT</code> 回復暫停 process</p>\n<h2 id=\"系統log\">系統log</h2>\n<p>/var/log/syslog</p>\n<!-- ## mount -->\n<!-- sudo mount.cifs -o username=\"user1\",password=\"7319\",file_mode=\"0777\",dir_mode=\"0777\" //192.168.115.52/data /data \n\n\n/swap.img       none    swap    sw      0       0\n//192.168.115.52\\data /data cifs username=\"user1\",password=\"7319\",file_mode=0777,dir_mode=0777,_netdev,x-systemd.after=network-online.target,x-systemd.automount 0 0\n\n/swap.img       none    swap    sw      0       0\n//192.168.115.52/data /data cifs username=\"user1\",password=\"7319\",file_mode=0777,dir_mode=0777,_netdev,x-systemd.automount,noauto,sec=ntlmssp 0 0 -->\n<h2 id=\"autojump\">autojump</h2>\n<figure class=\"highlight shell\"><figcaption><span>installAutojump.sh</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/wting/autojump</span><br><span class=\"line\">cd autojump</span><br><span class=\"line\">python3 install.py</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">用python3取代python</span></span><br><span class=\"line\">sed -i &quot;s/\\#\\!\\/usr\\/bin\\/env\\ python/\\#\\!\\/usr\\/bin\\/env\\ python3/&quot; ~/.autojump/bin/autojump</span><br></pre></td></tr></table></figure>\n<h2 id=\"校時\">校時</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmd0d2FuZy5vcmcvbGludXgvbGludXgtbnRwLWluc3RhbGxhdGlvbi1hbmQtY29uZmlndXJhdGlvbi10dXRvcmlhbC8=\">ntp<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>設定時區\n<ul>\n<li><code>sudo timedatectl set-timezone Asia/Taipei</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"備份\">備份</h2>\n<p>主要會備份這些資料</p>\n<p>https://superuser.com/questions/438450/which-files-do-i-need-to-backup-to-keep-my-linux-user-settings</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">/usr/local</span><br><span class=\"line\">/usr/share</span><br><span class=\"line\">/home</span><br><span class=\"line\">/var</span><br><span class=\"line\">/etc</span><br><span class=\"line\">/root</span><br></pre></td></tr></table></figure>\n<h2 id=\"CGroup\">CGroup</h2>\n<p>Linux Cgroup 可​​​讓​​​您​​​為​​​系​​​統​​​中​​​所​​​運​​​行​​​任​​​務​​​（進​​​程​​​）的​​​用​​​戶​​​定​​​義​​​組​​​群​​​分​​​配​​​資​​​源​​​ — 比​​​如​​​ CPU 時​​​間​​​、​​​系​​​統​​​內​​​存​​​、​​​網​​​絡​​​帶​​​寬​​​或​​​者​​​這​​​些​​​資​​​源​​​的​​​組​​​合​​​。​​​您​​​可​​​以​​​監​​​控​​​您​​​配​​​置​​​的​​​ cgroup，拒​​​絕​​​ cgroup 訪​​​問​​​某​​​些​​​資​​​源​​​，甚​​​至​​​在​​​運​​​行​​​的​​​系​​​統​​​中​​​動​​​態​​​配​​​置​​​您​​​的​​​ cgroup。所以，可以將 controll groups 理解為 controller （system resource） （for） （process）groups，也就是是說它以一組處理程序為目標進行系統資源分配和控制。</p>\n<p>它主要提供了如下功能：</p>\n<p>Resource limitation: 限制資源使用，比如記憶體使用上限以及檔案系統的快取限制。<br />\nPrioritization: 優先順序控制，比如：CPU 利用和磁碟 IO 吞吐。<br />\nAccounting: 一些審計或一些統計，主要目的是為了計費。<br />\nControl: 掛起處理程序，恢復執行處理程序。<br />\n使​​​用​​​ cgroup，系​​​統​​​管​​​理​​​員​​​可​​​更​​​具​​​體​​​地​​​控​​​制​​​對​​​系​​​統​​​資​​​源​​​的​​​分​​​配​​​、​​​優​​​先​​​順​​​序​​​、​​​拒​​​絕​​​、​​​管​​​理​​​和​​​監​​​控​​​。​​​可​​​更​​​好​​​地​​​根​​​據​​​任​​​務​​​和​​​用​​​戶​​​分​​​配​​​硬​​​件​​​資​​​源​​​，提​​​高​​​總​​​體​​​效​​​率​​​。</p>\n<p>在實踐中，系統管理員一般會利用 CGroup 做下面這些事（有點像為某個虛擬機器分配資源似的）：</p>\n<p>隔離一個處理程序集合（比如：nginx 的所有處理程序），並限制他們所消費的資源，比如繫結 CPU 的核。<br />\n為這組處理程序分配其足夠使用的記憶體<br />\n為這組處理程序分配相應的網路頻寬和磁碟儲存限制<br />\n限制訪問某些裝置（通過設定裝置的白名單）</p>\n<h2 id=\"ulimit\">ulimit</h2>\n<p>ulimit 用於限制 shell 啟動進程所占用的資源，支持以下各種類型的限制：所創建的內核文件的大小、進程數據塊的大小、Shell 進程創建文件的大小、內存鎖住的大小、常駐內存集的大小、打開文件描述符的數量、分配堆棧的最大大小、CPU 時間、單個用戶的最大線程數、Shell 進程所能使用的最大虛擬內存。同時，它支持硬資源和軟資源的限制。<br />\nhttps://q248269673.pixnet.net/blog/post/66596238-linux-ulimit%E5%91%BD%E4%BB%A4</p>\n<p><code>ulimit [-aHS][-c &lt;core檔案上限&gt;][-d &lt;資料節區大小&gt;][-f &lt;檔案大小&gt;][-m &lt;記憶體大小&gt;][-n &lt;檔案數目&gt;][-p &lt;緩衝區大小&gt;][-s &lt;堆疊大小&gt;][-t &lt;CPU時間&gt;][-u &lt;程序數目&gt;][-v &lt;虛擬記憶體大小&gt;]</code></p>\n<h2 id=\"usr-和-usr-local-的差別\">/usr 和 /usr/local 的差別</h2>\n<p>What I know is:</p>\n<p>The /usr directory is where the app installed by the distribution stands.</p>\n<p>The /usr/local directory is where the app installed (compiled?) by the system admin stands.</p>\n<p>For ex. if you download mplayer and do a ./configure - make - make install it comes to the /usr/local.</p>\n<p>https://www.linuxquestions.org/questions/linux-newbie-8/difference-between-usr-and-usr-local-199118/</p>\n<p>The /usr/local hierarchy is for use by the system administrator when installing software locally. It needs to be safe from being overwritten when the system software is updated. It may be used for programs and data that are shareable amongst a group of hosts, but not found in /usr.</p>\n<p>Locally installed software must be placed within /usr/local rather than /usr unless it is being installed to replace or upgrade software in /usr.</p>\n<p>https://askubuntu.com/questions/955956/what-is-the-difference-between-usr-locale-and-usr-local</p>\n<h2 id=\"顯卡相關\">顯卡相關</h2>\n<ul>\n<li><code>nvidia-smi</code> 查看GPU狀態</li>\n</ul>\n<h2 id=\"安裝nvidia顯卡驅動\">安裝nvidia顯卡驅動</h2>\n<ul>\n<li>https://docs.nvidia.com/datacenter/tesla/tesla-installation-notes/index.html#ubuntu-lts</li>\n</ul>\n<p>檢查是否成功： <code>nvidia-smi</code></p>\n<h3 id=\"安裝CUDNN\">安裝CUDNN</h3>\n<p>https://stackoverflow.com/questions/31326015/how-to-verify-cudnn-installation</p>\n<p>只需要複製檔案到cuda的目錄下就可以了</p>\n<p>sudo ln -s /home/worker/cheney/cuda/lib64/libcudnn.so.8.3.0 /usr/lib/libcudnn.so</p>\n<h3 id=\"檢查cudnn版本\">檢查cudnn版本</h3>\n<p>https://blog.csdn.net/qq451882471/article/details/106967942</p>\n<ol>\n<li>查看 shared library 中有沒有 libcudnn.so 和 libcublas.so\n<ol>\n<li><code>ls /usr/lib |grep lib</code></li>\n</ol>\n</li>\n<li>找到 libcudnn.so 和 libcublas.so 的位置\n<ol>\n<li><code>locate libcudnn.so</code></li>\n<li><code>locate libcublas.so</code></li>\n<li><code>find / -name *cudnn*</code></li>\n</ol>\n</li>\n</ol>\n<p>You might have to adjust the path. See step 2 of the installation.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2</span><br><span class=\"line\">edit: In later versions this might be the following (credits to Aris)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure>\n<h3 id=\"檢查cuda版本\">檢查cuda版本</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat /usr/local/cuda/version.txt</span><br><span class=\"line\">nvcc --version</span><br></pre></td></tr></table></figure>\n<h2 id=\"mv-cp\">mv/cp</h2>\n<p><code>mv -vn file1 file2</code></p>\n<ul>\n<li><code>-v</code> makes it verbose - mv will tell you that it moved file if it moves it(useful, since there is possibility that file will not be moved)</li>\n<li><code>-n</code> moves only if file2 does not exist.</li>\n</ul>\n<h2 id=\"其他\">其他</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Fza3VidW50dS5jb20vcXVlc3Rpb25zLzkxMzUvaG93LXRvLWJhY2t1cC1zZXR0aW5ncy1hbmQtbGlzdC1vZi1pbnN0YWxsZWQtcGFja2FnZXM=\">備份已安裝的軟體清單<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3VidW50dWZvcnVtcy5vcmcvc2hvd3RocmVhZC5waHA/dD04Njg0NzE=\">use command(like gedit) without occupying terminal<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li><code>alt-f2</code> → <code>gedit</code></li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NodXNpYW5nLmdpdGJvb2tzLmlvL3dvcmtpbmctb24tZ251LWxpbnV4L2NvbnRlbnQvMTUuc2Rjdi5odG1s\">命令列介面字典 - sdcv<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucXVvcmEuY29tL0luLXVidW50dS1ob3ctY2FuLUktaGF2ZS1hbi1zc2gtc2Vzc2lvbi1hdXRvLXJlY29ubmVjdA==\">保持ssh連線狀態<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["記錄"],"tags":["指令","linux","除錯","軟體","虛擬機","Ubuntu"]},{"title":"MapReduce 簡介","url":"/mapreduce/","content":"<h2 id=\"Metadata\">Metadata</h2>\n<table>\n<thead>\n<tr>\n<th><!----></th>\n<th><!----></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Title</td>\n<td>MapReduce: Simplified Data Processing on Large Clusters</td>\n</tr>\n<tr>\n<td>Conference Proceedings Title</td>\n<td>OSDI '04</td>\n</tr>\n<tr>\n<td>Authors</td>\n<td>Jeffrey Dean, Sanjay GhemawatCheng</td>\n</tr>\n<tr>\n<td>Date</td>\n<td>2004/10</td>\n</tr>\n<tr>\n<td>Page</td>\n<td>13</td>\n</tr>\n<tr>\n<td>Times cited</td>\n<td>34516</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Introduction\">Introduction</h2>\n<ul>\n<li>Motivation: Lots of special-purpose programs should <strong>process large amounts of raw data</strong>\n<ul>\n<li>e.g., crawl(analyze) documents, web request logs, etc.</li>\n</ul>\n</li>\n<li>Inspiration\n<ul>\n<li><code>Map()</code> and <code>Reduce()</code> primitives present in Lisp and many other functional languages</li>\n</ul>\n</li>\n<li>Solution: Design a <strong>programming model</strong>: <code>MapReduce</code>\n<ul>\n<li><strong>Hides the details</strong> of <strong>parallelization, fault-tolerance, locality optimization, and load balancing</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Map-and-Reduce\">Map and Reduce</h3>\n<ul>\n<li>Divide, Conquer, and Combine → Divide, Map, and Reduce</li>\n<li>User only need to implement <code>Map()</code> and <code>Reduce()</code> functions and tune settings\n<ul>\n<li>MapReduce model already implement other things to do</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Programming-Model\">Programming Model</h2>\n<ul>\n<li><code>Map()</code>\n<ul>\n<li>Produce a set of intermediate key/value pairs</li>\n</ul>\n</li>\n<li>After <code>Map()</code> complete\n<ul>\n<li>Sort intermediate key-value pairs and divide into pieces for <code>Reduce()</code> to use</li>\n</ul>\n</li>\n<li><code>Reduce()</code>\n<ul>\n<li>Merge the value of the same intermediate key</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Example\">Example</h3>\n<p>Input → After Map → After Reduce</p>\n<ul>\n<li>Search (in a large file set)\n<ul>\n<li>Inverted Index\n<ul>\n<li><code>&lt;doc, docID&gt;</code> → <code>&lt;word, docID&gt;</code> → <code>&lt;word, list(docID)&gt;</code></li>\n</ul>\n</li>\n<li>Reverse WebLink\n<ul>\n<li><code>sourceURL</code> → <code>&lt;sourceURL, targetURL&gt;</code> → <code>&lt;targetURL, list(sourceURL)&gt;</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Count (in a large file set)\n<ul>\n<li>URL Frequency in webpage\n<ul>\n<li><code>URL</code> → <code>&lt;URL, 1&gt;</code> → <code>&lt;URL, TotalCount&gt;</code></li>\n</ul>\n</li>\n<li>Term Frequency\n<ul>\n<li><code>term</code> → <code>&lt;term, freq&gt;</code> → <code>&lt;term, freq&gt;</code> <img data-src=\"/img/other/MapReduce/wordcount.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Sort (in a large file set)\n<ul>\n<li><code>unsorted list</code> → <code>seperated sorted list</code> → <code>merged sorted list</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Implementation\">Implementation</h2>\n<p>Use C++ to implement</p>\n<p><img data-src=\"/img/other/MapReduce/flowchart.webp\" alt=\"\" /></p>\n<ul>\n<li>Data storage\n<ul>\n<li>資料存放在GFS(Global File System), 64MB為一個BLOCK\n<ul>\n<li>存放多個複本於不同機器</li>\n</ul>\n</li>\n<li>網路頻寬是稀缺資源\n<ul>\n<li>Worker和資料若在不同機器，會傳輸很久\n<ul>\n<li>Master儘量分配Worker使用本地有資料的任務</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Task assign\n<ul>\n<li>將 <code>Map()</code> 分成 $M$ 個任務， 將 <code>Reduce()</code> 分成 $R$ 個任務\n<ul>\n<li>$M$ 和 $R$ 的數量比可用的機器多很多</li>\n</ul>\n</li>\n<li>Master 需要分配 $O(M+R)$ 個任務 和 記錄 $O(M \\times R)$ 塊資料</li>\n<li>切得愈小，故障代價愈小，較容易平均分配，但Master需要記較多資料\n<ul>\n<li>一塊通常是16~64MB，以配合GFS</li>\n<li>Google的設定：$M$ = 200000, $R$ = 5000, using 2000 worker machines  <!-- 為何 M >> R --></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Input\n<ul>\n<li>Input of Map: 把 Input data 切成 $M$ 塊</li>\n<li>Input of Reduce: 把 Intermidiate data 切成 $R$ 塊\n<ul>\n<li>Intermediate key and set of values of the key</li>\n<li>用 hash(key) mod R 的值來代表 key 是第幾塊</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Master program: 分配任務\n<ul>\n<li>Map worker\n<ul>\n<li>執行完後將 $R$ 塊Intermediate資料寫入本地磁碟</li>\n<li>回傳檔案位置至Master</li>\n</ul>\n</li>\n<li>Reduce worker\n<ul>\n<li>從Master得知檔案位置，使用Remote Procedure Call(RPC)來讀取資料</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"故障容忍-Fault-Tolerance\">故障容忍 Fault Tolerance</h3>\n<ul>\n<li>Worker故障\n<ul>\n<li>可能是網路、硬碟、機器故障</li>\n</ul>\n<ol>\n<li>Master定期ping worker</li>\n<li>若沒有回應，視為死掉</li>\n<li>原先分配給死掉的Task會重新分配\n<ul>\n<li>已完成的Reduce任務不需要重新分配</li>\n<li>資料已存放在全域資料系統(Map的結果資料放在本地端)</li>\n</ul>\n</li>\n<li>通知Reduce Worker新的資料路徑</li>\n</ol>\n</li>\n<li>Master故障\n<ul>\n<li>幾乎不會發生(因為只有一台)</li>\n<li>定時記錄進度，以便還原</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Backup-Tasks\">Backup Tasks</h3>\n<ul>\n<li>Straggler(落後者): 完成Task的時間很長\n<ul>\n<li>可能原因\n<ul>\n<li>磁碟故障</li>\n<li>記憶體不足</li>\n<li>網路不穩</li>\n<li>程式的bug</li>\n<li>在做其他任務</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>解法: 若MapReduce快完成時, Master 對還在執行的Task，執行多份備份Task\n<ul>\n<li>只要其中一個完成即可</li>\n<li>只多消耗一點運算資源，可減少30%耗時</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Performance\">Performance</h2>\n<ul>\n<li>Environment\n<ul>\n<li>1800 machines\n<ul>\n<li>two 2GHz Intel Xeon processors with Hyper-Threading enabled</li>\n<li>4GB of memory</li>\n<li>two 160GB IDE disks</li>\n<li>1 gigabit Ethernet link</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>測試兩種Task\n<ol>\n<li>Grep 1TB data</li>\n<li>Sort 1TB data</li>\n</ol>\n</li>\n<li>Performance\n<ul>\n<li>Normal Execution\n<ul>\n<li>891sec</li>\n</ul>\n</li>\n<li>刻意殺掉200個worker(總共1746個)\n<ul>\n<li>933sec</li>\n<li>only 5% increase</li>\n</ul>\n</li>\n<li>沒有Backup Task的情況\n<ul>\n<li>1283sec</li>\n<li>44% increase</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/img/other/MapReduce/performance.webp\" alt=\"\" /></p>\n<h2 id=\"Refinement\">Refinement</h2>\n<ul>\n<li>Locality Optimization\n<ul>\n<li>將輸入檔案複製到本地磁碟</li>\n</ul>\n</li>\n<li>Ordering Guarantee\n<ul>\n<li>保證 Intermediate key/value 已排序</li>\n<li><code>Reduce()</code> 處理時速度較快</li>\n</ul>\n</li>\n<li>Combiner Function\n<ul>\n<li>考慮計算次數的任務，會送出很多<code>&lt;key,1&gt;</code>的records，可在 <code>Map()</code> 之後先做簡易的 <code>Reduce()</code>，稱為Combine\n<ul>\n<li>可減少網路傳輸量</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Partitioning Function\n<ul>\n<li>預設使用Hash Function 來分割成 $R$ 個檔案\n<ul>\n<li><code>Hash(key) mod R</code></li>\n</ul>\n</li>\n<li>特殊情況可以用別的，如key為網址的時候希望相同Host的資料放在同一個<code>Reduce()</code> Task上\n<ul>\n<li><code>Hash(Hostname(url)) mod R</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>輸入和輸出\n<ul>\n<li>使用介面來實作新的輸入/輸出類別</li>\n<li>輸入類別\n<ul>\n<li>文字處理類別 (Text Mode)\n<ul>\n<li>每一行都是 key/value pair\n<ul>\n<li>Key: 此行的檔案 offset</li>\n<li>Value: 此行的內容</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>key/value pairs 的類別\n<ul>\n<li>用來保持key的排序</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Side Effects\n<ul>\n<li>e.g., 執行<code>Map()</code>或<code>Reduce()</code>時，產生附加檔案(Auxiliary Files)</li>\n<li>Make sure side-effect is atomic and idempotent(冪等)\n<ul>\n<li>Idempotent：一個運算作用在任一元素兩次後會和其作用一次的結果相同</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Skipping Bad Records\n<ul>\n<li>忽略少數的故障(當資料夠大時)\n<ul>\n<li>對答案影響不大</li>\n<li>故障時，傳送資料給Master\n<ul>\n<li>連續錯N次後，直接跳過此輸入</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>實作Counter類別\n<ul>\n<li>在 <code>Map()</code> 和 <code>Reduce()</code> 計算數量用</li>\n<li>定期傳送資料給Master以追蹤進度</li>\n</ul>\n</li>\n<li>Local Execution\n<ul>\n<li>將全部資料於同一台電腦中執行(即單機版本)，以利Debug</li>\n</ul>\n</li>\n<li>Status Information\n<ul>\n<li>Master有http server提供狀態頁面，以提供進度監控</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"結論\">結論</h2>\n<ul>\n<li>此框架隱藏了錯誤處理、平行化、分散式系統、資源分配的細節\n<ul>\n<li>沒有分散式系統和平行化的經驗也可以輕鬆上手\n<ul>\n<li>只需思考分割和組合資料的邏輯</li>\n</ul>\n</li>\n<li>程式邏輯更簡單，更容易修改\n<ul>\n<li>3800行 → 700行 (C++)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>適合用來處理可以分割、資料量大的問題</li>\n</ul>\n<h3 id=\"應用\">應用</h3>\n<p>因為是非常一般化的框架，可用在許多用途</p>\n<ul>\n<li>資料處理\n<ul>\n<li>統計，如PageRank</li>\n<li>搜尋，如Google Search Indexing</li>\n<li>排序</li>\n</ul>\n</li>\n<li>機器學習</li>\n</ul>\n<h3 id=\"備註\">備註</h3>\n<ul>\n<li><code>Map()</code> 和 <code>Reduce()</code> 的實作必須是Deterministic\n<ul>\n<li>否則因為機器故障、輸入順序不同等因素，輸出可能會不同</li>\n</ul>\n</li>\n<li>Hadoop 為 MapReduce 的 Open Source 實作</li>\n</ul>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li>Jeffrey Dean and Sanjay Ghemawat, 2004, MapReduce: Simplified Data Processing on Large Clusters</li>\n<li><a href=\"/data/mapreduce-report.pdf\">簡報</a></li>\n</ul>\n","categories":["筆記"],"tags":["MapReduce","分散式運算","Google"]},{"title":"自然語言處理(下)","url":"/natural-language-processing2/","content":"<h2 id=\"Chap08-Syntax-and-Grammars\">Chap08 Syntax and Grammars</h2>\n<p>Grammar</p>\n<ul>\n<li>represent certain knowledges of what we know about a language</li>\n<li>General criteria\n<ul>\n<li>linguistic naturalness</li>\n<li>mathematical power</li>\n<li>computational effectiveness</li>\n</ul>\n</li>\n</ul>\n<p>Context-free grammars(CFG)</p>\n<ul>\n<li>Alias\n<ul>\n<li>Phrase structure grammars</li>\n<li>Backus-Naur form</li>\n</ul>\n</li>\n<li>More powerful than finite state machine</li>\n<li>Rules\n<ul>\n<li>Terminals\n<ul>\n<li>words</li>\n</ul>\n</li>\n<li>Non-terminals\n<ul>\n<li>Noun phrase, Verb phrase ...</li>\n</ul>\n</li>\n<li>Generate strings in the language</li>\n<li>Reject strings not in the language</li>\n<li>LHS → RHS\n<ul>\n<li>LHS: Non-terminals</li>\n<li>RHS: Non-terminals or Terminals</li>\n</ul>\n</li>\n<li>Context Free\n<ul>\n<li>probability of a subtree does not depend on words not dominated by the subtree(subtree出現的機率和上下文無關)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<span id=\"more\"></span>\n<p>Evaluation</p>\n<ol>\n<li>Does it undergenerate?\n<ul>\n<li>rules cannot completely explain language</li>\n<li>not a problem if the goal is to produce a language</li>\n</ul>\n</li>\n<li>Does it overgenerate?\n<ul>\n<li>rules overly explain the language</li>\n<li>not a problem if the goal is to recognize or understand well-formed(correct) language</li>\n</ul>\n</li>\n<li>Does it assign appropriate structures to the strings that it generates?</li>\n</ol>\n<p>Parsing</p>\n<ul>\n<li>take a string and a grammar</li>\n<li>assigning trees that covers all and only words in input strings</li>\n<li>return parse tree for that string</li>\n</ul>\n<p>English Grammar Fragment</p>\n<ul>\n<li>Sentences</li>\n<li>Noun Phrases\n<ul>\n<li>Ex. NP → det Nominal</li>\n<li><strong>head: central criticial noun in NP</strong>\n<ul>\n<li>important in statistical parsing</li>\n<li>after det(冠詞), before pp(介系詞片語) <img data-src=\"/img/nlp/np-parse.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Agreement\n<ul>\n<li>a part of overgenerate</li>\n<li>This flight(○)</li>\n<li>This flights(×)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Verb Phrases\n<ul>\n<li>head verb with arguments</li>\n<li>Subcategorization(分類)\n<ul>\n<li>categorize according to VP rules</li>\n<li>a part of overgenerate</li>\n<li>Prefer\n<ul>\n<li>I prefer [to leave earlier]TO-VP</li>\n</ul>\n</li>\n<li>Told\n<ul>\n<li>I was told [United has a flight]S</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Overgenerate Solution<br />\n- transform into multiple rules<br />\n- NP → Single_Det Single_Nominal<br />\n- NP → 複數_Det 複數_Nominal<br />\n- Will generate a lot of rules!<br />\n- out of CFG framework<br />\n- Chomsky hierarchy of languages <img data-src=\"/img/nlp/modelclass.webp\" alt=\"\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3poLndpa2lwZWRpYS5vcmcvd2lraS8lRTklOTklODQlRTYlQTAlODclRTglQUYlQUQlRTglQTglODA=\">Indexed Grammar<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>Indexed grammars and languages problem <img data-src=\"/img/nlp/index-example.webp\" alt=\"\" /></li>\n<li>recognized by nested stack automata <img data-src=\"/img/nlp/index-grammar.webp\" alt=\"\" /></li>\n</ul>\n<h3 id=\"Treebanks-and-headfinding\">Treebanks and headfinding</h3>\n<p>critical to the development of statistical parsers</p>\n<p>Treebanks</p>\n<ul>\n<li>corpora with parse trees\n<ul>\n<li>created by automatic parser and human annotators</li>\n</ul>\n</li>\n<li>Ex. Penn Treebank</li>\n<li>Grammar\n<ul>\n<li>Treebanks implicitly define a grammar\n<ul>\n<li>Simply make all subtrees fit the rules</li>\n</ul>\n</li>\n<li>parse tree tend to be very flat to avoid recursion\n<ul>\n<li>Penn Treebank has ~4500 different rules for VPs</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Head Finding</p>\n<ul>\n<li>use tree traversal rules specific to each non-terminal in the grammar</li>\n<li>先向右再向左 <img data-src=\"/img/nlp/head-np.webp\" alt=\"\" /><!--重要--></li>\n</ul>\n<h3 id=\"Dependency-Grammars\">Dependency Grammars</h3>\n<ul>\n<li>every possible parse is a tree <img data-src=\"/img/nlp/dependency-parse.webp\" alt=\"\" />\n<ul>\n<li>every node is a word</li>\n<li>every link is dependency relations between words</li>\n</ul>\n</li>\n<li>Advantage\n<ul>\n<li>Deals well with long-distance word order languages\n<ul>\n<li>structure is flexible</li>\n</ul>\n</li>\n<li>Parsing is much faster than CFG</li>\n<li>Tree can be used by later applications</li>\n</ul>\n</li>\n<li>Approaches<!--重要-->\n<ul>\n<li>Optimization-based approaches\n<ul>\n<li>search for the tree that matches some criteria the best</li>\n<li>spanning tree algorithms</li>\n</ul>\n</li>\n<li>Shift-reduce approaches\n<ul>\n<li>greedily take actions based on the current word and state</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Summary</p>\n<ul>\n<li>Constituency(顧客, words that behave as a single unit) is a key phenomena easily captured with CFG rules\n<ul>\n<li>But agreement and subcategorization make problems</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap09-Syntactic-Parsing\">Chap09 Syntactic Parsing</h2>\n<ul>\n<li>Top-Down Search <img data-src=\"/img/nlp/top-down.webp\" alt=\"\" />\n<ul>\n<li>Search trees among possible answers  <!--- But suggests trees that are not consistent with words--></li>\n</ul>\n</li>\n<li>Bottom-Up Parsing\n<ul>\n<li>Only forms trees that can fit the words <!-- global tree may not form answer(S) --></li>\n</ul>\n</li>\n<li>Mixed parsing strategy\n<ul>\n<li>looks like Binomial Search</li>\n<li>The number of rules tried at each deicision of the analysis (branching factor)\n<ul>\n<li>top-down parsing: categories of LHS(Left Hand Side) word</li>\n<li>bottom-up parsing: categories of left most RHS(Right Hand Side) word\n<ul>\n<li>倒推：從最左邊可以倒推的字開始</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>backtracking methods are doomed because of two inter-related problems</p>\n<ul>\n<li>(1)Structural and lexical ambiguity\n<ul>\n<li>PP(介系詞片語) attachment\n<ul>\n<li>PP can attach to [sentences, verb phrases, noun phrases, and adjectival phrases]</li>\n</ul>\n</li>\n<li>coordination\n<ul>\n<li>P and Q or R\n<ul>\n<li>P and (Q or R)</li>\n<li>(P and Q) or R</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>noun-noun compounding\n<ul>\n<li>town widget hammer\n<ul>\n<li>((town widget) hammer)</li>\n<li>(town (widget hammer))</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Solution\n<ul>\n<li>how to determine the intended structure?</li>\n<li>how to store the partial structures?</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>(2)Shared subproblems\n<ul>\n<li>naïve backtracking will lead to duplicated work(不一定會對，所以會一直backtrack...)</li>\n</ul>\n</li>\n</ul>\n<p>Dynamic Programming</p>\n<ul>\n<li>Avoid doing repeated work</li>\n<li>Solve in polynomial time</li>\n<li>approaches\n<ul>\n<li>CKY</li>\n<li>Earley</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"CKY-bottom-up\">CKY(bottom-up)</h3>\n<ul>\n<li>transform rules into Chomsky-Normal Form <img data-src=\"/img/nlp/cnf-transform.webp\" alt=\"\" /></li>\n<li>build a table\n<ul>\n<li>A spanning from i to j in the input is in [i,j]</li>\n<li>A → BC == [i,j] → [i,k] [k,j]</li>\n<li>entire string = [0, n]\n<ul>\n<li>expected to be S</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>iterate all possible k <img data-src=\"/img/nlp/CKY-table2.webp\" alt=\"\" />\n<ul>\n<li>[i,j] = [i,i+1]x[i+1, j], [i,i+2]x[i+2,j] ......</li>\n</ul>\n</li>\n<li>fill the table a column at a time, from left to right, bottom to top <img data-src=\"/img/nlp/CKY-table3.webp\" alt=\"\" />\n<ul>\n<li>Ex. [1,3] = [1,2]Det + [2,3] Nomimal, Noun = NP</li>\n<li>Ex. <img data-src=\"/img/nlp/CKY-ex.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Algorithm <img data-src=\"/img/nlp/CKY-algo.webp\" alt=\"\" /></li>\n<li>Performance\n<ul>\n<li>a lot of elements unrelated to the answer</li>\n<li>can use online search to fill table (from left to right)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Earley\">Earley</h3>\n<ul>\n<li>parser that exploits chart as data structure</li>\n<li>node = vertex</li>\n<li>arc = edge\n<ul>\n<li>active edge: (a) and (b)</li>\n<li>inactive edge: (c)</li>\n</ul>\n</li>\n</ul>\n<p>decorated grammar</p>\n<ul>\n<li>(a) “•” in the first <img data-src=\"/img/nlp/dot-a.webp\" alt=\"\" />\n<ul>\n<li>• NP VP</li>\n<li>A hypothesis has been made, but has not been verified yet</li>\n</ul>\n</li>\n<li>(b) “•” in the middle <img data-src=\"/img/nlp/dot-b.webp\" alt=\"\" />\n<ul>\n<li>NP • VP</li>\n<li>A hypothesis has been partially confirmed</li>\n</ul>\n</li>\n<li>(c) “•” in the last\n<ul>\n<li>NP VP •</li>\n<li>A hypothesis has been wholly confirmed</li>\n</ul>\n</li>\n<li>representation of edge <img data-src=\"/img/nlp/chart-struct.webp\" alt=\"\" /></li>\n<li>initialization <img data-src=\"/img/nlp/chart-initialize.webp\" alt=\"\" />\n<ul>\n<li>for each rule A → W, if A is a category that can span a chart (typically S), add &lt;0, 0, A → •W&gt; <img data-src=\"/img/nlp/chartchart-init.webp\" alt=\"\" />\n<ul>\n<li>A implies •W from position 0 to 0</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Housekeeping\n<ul>\n<li>prevent duplicate rules</li>\n</ul>\n</li>\n</ul>\n<p>Fundamental rule</p>\n<ul>\n<li>If the chart contains &lt;i, j, A → W1 •B W2&gt; and &lt;j, k, B → W3 •&gt;, then add edge &lt;i, k, A → W1 B •W2&gt; to the chart <img data-src=\"/img/nlp/chart-fund.webp\" alt=\"\" /></li>\n<li>Notes\n<ol>\n<li>New edge may be either active or inactive</li>\n<li>does not remove the active edge that has succeeded</li>\n</ol>\n</li>\n</ul>\n<p>Bottom-up rule</p>\n<ul>\n<li>if adding edge &lt;i, j, C → W1 •&gt; to the chart, then for every rule that has the form B → C W2, add &lt;i, i, B → • C W2&gt; <img data-src=\"/img/nlp/chart-bottom.webp\" alt=\"\" /></li>\n</ul>\n<p>Top-down rule</p>\n<ul>\n<li>If adding edge &lt;i, j, C → W1 •B W2&gt; to the chart, then for each rule B → W, add &lt; j, j, B →•W&gt;</li>\n</ul>\n<h3 id=\"Full-Syntactic-Parsing\">Full Syntactic Parsing</h3>\n<ul>\n<li>necessary for deep semantic analysis of texts</li>\n<li>not practical for many applications (given typical resources)\n<ul>\n<li>O(n^3) for straight parsing</li>\n<li>O(n^5) for probabilistic versions</li>\n<li>Too slow for real time applications (search engines)</li>\n</ul>\n</li>\n<li>Two Alternatives\n<ul>\n<li>Dependency parsing\n<ul>\n<li>Change the underlying grammar formalism</li>\n<li>can get a lot done with just binary relations among the words</li>\n<li>詳見Chap08 dependency grammar</li>\n</ul>\n</li>\n<li>Partial parsing\n<ul>\n<li>Approximate phrase-structure parsing with finite-state and statistical approaches</li>\n</ul>\n</li>\n<li>Both of these approaches give up something (syntactic, structure) in return for more robust and efficient parsing</li>\n</ul>\n</li>\n</ul>\n<p>Partial parsing</p>\n<ul>\n<li>For many applications you don’t really need full parse</li>\n<li>For example, if you’re interested in locating all the people, places and organizations\n<ul>\n<li>base-NP chunking\n<ul>\n<li>[NP The morning flight] from [NP Denvar] has arrived</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Two approaches\n<ul>\n<li>Rule-based (hierarchical) transduction(轉導) <!--???-->\n<ul>\n<li>Restrict recursive rules (make the rules flat)\n<ul>\n<li>like NP → NP VP</li>\n</ul>\n</li>\n<li>Group the rules so that RHS of the rules can refer to non-terminals introduced in earlier transducers, but not later ones</li>\n<li>Combine the rules in a group in the same way we did with the rules for spelling changes</li>\n<li>Combine the groups into a cascade\n<ul>\n<li>can be used to find the sequence of flat chunks you’re interested in</li>\n<li>or approximate hierarchical trees you get from full parsing with a CFG</li>\n</ul>\n</li>\n<li>Typical Architecture ![](/img/nlp/Cascaded Transducers.webp)\n<ul>\n<li>Phase 1: Part of speech tags</li>\n<li>Phase 2: Base syntactic phrases</li>\n<li>Phase 3: Larger verb and noun groups</li>\n<li>Phase 4: Sentential level rules</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Statistical sequence labeling\n<ul>\n<li>HMMs</li>\n<li>MEMMs</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap10-Statistical-Parsing\">Chap10 Statistical Parsing</h2>\n<p>Motivation</p>\n<ul>\n<li>N-gram models and HMM Tagging only allowed us to process sentences linearly</li>\n<li><strong>Probabilistic Context Free Grammars</strong>(PCFG)\n<ul>\n<li>alias: Stochastic context-free grammar(SCFG)</li>\n<li>simplest and most natural probabilistic model for tree structures</li>\n<li>closely related to those for HMMs</li>\n<li>為每一個CFG的規則標示其發生的可能性</li>\n</ul>\n</li>\n</ul>\n<p>Idea</p>\n<ul>\n<li>reduce “right” parse to “most probable parse”\n<ul>\n<li>Argmax P(Parse|Sentence)</li>\n</ul>\n</li>\n</ul>\n<p>A PCFG consists of</p>\n<ul>\n<li>set of terminals, {wk}</li>\n<li>set of nonterminals, {Ni}</li>\n<li>start symbol N1</li>\n<li>set of rules\n<ul>\n<li>{Ni --&gt; ξj}(ξj is a sequence of terminals and nonterminals)</li>\n</ul>\n</li>\n<li>probabilities of rules\n<ul>\n<li>total probability of imply Ni to other sequence ξj is 1</li>\n<li>∀i Σj P(Ni → ξj) = 1</li>\n</ul>\n</li>\n<li>Probability of sentence according to grammar G\n<ul>\n<li>P($w_{1m}$) = sum of P($w_{1m}$, t) for every possible tree t</li>\n</ul>\n</li>\n<li>Nj dominates the words wa … wb\n<ul>\n<li>Nj → wa … wb</li>\n</ul>\n</li>\n</ul>\n<p>Assumptions of the Model</p>\n<ul>\n<li>Place Invariance\n<ul>\n<li>probability of a subtree does not depend on its position in the string</li>\n<li>similar to time invariance in HMMs</li>\n</ul>\n</li>\n<li>Ancestor Free\n<ul>\n<li>probability of a subtree does not depend on nodes in the derivation outside the subtree(subtree的機率只和subtree內的node有關)</li>\n<li>can simplify probability calculation <img data-src=\"/img/nlp/after-assump.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Questions of PCFGs(similar to three questions of HMM)</p>\n<ul>\n<li>Assign probabilities to parse trees\n<ul>\n<li>What is the probability of a sentence $w_{1m}$ according to a grammar G\n<ul>\n<li>P(w1m|G)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Parsing with probabilities(Decoding)\n<ul>\n<li>What is the most likely parse for a sentence\n<ul>\n<li>argmax_t P(t|w1m,G)</li>\n<li>How to efficiently find the best (or N best) trees</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Training the model (Learning)\n<ul>\n<li>How to set rule probabilities(parameter of grammar model) that maximize the probability of a sentence\n<ul>\n<li>argmax_G P(w1m|G)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Simple Probability Model</p>\n<ul>\n<li>probability of a tree is the product of the probabilities of rules in derivation</li>\n<li>Rule Probabilities\n<ul>\n<li>S → NP</li>\n<li>P(NP | S)</li>\n</ul>\n</li>\n<li>Training the Model\n<ul>\n<li>estimate probability from data</li>\n<li>P(α → β | α) = Count(α→β) / Count(α) = Count(α→β) / Σγ Count(α→γ)</li>\n</ul>\n</li>\n<li>Parsing (Decoding)\n<ul>\n<li>trees with highest probability in the model</li>\n</ul>\n</li>\n<li>Example: Book the dinner flight\n<ul>\n<li><img data-src=\"/img/nlp/pm-ex.webp\" alt=\"\" /></li>\n<li><img data-src=\"/img/nlp/pm-ex2.webp\" alt=\"\" /></li>\n<li>too slow!</li>\n</ul>\n</li>\n</ul>\n<p>Dynamic Programming again</p>\n<ul>\n<li>use CKY and Earley to <strong>parse</strong></li>\n<li>Viterbi and HMMs to <strong>get the best parse</strong></li>\n<li>Parameters of a PCFG in Chomsky Normal Form\n<ul>\n<li>P(Nj→NrNs | G) , $n^3$ matrix of parameters</li>\n<li>P(Nj→wk | G), $nV$ parameters</li>\n<li>n is the number of nonterminals</li>\n<li>V is the number of terminals</li>\n</ul>\n</li>\n<li>Σr,s P(Nj→NrNs) + ΣkP(Nj→wk) = 1\n<ul>\n<li>所有由Nj導出的rule，機率總和必為1</li>\n</ul>\n</li>\n</ul>\n<p>Probabilistic Regular Grammars (PRG)</p>\n<ul>\n<li>start state N1</li>\n<li>rules\n<ul>\n<li>Ni → wjNk</li>\n<li>Ni → wj</li>\n</ul>\n</li>\n<li>PRG is a HMM with [start state] and [finish(sink) state] <img data-src=\"/img/nlp/prg-sink.webp\" alt=\"\" /></li>\n</ul>\n<p>Inside and Outside probability <img data-src=\"/img/nlp/prg-graph.webp\" alt=\"\" /> <img data-src=\"/img/nlp/prg-bf.webp\" alt=\"\" /> <img data-src=\"/img/nlp/prg-bf2.webp\" alt=\"\" /></p>\n<ul>\n<li>Forward(Outside) probability\n<ul>\n<li>$ α_i(t) = P(w_{1(t-1)}, X_t = i)$</li>\n<li>everything above a certain node(include the node)</li>\n</ul>\n</li>\n<li>Backward(Inside) probability\n<ul>\n<li>$ β_i(t, T) = P(w_{tT} | X_t = i)$</li>\n<li>everything below a certain node</li>\n<li>total probability of generating words $w_t \\cdots w_T$, given the root nonterminal $N^i$ and a grammar G</li>\n</ul>\n</li>\n</ul>\n<p>Inside Algorithm (bottom-up)</p>\n<ul>\n<li>$P(w_{1m} | G) = P(N_1 → w_{1m} | G) = P(w_{1m} | N^1_{1m}, G) = B_1(1,m)$\n<ul>\n<li>$B_1(1,m)$ is Inside probability\n<ul>\n<li>P(w1~wm are below N1(start symbol))</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>base rule\n<ul>\n<li>$ B_j(k, k) = P(w_k | N^j_{kk}, G) = P(N^j → w_k | G)$</li>\n</ul>\n</li>\n<li>$ B_j(p, q) = P(w_{pq} | N^j_{pq}, G) = $ <img data-src=\"/img/nlp/inside-induction.webp\" alt=\"\" />\n<ul>\n<li>try every possible rules to split Nj, product of **rule probabilty and segments' inside probabilities **</li>\n</ul>\n</li>\n<li>use grid to solve again\n<ul>\n<li><img data-src=\"/img/nlp/inside-grid.webp\" alt=\"\" />\n<ul>\n<li>X軸代表起始座標，Y軸代表長度\n<ul>\n<li>(2,3) → flies like ants</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Outside Algorithm (top-down)</p>\n<ul>\n<li>$ P(w_{1m} | G) = Σ_j α_j(k, k)P(N^j → w_k$ <img data-src=\"/img/nlp/outside-graph.webp\" alt=\"\" /> <!--為何是sum...-->\n<ul>\n<li>outside probability of wk x (inside) probability of wk  of every Nj</li>\n</ul>\n</li>\n<li>basecase\n<ul>\n<li>$ α_1(1, m) = 1, α_j(1,m) = $</li>\n<li>P(N1) = 1, P(Nj outside w1 to wm) = 0</li>\n</ul>\n</li>\n<li>自己的outside probability 等於\n<ul>\n<li>爸爸的outside probability 乘以 爸爸的inside probability 除以 自己的inside probability\n<ul>\n<li>inside x outside 是固定值？</li>\n</ul>\n</li>\n<li>爸爸的inside probabiliity 除以 自己的inside probability 就是其兄弟的inside probability</li>\n<li>使用此公式計算 <img data-src=\"/img/nlp/inout.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>$ α_j(p, q)β_j(p, q) = P(w_{1m}, N^j_{pq} | G) $\n<ul>\n<li>某個點的inside 乘 outside = 在某grammar中，出現此句子，且包含此點的機率</li>\n<li>所有點的總和：在某grammar下，某parse tree(包含所有node)的機率 <img data-src=\"/img/nlp/parse-probability.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Outside example: 這些數字理論上算起來會一樣… <img data-src=\"/img/nlp/outside-forward.webp\" alt=\"\" /></li>\n</ul>\n<p>Finding the Most Likely Parse for a Sentence</p>\n<ul>\n<li>δi(p,q)= the highest inside probability parse of a subtree $N_{pq}^i$</li>\n<li>Initialization\n<ul>\n<li>δi(p,p)= P(Ni → wp)</li>\n</ul>\n</li>\n<li>Induction and Store backtrace\n<ul>\n<li>δi(p,q)= $argmax(j,k,r)P(Ni→NjNk)δj(p,r)δk(r+1,q)$</li>\n<li>找所有可能的切法</li>\n</ul>\n</li>\n<li>Termination\n<ul>\n<li>answer = δ1(1,m)</li>\n</ul>\n</li>\n</ul>\n<p>Training a PCFG</p>\n<ul>\n<li>find the optimal probabilities among grammar rules</li>\n<li>use EM Training Algorithm to seek the grammar that maximizes the likelihood of the training data\n<ul>\n<li>Inside-Outside Algorithm</li>\n</ul>\n</li>\n<li><img data-src=\"/img/nlp/inoutagain.webp\" alt=\"\" /></li>\n<li>將產生句子的機率視為π，為Nj產生pq的機率 <img data-src=\"/img/nlp/pi.webp\" alt=\"\" /></li>\n<li>Nj被使用的機率 <img data-src=\"/img/nlp/pi2.webp\" alt=\"\" /></li>\n<li>Nj被使用，且Nj→NrNs的機率 <img data-src=\"/img/nlp/pi3.webp\" alt=\"\" /></li>\n<li>Nj→NrNs這條rule被使用的機率=前兩式相除 <img data-src=\"/img/nlp/pi4.webp\" alt=\"\" /></li>\n<li>Nj→wk <img data-src=\"/img/nlp/pi5.webp\" alt=\"\" />\n<ul>\n<li>僅分子差異 <img data-src=\"/img/nlp/pi6.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Problems with the Inside-Outside Algorithm</p>\n<ul>\n<li>Extremely Slow\n<ul>\n<li>For each sentence, each iteration of training is $O(m^3n^3)$</li>\n</ul>\n</li>\n<li>Local Maxima</li>\n<li>Satisfactory learning requires many more nonterminals than are theoretically needed to describe the language</li>\n<li>There is no guarantee that the learned nonterminals will be linguistically motivated</li>\n</ul>\n<h2 id=\"Chap11-Dependency-Parsing\">Chap11 Dependency Parsing</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3N0cC5saW5nZmlsLnV1LnNlL35uaXZyZS9kb2NzL0FDTHNsaWRlcy5wZGY=\">COLING-ACL 2006, Dependency Parsing, by Joachim Nivre and Sandra Kuebler<i class=\"fa fa-external-link-alt\"></i></span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL25hYWNsaGx0MjAxMC5pc2kuZWR1L3R1dG9yaWFscy90Ny1zbGlkZXMucGRm\">NAACL 2010, Recent Advances in Dependency Parsing, by Qin Iris. Wang and YueZhang<i class=\"fa fa-external-link-alt\"></i></span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3NpdGUvemhlbmdodWFubHAvcHVibGljYXRpb25zL0lKQ05MUDIwMTMtdHV0b3JpYWwtRFAucGRmP2F0dHJlZGlyZWN0cz0wJmQ9MQ==\">IJCNLP 2013, Dependency Parsing: Past, Present, and Future, by Zhenghua Li, Wenliang Chen, Min Zhang<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Dependency Structure vs. Constituency Structure <img data-src=\"/img/nlp/parse.webp\" alt=\"\" /><br />\nParsing is one way to deal with the ambiguity problem in<br />\nnatural language<br />\ndependency syntax is syntactic relations (dependencies)</p>\n<p>Constraint: between word pairs  <img data-src=\"/img/nlp/depend.webp\" alt=\"\" /><br />\nProjective: No crossing links(a word and its dependents form a contiguous substring of the sentence)<br />\nAn arc (wi , r ,wj ) ∈ A is projective iff wi →∗ wk for all:<br />\ni &lt; k &lt; j when i &lt; j<br />\nj &lt; k &lt; i when j &lt; i<br />\n射出去的那一方也可以射到兩個字中間的任何一字<br />\n<img data-src=\"/img/nlp/depend-ex.webp\" alt=\"\" /></p>\n<p>Non-projective Dependency Trees</p>\n<ul>\n<li>Long-distance dependencies</li>\n<li>With crossing links</li>\n<li>Not so frequent in English\n<ul>\n<li>All the dependency trees from Penn Treebank are projective</li>\n</ul>\n</li>\n<li>Common in other languages with free word order\n<ul>\n<li>Prague(23%) and Czech, German and Dutch</li>\n</ul>\n</li>\n</ul>\n<p>Data Driven Dependency Parsing</p>\n<ul>\n<li>Data-driven parsing\n<ul>\n<li>No grammar / rules needed</li>\n<li>Parsing decisions are made based on learned models</li>\n<li>deal with ambiguities well</li>\n<li><img data-src=\"/img/nlp/data-driven.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Three approaches\n<ul>\n<li>Graph-based models</li>\n<li>Transition-based models(good in practice)\n<ul>\n<li>Define a transition system for <strong>mapping a sentence to its dependency tree</strong></li>\n<li>Predefine some transition actions</li>\n<li>Learning: predicting the next state transition, by transition history</li>\n<li>Parsing: construct the optimal transition sequence</li>\n<li>Greedy search / beam search</li>\n<li>Features are defined over a richer parsing history</li>\n</ul>\n</li>\n<li>Hybrid models</li>\n</ul>\n</li>\n</ul>\n<p>Comparison</p>\n<ul>\n<li>Graph-based models\n<ul>\n<li>Find the optimal tree from all the possible ones</li>\n<li>Global, exhaustive</li>\n</ul>\n</li>\n<li>Transition-based models\n<ul>\n<li>Predefine some actions (shift and reduce)</li>\n<li>use stack to hold partially built parses</li>\n<li><strong>Find the optimal action sequence</strong></li>\n<li>Local, Greedy or beam search</li>\n</ul>\n</li>\n<li>The two models produce different types of errors</li>\n</ul>\n<p>Hybrid Models</p>\n<ul>\n<li>Three integration methods\n<ul>\n<li>Ensemble approach: parsing time integration (Sagae &amp; Lavie 2006)</li>\n<li>Feature-based integration (Nivre &amp; Mcdonald 2008)</li>\n<li>Single model combination (Zhang &amp; Clark 2008)</li>\n</ul>\n</li>\n<li>Gain benefits from both models</li>\n</ul>\n<p><img data-src=\"/img/nlp/parse-algo.webp\" alt=\"\" /></p>\n<h3 id=\"Graph-based-dependency-parsing-models\">Graph-based dependency parsing models</h3>\n<ul>\n<li>Search for a tree with the highest score</li>\n<li>Define search space\n<ul>\n<li>Exhaustive search</li>\n<li>Features are defined over a limited parsing history</li>\n</ul>\n</li>\n<li>The score is linear combination of features\n<ul>\n<li>What features we can use? (later)</li>\n<li>What learning approaches can lead us to find the best tree with the highest score (later)</li>\n</ul>\n</li>\n<li>Applicable to both probabilistic and nonprobabilistic models</li>\n</ul>\n<p>Features</p>\n<ul>\n<li>dynamic features\n<ul>\n<li>Take into account the link labels of the surrounding word-pairs when predicting the label of current pair</li>\n<li>Commonly used in sequential labeling</li>\n<li>A word’s children are generated first(先生child, 再找parent), before it modifies another word</li>\n</ul>\n</li>\n</ul>\n<p>Learning Approaches</p>\n<ul>\n<li>Local learning approaches\n<ul>\n<li>Learn a local link classifier given of features defined on training data</li>\n<li>example <img data-src=\"/img/nlp/local-feature-example.webp\" alt=\"\" />\n<ul>\n<li>3-class classification: No link, left link or right link</li>\n<li>Efficient O(n) local training</li>\n</ul>\n</li>\n<li>local training and parsing <img data-src=\"/img/nlp/local-train-with-parse.webp\" alt=\"\" /></li>\n<li>Learn the weights of features\n<ul>\n<li>Maximum entropy models (Ratnaparkhi 99, Charniak 00)</li>\n<li>Support vector machines (Yamada &amp; Matsumoto 03)</li>\n<li>Use a richer feature set!</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Global learning approaches</li>\n<li>Unsupervised/Semi-supervised learning approaches\n<ul>\n<li>Use both annotated training data and un-annotated raw text</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Transition-based-model\">Transition-based model</h3>\n<ul>\n<li>Stack holds partially built parses</li>\n<li>Queue holds unprocessed words</li>\n<li>Actions\n<ul>\n<li>use input words to build output parse</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"parsing-processes\">parsing processes</h4>\n<p>Arc-eager parser</p>\n<ul>\n<li>4 tranition actions\n<ul>\n<li>SHIFT: push stack</li>\n<li>REDUCE: pop stack</li>\n<li>ARC-LEFT: pop stack and add link</li>\n<li>ARC-RIGHT: push stack and add link</li>\n</ul>\n</li>\n<li><img data-src=\"/img/nlp/arc-eager-example.webp\" alt=\"\" /></li>\n<li>Time complexity: linear\n<ul>\n<li>every word will be pushed once and popped once(except root)</li>\n</ul>\n</li>\n<li>parse\n<ul>\n<li>by actions: arcleft → arclect subject, noun, ...</li>\n</ul>\n</li>\n</ul>\n<p>Arc-standard parser</p>\n<ul>\n<li>3 actions\n<ul>\n<li>SHIFT: push</li>\n<li>LEFT: pop leftmost stack element and add</li>\n<li>RIGHT: pop rightmost stack element and add</li>\n</ul>\n</li>\n<li>Also linear time</li>\n</ul>\n<p>Non-projectivity</p>\n<ul>\n<li>neither of parser can solve it\n<ul>\n<li>online reorder\n<ul>\n<li>add extra action: swap</li>\n<li>not linear: $N^2$, but expect to belinear</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Decoding-algorithms\">Decoding algorithms</h4>\n<p>search action sequence to build the parse<br />\nscoring action given context<br />\nCandidate item &lt;S, G, Q&gt;</p>\n<ul>\n<li>greedy local search\n<ul>\n<li>initialize: Q = input</li>\n<li>goal: S=[root], G=tree, Q=[]</li>\n</ul>\n</li>\n<li>problem: one error leads to incorrect parse\n<ul>\n<li>Beam search: keep N highest partial states\n<ul>\n<li>use total score of all actions to rank a parse</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Score-Models\">Score Models</h4>\n<ul>\n<li>linear model</li>\n<li>SVM</li>\n</ul>\n<h2 id=\"Chap12-Semantic-Representation-and-Computational-Semantics\">Chap12 Semantic Representation and Computational Semantics</h2>\n<p>Semantic aren’t primarily descriptions of inputs</p>\n<p>Semantic Processing</p>\n<ul>\n<li>reason about the truth</li>\n<li>answer questions based on content\n<ul>\n<li>Touchstone application is often question answering</li>\n</ul>\n</li>\n<li>inference to determine the truth that isn't actually know</li>\n</ul>\n<p>Method</p>\n<ul>\n<li>principled, theoretically motivated approach\n<ul>\n<li>Computational/Compositional Semantics</li>\n</ul>\n</li>\n<li>limited, practical approaches that have some hope of being useful\n<ul>\n<li>Information extraction</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Information-Extraction\">Information Extraction</h3>\n<p>Information Extraction = segmentation + classification +  association + clustering <img data-src=\"/img/nlp/IE.webp\" alt=\"\" /></p>\n<ul>\n<li>superficial analysis\n<ul>\n<li>pulls out only the entities, relations and roles related to consuming application</li>\n</ul>\n</li>\n<li>Similar to chunking</li>\n</ul>\n<h3 id=\"Compositional-Semantics\">Compositional Semantics</h3>\n<ul>\n<li>Use First-Order Logic(FOL) representation that accounts for all the entities, roles and relations present in a sentence</li>\n<li>Similar to our approach to full parsing</li>\n<li>Compositional: The meaning of a whole is derived from the meanings of the parts(syntatic) <img data-src=\"/img/nlp/syntax-semantic.webp\" alt=\"\" /></li>\n<li>Syntax-Driven Semantic Analysis\n<ul>\n<li>The composition of meaning representations is guided by the <strong>syntactic</strong> components and relations provided by the  grammars</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"FOL\">FOL</h4>\n<ul>\n<li>allow to answer yes/no questions</li>\n<li>allow variable</li>\n<li>allow inference</li>\n</ul>\n<p>Events, actions and relationships can be captured with representations that consist of predicates with arguments</p>\n<ul>\n<li>Predicates\n<ul>\n<li>Primarily Verbs, VPs, Sentences</li>\n<li>Verbs introduce/refer to events and processes</li>\n</ul>\n</li>\n<li>Arguments\n<ul>\n<li>Primarily Nouns, Nominals, NPs, PPs</li>\n<li>Nouns introduce the things that play roles in those events</li>\n</ul>\n</li>\n<li>Example: Mary gave a list to John\n<ul>\n<li>Giving(Mary, John, List)</li>\n<li>Gave: Predicate</li>\n<li>Mary, John, List: Argument</li>\n<li>better representation <img data-src=\"/img/nlp/FOL-better.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Lambda Forms\n<ul>\n<li>Allow variables to be bound</li>\n<li>λxP(x)(Sally) = P(Sally)</li>\n</ul>\n</li>\n</ul>\n<p>Ambiguation</p>\n<ul>\n<li>mismatch between syntax and semantics\n<ul>\n<li>displaced arguments</li>\n<li>complex NPs with quantifiers\n<ul>\n<li>A menu</li>\n<li>Every restaurant <img data-src=\"/img/nlp/complicate-NP.webp\" alt=\"\" /></li>\n<li>Not every waiter</li>\n<li>Most restaurants</li>\n<li><img data-src=\"/img/nlp/complicate-NP-induction.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>still preserving strict compositionality</li>\n</ul>\n</li>\n<li>Two (syntax) rules to revise\n<ul>\n<li>The S rule\n<ul>\n<li>S → NP VP, NP.Sem(VP.Sem)</li>\n<li>NP and VP swapped, because S is NP</li>\n</ul>\n</li>\n<li>Simple NP's like proper nouns\n<ul>\n<li>λx.Franco(x)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Store and Retrieve\n<ul>\n<li><img data-src=\"/img/nlp/ambiguity-of-same-POS.webp\" alt=\"\" /></li>\n<li>Retrieving the quantifiers one at a time and placing them in front</li>\n<li>The order determines the meaning <img data-src=\"/img/nlp/store.webp\" alt=\"\" /></li>\n<li>retrieve <img data-src=\"/img/nlp/retrieve.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Set-Based-Models\">Set-Based Models</h3>\n<ul>\n<li>domain: the set of elements</li>\n<li>entity: elements of domain</li>\n<li>Properties of the elements: sets of elements from the domain</li>\n<li>Relations: sets of tuples of elements from the domain</li>\n<li>FOL\n<ul>\n<li>FOL Terms → elements of the domain\n<ul>\n<li>Med -&gt; “f”</li>\n</ul>\n</li>\n<li>FOL atomic formula → sets, or sets of tuples\n<ul>\n<li>Noisy(Med) is true if “f is in the set of elements that corresponds to the noisy relation</li>\n<li>Near(Med, Rio) is true if “the tuple &lt;f,g&gt; is in the set of tuples that corresponds to “Near” in the interpretation</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Example: Everyone likes a noisy restaurant <img data-src=\"/img/nlp/set-based-model.webp\" alt=\"\" />\n<ul>\n<li>There is a particular restaurant out there; it’s a noisy place; everybody likes it 有一家吵雜的餐廳大家都喜歡</li>\n<li>Everybody has at least one noisy restaurant that they like 大家都喜歡一家吵雜的餐廳</li>\n<li>Everybody likes noisy restaurants (i.e., there is no noisy restaurant out there that is disliked by anyone) 大家都喜歡吵雜的餐廳</li>\n<li>Using predicates to create <strong>categories</strong> of concepts\n<ul>\n<li>people and restaurants</li>\n<li>basis for OWL (Web Ontology Language)網絡本體語言</li>\n</ul>\n</li>\n<li>before <img data-src=\"/img/nlp/uncategories.webp\" alt=\"\" /></li>\n<li>after <img data-src=\"/img/nlp/categories.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap13-Lexical-Semantics\">Chap13 Lexical Semantics</h2>\n<p>we didn’t do word meaning in compositional semantics</p>\n<p>WordNet</p>\n<ul>\n<li>meaning and relationship about words\n<ul>\n<li>hypernym(上位詞)\n<ul>\n<li>breakfast → meal</li>\n</ul>\n</li>\n<li>hierarchies <img data-src=\"/img/nlp/wordnet-hierarchy.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>In our semantics examples, we used various FOL predicates to capture various aspects of events, including the notion of roles<br />\nHavers, takers, givers, servers, etc.</p>\n<p>Thematic roles(語義關係) <img data-src=\"/img/nlp/thematic-roles.webp\" alt=\"\" /></p>\n<ul>\n<li>semantic generalizations over the specific roles that occur with specific verbs\n<ul>\n<li>provide a shallow level of semantic analysis</li>\n<li>tied to syntactic analysis</li>\n</ul>\n</li>\n<li>i.e. Takers, givers, eaters, makers, doers, killers\n<ul>\n<li>They’re all the agents of the actions</li>\n</ul>\n</li>\n<li>AGENTS are often subjects</li>\n<li>In a VP-&gt;V NP rule, the NP is often a THEME</li>\n</ul>\n<p>2 major English resources using thematic data</p>\n<ul>\n<li>PropBank\n<ul>\n<li>Layered on the Penn TreeBank</li>\n<li>Small number (25ish) labels</li>\n</ul>\n</li>\n<li>FrameNet\n<ul>\n<li>Based on frame semantics</li>\n<li>Large number of frame-specific labels</li>\n</ul>\n</li>\n</ul>\n<p>Example</p>\n<ul>\n<li>[McAdams and crew] covered [the floors] with [checked linoleum].格子花紋油毯\n<ul>\n<li>Arg0 (agent: the causer of the smearing)</li>\n<li>Arg1 (theme: “thing covered”)</li>\n<li>Arg2 (covering: “stuff being smeared”)</li>\n</ul>\n</li>\n<li>including agent and theme, remaining args are verb specific</li>\n</ul>\n<p>Logical Statements</p>\n<ul>\n<li>Example: EAT -- Eating(e) ^Agent(e,x)^ Theme(e,y)^Food(y)\n<ul>\n<li>(adding in all the right quantifiers and lambdas)</li>\n</ul>\n</li>\n<li>Use WordNet to encode the selection restrictions</li>\n<li>Unfortunately, language is creative\n<ul>\n<li>… ate glass on an empty stomach accompanied only by water and tea</li>\n<li>you <strong>can’t eat gold</strong> for lunch if you’re hungry</li>\n</ul>\n</li>\n</ul>\n<p>can we discover a verb’s restrictions by using a corpus and WordNet?</p>\n<ol>\n<li>Parse sentences and find heads</li>\n<li>Label the thematic roles</li>\n<li>Collect statistics on the co-occurrence of particular headwords with particular thematic roles</li>\n<li>Use the WordNet hypernym structure to <strong>find the most meaningful level to use as a restriction</strong></li>\n</ol>\n<h3 id=\"WSD\">WSD</h3>\n<p>Word sense disambiguation</p>\n<ul>\n<li>select right sense for a word</li>\n<li>Semantic selection restrictions can be used to disambiguate\n<ul>\n<li>Ambiguous arguments to unambiguous predicates</li>\n<li>Ambiguous predicates with unambiguous arguments</li>\n</ul>\n</li>\n<li>Ambiguous arguments\n<ul>\n<li>Prepare a dish(菜餚)</li>\n<li>Wash a dish(盤子)</li>\n</ul>\n</li>\n<li>Ambiguous predicates\n<ul>\n<li>Serve (任職/服務) Denver</li>\n<li>Serve (供應) breakfast</li>\n</ul>\n</li>\n</ul>\n<p>Methodology</p>\n<ul>\n<li>Supervised Disambiguation\n<ul>\n<li>based on a labeled training set</li>\n</ul>\n</li>\n<li>Dictionary-Based Disambiguation\n<ul>\n<li>based on lexical resource like dictionaries</li>\n</ul>\n</li>\n<li>Unsupervised Disambiguation\n<ul>\n<li>label training data is expensive</li>\n<li>based on unlabeled corpora</li>\n</ul>\n</li>\n<li>Upper(human) and Lower(simple model) Bounds</li>\n<li>Pseudoword\n<ul>\n<li>Generate artificial evaluation data for comparison and improvement of text processing algorithms</li>\n</ul>\n</li>\n</ul>\n<p>Supervised ML Approaches</p>\n<ul>\n<li>What’s a tag?\n<ul>\n<li>In WordNet, “bass” in a text has 8 possible tags or labels (bass1 through bass8)</li>\n</ul>\n</li>\n<li>require very simple representation for training data\n<ul>\n<li>Vectors of sets of feature/value pairs</li>\n<li>need to extract training data by characterization of text surrounding the target</li>\n</ul>\n</li>\n<li>If you decide to use features that require more analysis (say parse trees) then the ML part may be doing less work (relatively) if these features are truly informative</li>\n<li>Classification\n<ul>\n<li>Naïve Bayes (the right thing to try first)</li>\n<li>Decision lists</li>\n<li>Decision trees</li>\n<li>MaxEnt</li>\n<li>Support vector machines</li>\n<li>Nearest neighbor methods…</li>\n<li>choice of technique depends on features that have been used</li>\n</ul>\n</li>\n<li>Bootstrapping\n<ul>\n<li>Use when don’t have enough data to train a system…</li>\n<li>集中有放回的均勻抽樣</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Naive-Bayes\">Naive Bayes</h4>\n<ul>\n<li>Argmax P(sense|feature vector) <img data-src=\"/img/nlp/bayesian-decision.webp\" alt=\"\" /></li>\n<li>find maximum probabilty of words given possible sk <img data-src=\"/img/nlp/bayesian-decision2.webp\" alt=\"\" /></li>\n<li><img data-src=\"/img/nlp/bayesian-classifier.webp\" alt=\"\" /></li>\n<li>assumption\n<ul>\n<li>bag of words model\n<ul>\n<li>structure and order of words is ignored</li>\n<li>each pair of words in the bag is independent</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>73% correct</li>\n</ul>\n<h4 id=\"Dictionary-Based-Disambiguation\">Dictionary-Based Disambiguation</h4>\n<ol>\n<li>Disambiguation based on sense definitions</li>\n<li>Thesaurus-Based Disambiguation</li>\n<li>Disambiguation based on translations in a second-language corpus</li>\n</ol>\n<p>sense definition</p>\n<ul>\n<li>find keywords in definition of a word\n<ul>\n<li>cone\n<ul>\n<li>... pollen-bearing scales or bracts in <strong>trees</strong></li>\n<li>shape for holding <strong>ice cream</strong></li>\n</ul>\n</li>\n<li>50%~70% accuracies</li>\n<li>Alternatives\n<ul>\n<li>Several iterations to determine correct sense</li>\n<li>Combine the dictionary-based and thesaurus-based disambiguation</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JUI0JUEyJUU1JUJDJTk1JUU1JTg1JUI4\">Thesaurus-Based(索引典)<i class=\"fa fa-external-link-alt\"></i></span> Disambiguation</p>\n<ul>\n<li>Category can determine which word senses are used</li>\n<li>Each word is assigned one or more subject codes which correspond to its different meanings\n<ul>\n<li>select the most often subject code</li>\n<li>考慮w的context，有多少words的senses與w相同</li>\n</ul>\n</li>\n<li>Walker’s Algorithm\n<ul>\n<li>50% accuracy for &quot;interest, point, power, state, and terms&quot;</li>\n</ul>\n</li>\n<li>Problems\n<ul>\n<li>general topic categorization, e.g., mouse in computer</li>\n<li>coverage, e.g., Navratilova</li>\n</ul>\n</li>\n<li>Yarowsky's Algorithm <img data-src=\"/img/nlp/yarowsky-algo.webp\" alt=\"\" /> <img data-src=\"/img/nlp/yarowsky-algo2.webp\" alt=\"\" /> <img data-src=\"/img/nlp/yarowsky-algo3.webp\" alt=\"\" />\n<ul>\n<li>\n<ol>\n<li>categorize sentences</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>categorize words</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>disambiguate by decision rule for Naïve Bayes</li>\n</ol>\n</li>\n<li>result <img data-src=\"/img/nlp/yarowsky-result.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Disambiguation based on translations in a second-language corpus</p>\n<ul>\n<li>the word “interest” has two translations in German\n<ul>\n<li>“Beteiligung” (legal share--50% a interest in the company)</li>\n<li>“Interesse” (attention, concern--her interest in Mathematics)</li>\n</ul>\n</li>\n<li>Example: … showed interest …\n<ul>\n<li>Look up English-German dictionary, show → zeigen</li>\n<li>Compute R(Interesse, zeigen) and R(Beteiligung, zeigen)</li>\n<li>R(Interesse, zeigen) &gt; R(Beteiligung, zeigen)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Unsupervised-Disambiguation\">Unsupervised Disambiguation</h4>\n<p>P(vj|sk) are estimated using the EM algorithm</p>\n<ol>\n<li>Random initialization of P(vj|sk)(word)</li>\n<li>For each context ci of w, compute P(ci|sk)(sentence)</li>\n<li>Use P(ci|sk) as training data</li>\n<li>Reestimate P(vj|sk)(word)</li>\n</ol>\n<p>Surface Representations(features)</p>\n<ul>\n<li>Collocational\n<ul>\n<li>words that appear in specific positions to the right and left of the target word</li>\n<li>limited to the words themselves as well as part of speech</li>\n<li>Example: guitar and bassplayer stand\n<ul>\n<li>[guitar, NN, and, CJC, player, NN, stand, VVB]</li>\n<li>In other words, a vector consisting of [position n word, position n part-of-speech…]</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Co-occurrence\n<ul>\n<li>words that occur regardless of position</li>\n<li>Typically limited to frequency counts</li>\n<li>Assume we’ve settled on a possible vocabulary of 12 words that includes guitarand playerbut not andand stand</li>\n<li>Example: guitar and bassplayer stand\n<ul>\n<li>Assume a 12-word sentence includes guitar and player but not &quot;and&quot; and stand</li>\n<li>[0,0,0,1,0,0,0,0,0,1,0,0]</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Applications</p>\n<ul>\n<li>tagging\n<ul>\n<li>translation</li>\n<li>information retrieval</li>\n</ul>\n</li>\n</ul>\n<p>different label</p>\n<ul>\n<li>Generic thematic roles (aka case roles)\n<ul>\n<li>Agent, instrument, source, goal, etc.</li>\n</ul>\n</li>\n<li>Propbank labels\n<ul>\n<li>Common set of labels ARG0-ARG4, ARGM</li>\n<li>specific to verb semantics</li>\n</ul>\n</li>\n<li>FrameNet frame elements\n<ul>\n<li>Conceptual and frame-specific</li>\n</ul>\n</li>\n<li>Example: [Ochocinco] bought [Burke] [a diamond ring]\n<ul>\n<li>generic: Agent, Goal, Theme</li>\n<li>propbank: ARG0, ARG2, ARG1</li>\n<li>framenet: Customer, Recipe, Goods</li>\n</ul>\n</li>\n</ul>\n<p>Semantic Role Labeling</p>\n<ul>\n<li>automatically identify and label thematic roles\n<ul>\n<li>For each verb in a sentence\n<ul>\n<li>For each constituent\n<ul>\n<li>Decide if it is an argument to that verb</li>\n<li>if it is an argument, determine what kind</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>feature\n<ul>\n<li>from parse and lexical item</li>\n<li>&quot;path&quot;</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Lexical-Acquisition\">Lexical Acquisition</h3>\n<ul>\n<li>Verb Subcategorization\n<ul>\n<li>the syntactic means by which verbs express their arguments</li>\n</ul>\n</li>\n<li>Attachment Ambiguity\n<ul>\n<li>The children ate the cake with their hands</li>\n<li>The children ate the cake with blue icing</li>\n</ul>\n</li>\n<li>SelectionalPreferences\n<ul>\n<li>The semantic categorization of a verb’s arguments</li>\n</ul>\n</li>\n<li>Semantic Similarity (refer to IR course)\n<ul>\n<li>Semantic similarity between words</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Verb-Subcategorization\">Verb Subcategorization</h4>\n<p>a particular set of syntactic categories that a verb can appear with is called a <strong>subcategorization frame</strong> <img data-src=\"/img/nlp/subcategorization.webp\" alt=\"\" /></p>\n<p>Brent’s subcategorization frame learner</p>\n<ol>\n<li>Cues: Define a regular pattern of words and syntactic categories\n<ol>\n<li>ε: error rate of assigning frame f to verb v based on cue cj</li>\n</ol>\n</li>\n<li>Hypothesis Testing: Define null hypothesis H0: “the frame is not appropriate for the verb”\n<ol>\n<li>Reject this hypothesis if the cue cj indicates with high probability that our H0 is wrong</li>\n</ol>\n</li>\n</ol>\n<p>Example<br />\nCues</p>\n<ul>\n<li>\n<p>regular pattern for subcategorization frame “NP NP”</p>\n<ul>\n<li>(OBJ | SUBJ_OBJ | CAP) (PUNC |CC)<br />\nNull hypothesis testing</li>\n</ul>\n</li>\n<li>\n<p>Verb vi occurs a total of n times in the corpus and there are m &lt; n occurrences with a cue for frame fj</p>\n</li>\n<li>\n<p>Reject the null hypothesis H0 that vi does not accept fj with the following probability of error <img data-src=\"/img/nlp/brent-null-hypothesis.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p>Brent’s system does well at precision, but not well at recall</p>\n</li>\n<li>\n<p>Manning’s system</p>\n<ul>\n<li>solve this problem by using a tagger and running the cue detection on the output of the tagger</li>\n<li>learn a lot of subcategorization frames, even those it is low-reliability</li>\n<li>still low performance</li>\n<li>improve : use prior knowledge</li>\n</ul>\n</li>\n</ul>\n<p>PCFG prefers to parse common construction</p>\n<ul>\n<li>P(A|prep, verb, np1, np2, w) ~= P(A|prep, verb, np1, np2)\n<ul>\n<li>Do not count the word outside of frame</li>\n<li>w: words outside of “verb np1(prep np2)”</li>\n<li>A: random variable representing attachment decision</li>\n<li>V(A): verb or np1</li>\n<li>Counter example\n<ul>\n<li>Fred saw a movie with Arnold Schwarzenegger</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>P(A|prep, verb, np1, np2, noun1, noun2) ~= P(A|prep, verb, noun1, noun2)\n<ul>\n<li>noun1 = head of np1, noun2 = head of np2</li>\n<li>total parameters: $10^{13}$ = #(prep) x #(verb) x #(noun) x #(noun)</li>\n</ul>\n</li>\n<li>P(A= noun | prep, verb, noun1) vs. P(A= verb | prep, verb, noun1)\n<ul>\n<li>compare probability to be verb and probability to be noun</li>\n</ul>\n</li>\n</ul>\n<p>Technique: Alternative to reduce parameters</p>\n<ul>\n<li>Condition probabilities on fewer things</li>\n<li>Condition probabilities on more general things</li>\n</ul>\n<p>The model asks the following questions</p>\n<ul>\n<li>VAp: Is there a PP headed by p and following the verb v which attaches to v(VAp=1) or not (VAp=0)?</li>\n<li>NAp: Is there a PP headed by p and following the noun n which attaches to n (NAp=1) or not (NAp=0)?</li>\n<li>(1) Determine the attachment of a PP that is immediately following an object noun, i.e. compute the probability of NAp=1</li>\n<li>In order for the first PP headed by the preposition p to attach to the verb, both VAp=1 and NAp=0\n<ul>\n<li>calculate likelihood ratio between V and N <img data-src=\"/img/nlp/likelihood-ratio-vn.webp\" alt=\"\" /></li>\n<li>maximum estimation\n<ul>\n<li>P(VA = 1 | v) = C(v, p) / C(v)</li>\n<li>P(NA = 1 | n) = C(n, p) / C(n)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Estimation of PP attachment counts\n<ul>\n<li>Sure Noun Attach\n<ul>\n<li>If a noun is followed by a PP but no preceding verb, increment C(prep attached to noun)</li>\n</ul>\n</li>\n<li>Sure Verb Attach\n<ul>\n<li>if a passive verb is followed by a PP other than a “by” phrase, increment C(prep attached to verb)</li>\n<li>if a PP follows both a noun phrase and a verb but the noun phrase is a pronoun, increment C(prep attached to verb)</li>\n</ul>\n</li>\n<li>Ambiguous Attach\n<ul>\n<li>if a PP follows both a noun and a verb, see if the probabilities based on the attachment decided by previous way</li>\n<li>otherwise increment both attachment counters by 0.5</li>\n</ul>\n</li>\n<li><img data-src=\"/img/nlp/attach-example.webp\" alt=\"\" /></li>\n<li>Sparse data is a major cause of the difference between the human and program performance(attachment indeterminacy不確定性)</li>\n</ul>\n</li>\n</ul>\n<p>Using Semantic Information</p>\n<ul>\n<li>condition on semantic tags of verb &amp; noun\n<ul>\n<li>Sue bought a plant with Jane(human)</li>\n<li>Sue bought a plant with yellow leaves(object)</li>\n</ul>\n</li>\n</ul>\n<p>Assumption<br />\nThe noun phrase serves as the subject of the relative clause</p>\n<ul>\n<li>collect “ subject-verb” and “verb-object” pairs.(training part)</li>\n<li>compute t-score (testing part)\n<ul>\n<li>t-score &gt; 0.10 (significant)</li>\n</ul>\n</li>\n</ul>\n<p>P (relative clause attaches to x | main verb of clause =v) &gt; P (relative clause attaches to y | main verb of clause=v)<br />\n↔ P (x= subject/object | v) &gt; P (y= subject/ object|v)</p>\n<p>Selectional Preferences</p>\n<ul>\n<li>Most verbs prefer particular type of arguments\n<ul>\n<li>eat → object (food item)</li>\n<li>think → subject (people)</li>\n<li>bark → subject (dog)</li>\n</ul>\n</li>\n<li>Aspects of meaning of a word can be inferred\n<ul>\n<li>Susan had never eaten a fresh <strong>durian</strong> before (food item)</li>\n</ul>\n</li>\n<li>Selectional preferences can be used to rank different parses of a sentence</li>\n<li>Selectional preference strength\n<ul>\n<li>how strongly the verb constrains its direct object</li>\n<li><img data-src=\"/img/nlp/selection-strength.webp\" alt=\"\" /></li>\n<li>KL divergence between the prior distribution of direct objects of general verb and the distribution of direct objects of specific verb</li>\n<li>2 assumptions\n<ul>\n<li>only the head noun of the object is considered</li>\n<li>rather than dealing with individual nouns, we look at classes of nouns</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Selectional association\n<ul>\n<li>Selectional Association between a verb and a class is this class's contribution to S(v) / the overall preference strength S(v) <img data-src=\"/img/nlp/selectional-association.webp\" alt=\"\" /></li>\n<li>There is also a rule for assigning association strengths to nouns instead of noun classes\n<ul>\n<li>If noun belongs to several classes, then its choose the highest association strength among all classes</li>\n</ul>\n</li>\n<li>estimating the probability that a direct object in noun class c occurs given a verb v\n<ul>\n<li>A(interrupt, chair) = max(A(interrupt, people), A(interrupt, furniture)) = A(interrupt, people)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Example <img data-src=\"/img/nlp/selectional-example.webp\" alt=\"\" />\n<ul>\n<li>eat prefers fooditem\n<ul>\n<li>A(eat, food)=1.08 → very specific</li>\n</ul>\n</li>\n<li>seehas a uniform distribution\n<ul>\n<li>A(see, people)=A(see, furniture)=A(see, food)=A(see, action)=0 → no selectional preference</li>\n</ul>\n</li>\n<li>find disprefers action item\n<ul>\n<li>A(find, action)=-0.13 → less specific</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Semantic Similarity</p>\n<ul>\n<li>assessing semantic similarity between a new word and other already known words</li>\n<li>Vector Space vs Probabilistic</li>\n<li>Vector Space\n<ul>\n<li>Words can be expressed in different spaces: document space, word spaceand modifier space</li>\n<li>Similarity measures for binary vectors: matching coefficient, Dice coefficient, Jaccard(or Tanimoto) coefficient, Overlap coefficientand cosine</li>\n<li>Similarity measures for the real-valued vector space: cosine, Euclidean Distance, normalized correlation coefficient\n<ul>\n<li>cosine assumes a Euclidean space which is not well-motivated when dealing with word counts</li>\n</ul>\n</li>\n<li><img data-src=\"/img/nlp/similarity-measure.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Probabilistic Measures\n<ul>\n<li>viewing word counts by representing them as probability distributions</li>\n<li>compare two probability distributions using\n<ul>\n<li>KL Divergence</li>\n<li>Information Radius(Irad)</li>\n<li>L1Norm</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap14-Computational-Discourse\">Chap14 Computational Discourse</h2>\n<table>\n<thead>\n<tr>\n<th>Level</th>\n<th>Well-formedness constraints</th>\n<th>Types of ambiguity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Lexical</td>\n<td>Rules of inflection and derivation</td>\n<td></td>\n</tr>\n<tr>\n<td>structural, morpheme boundaries, morpheme identity</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Syntactic</td>\n<td>Grammar rules</td>\n<td>structural, POS</td>\n</tr>\n<tr>\n<td>Semantic</td>\n<td>Selection restrictions</td>\n<td>word sense, quantifier scope</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU4JUFGJUFEJUU3JTk0JUE4JUU1JUFEJUE2\">Pragmatic<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td>conversation principles</td>\n<td>pragmatic function</td>\n</tr>\n</tbody>\n</table>\n<p>Computational Discourse</p>\n<ul>\n<li>Discourse(語篇)\n<ul>\n<li>A group of sentences with the same coherence relation</li>\n</ul>\n</li>\n<li>Coherence relation\n<ul>\n<li>the 2nd sentence offers the reader an explaination or cause for the 1st sentence</li>\n</ul>\n</li>\n<li>Entity-based Coherence\n<ul>\n<li>relationships with the entities, introducing them and following them in a focused way</li>\n<li>Discourse Segmentation\n<ul>\n<li>Divide a document into a linear sequence of multiparagraph passages</li>\n<li>Academic article\n<ul>\n<li>Abstract</li>\n<li>Introduction</li>\n<li>Methodology</li>\n<li>Results</li>\n<li>Conclusion</li>\n</ul>\n</li>\n<li><img data-src=\"http://www.wannabehacks.co.uk/images/Inverted_pyramid_in_comprehensive_form.jpg\" alt=\"Inverted Pyramid\" /></li>\n<li>Applications\n<ul>\n<li>News</li>\n<li>Summarize different segments of a document</li>\n<li>Extract information from inside a single discourse segment</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>TextTiling (Hearst,1997)</p>\n<ul>\n<li>Tokenization\n<ul>\n<li>Each space-delimited word in the input is converted to lower-case</li>\n<li>Words in a stop list of function words are thrown out</li>\n<li>The remaining words are morphologically stemmed</li>\n<li>The stemmed words are grouped into pseudo-sentencesof length w = 20</li>\n</ul>\n</li>\n<li>Lexical score determination\n<ul>\n<li>compute a lexical cohesion(結合) score between pseudo-sentences\n<ul>\n<li>score: average similarity of words in the pseudo-sentences before gap to pseudo-sentences after the gap(??)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Boundary identification\n<ul>\n<li>Compute a depth score for each gap</li>\n<li>Boundaries are assigned at any valley which is deeper than a cutoff</li>\n</ul>\n</li>\n</ul>\n<p>Coherence Relations</p>\n<ul>\n<li>Result\n<ul>\n<li>The Tin Woodman was caught in the rain. His joints rusted</li>\n</ul>\n</li>\n<li>Explanation\n<ul>\n<li>John hid Bill’s car keys. He was drunk</li>\n</ul>\n</li>\n<li>Parallel\n<ul>\n<li>The Scarecrow wanted some brains</li>\n<li>The Tin Woodman wanted a heart</li>\n</ul>\n</li>\n<li>Elaboration(詳細論述)\n<ul>\n<li>Dorothy was from Kansas</li>\n<li>She lived in the midst of the great Kansas prairies</li>\n</ul>\n</li>\n<li>Occasion(起因)\n<ul>\n<li>Dorothy picked up the oil-can</li>\n<li>She oiled the Tin Woodman’s joints</li>\n</ul>\n</li>\n</ul>\n<p>Coherence Relation Assignment</p>\n<ul>\n<li>Discourse parsing</li>\n<li>Open problems</li>\n</ul>\n<p>Cue-Phrase-Based Algorithm</p>\n<ul>\n<li>\n<p>Using cue phrases</p>\n<ul>\n<li>Segment the text into discourse segments</li>\n<li>Classify the relationship between each consecutive discourse</li>\n</ul>\n</li>\n<li>\n<p>Cue phrase</p>\n<ul>\n<li>connectives, which are often conjunctions or adverbs\n<ul>\n<li>because, although, but, for example, yet, with, and</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>discourse uses vs. sentential uses</p>\n<ul>\n<li><strong>With</strong> its distant orbit, Mars exhibits frigid weather conditions. (因為長距離的運行軌道，火星天氣酷寒)</li>\n<li>We can see Mars <strong>with</strong> an ordinary telescope</li>\n</ul>\n</li>\n<li>\n<p><img data-src=\"/img/nlp/discourse-relation.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p>Temporal Relation</p>\n<ul>\n<li>ordered in time (Asynchronous)\n<ul>\n<li>before, after ...</li>\n</ul>\n</li>\n<li>overlapped (Synchronous)\n<ul>\n<li>at the same time</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Contingency Relation</p>\n<ul>\n<li>因果關係，附帶條件</li>\n</ul>\n</li>\n<li>\n<p>Comparison Relation</p>\n<ul>\n<li>difference between two arguments</li>\n</ul>\n</li>\n<li>\n<p>Expansion Relation</p>\n<ul>\n<li>expands the information for one argument in the other one or continues the narrative flow</li>\n</ul>\n</li>\n<li>\n<p>Implicit Relation</p>\n<ul>\n<li>Discourse marker is absent</li>\n<li>颱風來襲，學校停止上課</li>\n</ul>\n</li>\n<li>\n<p>Chinese Relation Words <img data-src=\"/img/nlp/chinese-coherence-relation.webp\" alt=\"\" /></p>\n<ul>\n<li>Ambiguous Discourse Markers\n<ul>\n<li>而：而且, 然而, 因而</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Reference-Resolution\">Reference Resolution</h3>\n<p><img data-src=\"/img/nlp/reference-resolution.webp\" alt=\"\" /></p>\n<ul>\n<li>Evoke\n<ul>\n<li>When a referent is first mentioned in a discourse, we say that a representation for it is <strong>evoked into</strong> the model</li>\n</ul>\n</li>\n<li>Access\n<ul>\n<li>Upon subsequent mention, this representation is <strong>accessed from</strong> the model</li>\n</ul>\n</li>\n</ul>\n<p>Five Types of Referring Expressions</p>\n<ul>\n<li>Indefinite Noun Phrases(不定名詞)\n<ul>\n<li>marked with the determiner a, some, this ...</li>\n<li>Create a new internal symbol and add to the current world model\n<ul>\n<li>Mayumi has bought a new automobile</li>\n<li>automobile(g123)</li>\n<li>new(g123)</li>\n<li>owns(mayumi, g123)</li>\n</ul>\n</li>\n<li>non-specific sense to describe an object\n<ul>\n<li>Mayumi wantsto buy a new XJE</li>\n</ul>\n</li>\n<li>whole classes of objects\n<ul>\n<li>A new automobiletypically requires repair twice in the first 12 months</li>\n</ul>\n</li>\n<li>collect one or more properties\n<ul>\n<li>The Macho GTE XL is a new automobile</li>\n</ul>\n</li>\n<li>Question and commands\n<ul>\n<li>Is her automobile in a parking placenear the exit?</li>\n<li>Put her automobile into a parking placenear the exit!</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Definite Noun Phrases(定名詞)\n<ul>\n<li>simple referential and generic uses(the same as indefinite)</li>\n<li>indicate an individual by description that they satisfy\n<ul>\n<li>The manufacturer <strong>of this automobile</strong> should be indicted</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Pronouns(代名詞)\n<ul>\n<li>reference backs to entities that have been introduced by previous nounphrases in a discourse</li>\n<li>non-referential noun phrase\n<ul>\n<li>non-exist object</li>\n</ul>\n</li>\n<li>logical variable\n<ul>\n<li>No male driveradmits that heis incompetent</li>\n</ul>\n</li>\n<li>something that is available from the context of utterance, but has not been explicitly mentioned before\n<ul>\n<li>Here they come, late again!</li>\n<li>Can't easily know who are &quot;they&quot;</li>\n</ul>\n</li>\n<li>Anaphora\n<ul>\n<li>Number Agreements\n<ul>\n<li>John has a Ford Falcon. It is red</li>\n<li>John has three Ford Falcons. They are red</li>\n</ul>\n</li>\n<li>Person Agreement(人稱)</li>\n<li>Gender Agreement</li>\n<li>Selection Restrictions\n<ul>\n<li>verb and its arguments</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Demonstratives (指示詞)\n<ul>\n<li>this, that</li>\n</ul>\n</li>\n<li>Names\n<ul>\n<li>Full name &gt; long definite description &gt; short definite description &gt; last name&gt; first name &gt; distal demonstrative &gt; proximate demonstrative &gt; NP &gt; stressed pronoun &gt; unstressed pronoun</li>\n</ul>\n</li>\n</ul>\n<p>Information Status</p>\n<ul>\n<li>Referential forms used to provide new or old information</li>\n<li>givenness hierarchy <img data-src=\"/img/nlp/givenness-hierarchy.webp\" alt=\"\" /></li>\n<li>Definite-indefinite is a clue to given-new status\n<ul>\n<li>The sales managere(given) employed a foreign distributor(new)</li>\n</ul>\n</li>\n<li>If there are ambiguous noun phrases in a sentence, then it extracts the presuppositions to provide extra constraints</li>\n<li>When some new information is added to knowledge base, check if it is consistent with what we already know</li>\n</ul>\n<p>Active model of understanding</p>\n<ul>\n<li>Given a text, build up predictions or expectations about new information and actively compare these with successive input to resolve ambiguities</li>\n<li>Construct a proof of the information provided in a sentence from the existing world knowledge and plausible inference rules illustrated</li>\n<li>the inference are not sensitive to the order\n<ul>\n<li>if the proposition that the disc is heavy is inferred, then it is not changed after the discourse has finished</li>\n<li>Solution: describe the propositions in temporal order</li>\n</ul>\n</li>\n<li>Script: encapsulate a sequence of actions that belong together into a script</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"code\"><pre><span class=\"line\">automobile_buying:</span><br><span class=\"line\">&lt;&#123;<span class=\"built_in\">customer</span>(C), <span class=\"built_in\">automobile</span>(A), <span class=\"built_in\">dealer</span>(D), <span class=\"built_in\">garage</span>(G)&#125;,</span><br><span class=\"line\">\t&lt;</span><br><span class=\"line\">\t\t<span class=\"built_in\">goes</span>(C, G),</span><br><span class=\"line\">\t\t<span class=\"built_in\">test_drives</span>(C, A),</span><br><span class=\"line\">\t\t<span class=\"built_in\">orders</span>(C, A, D),</span><br><span class=\"line\">\t\t<span class=\"built_in\">delivers</span>(D, A, C),</span><br><span class=\"line\">\t\t<span class=\"built_in\">drives</span>(C, A)</span><br><span class=\"line\">\t&gt;</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li>HHChen 課堂講義</li>\n</ul>\n","categories":["筆記"],"tags":["機器學習","自然語言處理","統計"]},{"title":"hexo 網誌主題選擇","url":"/proper-blog-theme-features/","content":"<h2 id=\"需求\">需求</h2>\n<p>以目前正在使用的hexo為例，優先度由大到小排列：</p>\n<span id=\"more\"></span>\n<ul>\n<li>文章可依category和tag分類，且顯示在文章頁面中的醒目處</li>\n<li>要有table of contents(就是右邊的那個)，<strong>自動編號</strong>，而且能夠點擊移至\n<ul>\n<li>有些theme不支援中文標題，所以有些文章的標題只能用英文或數字開頭</li>\n</ul>\n</li>\n<li>標題足以辨識，分段明顯，除了字體大小外，最好是不同字體或顏色</li>\n<li>很cooooool的特效或功能\n<ul>\n<li>pacman： 頭像會旋轉</li>\n<li>freemind： bootstrap式的欄位</li>\n<li>next： 非常多</li>\n</ul>\n</li>\n<li>介面調整彈性大，可加入自訂html檔案(像是about, reading...)</li>\n<li>腳註功能(footer)\n<ul>\n<li>這不是Markdown預設</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他網誌分析\">其他網誌分析</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbWFyc2dnYm8v\">marsggbo<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>非常酷的特效(動畫)\n<ul>\n<li>header</li>\n<li>上方標題列</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXhtb2UuY29tLw==\">nexmoe<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>列點有對齊線</li>\n<li>標題明確</li>\n<li>非常漂亮的tag和category</li>\n</ul>\n</li>\n<li></li>\n</ul>\n<h2 id=\"之前用過的主題\">之前用過的主題</h2>\n<p>pacman → freemind → next/butterfly</p>\n<table>\n<thead>\n<tr>\n<th>features</th>\n<th>pacman</th>\n<th>freemind</th>\n<th>next</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>category,tag</td>\n<td>🎯</td>\n<td>🎯</td>\n<td>➖</td>\n</tr>\n<tr>\n<td>table of contents</td>\n<td>➖</td>\n<td>➖</td>\n<td>🎯</td>\n</tr>\n<tr>\n<td>title</td>\n<td>⭕</td>\n<td>🎯</td>\n<td>⭕</td>\n</tr>\n<tr>\n<td>special design</td>\n<td>⭕</td>\n<td>🎯</td>\n<td>🎯</td>\n</tr>\n<tr>\n<td>interface</td>\n<td>➖</td>\n<td>➖</td>\n<td>🎯</td>\n</tr>\n<tr>\n<td>個人審美</td>\n<td>⭕</td>\n<td>🎯</td>\n<td>🎯</td>\n</tr>\n</tbody>\n</table>\n","categories":["心得"],"tags":["網誌","hexo","主題"]},{"title":"觀察者模式(Observer Pattern)","url":"/observer-pattern/","content":"<h2 id=\"目標\">目標</h2>\n<p>物件之間一對多的依賴關係，當物件狀態改變時，所有依賴者會被通知</p>\n<h2 id=\"架構\">架構</h2>\n<p><img data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Observer_w_update.svg/1024px-Observer_w_update.svg.png?1618077346924\" alt=\"From Wiki\" /></p>\n<ul>\n<li><code>Subject</code>：主題\n<ul>\n<li>特定事件發生時，會通知觀察者\n<ul>\n<li>如資料改變</li>\n</ul>\n</li>\n<li>新增/移除觀察者：<code>Attach(Observer), Detach(Observer)</code></li>\n<li>用<code>Notify(data)</code>通知觀察者主題有更新</li>\n</ul>\n</li>\n<li><code>Observer</code>：觀察者\n<ul>\n<li>訂閱主題，以便在更新時收到通知</li>\n<li>觀察者收到通知時呼叫<code>Update(Subject)</code>以處理事件</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"分析\">分析</h2>\n<p>設計守則：盡量讓需要互動的物件的關係鬆綁</p>\n<ul>\n<li>主題和觀察者鬆綁\n<ul>\n<li>主題不用知道觀察者的具體類別，只知道觀察者有實作特定介面(<code>Observer</code>)</li>\n<li>可以加入/移除新的觀察者，且主題的程式碼不需修改</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"實作\">實作</h2>\n<p>有一觀測工作站數據的物件，在數據異常時可以通知到多個平台(Email, 簡訊, App)，<br />\n且使用者可以自由調整各平台的通知設定。</p>\n<ul>\n<li>觀察者之間彼此獨立，不可依頼通知觀察者的順序</li>\n<li>主題可以控制改變的定義(如溫度變化超過1度)</li>\n<li>Push model/Pull model\n<ul>\n<li>Push model\n<ul>\n<li>推送所有資料給Observer</li>\n<li>Subject要知道Observer需要什麼，彈性較差</li>\n<li>Observer會接收到不必要的資料</li>\n</ul>\n</li>\n<li>Pull model\n<ul>\n<li>提供必要的資料或其來源(如data id或Subject本身)給Observer，由Observer自行取得相關資料</li>\n<li>每個Observer都要重新取得資料，效率較差</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C#的實作：委託，可看作對函數的抽象，是函數的類別\n<ul>\n<li>委託物件所搭載的方法並不需要屬於同一個類別(即不需要Observer介面)</li>\n</ul>\n</li>\n<li>可以實作一個<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1dpdGhvdXRVbWJyZWxsYS1Cb3kvRGVzaWduLXBhdHRlcm5zLWluLWdhbWUtZGV2ZWxvcG1lbnQvYmxvYi8zODgzYzI3OGJiZWY2MzRlMzdiYzFlYTZmNDY2N2I5MjE4NDcwYmY3L1JlZEFsZXJ0UHJvamVjdC9Bc3NldHMvU2NyaXB0cy9HYW1lRXZlbnRTeXN0ZW0vR2FtZUV2ZW50U3lzdGVtLmNz\">Subject管理員<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"用途\">用途</h2>\n<p>當一個物件的改變需要同時改變其他物件時</p>\n<ul>\n<li>訂閱服務</li>\n<li>MVC架構：後端資料更新、前端顯示資料</li>\n<li>UI事件：OnClick, OnHover</li>\n<li>觸發事件</li>\n</ul>\n<h2 id=\"其他\">其他</h2>\n<ul>\n<li>目前的社群網站則是訂閱後仍會篩選並提供部份資料，而RSS訂閱後可取得所有資料的更新</li>\n</ul>\n<h2 id=\"參考\">參考</h2>\n<ul>\n<li>Wiki</li>\n<li>Head-First Design Pattern</li>\n<li>大話設計模式</li>\n<li>設計模式與遊戲開發的完美結合</li>\n<li>https://notfalse.net/10/observer-pattern</li>\n</ul>\n","categories":["心得"],"tags":["設計模式","觀察者","訂閱","委託"]},{"title":"reactjs 語法","url":"/reactjs/","content":"<h2 id=\"JSX\">JSX</h2>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> element = <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure>\n<p>這個語法叫做 JSX，是一個 JavaScript 的語法擴充，會產生 <strong>React element</strong></p>\n<span id=\"more\"></span>\n<p>Babel 將 JSX 編譯為呼叫 React.createElement() 的程式。</p>\n<p>React DOM 預設會在 render 之前 escape 所有嵌入在 JSX 中的變數。這保證你永遠不會不小心注入任何不是直接寫在你的應用程式中的東西。所有變數都會在 render 之前轉為字串，這可以避免 XSS（跨網站指令碼）攻擊。</p>\n<p>大括號內代表變數，可以放入任何javascript expression</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;Josh Perez&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> element = <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//多行：包在小括號中</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> element = (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Good to see you here.<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Render\">Render</h2>\n<p>使用 React 建立應用程式時，通常會有一個單一的 root DOM node。</p>\n<p>Render 一個 React element 到 root DOM node</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> element = <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\"><span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(element, <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>));</span><br></pre></td></tr></table></figure>\n<p>React element 是 immutable 的，即不能更改</p>\n<p>Element 就像是電影中的一個幀：它代表特定時間點的 UI。</p>\n<h2 id=\"Component\">Component</h2>\n<p>Component 就像是 JavaScript 的 function，它接收參數（稱之為「props」，屬性）並且回傳描述畫面的 React element。</p>\n<p>Component 的字首須為大寫字母。React 會將小寫字母開頭的組件視為原始 DOM 標籤，舉例來說，<code>&lt;div /&gt;</code> 就會被視為是 HTML 的 div 標籤，但是 <code>&lt;Welcome /&gt;</code> 則是一個 component</p>\n<p>props 是唯讀的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Welcome</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此 function 是一個符合規範的 React component，因為它接受一個 props 物件並回傳一個 React element。</p>\n<p>我們稱之為 function component</p>\n<p>也可以使用 ES6 Class 來定義 component：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Welcome</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以在JSX中使用component</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> element = <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Welcome</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;Sara&quot;</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>\n<p>通常來說，每個 React 應用程式都有一個最高層級的 App component。然而，如果你將 React 結合至現存的應用程式中，你可能需要使用像 Button 這樣的小型 component，並由下往上，逐步應用到畫面的最高層級。</p>\n<p>在較大的應用程式中，建構可複用的 component 是非常值得的</p>\n<h2 id=\"State\">State</h2>\n<p>state 類似於 prop，但它是私有且由 component 完全控制的。</p>\n<p>需使用 class component，不能在 function component 使用</p>\n<p>在每次發生更新時，render 方法都會被呼叫</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Clock</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>It is &#123;this.props.date.toLocaleTimeString()&#125;.<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>加入state</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Clock</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>(props);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">state</span> = &#123;<span class=\"attr\">date</span>: <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()&#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>It is &#123;this.state.date.toLocaleTimeString()&#125;.<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>每當 Clock render 到 DOM 的時候，在 React 中稱為「mount」。</p>\n<p>每當產生的 Clock DOM 被移除時，在 React 中稱為「unmount」。</p>\n<p>在class內加入 <code>componentDidMount()</code>, <code>componentWillUnmount()</code>, 和 <code>setState()</code>，用 state 實作每秒更新的部分</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">componentDidMount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">timerID</span> = <span class=\"built_in\">setInterval</span>(</span><br><span class=\"line\">      <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">tick</span>(),</span><br><span class=\"line\">      <span class=\"number\">1000</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">componentWillUnmount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">clearInterval</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">timerID</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">tick</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">date</span>: <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>因為 props 和 state 可能是非同步的被更新，你不應該依賴它們的值來計算新的 state。</p>\n<p>要修正這個問題，使用第二種形式的 setState()，它接受一個 function 而不是一個 object。Function 將接收先前的 state 作為第一個參數，並且將更新的 props 作為第二個參數：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(<span class=\"function\">(<span class=\"params\">state, props</span>) =&gt;</span> (&#123;</span><br><span class=\"line\">  <span class=\"attr\">counter</span>: state.<span class=\"property\">counter</span> + props.<span class=\"property\">increment</span></span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n<p>React是「上至下」或「單向」的資料流：任何 state 總是由某個特地的 component 所擁有，任何從 state 得到的資料或 UI，state 只能影響自身和 child component。</p>\n<h2 id=\"事件處理\">事件處理</h2>\n<p>事件的名稱在 React 中都是 camelCase，而在 HTML DOM 中則是小寫。</p>\n<ul>\n<li>HTML DOM 對照 React\n<ul>\n<li><code>onclick</code> → <code>onClick</code></li>\n<li><code>onclick=&quot;click()&quot;</code> → <code>onClick=&#123;click&#125;</code></li>\n</ul>\n</li>\n</ul>\n<p>在 React 中，你不能夠在像在 HTML DOM 中使用 <code>return false</code> 來避免瀏覽器預設行為。你必須明確地呼叫 <code>preventDefault</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a href=<span class=\"string\">&quot;#&quot;</span> onclick=<span class=\"string\">&quot;console.log(&#x27;The link was clicked.&#x27;); return false&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"title class_\">Click</span> me</span><br><span class=\"line\">&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n<p>在 React 中，你則可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ActionLink</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">handleClick</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    e.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;The link was clicked.&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;handleClick&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      Click me</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 JavaScript 中，class 的方法在預設上是沒有被綁定（bound）的。如果你忘了綁定 this.handleClick 並把它傳遞給 onClick 的話，this 的值將會在該 function 被呼叫時變成 undefined。</p>\n<p>總之，當你使用一個方法，卻沒有在後面加上 () 之時（例如當你使用 onClick={this.handleClick} 時），你應該要綁定這個方法。</p>\n<p>The bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Toggle</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>(props);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">state</span> = &#123;<span class=\"attr\">isToggleOn</span>: <span class=\"literal\">true</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 為了讓 `this` 能在 callback 中被使用，這裡的綁定是必要的：</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">handleClick</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">handleClick</span>.<span class=\"title function_\">bind</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">handleClick</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(<span class=\"function\"><span class=\"params\">state</span> =&gt;</span> (&#123;</span><br><span class=\"line\">      <span class=\"attr\">isToggleOn</span>: !state.<span class=\"property\">isToggleOn</span></span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;this.state.isToggleOn ? &#x27;ON&#x27; : &#x27;OFF&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Toggle</span> /&gt;</span></span>,</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>如果呼叫 bind 對你來說很麻煩的話，你可以用別的方式。如果你使用了還在測試中的 class fields 語法的話，你可以用 class field 正確的綁定 callback：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">LoggingButton</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 這個語法確保 `this` 是在 handleClick 中被綁定：</span></span><br><span class=\"line\">  <span class=\"comment\">// 警告：這是一個還在*測試中*的語法：</span></span><br><span class=\"line\">  handleClick = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;this is:&#x27;</span>, <span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        Click me</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>傳遞一個額外的參數給 event handler。例如，如果 id 是每一行的 ID 的話，下面兩種語法都可行：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;button onClick=&#123;<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">deleteRow</span>(id, e)&#125;&gt;<span class=\"title class_\">Delete</span> <span class=\"title class_\">Row</span>&lt;/button&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.deleteRow.bind(this,</span> <span class=\"attr\">id</span>)&#125;&gt;</span>Delete Row<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>以上這兩行程式是相同的。一個使用 arrow functions，另一個則使用了 Function.prototype.bind。</p>\n<p>以這兩個例子來說，e 這個參數所代表的 React 事件將會被當作 ID 之後的第二個參數被傳遞下去。在使用 arrow function 時，我們必須明確地將它傳遞下去，但若使用 bind 語法，未來任何的參數都將會自動被傳遞下去。</p>\n<h2 id=\"條件render\">條件render</h2>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> isLoggedIn = <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">isLoggedIn</span>;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> button;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (isLoggedIn) &#123;</span><br><span class=\"line\">     button = <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">LogoutButton</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleLogoutClick&#125;</span> /&gt;</span></span>;</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     button = <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">LoginButton</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleLoginClick&#125;</span> /&gt;</span></span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> (</span><br><span class=\"line\">     <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">Greeting</span> <span class=\"attr\">isLoggedIn</span>=<span class=\"string\">&#123;isLoggedIn&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       &#123;button&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">     <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">   );</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>用 <code>&amp;&amp;</code> 來條件顯示<br />\n因為在 JavaScript 中，<code>true &amp;&amp; expression</code> 總是回傳 <code>expression</code> ，而 <code>false &amp;&amp; expression</code> 總是回傳 <code>false</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Mailbox</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> unreadMessages = props.<span class=\"property\">unreadMessages</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;unreadMessages.length &gt; 0 &amp;&amp;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          You have &#123;unreadMessages.length&#125; unread messages.</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>React 在遇到 <code>null</code> 或 <code>false</code> 時都會忽略(不顯示)</p>\n<p>或用條件運算式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;isLoggedIn</span><br><span class=\"line\">    ? <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">LogoutButton</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleLogoutClick&#125;</span> /&gt;</span></span></span><br><span class=\"line\">    : <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">LoginButton</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleLoginClick&#125;</span> /&gt;</span></span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"列表與key\">列表與key</h2>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> listItems = numbers.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">number</span>) =&gt;</span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;number&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>你會收到一個關於你應該提供 key 給每一個列表項目的警告。key 是當你在建立一個 element 列表時必須使用的特殊的 string attribute。</p>\n<p>key 幫助 React 分辨哪些項目被改變、增加或刪除。在 array 裡面的每個 element 都應該要有一個 key，如此才能給予每個 element 一個固定的身份：</p>\n<p>通常，你會使用資料的 ID 作為 key：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> listItems = numbers.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">number</span>) =&gt;</span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;number.toString()&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    &#123;number&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> todoItems = todos.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">todo</span>) =&gt;</span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;todo.id&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    &#123;todo.text&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>當你 render 的項目沒有固定的 ID 且你也沒有更好的辦法時，你可以使用項目的索引做為 key：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> todoItems = todos.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">todo, index</span>) =&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">// 請在項目沒有固定的 ID 時才這樣做</span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;index&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    &#123;todo.text&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>React 預設將會使用索引作為 key。但並不建議你使用索引作為 key，尤其如果項目的順序會改變的話。這會對效能產生不好的影響，也可能會讓 component state 產生問題</p>\n<ul>\n<li>key 必須在 Sibling 中是唯一的</li>\n<li>key 的功能是提示 React，但它們不會被傳遞到 component 的 prop。</li>\n</ul>\n<p>應該把 key 放在 array 產生 item 的 render，而不是把它放在 item 的 render。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ListItem</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> value = props.<span class=\"property\">value</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"comment\">// 錯！你不需要在這裡指出 key：</span></span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;value.toString()&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;value&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">NumberList</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> numbers = props.<span class=\"property\">numbers</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> listItems = numbers.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">number</span>) =&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">// 錯！你應該要在這裡指出 key：</span></span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ListItem</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;number&#125;</span> /&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;listItems&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>一個好的經驗法則是，在 map() 呼叫中的每個 element 都會需要 key。</p>\n<h2 id=\"Form\">Form</h2>\n<p>把這個表單寫成一個 controlled component： 用 state 來 顯示 value，onChange 時更新</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">NameForm</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>(props);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">state</span> = &#123;<span class=\"attr\">value</span>: <span class=\"string\">&#x27;&#x27;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">handleChange</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">handleChange</span>.<span class=\"title function_\">bind</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">handleSubmit</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">handleSubmit</span>.<span class=\"title function_\">bind</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">handleChange</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;<span class=\"attr\">value</span>: event.<span class=\"property\">target</span>.<span class=\"property\">value</span>&#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">handleSubmit</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;A name was submitted: &#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">value</span>);</span><br><span class=\"line\">    event.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">onSubmit</span>=<span class=\"string\">&#123;this.handleSubmit&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          Name:</span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.value&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.handleChange&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Submit&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這意味著你必須寫更多的 code，但現在你同時可以將 value 傳遞給其他的 UI element，或是從其他 event handler 重置。</p>\n<h3 id=\"Select\">Select</h3>\n<p>在 React 中並不是用 selected attribute，而是在 select 的標籤上用一個 value attribute</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FlavorForm</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>(props);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">state</span> = &#123;<span class=\"attr\">value</span>: <span class=\"string\">&#x27;coconut&#x27;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">handleChange</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">handleChange</span>.<span class=\"title function_\">bind</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">handleSubmit</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">handleSubmit</span>.<span class=\"title function_\">bind</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">handleChange</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;<span class=\"attr\">value</span>: event.<span class=\"property\">target</span>.<span class=\"property\">value</span>&#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">handleSubmit</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;Your favorite flavor is: &#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">value</span>);</span><br><span class=\"line\">    event.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">onSubmit</span>=<span class=\"string\">&#123;this.handleSubmit&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          Pick your favorite flavor:</span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.value&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.handleChange&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;grapefruit&quot;</span>&gt;</span>Grapefruit<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;lime&quot;</span>&gt;</span>Lime<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;coconut&quot;</span>&gt;</span>Coconut<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;mango&quot;</span>&gt;</span>Mango<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Submit&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你可以將一個 array 傳給 value 這個 attribute，這使得你可以在一個 select 中選取多個選項：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;select multiple=&#123;<span class=\"literal\">true</span>&#125; value=&#123;[<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;C&#x27;</span>]&#125;&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"input-file\">input file</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">&quot;file&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>\n<p>由於它的值是唯讀，它在 React 中是一個 uncontrolled component。在稍後的文件中有其他關於它和其他 uncontrolled component 的討論。</p>\n<h3 id=\"多個input\">多個input</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Reservation</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>(props);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">state</span> = &#123;</span><br><span class=\"line\">      <span class=\"attr\">isGoing</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">numberOfGuests</span>: <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">handleInputChange</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">handleInputChange</span>.<span class=\"title function_\">bind</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">handleInputChange</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> target = event.<span class=\"property\">target</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> value = target.<span class=\"property\">name</span> === <span class=\"string\">&#x27;isGoing&#x27;</span> ? target.<span class=\"property\">checked</span> : target.<span class=\"property\">value</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> name = target.<span class=\"property\">name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      [name]: value</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          Is going:</span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">name</span>=<span class=\"string\">&quot;isGoing&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">checked</span>=<span class=\"string\">&#123;this.state.isGoing&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.handleInputChange&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          Number of guests:</span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">name</span>=<span class=\"string\">&quot;numberOfGuests&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.numberOfGuests&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;this.handleInputChange&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在一個 controlled component 上指明 value prop 可避免使用者改變輸入，除非你希望使用者這樣做。如果你已經指明了 value 但輸入仍然是可以被修改的，你很可能是不小心將 value 的值設定為 undefined 或 null。</p>\n<p>下面的程式碼就是一個範例。（輸入原先是被鎖住的，但在短暫的延遲後，變得可以被修改了。）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;hi&quot;</span> /&gt;</span></span>, mountNode);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;null&#125;</span> /&gt;</span></span>, mountNode);</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"uncontrolled-component\">uncontrolled component</h3>\n<p>在大多數的情況下，我們推薦使用 controlled component 來實作表單。在控制元件裡，表單的資料是被 React component 所處理。另一個選擇是 uncontrolled component，表單的資料是由 DOM 本身所處理的。</p>\n<p>使用 ref 來從 DOM 取得表單的資料，而不是為了每個 state 的更新寫 event handler。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">NameForm</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>(props);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">handleSubmit</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">handleSubmit</span>.<span class=\"title function_\">bind</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">input</span> = <span class=\"title class_\">React</span>.<span class=\"title function_\">createRef</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">handleSubmit</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;A name was submitted: &#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">input</span>.<span class=\"property\">current</span>.<span class=\"property\">value</span>);</span><br><span class=\"line\">    event.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">onSubmit</span>=<span class=\"string\">&#123;this.handleSubmit&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          Name:</span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&#123;this.input&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Submit&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果你想找出一個完整的、包含驗證、可追蹤拜訪欄位並能處理提交表單等功能的解決方案，Formik 是一個很熱門的選擇。然而，它是在與 controlled component 和維持 state 相同的原則上所建立的，所以別忘了學習它。</p>\n<h2 id=\"提升-State\">提升 State</h2>\n<p>在 React 中，將 state 搬移到需要它的 component 的共同最近的祖先來共享 state。這被稱為「提升 state」。</p>\n<p>我們將從 TemperatureInput 移除 local state 並且搬移它到 Calculator。</p>\n<p>我們移除了它的 local state，並且不讀取 this.state.temperature，我們現在讀取 this.props.temperature。當我們想要改變時不呼叫 this.setState()，我們現在呼叫 this.props.onTemperatureChange()，它是由 Calculator 提供的</p>\n<p>calculator 傳入 prop.onChange 方法，供child的值改變時呼叫onChange()，以改變calculator(parent)的值</p>\n<p>通常來說，state 會優先被加入到需要 render 的 component。接著，如果其他的 component 也需要的話，你可以提升 state 到共同最靠近的 ancestor。</p>\n<p><strong>你應該依賴上至下的資料流，而不是嘗試在不同 component 之間同步 state。</strong></p>\n<p>當你在 UI 上看到一些錯誤時，你可以使用 React Developer Tools 來檢查 prop 並往 tree 的上方尋找，直到找到負責更新 state 的 component。這讓你可以追蹤到錯誤的來源</p>\n<h2 id=\"合成-vs-繼承\">合成 vs 繼承</h2>\n<p>有些 component 不會提早知道它們的 children 有些什麼。對於像是 Sidebar 或 Dialog</p>\n<p>我們建議這些 component 使用特殊的 <code>children</code> prop 將 children element 直接傳入到它們的輸出：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">FancyBorder</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&#123;</span>&#x27;<span class=\"attr\">FancyBorder</span> <span class=\"attr\">FancyBorder-</span>&#x27; + <span class=\"attr\">props.color</span>&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;props.children&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任何在 &lt;FancyBorder&gt; JSX tag 內的內容都被作為 children prop 被傳遞給 FancyBorder component。</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">WelcomeDialog</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">FancyBorder</span> <span class=\"attr\">color</span>=<span class=\"string\">&quot;blue&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;Dialog-title&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        Welcome</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;Dialog-message&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        Thank you for visiting our spacecraft!</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">FancyBorder</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可用來排版</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">SplitPane</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;SplitPane&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;SplitPane-left&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;props.left&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;SplitPane-right&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;props.right&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">SplitPane</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">left</span>=<span class=\"string\">&#123;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        &lt;<span class=\"attr\">Contacts</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      right=&#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Chat</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#125; /&gt;</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 Facebook 中，我們使用 React 在成千上萬個 component，我們找不到任何使用案例來推薦你建立繼承結構的 component。</p>\n<h2 id=\"用-React-思考\">用 React 思考</h2>\n<h3 id=\"第一步：將-UI-拆解成-component-層級\">第一步：將 UI 拆解成 component 層級</h3>\n<p>首先，你要做的是將視覺稿中每一個 component （及 subcomponent）都圈起來，並幫它們命名。</p>\n<p>其中一個技巧是單一職責原則，它的意思是：在我們的理想中，一個 component應該只負責做一件事情。如果這個 component 最後變大了，你就需要再將它分成數個更小的 subcomponent 。</p>\n<p>由於你常常會展示 JSON 的資料模型給使用者，你會發現，如果你的模式是正確地被建立的話，你的 UI（以及你的 component 結構）會很好的相互對應。這是因為 UI 和資料模型通常是遵守同樣的資訊架構，這意味著將你的 UI 拆成 component 通常是相當容易的。</p>\n<h3 id=\"第二步：在-React-中建立一個靜態版本\">第二步：在 React 中建立一個靜態版本</h3>\n<p>在你有了 component 層級後，就可以開始實作你的應用程式了。最簡單的方式是為你的應用程式建立一個接收資料模型、render UI 且沒有互動性的版本。建立一個靜態版本需要打很多字，但不需要想很多，而加上互動性則相反，需要做很多的思考，很少的打字，所以最好的方式是把這幾個過程都分開來。接下來，我們會知道為什麼是如此。</p>\n<p>請完全不要使用 state 來建立這個靜態版本。State 是保留給互動性的，也就是會隨時間改變的資料。既然我們目前要做的是這應用程式的靜態版本，你就不需要 state。</p>\n<p>你可以從最上層開始，或從最下層開始。也就是說，你可以先從層級較高的 component 開始做起，或者你也可以從比它低層級的開始。在比較簡單的例子中，通常從上往下是比較簡單的。但在較為大型的專案中，從下往上、邊寫邊測試則比較容易。</p>\n<p>React 的 單向資料流（也可稱為單向綁定）確保所有 component 都是模塊化且快速的。</p>\n<h3 id=\"第三步：找出最少（但完整）的-UI-State-的代表\">第三步：找出最少（但完整）的 UI State 的代表</h3>\n<p>請找出你的應用程式所需的最少的呈現方式，並在你遇到其他東西時再計算它們。例如，如果你在建立一個待辦清單，使用一個可以用來代表待辦事項的 array。不要另外用一個獨立的 state 變數來追蹤數量。當你要 render 代辦事項的數量時，讀取待辦事項 array 的長度即可。</p>\n<p>對於每一個資料，問你自己這三個問題：</p>\n<ol>\n<li>這個資料是從 parent 透過 props 傳下來的嗎？如果是的話，那它很可能不是 state。</li>\n<li>這個資料是否一直保持不變呢？如果是的話，那它很可能不是 state。</li>\n<li>你是否可以根據你的 component 中其他的 state 或 prop 來計算這個資料呢？如果是的話，那它一定不是 state。</li>\n</ol>\n<h3 id=\"第四步：找出你的-State-應該在哪裡\">第四步：找出你的 State 應該在哪裡</h3>\n<p>我們需要找出哪幾個 component 會 mutate，或者擁有，這個 state。</p>\n<p>請記得，React 的核心精神是單向資料流，從 component 的層級從高往下流。<strong>也許哪個 component 該擁有 state 在一開始並不是很明顯</strong>。對新手來說，這往往是最難理解的概念，所以請跟著以下的步驟來思考：</p>\n<p>在你的應用程式中的每個 state：</p>\n<ul>\n<li>指出每個根據 state 來 render 某些東西的 component。</li>\n<li>找出一個共同擁有者 component（在層級中單一一個需要 state 的、在所有的 component 之上的 component）。</li>\n<li>應該擁有 state 的會是共同擁有者 component 或另一個更高層級的 component。(找最高級的component來持有state)</li>\n<li>如果你找不出一個應該擁有 state 的 component 的話，那就建立一個新的 component 來保持 state，並把它加到層級中共同擁有者 component 之上的某處。</li>\n</ul>\n<h3 id=\"第五步：加入相反的資料流\">第五步：加入相反的資料流</h3>\n<p>現在是時候支援另一種資料流的方向了：在層級深處的表格 component 需要更新 FilterableProductTable 的 state。</p>\n<p>讓我們思考一下我們想要做些什麼。我們想確保當使用者改變這個表格時，我們會更新 state 以反映使用者的輸入。既然 component 只應該更新它自己本身的 state， FilterableProductTable 將會把 callback 傳給 SearchBar，而它們則會在 state 該被更新的時候被觸發。我們可以在輸入上使用 onChange 這個 event 來 接收通知。被 FilterableProductTable 傳下來的 callback 則會呼叫 setState()，之後應用程式就會被更新。</p>\n<h2 id=\"推薦的-Toolchain\">推薦的 Toolchain</h2>\n<p>React 團隊主要推薦以下的方案：</p>\n<ul>\n<li>如果你正在學習 React 或建立全新的 single-page 應用程式，請使用 Create React App。</li>\n<li>如果你正在建立一個使用 Node.js 的 server-rendered 網頁，請使用 Next.js。</li>\n<li>如果你正在建立一個靜態內容的網頁，請使用 Gatsby。</li>\n<li>如果你正在建立一個 component 函式庫或與現存程式碼倉庫進行接軌，請使用更靈活的 Toolchain。</li>\n</ul>\n<h2 id=\"Reference\">Reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC1oYW50LnJlYWN0anMub3JnL2RvY3MvaGVsbG8td29ybGQuaHRtbA==\">React: 語法教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC1oYW50LnJlYWN0anMub3JnL3R1dG9yaWFsL3R1dG9yaWFsLmh0bWw=\">React: 動手做教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>[React: css])(https://reactjs.org/docs/faq-styling.html)</li>\n</ul>\n","categories":["筆記"],"tags":["reactjs","javascript"]},{"title":"Wide And Deep 論文簡介：快思慢想的神經網路版","url":"/recommender-wide-and-deep/","content":"<h2 id=\"簡介\">簡介</h2>\n<p>Wide And Deep 模型由簡單的Wide模型和複雜的Deep模型組成</p>\n<span id=\"more\"></span>\n<ul>\n<li>Wide\n<ul>\n<li>Memorization(記憶)\n<ul>\n<li><strong>Generalized linear model</strong>(e.g., Linear Regression Model)</li>\n<li>適合學習稀疏、簡單的規則\n<ul>\n<li>看了 A 電影的使用者經常喜歡看電影 B，這種「因為 A 所以 B」式的規則</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>從歷史資料學習規則(exploit)</li>\n<li>讓模型記住大量的直接且重要的規則，這正是單層的線性模型所擅長的</li>\n</ul>\n</li>\n<li>Deep\n<ul>\n<li>Generalization(泛化)\n<ul>\n<li><strong>Embedding-based models</strong>(e.g., Deep Neural Network)</li>\n<li>適合學習通用、深層的規則</li>\n</ul>\n</li>\n<li>學習新的特徵組合(explore)</li>\n</ul>\n</li>\n<li>合併 Wide and Deep(Jointly Training) <img data-src=\"/img/recommend/wide-and-deep.webp\" alt=\"\" />\n<ul>\n<li>既能快速處理和記憶大量歷史行為特徵，又具有強大的表達能力</li>\n<li>和 Deep-only 比: 準確率高</li>\n<li>和 Wide-only 比: 更好的泛化規則</li>\n</ul>\n</li>\n<li>當user-item matrix非常稀疏時，例如有獨特愛好的users以及很小眾的items，NN很難為users和items學習到有效的embedding。導致over-generalize，並推薦不怎麼相關的物品。此時Memorization就展示了優勢，它可以「記住」這些特殊的特徵組合</li>\n</ul>\n<h2 id=\"實作\">實作</h2>\n<h3 id=\"Wide\">Wide</h3>\n<ul>\n<li>$y = w^Tx+b$</li>\n<li>Cross product transformation\n<ul>\n<li><img data-src=\"/img/recommend/wide-and-deep-cross-product.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Optimizer: Follow-the-regularized-leader (FTRL) + L1 regularization\n<ul>\n<li>FTRL with L1非常注重模型的稀疏性。採用L1 FTRL是想讓Wide部分變得更加稀疏\n<ul>\n<li>但是兩個id類特徵向量進行組合，在維度爆炸的同時，會讓原本已經非常稀疏的multihot特徵向量，變得更加稀疏。正因如此，wide部分的權重數量其實是海量的。為了不把數量如此之巨的權重都搬到線上進行model serving，採用FTRL過濾掉哪些稀疏特徵無疑是非常好的工程經驗</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Wide的輸入特徵較少\n<ul>\n<li>只有已安裝app和瀏覽過的app</li>\n<li>希望能充份發揮Wide記憶能力強的優勢</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Deep\">Deep</h3>\n<ul>\n<li>特徵(節錄)\n<ul>\n<li>用戶特徵\n<ul>\n<li>年齡、國家、語言</li>\n<li>行為特徵\n<ul>\n<li>已安裝App個數</li>\n<li>已安裝的App</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>情境特徵\n<ul>\n<li>使用裝置</li>\n<li>目前時間(星期，小時)</li>\n</ul>\n</li>\n<li>App特徵\n<ul>\n<li>發佈時間</li>\n<li>下載數</li>\n</ul>\n</li>\n<li>候選App</li>\n<li>部份特徵有做embedding(Wide完全沒有)\n<ul>\n<li>32 dimension</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Optimizer: AdaGrad</li>\n</ul>\n<h3 id=\"Jointly-Training\">Jointly Training</h3>\n<ul>\n<li>同時更新Wide和Deep的權重\n<ul>\n<li><img data-src=\"/img/recommend/wide-and-deep-joint-train.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>結構圖\n<ul>\n<li><img data-src=\"/img/recommend/wide-and-deep-features.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"結果\">結果</h2>\n<p>實際用於 Google Play Store App 推薦</p>\n<p><img data-src=\"/img/recommend/wide-and-deep-exp.webp\" alt=\"\" /></p>\n<ul>\n<li>Deep雖然離線結果較差，但實際結果仍比Wide好\n<ul>\n<li>深層模型有學習到使用者的隱含喜好，而非直接記憶規則</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"心得\">心得</h2>\n<p>這就是<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWFuYWdlcnRvZGF5LmNvbS50dy9hcnRpY2xlcy92aWV3LzUwOTA1Pw==\">快思慢想<i class=\"fa fa-external-link-alt\"></i></span>的神經網路版</p>\n<p>Wide處理簡單的規則且省力，Deep處理複雜的規則但費力</p>\n<p>和純粹的deep learning相比，適合需要記憶大量簡易規則的情境。如App推薦中，有安裝A就推薦B</p>\n<p>Wide and Deep是一個架構，代表Wide模型和Deep模型可以為任意實作，所以衍生出許多變形，如DeepFM, Deep and Cross等</p>\n<!--\ndeep的效率跟不上，可以固定住deep，對wide進行online learning來增強記憶性。\n非常贊 跟我們的討論結果基本一致，deep部分做batch update保證准確性和充足表達能力，wide部分做online learning保證實效性。\n\n用戶-物品互動太少 → over-generalize\nwide部分的引入是為瞭解決 niche items的問題，對於很長尾的物品，dense features是沒法學到什麼東西的\n\nHowever,deep neural networks with embeddings can over-generalize\nand recommend less relevant items when the user-item inter-\nactions are sparse and high-rank.\n當user-item matrix非常稀疏時，例如有和獨特愛好的users以及很小眾的items，NN很難為users和items學習到有效的embedding。這種情況下，大部分user-item應該是沒有關聯的，但dense embedding 的方法還是可以得到對所有 user-item pair 的非零預測，因此導致 over-generalize並推薦不怎麼相關的物品。此時Memorization就展示了優勢，它可以“記住”這些特殊的特徵組合。\nhttps://en.wikipedia.org/wiki/Rank_(linear_algebra)\n-->\n<h2 id=\"Reference\">Reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MDYuMDc3OTI=\">Cheng, Heng-Tze, et al. &quot;Wide &amp; deep learning for recommender systems.&quot; Proceedings of the 1st workshop on deep learning for recommender systems. 2016.<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL2RhdGEtc2NpZW50aXN0cy1wbGF5Z3JvdW5kL3dpZGUtZGVlcCVFNiVBOCVBMSVFNSU5RSU4Qi0lRTYlOEUlQTglRTglOTYlQTYlRTclQjMlQkIlRTclQjUlQjEtJUU1JThFJTlGJUU3JTkwJTg2LThiYWRhY2Y3NzdmMw==\">https://medium.com/data-scientists-playground/wide-deep模型-推薦系統-原理-8badacf777f3<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNDI5NTg4MzQ=\">https://zhuanlan.zhihu.com/p/142958834<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81MzM2MTUxOQ==\">https://zhuanlan.zhihu.com/p/53361519<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["推薦系統","Google","WideAndDeep"]},{"title":"正規表示式簡介","url":"/regular-expression/","content":"<h2 id=\"簡介\">簡介</h2>\n<ul>\n<li>Regular Expression, 也稱為 RegExp、regex、RE、正規表示式(台灣)、正則表達式(中國)</li>\n<li>用來處理符合某個句法規則的字串</li>\n<li>現在的標準已經被ISO(國際標準組織)批准和被Open Group組織認定(POSIX 1003.2)</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"用途\">用途</h2>\n<p>指定字串樣式並加以處理</p>\n<ul>\n<li>搜尋</li>\n<li>取出資訊</li>\n<li>取代\n<ul>\n<li>color → colour</li>\n<li>12/06/2006 → 2006-12-06</li>\n</ul>\n</li>\n<li>檢查指定格式\n<ul>\n<li>Email格式檢查</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"哪些軟體使用正規表示式？\">哪些軟體使用正規表示式？</h2>\n<p>Unix like下的工具大都內建regex，Windows下的工具比較少，但也有逐漸增多的趨勢</p>\n<p>各程式的regex雖大同小異，但仍有不同，不能直接轉換</p>\n<ul>\n<li>unix工具： <code>grep</code>, <code>sed</code>, <code>awk</code> ...</li>\n<li>編輯器：<code>vi</code>, <code>emacs</code>, <code>notepad++</code> ...</li>\n<li>程式語言： <code>Java</code>, <code>Python</code>, <code>Ruby</code> ...</li>\n</ul>\n<h2 id=\"規則表\">規則表</h2>\n<p>只列出常用的</p>\n<h3 id=\"位置和量詞\">位置和量詞</h3>\n<table>\n<thead>\n<tr>\n<th>字元</th>\n<th>說明</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>^</td>\n<td>表示位置在開頭</td>\n<td><code>^A</code> → 開頭為A</td>\n</tr>\n<tr>\n<td>$</td>\n<td>表示位置在結尾</td>\n<td><code>A$</code> → 結尾為A</td>\n</tr>\n<tr>\n<td>*</td>\n<td>比對前一個字零次或更多次</td>\n<td><code>go*gle</code> → ggle, gogle, google...</td>\n</tr>\n<tr>\n<td>+</td>\n<td>比對前一個字一次或更多次</td>\n<td><code>go+gle</code> → gogle, google, gooogle...</td>\n</tr>\n<tr>\n<td>?</td>\n<td>比對前一個字零次或一次</td>\n<td><code>go?gle</code> → ggle, gogle</td>\n</tr>\n<tr>\n<td>{}</td>\n<td>表示前面的字元或集合出現的次數</td>\n<td><code>c&#123;1,3&#125;</code> → c, cc, ccc<br><code>c&#123;3, &#125;</code> → ccc, cccc, ...</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"集合\">集合</h3>\n<table>\n<thead>\n<tr>\n<th>字元</th>\n<th>說明</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[ ]</td>\n<td>代表集合中的任一字元</td>\n<td><code>[01256]</code> → 0,1,2,5,6</td>\n</tr>\n<tr>\n<td>-</td>\n<td>在中括號內表示「範圍」(使用ascii計算)</td>\n<td><code>[0-9]</code> → 0, 1, 2, ..., 9</td>\n</tr>\n<tr>\n<td>^</td>\n<td>在中括號內表示「否定」</td>\n<td><code>[^aeiou]</code> → 所有子音(❌); a, e, i, o, u以外的所有字元(✔️)</td>\n</tr>\n<tr>\n<td><code>|</code></td>\n<td>或</td>\n<td><code>cat|dog|bird</code> → cat, dog, bird</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>容許多個範圍(自動加上或)：<code>[a-zA-Z0-9]</code></li>\n</ul>\n<h3 id=\"子字串\">子字串</h3>\n<table>\n<thead>\n<tr>\n<th>字元</th>\n<th>說明</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>(x)</td>\n<td>將x取出，拿取資料時使用</td>\n<td><code>(a*) and (b*)</code> 可找出「aaa and bb」 中的 「aaa」 和 「bb」</td>\n</tr>\n<tr>\n<td>(?:x)</td>\n<td>不取出x，純粹當作一個子空間使用</td>\n<td><code>industr(?:y|ies)</code> → industry, industries</td>\n</tr>\n<tr>\n<td>(?=x)</td>\n<td>正向肯定預查，確認後方的字串是否符合</td>\n<td><code>Windows(?=95|98|NT|2000)</code> → Windows95(✔️), Windows8(❌)</td>\n</tr>\n<tr>\n<td>(?!x)</td>\n<td>正向否定預查，確認後方的字串是否不符合</td>\n<td><code>Windows(?!95|98|NT|2000)</code> → Windows95(❌), Windows8(✔️)</td>\n</tr>\n<tr>\n<td>(?&lt;=x)</td>\n<td>反向肯定預查，確認前方的字串是否符合</td>\n<td><code>(?&lt;=95|98|NT|2000)Windows</code> → 95Windows(✔️), 8Windows(❌)</td>\n</tr>\n<tr>\n<td>(?&lt;!x)</td>\n<td>反向否定預查，確認前方的字串是否符合</td>\n<td><code>(?&lt;!95|98|NT|2000)Windows</code> → 95Windows(❌), 8Windows(✔️)</td>\n</tr>\n<tr>\n<td>(?)</td>\n<td>不貪心的比對<br>(不貪心：比對到的字串愈短愈好)</td>\n<td><code>abc*</code> → ab, abc, abcc... <code>abc*?</code> → ab, abc, abcc都只會match到ab</td>\n</tr>\n<tr>\n<td>\\1</td>\n<td>捕獲分組</td>\n<td><code>&lt;p id=&quot;(\\d*)&quot;&gt;\\1&lt;/p&gt;</code> → <code>&lt;p id=&quot;123&quot;&gt;123&lt;/p&gt;</code>(✔️), <code>&lt;p id=&quot;123&quot;&gt;1234&lt;/p&gt;</code>(❌)</td>\n</tr>\n</tbody>\n</table>\n<p>預查即代表不對應，所以最後四個範例都只會回傳符合的<code>Windows</code>而非<code>Windows95</code>或<code>Windows8</code>，而<code>(?:x)</code>是可以回傳符合的<code>industry</code>或<code>industries</code></p>\n<h3 id=\"簡寫\">簡寫</h3>\n<table>\n<thead>\n<tr>\n<th>字元</th>\n<th>說明</th>\n<th>等價表達</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\\d</td>\n<td>數字</td>\n<td><code>[0-9]</code></td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>\\d以外的字元</td>\n<td><code>[^0-9]</code></td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>數字、字母、底線</td>\n<td><code>[a-zA-Z0-9_]</code></td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>\\w以外的字元</td>\n<td><code>[^a-zA-Z0-9_]</code></td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>空白字元(tab, 換行等)</td>\n<td><code>[ \\t\\n\\x0B\\f\\r]</code></td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>\\s以外的字元</td>\n<td><code>[^ \\t\\n\\x0B\\f\\r]</code></td>\n</tr>\n<tr>\n<td>\\n</td>\n<td>換行符號</td>\n<td></td>\n</tr>\n<tr>\n<td>.</td>\n<td>\\n以外的字元</td>\n<td><code>[^\\n]</code></td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>英文字的邊界(空格、逗號等符號)</td>\n<td><code>(?&lt;=\\W)(?=\\w)|(?&lt;=\\w)(?=\\W)</code></td>\n</tr>\n<tr>\n<td>\\B</td>\n<td>\\b以外的字元</td>\n<td><code>(?&lt;=\\W)(?=\\W)|(?&lt;=\\w)(?=\\w)</code></td>\n</tr>\n<tr>\n<td>\\x[hex]</td>\n<td>十六進位，其中hex是十六進位數目</td>\n<td><code>\\x38</code> → $38_{16}$ = 56</td>\n</tr>\n<tr>\n<td>\\u[unicode]</td>\n<td>unicode，其中unicode為十六進位數字</td>\n<td><code>\\u00A9</code> → ©</td>\n</tr>\n<tr>\n<td>\\c[X]</td>\n<td>控制字元，其中 X 是控制字元</td>\n<td><code>\\cM</code> 可以比對<code>Control-M</code></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>特殊字元：有特殊意義的字元，如上述<code>*</code>, <code>$</code>等\n<ul>\n<li>若要搜尋這些字元，必須在其前方加上<code>\\</code>以跳脫字元（<code>\\^</code> → ^）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"正規表示式範例\">正規表示式範例</h2>\n<ul>\n<li>數字或無輸入：<code>^[0-9]*$</code></li>\n<li>m到n個數字：<code>^\\d&#123;m,n&#125;$</code></li>\n<li>正整數(含0)：<code>^0$|^[1-9][0-9]*$</code></li>\n<li>用戶密碼 - 以字母開頭，長度在 6~18 之間，只能包含英數字和底線：<code>^[a-zA-Z]\\w&#123;5,17&#125;$</code></li>\n<li>漢字：<code>[\\u4e00-\\u9fa5]+</code></li>\n<li>IP位址：<code>^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$</code>\n<ul>\n<li>可以先取<code>^(\\d&#123;0,3&#125;)\\.(\\d&#123;0,3&#125;)\\.(\\d&#123;0,3&#125;)\\.(\\d&#123;0,3&#125;)$</code>，再判斷取出的數字在0~255之間即可</li>\n</ul>\n</li>\n<li>可以思考下列兩題，是否有更好的寫法\n<ul>\n<li>一個月的 31 天(包含01-09和1-31)：<code>^((0?[1-9])|((1|2)[0-9])|30|31)$</code></li>\n<li>Email：<code>^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]&#123;2,4&#125;)*$</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"例：以grep搜尋檔案內容\">例：以grep搜尋檔案內容</h3>\n<ul>\n<li>在當前目錄尋找包含輸出函式<code>printf</code>或<code>fprintf</code>的檔案: <code>grep -Ern 'f?printf' .</code>\n<ul>\n<li><code>-E</code> 使用正規表示式</li>\n<li><code>-r</code> 遞迴搜尋(子目錄)</li>\n<li><code>-n</code> 列出行數</li>\n<li>加入尋找<code>sprintf</code>\n<ul>\n<li><code>grep -Ern '[sf]?printf' .</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"心得\">心得</h2>\n<ul>\n<li>regex 很像 CFG(Context Free Grammar)，應該是可以互相轉換</li>\n<li>可先使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVnZXgxMDEuY29tLw==\">regex101<i class=\"fa fa-external-link-alt\"></i></span>測試regex是否正確</li>\n</ul>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvUmVndWxhcl9leHByZXNzaW9u\">Wikipedia<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2lydy5uY3V0LmVkdS50dy9wZXRlcmp1L3dlYnNsaWRlL3JlLw==\">regexp介紹<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53ZWJwYWdlLmlkdi50dy9tYWlsbGlzdC9tYWlsbGlzdDQvcHJvLzA1L3JlZ3VsYXIxLmh0bQ==\">簡易圖片教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2F0ZWRldi53b3JkcHJlc3MuY29tLzIwMDcvMTEvMjMvJUU2JUFEJUEzJUU4JUE2JThGJUU4JUExJUE4JUU3JUE0JUJBJUU1JUJDJThGLXJlZ3VsYXItZXhwcmVzc2lvbi8=\">regexp-轉載自張智星教學網站<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jicy5xdWlja2Jlc3QubmV0L3ZpZXd0aHJlYWQucGhwP3RpZD01OTc4\">朱孝國--正規表示式原理及應用<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xpbnV4LnZiaXJkLm9yZy9saW51eF9iYXNpYy8wMzMwcmVndWxhcmV4LnBocCNiYXNpY19yZWdleHA=\">鳥哥<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3VzZXIuZnJkbS5pbmZvL2NraHVuZy9iL3JlL2luZGV4LnBocA==\">洪朝貴:字串樣版 Regexp: 兼談長線學習投資<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmhzZG4ubmV0LzEzOTEuaHRtbA==\">常用的正規表示式<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oa3Zpc2lvbi5jbi8yMDE5LzA5LzA0LyVFNSVBRCVBNiVFNCVCOSVBMCVFNiVBRCVBMyVFNSU4OCU5OSVFOCVBMSVBOCVFOCVCRSVCRSVFNSVCQyU4Ri8=\">学习正则表达式<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["正規表示式(RegExp)","上下文無關文法(CFG)"]},{"title":"使用revealJS + markdown 製作簡報","url":"/revealjs-markdown/","content":"<p>優點：減少排版時間、資料為純文字、版本控制容易</p>\n<p><a href=\"https://gitqwerty777.github.io/revealjs-markdown/\">說明簡報連結</a></p>\n<p>之後會再分析其他簡報製作方法</p>\n","categories":["筆記"],"tags":["簡報","revealjs","markdown"]},{"title":"RFC2119簡介","url":"/rfc2119/","content":"<h2 id=\"簡介\">簡介</h2>\n<ul>\n<li>RFC (Request For Comments，請求意見稿)\n<ul>\n<li>記錄網際網路規範、協定、過程等的標準檔案</li>\n</ul>\n</li>\n<li>RFC2119用五個關鍵詞來定義需求的嚴格程度</li>\n</ul>\n<h2 id=\"名詞解釋\">名詞解釋</h2>\n<p>這些詞通常會以大寫字母的形式出現(中文可以用斜體或粗體強調)</p>\n<ol>\n<li><code>MUST</code>, <code>REQUIRED</code>, <code>SHALL</code>(<code>強制</code>, <code>必須</code>, <code>務必</code>, <code>只能</code>)\n<ul>\n<li>絕對必要的需求</li>\n</ul>\n</li>\n<li><code>MUST NOT</code>, <code>SHALL NOT</code>(<code>禁止</code>, <code>不能</code>, <code>不要</code>)\n<ul>\n<li>絕對禁止的需求</li>\n<li><code>MUST</code>的反意詞</li>\n</ul>\n</li>\n<li><code>SHOULD</code>, <code>RECOMMENDED</code>(<code>應</code>, <code>應該</code>, <code>建議</code>, <code>推薦</code>)\n<ul>\n<li>可能有特定原因或環境，需要忽略某些需求</li>\n<li>在了解後果的前提下，可以選擇這樣做</li>\n<li>在用不建議的選擇之前，需仔細考慮</li>\n</ul>\n</li>\n<li><code>SHOULD NOT</code>, <code>NOT RECOMMENDED</code>(<code>不應</code>, <code>不應該</code>, <code>不建議</code>, <code>不推薦</code>)\n<ul>\n<li><code>SHOULD</code>的反義詞</li>\n</ul>\n</li>\n<li><code>MAY</code>, <code>OPTIONAL</code>(<code>可以</code>, <code>可選</code>)\n<ul>\n<li>完全可選的需求\n<ul>\n<li>不強制實作</li>\n</ul>\n</li>\n<li>沒有實作此需求的產品<u>必須(MUST)</u>能夠和有實作此需求的產品互動(Interoperate)，反之亦然</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"使用方式\">使用方式</h2>\n<ul>\n<li>這些祈使詞<em>必須</em>被小心地、保守地使用</li>\n<li>這些祈使詞的使用<em>必須</em>是出於互動的實際需要、或是為了限制可能的潛在危害</li>\n</ul>\n<h2 id=\"安全考量\">安全考量</h2>\n<ul>\n<li>這些詞語常用於安全性暗示(Security Implication)\n<ul>\n<li>安全的影響可能不明顯\n<ul>\n<li>文件作者需要闡述(elaborate)不遵守這些要求會帶來的問題</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWV0Zi5vcmcvcmZjL3JmYzIxMTkudHh0\">RFC2119原文<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC1zdHlsZS1ndWlkZS5yZWFkdGhlZG9jcy5pby96aF9DTi9sYXRlc3QvJUU1JTg1JUIzJUU0JUJBJThFJUU2JTlDJUFDJUU2JThDJTg3JUU1JThEJTk3Lmh0bWw/aGlnaGxpZ2h0PXJmYzIxMTkjaWQ1\">中文技術文檔寫作風格指南<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMzM1Njc5MQ==\">翻譯 RFC 2119: 在 RFC 文檔中, 用於指出規范的要求級別的關鍵詞<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["轉載"],"tags":["需求","文件寫法","RFC"]},{"title":"使用RSS取代推薦演算法","url":"/rss-social-network/","content":"<h2 id=\"RSS簡介\">RSS簡介</h2>\n<p>RSS（英文全稱：RDF Site Summary 或 Really Simple Syndication），中文譯作簡易資訊聚合，是一種訊息來源格式規範，用以聚合多個網站更新的內容並自動通知網站訂閱者。</p>\n<p>使用 RSS 後，網站訂閱者便無需再手動檢視網站是否有新的內容，同時 RSS 可將多個網站更新的內容進行整合，以摘要的形式呈現，有助於訂閱者快速獲取重要資訊。</p>\n<h2 id=\"RSS分析\">RSS分析</h2>\n<p>優點</p>\n<ol>\n<li>不會被推薦演算法<strong>影響閱讀喜好</strong>或<strong>漏掉想看的內容</strong></li>\n<li>統一的閱讀體驗，且沒有廣告</li>\n<li>統整多個網站的資訊，不需個別開啟</li>\n</ol>\n<p>缺點</p>\n<ol>\n<li>麻煩，較難使用(尤其是網站本身不提供rss的情形)</li>\n<li>資訊過多，需要自己篩選</li>\n<li>能看見的內容更依賴自己的選擇，需要自行打破同溫層</li>\n</ol>\n<span id=\"more\"></span>\n<h2 id=\"將網站轉換為RSS\">將網站轉換為RSS</h2>\n<p>理應上，萬物皆可RSS(by 爬蟲)</p>\n<p>方法</p>\n<ol>\n<li>自身擁有rss的網站：直接使用即可</li>\n</ol>\n<ul>\n<li>ptt各板</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5iYmMuY28udWsvemhvbmd3ZW4vdHJhZC9pbmRleC54bWw=\">bbc chinese<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>medium</li>\n</ul>\n<ol start=\"2\">\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnJzc2h1Yi5hcHAv\">rsshub<i class=\"fa fa-external-link-alt\"></i></span>：提供一些網站的rss，可能需要自建服務</li>\n</ol>\n<ul>\n<li>twitter動態</li>\n<li>bilibili動態</li>\n<li>pixiv關注動態</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvcnNzaHViLXJhZGFyL2tlZmpwZm5nbm5kZXBqYm9wZG1vZWJraXBiZ2tnZ2Fh\">rsshub radar<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>chrome擴充套件，可檢查目前網頁是否有可用rss</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JTUy1CcmlkZ2UvcnNzLWJyaWRnZQ==\">rssbridge<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>需自建服務</li>\n<li>facebook fan page</li>\n<li>youtube 頻道</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"閱讀器\">閱讀器</h2>\n<p>目前使用 tiny tiny rss 搭配 rssowl</p>\n<h3 id=\"本地端軟體-windows\">本地端軟體(windows)</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5yc3Nvd2wub3JnLw==\">rssowl<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWl0ZXJzcy5vcmcv\">quiterss<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mZWVkZGVtb24uY29tLw==\">feeddemon<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h3 id=\"線上服務\">線上服務</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mZWVkbHkuY29tLw==\">feedly<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW5vcmVhZGVyLmNvbS8=\">inoreader<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h3 id=\"自建服務\">自建服務</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3R0cnNzLmhlbnJ5LndhbmcvemgvIyVFOSU4MyVBOCVFNyVCRCVCMg==\">tiny tiny rss<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0hlbnJ5UVcvQXdlc29tZS1UVFJTUy9pc3N1ZXMvMTk=\">需安裝nginx<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"備註\">備註</h2>\n<p>許多線上服務也注意到推薦演算法的缺點，所以有「特別關注」的功能</p>\n<p><img data-src=\"/img/other/meme/rss-meme.webp\" alt=\"\" /></p>\n<h2 id=\"使用心得\">使用心得</h2>\n<ul>\n<li>RSS是主動的，推薦是被動的</li>\n<li>根據來源的重要性取捨\n<ul>\n<li>愈重要、含金量愈高的資訊來源愈需要用RSS訂閱的方法，其他娛樂性質的網站如社群網站或ptt就不太需要</li>\n</ul>\n</li>\n<li>可以了解自己的偏好\n<ul>\n<li>看久了就知道哪些網站來源是垃圾，哪些來源是寶藏，當然也需要手動增加/減少來源</li>\n<li>若是推薦演算法，可能會把寶藏當垃圾，把沒用的資訊當寶</li>\n</ul>\n</li>\n<li>一個打破同溫層的方法是看熱門消息\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yc3NodWIuYXBwL3poaWh1L2hvdGxpc3Q=\">知乎熱榜<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yc3NodWIuYXBwL2dpdGh1Yi90cmVuZGluZy9kYWlseS9jJTIzL3poLXR3\">Github Trending<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>發燒影片</li>\n</ul>\n</li>\n<li></li>\n</ul>\n<h2 id=\"推薦閱讀\">推薦閱讀</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3L1JTUw==\">Wiki: RSS<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2lyZWQuY29tL3N0b3J5L3Jzcy1yZWFkZXJzLWZlZWRseS1pbm9yZWFkZXItb2xkLXJlYWRlci8=\">是RSS復興的時候了(It's Time for an RSS Revival)<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXlnb2QubWUvb2hteXJzcy8=\">DIYGod: 我有特別的 RSS 使用技巧<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXlnb2QubWUvZG93bmxvYWQtd2ViaG9vaw==\">DIYGod: 優雅地下載我的B站投幣視頻<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNTQ2NTU1MA==\">你的新聞 App 被推薦算法「毀」了，但 RSS 真的能拯救你嗎<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["記錄"],"tags":["推薦系統","rss","facebook","youtube","ptt","bilibili","pixiv","crawler"]},{"title":"自建網站方法","url":"/simple-website-host/","content":"<h2 id=\"不用免費架站服務的理由\">不用免費架站服務的理由</h2>\n<p>若只是要純粹建blog，用github page + <a href=\"/build-hexo-blog/\">hexo</a> 即可。</p>\n<p>更簡單的方法就是用痞客邦、Blogger等免費部落格。</p>\n<p>不過自架有以下優點</p>\n<span id=\"more\"></span>\n<h3 id=\"資料轉移彈性\">資料轉移彈性</h3>\n<p>要確認資料是容易轉移的，即匯出後的檔案可以開啟，也可以被其他平台匯入。</p>\n<p>即資料的格式是公開的，而非只有特定廠商才能讀取。</p>\n<p>像是 hexo 是用 markdown 格式儲存文章，日後若 hexo 不再更新，可以轉換到其他支援 markdown 的服務，如jekyll。</p>\n<p>儘量減少對特定服務商的依賴</p>\n<p>因為當轉移資料的成本太高時，就會失去選擇的自由。</p>\n<h3 id=\"更多功能\">更多功能</h3>\n<p>免費廠商提供的設定選項不一定符合需求，若要自訂功能就會很麻煩。</p>\n<h2 id=\"網路主機\">網路主機</h2>\n<p>考慮連線速度及品質，最好是找離台灣近一點的host，也可自行用電腦+固定IP架設。</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS90dy9lYzIv\">amazon ec2<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>可選server地區，各地區價格不同</li>\n<li>有提供預設的image，包含LAMP</li>\n<li>第一年免費</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS90dy9saWdodHNhaWwv\">amazon lightsail<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>簡化版的ec2，較便宜</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2l0ZWdyb3VuZC5jb20v\">siteground<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmx1ZWhvc3QuY29t\">bluehost<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"網域\">網域</h2>\n<p>非必要，直接用IP連也可以，只是不好記憶。</p>\n<p>價格很浮動，和機票一樣，建議查完趕快買，不然可能會變貴。</p>\n<p>有些第一年特價的域名最好別買，不然續約時變回原價，又要換域名。</p>\n<h3 id=\"網域商\">網域商</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nYW5kaS5saW5rL2YvMGFjZjQzZmE=\">肝帝 - gandi<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS90dy9yb3V0ZTUzLw==\">推車地圖 - route53<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90dy5nb2RhZGR5LmNvbS8=\">去你爸的 - godaddy<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmFtZWNoZWFwLmNvbQ==\">賤名 - namecheap<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h3 id=\"SSL憑證\">SSL憑證</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZXRzZW5jcnlwdC5vcmcvemgtdHcv\">letsencrypt<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>若用amazon主機，也有<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS90dy9jZXJ0aWZpY2F0ZS1tYW5hZ2VyLw==\">免費提供<i class=\"fa fa-external-link-alt\"></i></span>，</li>\n</ul>\n<h3 id=\"DNS\">DNS</h3>\n<p>建議用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2xvdWRmbGFyZS5jb20v\">cloudflare<i class=\"fa fa-external-link-alt\"></i></span>設定，要換網域商時較方便</p>\n<h2 id=\"用法\">用法</h2>\n<ul>\n<li>個人主頁</li>\n<li>子網域\n<ul>\n<li>直接轉址或用來掛其他主機都很好用</li>\n</ul>\n</li>\n<li>自建服務\n<ul>\n<li><a href=\"/rss-social-network/\">RSS</a></li>\n<li>VPN</li>\n<li>自建Git Server(Gitlab), Docker Server(Harbor)\n<ul>\n<li>Github開私人repo或是檔案太大都要錢</li>\n</ul>\n</li>\n<li>Blog</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"備註\">備註</h2>\n<ul>\n<li>若有學生身份可用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lZHVjYXRpb24uZ2l0aHViLmNvbS9wYWNr\">github學生禮包<i class=\"fa fa-external-link-alt\"></i></span>，提供免費域名及amazon 100鎂額度\n<ul>\n<li>可以用多個同學的github人頭帳號，當長時間的免費仔</li>\n</ul>\n</li>\n<li>個人目前用amazon T2.micro(1GB memory, 8GB Disk, 一個月8鎂左右) + gandi 的 <code>.me</code> 網域(一年17鎂)，還算能接受的價格</li>\n</ul>\n<h2 id=\"參考\">參考</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuanl0MDUzMi5jb20vMjAxNy8xMi8xMS9sYXVuY2gtZWMyLWluLXRlbi1taW51dGVzLw==\">十分鐘在AWS架好個人部落格<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["心得"],"tags":["hexo","markdown","amazon","blog","webhost","ssl","self-host"]},{"title":"文字擴展軟體簡介","url":"/text-expansion/","content":"<h2 id=\"簡介\">簡介</h2>\n<p>文字擴展軟體是用完整文字(通常較長)取代縮寫文字的軟體</p>\n<h3 id=\"軟體\">軟體</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lc3BhbnNvLm9yZy8=\">Espanso<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>使用Rust開發的開源軟體</li>\n<li>擴充套件</li>\n<li>可以替換成圖片</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZWVmdGV4dC5vcmcv\">BeefText<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>使用QT和C++開發的開源軟體(Windows)</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXV0b2hvdGtleS5jb20v\">AutoHotKey<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>執行腳本用的開源軟體(Windows)</li>\n<li>除了文字擴展，還有許多功能，如快捷鍵設定等</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"原理\">原理</h3>\n<ul>\n<li>偵測到對應單字時就取代\n<ul>\n<li>取代方法：先模擬刪除(如輸入backspace)，再模擬輸入或是模擬複製貼上</li>\n<li>VSCode常會無法取代，因為輸入backspace速度太快導致刪除失敗\n<ul>\n<li>需要設定延遲backspace速度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Espanso\">Espanso</h2>\n<p>以 Espanso2 為準</p>\n<p>優點</p>\n<ul>\n<li>能限制在某軟體執行時才取代</li>\n<li>可執行指令(如shell script)</li>\n<li>提供GUI模版</li>\n<li>隨機選擇</li>\n<li>可取代為圖片</li>\n</ul>\n<p>缺點</p>\n<ul>\n<li>設定困難</li>\n</ul>\n<h2 id=\"概念\">概念</h2>\n<p>需要考慮平常會不會意外打出縮寫詞</p>\n<ul>\n<li>用前綴\n<ul>\n<li>如<code>:</code>、<code>;</code>、<code>zz</code>、<code>xx</code>、<code>/</code></li>\n<li>不能有(部份)重複指令\n<ul>\n<li><code>:check</code> 和 <code>:check1</code> 會先觸發 <code>:check</code>，所以<code>:check1</code> 永遠不會被觸發</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>用後綴就可以避免此問題發生</li>\n<li>也可同時用前綴和後綴</li>\n</ul>\n<h2 id=\"用途\">用途</h2>\n<p>這類軟體使用不難，難的是如何應用</p>\n<ul>\n<li>程式模版：<code>;ctemplate</code> → <code>#include &lt;stdio.h&gt;\\nint main()&#123;\\n&#125;</code></li>\n<li>取代<code>alias</code>：<code>git cm</code> → <code>git commit -m &quot;&quot;</code></li>\n<li>Emoji：<code>;;?</code> → ❓</li>\n<li>快捷輸入：<code>;mail</code> → <code>你的信箱</code></li>\n<li>快速執行：<code>=&gt;chrome</code> → 打開chrome</li>\n<li>錯字改正：<code>因該</code> → <code>應該</code></li>\n<li>縮寫擴展：<code>ymd</code> → <code>Yes My Dark</code></li>\n<li>執行指令：\n<ul>\n<li><code>;ip</code> → 機器的ip</li>\n<li><code>;date</code> → 今天的時間</li>\n</ul>\n</li>\n<li>隨機顯示\n<ul>\n<li><code>;greet</code> → <code>早安</code>, <code>早上好</code>, <code>Good Morning</code> 擇一</li>\n</ul>\n</li>\n</ul>\n<p>可參考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dpdHF3ZXJ0eTc3Ny9lc3BhbnNvMi1jb25maWc=\">我的設定檔(Espanso)<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"備註\">備註</h2>\n<p>在特定環境中無法觸發，如虛擬機、Remote Desktop，原因不明</p>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li>其他人的設定檔(Espanso)\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xpc3N5OTMvZXNwYW5zby1jb25maWc=\">https://github.com/Lissy93/espanso-config<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h0bGluMjIyL2VzcGFuc29Db25maWc=\">https://github.com/htlin222/espansoConfig<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZlZGVybWFuL2VzcGFuc28tY29uZmln\">https://github.com/federman/espanso-config<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n","categories":["心得"],"tags":["自動化","文字擴展","Espanso"]},{"title":"程式中的時間議題","url":"/time-formats/","content":"<h2 id=\"簡介\">簡介</h2>\n<p><img data-src=\"/img/other/kronii.webp\" alt=\"\" /></p>\n<p>如果要做一個國際化的應用程式，就需要對應各個國家/文化的時間格式。</p>\n<h2 id=\"議題\">議題</h2>\n<ol>\n<li>時間的表示法\n<ol>\n<li>格式、排序</li>\n<li>年份\n<ol>\n<li>紀元</li>\n<li>年號</li>\n</ol>\n</li>\n<li>月份</li>\n<li>星期\n<ol>\n<li>每個星期的開始日</li>\n</ol>\n</li>\n<li>小時</li>\n<li>時區</li>\n<li>曆法</li>\n<li>一段時間</li>\n</ol>\n</li>\n<li>時區\n<ol>\n<li>夏令時間</li>\n<li>閏年、閏月、閏秒</li>\n</ol>\n</li>\n<li>實作\n<ol>\n<li>資料儲存</li>\n<li>精度</li>\n<li>時間同步</li>\n<li>生日</li>\n<li>時間段和時間點</li>\n</ol>\n<!-- 6. 字串格式 -->\n</li>\n</ol>\n<h2 id=\"時間表示法\">時間表示法</h2>\n<p>參照<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSVNPXzg2MDE=\">ISO8601標準<i class=\"fa fa-external-link-alt\"></i></span>，下列以⭐代表標準表示法。</p>\n<h3 id=\"格式\">格式</h3>\n<p>年由4位數字組成YYYY，月、日用兩位數字表示：MM、DD。<br />\n只使用數字為基本格式。使用短橫線&quot;-&quot;間隔開年、月、日為擴展格式。</p>\n<ol>\n<li>日曆日期表示法</li>\n</ol>\n<ul>\n<li>2022-05-21 (⭐)</li>\n<li>20220521 (⭐)</li>\n<li>2022/05/21</li>\n<li>2022,05,21</li>\n<li>2022.05.21</li>\n</ul>\n<ol start=\"2\">\n<li>順序日期表示法：將一年內的天的序數用3位數字表示</li>\n</ol>\n<ul>\n<li>2022-141 (⭐)</li>\n<li>2022141 (⭐)</li>\n</ul>\n<ol start=\"3\">\n<li>星期日曆表示法：用2位數表示年內第幾個日曆星期，再加上一位數表示日曆星期內第幾天，但日曆星期前要加上一個大寫字母W。每個日曆星期從星期一開始，星期日為第7天\n<ul>\n<li>2022-W21-6 (⭐)</li>\n<li>2022W216 (⭐)</li>\n<li>2022-W01-1是從2022年1月3日開始的，前幾天屬於上年的第53個日曆星期</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"年月日排序\">年月日排序</h3>\n<ul>\n<li>年 月 日 (⭐)</li>\n<li>月 日 年</li>\n<li>日 月 年</li>\n</ul>\n<h3 id=\"年份\">年份</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3LyVFNyVCQSVBQSVFNSU4NSU4Mw==\">紀元<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li>西元/公元\n<ul>\n<li>BC(Before Christ)/AD(Anno Domini)</li>\n<li>BCE(Before Common Era)/CE(Common Era)</li>\n<li>正負號表示 (⭐)\n<ul>\n<li>公元1年為0001年，公元前1年為0000年，公元前2年為-0001年</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>年號\n<ul>\n<li>日本、(中華)民國</li>\n<li>年號會增加大量轉換成本</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>❓某民國什麼時候要廢年號</p>\n</blockquote>\n<h3 id=\"月份\">月份</h3>\n<ul>\n<li>01, 02, 03, ... (⭐)</li>\n<li>January, Febuary, March...</li>\n<li>Jan, Feb, Mar, ...</li>\n<li>1, 2, 3, ...</li>\n</ul>\n<h3 id=\"星期\">星期</h3>\n<p>通常會用當地語言表示</p>\n<ul>\n<li>1, 2, 3, 4, 5, 6, 7 (⭐)</li>\n<li>Sun, Mon, Tue, ...</li>\n<li>日、月、火、水、木、金、土 (日本)</li>\n<li>一、二、三、四、五、六、日</li>\n</ul>\n<p>星期的開始日：會影響日曆的顯示</p>\n<ol>\n<li>星期日(西方國家、日本、港澳)</li>\n<li>星期一(大多亞州國家，⭐)</li>\n<li>星期六(埃及)</li>\n</ol>\n<h3 id=\"小時\">小時</h3>\n<ul>\n<li>24小時制 (⭐)</li>\n<li>12小時制</li>\n<li>12:00是pm還是am\n<ul>\n<li>我很久以前就有的疑惑</li>\n<li>一般來說，12:00pm是中午，12:00am是午夜</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"時區\">時區</h3>\n<ul>\n<li>如果時間在零時區，那麼（不加空格地）在時間最後加一個大寫字母Z</li>\n<li>其他時區用實際時間加時差表示\n<ul>\n<li>22:30:05+08:00 (⭐)</li>\n<li>223005+0800 (⭐)</li>\n<li>223005+08</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"日期-時間\">日期+時間</h3>\n<p>在時間前面加一大寫字母T</p>\n<ol>\n<li>2004-05-03T17:30:08+08:00 (⭐)</li>\n<li>20040503T173008+08 (⭐)</li>\n</ol>\n<h3 id=\"曆法\">曆法</h3>\n<p>公曆(格勒哥里曆)之外，目前廣泛使用的曆法：</p>\n<ul>\n<li>希伯來曆(猶太曆)</li>\n<li>伊斯蘭曆(回回曆)</li>\n<li>農曆\n<ul>\n<li>陰陽合曆：其日期採朔望月以指示月球的相位，年則與太陽相關</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"一段時間\">一段時間</h3>\n<p>時間段：前面加一大寫字母P</p>\n<ul>\n<li>P1Y3M5DT6H7M30S(一年三個月五天六小時七分三十秒內) (⭐)</li>\n<li>19850412/19860101(起始/結束) (⭐)</li>\n<li>19850412/P6M(起始/一段時間) (⭐)</li>\n<li>P6M/19860101(一段時間/結束) (⭐)</li>\n</ul>\n<p>循環時間：前面加上一大寫字母R</p>\n<ul>\n<li><code>R&#123;循環次數&#125;/&#123;開始時間&#125;/&#123;時間間隔&#125;/&#123;結束時間&#125;</code>\n<ul>\n<li>R3/20040506T130000+08/P0Y6M5DT3H0M0S (⭐)</li>\n<li>R/P1Y2M/20250101(無限次循環) (⭐)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"時區-2\">時區</h2>\n<ul>\n<li>時區和經度沒有絕對關係\n<ul>\n<li>夏令時間</li>\n<li>換日線不是直線</li>\n<li>UTC+8的地區有台北、北京、新加坡、印尼等，但新加坡實際的地理位置在UTC+7</li>\n<li>中國全境使用相同時區(UTC+8)</li>\n</ul>\n</li>\n</ul>\n<p>所以在選擇時區時，實際上是在選擇國家或地區</p>\n<h3 id=\"夏令時間-Daylight-Saving-Time\">夏令時間(Daylight Saving Time)</h3>\n<p>以實作上來看，這是最噁心的規則</p>\n<p><img data-src=\"/img/other/meme/disgusting.webp\" alt=\"\" /></p>\n<ol>\n<li>有些地區在接近春季開始的時候，會將時間調快一小時，並在秋季調回來</li>\n<li>這代表春季的某一天會少一個小時，秋季的某一天會多一個小時\n<ol>\n<li>如2018年的夏令時間就直接跳過了2018年3月25日3:00:00到3:59:59</li>\n</ol>\n</li>\n</ol>\n<p>以上述夏令時間為例，假設用戶設定3:30要執行備份任務，有以下實作方法</p>\n<ol>\n<li>檢查經過某個時間點\n<ul>\n<li><code>if (nowTime == 3:30) &#123; runTask(); &#125;</code></li>\n<li>任務不會執行</li>\n<li>如果這是一年執行一次的任務，問題就大了</li>\n</ul>\n</li>\n<li>檢查超過某個時間點\n<ul>\n<li><code>if (nowTime &gt; 3:30 and !isRunTask) &#123;  isRunTask=true; runTask(); &#125;</code></li>\n<li>這種情況，任務會在3:00過後馬上執行(也就是顯示為4:00的時候)</li>\n<li>和用戶想像中不同，並不是3:00再經過30分鐘的時候執行\n<ul>\n<li>如果這個任務有前提任務，而且在3:10分執行，此時會同時觸發執行\n<ul>\n<li>可能會因為執行順序不同而出錯</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>同理，離開夏令時間時，同一個任務可能會被執行兩次</li>\n<li>用戶如果設定「12小時後」執行任務，也會發生類似的問題\n<ul>\n<li>用倒數的方法：實際的12小時後</li>\n<li>用時鐘時間：時鐘上的12小時後</li>\n</ul>\n</li>\n</ul>\n<p>用TimeStamp也無法避免這個問題，會拿到錯的時間<br />\n(有點懷疑是不是我寫錯)</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> arrow</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\">timezone = <span class=\"string\">&quot;Europe/Athens&quot;</span> <span class=\"comment\"># 有夏令時間的時區</span></span><br><span class=\"line\"></span><br><span class=\"line\">now = arrow.get(datetime(<span class=\"number\">2018</span>, <span class=\"number\">3</span>, <span class=\"number\">25</span>, <span class=\"number\">2</span>, <span class=\"number\">30</span>, <span class=\"number\">0</span>), timezone) <span class=\"comment\"># 夏令時間前</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(now)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.int_timestamp)</span><br><span class=\"line\">now = arrow.get(datetime(<span class=\"number\">2018</span>, <span class=\"number\">3</span>, <span class=\"number\">25</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>), timezone)  <span class=\"comment\"># 進入夏令時間(實質UTC改變)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(now)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.int_timestamp)</span><br><span class=\"line\">now = arrow.get(datetime(<span class=\"number\">2018</span>, <span class=\"number\">3</span>, <span class=\"number\">25</span>, <span class=\"number\">3</span>, <span class=\"number\">30</span>, <span class=\"number\">0</span>), timezone) <span class=\"comment\"># 夏令時間後</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(now)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.int_timestamp)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">2018-03-25T02:30:00+02:00</span><br><span class=\"line\">1521937800</span><br><span class=\"line\">2018-03-25T03:00:00+03:00</span><br><span class=\"line\">1521936000</span><br><span class=\"line\">2018-03-25T03:30:00+03:00</span><br><span class=\"line\">1521937800</span><br></pre></td></tr></table></figure>\n<p>所以如果要處理上述問題，我目前想到的方法只有在每一次檢查時間時，額外檢查是否進入/離開夏令時間</p>\n<h3 id=\"閏年、閏月、閏秒\">閏年、閏月、閏秒</h3>\n<p>會造成和夏令時間類似的問題</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU5JTk3JUIwJUU3JUE3JTky\">閏秒<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>由於地球自轉的不規則和長期項的地球自轉減慢</li>\n<li>消彌精確的時間(使用原子鐘測量)和不精確的觀測太陽時(UT1)之間的差異</li>\n<li>因為地球的旋轉速度會隨著氣候和地質事件變化，因此UTC的閏秒間隔不規則且不可預知</li>\n<li>Unix實作：重複23:59:59一次，或新增23:59:60</li>\n<li>🆕 2022年11月，在第27屆國際計量大會決定於2035年取消閏秒</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU5JTk2JThGJUU1JUI5JUI0\">閏日<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>彌補因人為曆法規定的年度天數365日和平均回歸年的大約365.24219日的差距</li>\n<li>雖然只多一天，不過普遍被叫做閏年，即閏日出現的年份</li>\n<li>公曆(典型程式題)\n<ul>\n<li>公元年分非4的倍數，為平年</li>\n<li>公元年分為4的倍數但非100的倍數，為閏年</li>\n<li>公元年分為100的倍數但非400的倍數，為平年</li>\n<li>公元年分為400的倍數為閏年</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>閏月\n<ul>\n<li>農曆\n<ul>\n<li>平年比一回歸年少約11天</li>\n<li>3年一閏，5年二閏，19年七閏</li>\n<li>閏月加到哪個月，以農曆曆法規則推斷，主要依照與農曆的二十四節氣相符合來確定</li>\n<li>基本上19年為一周期對應於公曆同一時間，但亦有部分例外</li>\n<li>每年天數差距過大，不利以年計算的會計 (<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5tLndpa2lzb3VyY2Uub3JnL3poLWhhbnQvJUU2JTk0JUI5JUU3JTk0JUE4JUU1JUE0JUFBJUU5JTk5JUJEJUU2JTlCJTg2JUU2JUIzJTk1JUU4JUFEJUIw\">梁啟超《改用太陽曆法議》<i class=\"fa fa-external-link-alt\"></i></span>)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>閏年\n<ul>\n<li>真正的閏年</li>\n<li>古埃及人在1460個地球公轉週期中加入一整年</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"實作\">實作</h2>\n<h3 id=\"資料儲存\">資料儲存</h3>\n<p>上下限</p>\n<ul>\n<li>2038年問題\n<ul>\n<li>因為儲存時間的格式為int32，只能儲存從1970-01-01到2038-01-19T03:14:07Z的時間</li>\n<li>受影響的資料\n<ul>\n<li>使用POSIX時間表示時間的程式</li>\n<li>使用int儲存時間的程式語言，如C語言</li>\n<li>使用int儲存時間的檔案格式，如<code>.zip</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"精度\">精度</h3>\n<ul>\n<li>一個system tick會更新一次時間\n<ul>\n<li>10MHz的情況下，可得100ns的精度</li>\n<li>預設的tick rate沒有這麼高</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQHN5c3Byb2cvbGludXgtdGltZXI=\">Linux: tickless kernel<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>沒有詳細研究，看起來是自訂tick rate的工具</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"時間同步\">時間同步</h3>\n<p>NTP(Network Time Protocol)</p>\n<ul>\n<li>校正本地的UTC時間\n<ul>\n<li>定期輪詢不同網路上的三個或更多伺服器，計算其時間偏移量和來回通訊延遲</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Bug\">Bug</h3>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvMjAwMCVFNSVCOSVCNCVFOSU5NyVBRSVFOSVBMiU5OA==\">千禧蟲問題<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>工程師的技術債</li>\n<li>自訂年號的國家會更容易遇到，如民國百年蟲問題、<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW5zaWRlLmNvbS50dy9hcnRpY2xlLzE2MjgyLXJlaXctaXMtZW5naW5lZXItY3Vyc2U=\">日本更換年號問題<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n<li>用戶手動(或惡意)調整時間/時區\n<ul>\n<li>舊資料的修改時間可能會大於新資料的修改時間</li>\n<li>解法\n<ul>\n<li>不要相信任何本機檔案的時間\n<ul>\n<li>在資料庫中記錄時間</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<!-- \nTODO: 3. 相對時間：在機器A連線機器B(如ftp)，並顯示機器B的檔案，要顯示誰的時間？🤔\n   - 如果顯示機器B的時間，難以判斷何者較新\n   - rsync \n-->\n<h3 id=\"生日\">生日</h3>\n<p>雖然上述的時間大多需要考慮時區，但是生日似乎是個例外</p>\n<p>不管人在何處，都是在同一個日期過生日(雖然實際的時間可能不同)</p>\n<h3 id=\"時間段和時間點\">時間段和時間點</h3>\n<p>通常用Instant代表時間點，Duration代表時間段</p>\n<!--\n### 字串格式\n\nBSD strftime https://www.ibm.com/docs/zh-tw/was-zos/9.0.5?topic=service-strftime-format-conversions\n\nrfc3339\nhttps://rfc2cn.com/rfc3339.html\n- 1985-04-12T23:20:50.52Z\n- 1996-12-19T16:39:57-08:00 -->\n<h2 id=\"套件\">套件</h2>\n<ul>\n<li>Python\n<ul>\n<li>標準Library(datetime, time, zoneinfo, calendar, dateutil)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcnJvdy5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qv\">arrow<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>光陰似箭?</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Javascript\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb21lbnRqcy5jb20v\">Moment.js<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXkuanMub3JnLw==\">Day.js<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n<li>Java\n<ul>\n<li><code>java.time</code></li>\n</ul>\n</li>\n<li>C#\n<ul>\n<li>Noda Time</li>\n</ul>\n</li>\n<li>C++\n<ul>\n<li><code>&lt;chrono&gt;</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"總結\">總結</h2>\n<p>時間相關的問題能夠有效的產生一堆bug。</p>\n<p>建議在儲存資料時使用UTC+0時間或TimeStamp，顯示時才切換，以避免許多可能的bug，但是會付出額外的轉換成本。</p>\n<p>實際上，使用者沒在管這些標準；預設格式如果不符合使用者的習慣格式就會被嫌棄。</p>\n<p>當然，貨幣、度量衡、標點符號等習慣用法也有和時間一樣的問題，這些被統稱為本地化(Localization)問題。</p>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3LyVFNSU5MCU4NCVFNSU5QyVCMCVFNiU5NyVBNSVFNiU5QyU5RiVFNSU5MiU4QyVFNiU5NyVCNiVFOSU5NyVCNCVFOCVBMSVBOCVFNyVBNCVCQSVFNiVCMyU5NQ==\">Wiki:各國家時間表示法<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3LyVFOCVCRSVCMiVFNiU5QiU4NiMlRTklOTklQjAlRTklOTklQkQlRTUlOTAlODglRTYlOUIlODY=\">Wiki:農曆<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JUJEJUFFJUU5JTk2JThG\">Wiki:置閏<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU1JUE0JThGJUU2JTk3JUI2JUU1JTg4JUI2\">Wiki:夏令時間<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ra25ld3MuY2MvY29kZS9sMnlqNDNnLmh0bWw=\">三分鐘科普夏令時，並用Javascript判斷當前時間是否屬於夏令時<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3LzIwMzglRTUlQjklQjQlRTklOTclQUUlRTklQTIlOTg=\">Wiki:2038年問題<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjYwNzI2My9ob3ctcHJlY2lzZS1pcy10aGUtaW50ZXJuYWwtY2xvY2stb2YtYS1tb2Rlcm4tcGM=\">How precise is the internal clock of a modern PC?<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL2FyY2hpdmUvYmxvZ3MvZXJpY2xpcHBlcnQvcHJlY2lzaW9uLWFuZC1hY2N1cmFjeS1vZi1kYXRldGltZQ==\">Precision and accuracy of DateTime<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3LyVFNyVCNiVCMiVFOCVCNyVBRiVFNiU5OSU4MiVFOSU5NiU5MyVFNSU4RCU5NCVFNSVBRSU5QQ==\">Wiki: 網路時間協定<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["心得"],"tags":["時間","格式","時區"]},{"title":"自然語言處理(上)","url":"/natural-language-processing/","content":"<h2 id=\"Chap01-Introduction\">Chap01 Introduction</h2>\n<h3 id=\"Applications-of-NLP\">Applications of NLP</h3>\n<ul>\n<li>Machine translation\n<ul>\n<li>google translate</li>\n</ul>\n</li>\n<li>Speech recognition\n<ul>\n<li>Siri</li>\n</ul>\n</li>\n<li>Smart input method\n<ul>\n<li>ㄐㄅㄈㄏ → 加倍奉還</li>\n</ul>\n</li>\n<li>Sentiment(情感) analysis</li>\n<li>Information retrieval</li>\n<li>Question Anwering\n<ul>\n<li>Turing Test</li>\n</ul>\n</li>\n<li>Optical character recognition (OCR)</li>\n</ul>\n<span id=\"more\"></span>\n<h3 id=\"Critical-Problems-in-NLP\">Critical Problems in NLP</h3>\n<ul>\n<li>Ambiguity(不明確性)\n<ul>\n<li><strong>The most important thing in NLP</strong></li>\n<li>Lexical(字辭)\n<ul>\n<li><code>current</code>: noun or adjective</li>\n<li><code>bank</code> (noun): money or river</li>\n</ul>\n</li>\n<li>Syntactic(語法)\n<ul>\n<li><code>[saw [the boy] [in the park]]</code></li>\n<li><code>[saw [the boy in the park]]</code></li>\n</ul>\n</li>\n<li>Semantic(語義)\n<ul>\n<li>&quot;John kissed his wife, and so did Sam&quot;. (Sam kissed John's wife or his own?)</li>\n<li>agent(施事) vs. patient(受事)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ill-form(bad form)\n<ul>\n<li>typo</li>\n<li>grammatical errors</li>\n</ul>\n</li>\n<li>Robustness\n<ul>\n<li>various domain</li>\n<li>網路語言：取材於方言俗語、各門外語、縮略語、諧音、甚至以符號合併以達至象形效果等等\n<ul>\n<li>emoticon(表情符號)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Main-Topics-in-Large-Scale-NLP-Design\">Main Topics in Large-Scale NLP Design</h3>\n<ul>\n<li>Knowledge representation\n<ul>\n<li>organize and describe linguistic knowledge</li>\n</ul>\n</li>\n<li>Knowledge strategies\n<ul>\n<li>use knowledge for efficient parsing, ambiguity resolution, ill-formed recovery</li>\n</ul>\n</li>\n<li>Knowledge acquisition\n<ul>\n<li>setup and maintain knowledge base systematically and cost-effectively</li>\n</ul>\n</li>\n<li>Knowledge integration\n<ul>\n<li>consider various knowledge sources effectively</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Models\">Models</h3>\n<p>用演算法來轉換文字結構，以產生最後結果</p>\n<ul>\n<li>State machines</li>\n<li>Rule-based approaches</li>\n<li>Logical formalisms</li>\n<li>Probabilistic models</li>\n</ul>\n<h3 id=\"Approaches\">Approaches</h3>\n<p>NLP start from 1960, <strong>statictics method</strong> wins after 1995</p>\n<p>Rule-based approach</p>\n<ul>\n<li>Advantages\n<ul>\n<li>No need database</li>\n<li>Easy to incorporate with knowledge</li>\n<li>Better generalization to a unseen domain</li>\n<li>Explainable and traceable\n<ul>\n<li>easy to understand</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Disadvantages\n<ul>\n<li>Hard to maintain consistency (at different situation)</li>\n<li>Hard to handle uncertain knowledge (define uncertainty factor)\n<ul>\n<li>irregular information</li>\n</ul>\n</li>\n<li>Not easy to avoid redundancy</li>\n<li>Knowledge acquisition is time consuming</li>\n</ul>\n</li>\n</ul>\n<p>Corpus(語料庫)-based approach</p>\n<ul>\n<li>Advantages\n<ul>\n<li>Knowledge acquisition can be automatically achieved by the computer</li>\n<li>Uncertain knowledge can be objectively quantified(知識可被量化)</li>\n<li><strong>Consistency and completeness</strong> are easy to obtain</li>\n<li>Well established statistical theories and technique are available</li>\n</ul>\n</li>\n<li>Disadvantages\n<ul>\n<li>Generalization is poor for small-size database</li>\n<li>Unable to reasoning</li>\n<li>Hard to identify the effect of each parameter</li>\n<li>Build database is time consuming</li>\n</ul>\n</li>\n<li>Corpus\n<ul>\n<li>Brown Corpus (1M words),Birmingham Corpus (7.5M words), LOB Corpus (1M words), etc</li>\n<li>Corpora(語料庫(複數)) of special domains or style\n<ul>\n<li>Newspaper, Bible, etc</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Information in Corpora\n<ul>\n<li>pure-text corpus\n<ul>\n<li>language usage of real world, word distribution, co-occurrence</li>\n</ul>\n</li>\n<li>tagged corpus\n<ul>\n<li>parts of speech, structures, features</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Hybrid approach</p>\n<ul>\n<li>Use rule-based approach when\n<ul>\n<li>there are rules that have good coverage\n<ul>\n<li>it can be governed by a small number of rules</li>\n</ul>\n</li>\n<li>extensional knowledge is important to the system</li>\n</ul>\n</li>\n<li>Use corpus-based approach when\n<ul>\n<li>Knowledge needed to solve the problem is huge and intricate</li>\n<li>A good model or formulation exists</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Implementation\">Implementation</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ubHRrLm9yZy8=\">Natural Language Toolkit(NLTK)<i class=\"fa fa-external-link-alt\"></i></span>: Open source Python modules, linguistic data and documentation for research and development in natural language processing</p>\n<p>features</p>\n<ul>\n<li>Corpus readers</li>\n<li>Tokenizers\n<ul>\n<li>whitespace, newline, blankline, word, treebank, sexpr, regexp, Punkt sentence segmenter</li>\n</ul>\n</li>\n<li>Stemmers\n<ul>\n<li>Porter, Lancaster, regexp</li>\n</ul>\n</li>\n<li>Taggers\n<ul>\n<li>regexp, n-gram, backoff, Brill, HMM, TnT</li>\n</ul>\n</li>\n<li>Chunkers\n<ul>\n<li>regexp, n-gram, named-entity</li>\n</ul>\n</li>\n<li>Metrics\n<ul>\n<li>accuracy, precision, recall, windowdiff, distance metrics, inter-annotator agreement coefficients, word association measures, rank correlation</li>\n</ul>\n</li>\n<li>Estimation\n<ul>\n<li>uniform, maximum likelihood, Lidstone, Laplace, expected likelihood, heldout, cross-validation, Good-Turing, Witten-Bell</li>\n</ul>\n</li>\n<li>Miscellaneous\n<ul>\n<li>unification, chatbots, many utilities</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap02-Overall-Pictures\">Chap02 Overall Pictures</h2>\n<p><img data-src=\"/img/nlp/overview.webp\" alt=\"overview\" /></p>\n<p>Knowledge Categories</p>\n<ul>\n<li>Phonology(聲音，資料來源)</li>\n<li>Morphology(詞性)</li>\n<li>Syntax(句構)</li>\n<li>Semantics(語義)</li>\n<li>Pragmatics(句子關聯，語用學)</li>\n<li>Discourse(篇章分析，話語)</li>\n</ul>\n<h3 id=\"Morphology-Structure-of-words\">Morphology(Structure of words)</h3>\n<ul>\n<li>part-of-speech(POS) tagging(詞性標註, lexical category)</li>\n<li>find the roots of words\n<ul>\n<li>e.g., going → go, cats → cat</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Syntax-structure-of-sentences\">Syntax(structure of sentences)</h3>\n<ul>\n<li>Context-Free Grammars(CFG) <img data-src=\"/img/nlp/cfg.webp\" alt=\"parse tree\" /></li>\n<li>Chomsky Normal Form(CNF)\n<ul>\n<li>can only use following two rules\n<ol>\n<li><code>non-terminal → terminal</code></li>\n<li><code>non-terminal → non-terminal non-terminal</code></li>\n</ol>\n</li>\n</ul>\n</li>\n<li>dependency\n<ul>\n<li>local dependency\n<ul>\n<li>words near together would probably have the same syntax rule</li>\n</ul>\n</li>\n<li>long-distance dependency\n<ul>\n<li>wh-movement(疑問詞移位)\n<ul>\n<li>What did Jennifer buy? → 什麼 (助動詞) 珍妮佛 買了</li>\n</ul>\n</li>\n<li>分裂句 Right-node raising\n<ul>\n<li>[[she would have bought] and [he might sell]] shares</li>\n</ul>\n</li>\n<li>Argument-cluster coordination\n<ul>\n<li>I give [[you an apple] and [him a pear]]</li>\n</ul>\n</li>\n<li><strong>challenge for some statistical NLP approaches (like n-grams)</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Semantics-meaning-of-individual-sentences\">Semantics(meaning of individual sentences)</h3>\n<ul>\n<li>semantic roles\n<ul>\n<li>agent(主詞)</li>\n<li>patient(受詞)</li>\n<li>instrument(工具)</li>\n<li>goal(目標)</li>\n<li>Beneficiary(受益)</li>\n<li>He threw the book(patient) at me(goal)</li>\n<li>John sold the car for a friend(beneficiary)</li>\n</ul>\n</li>\n<li>Subcategorizations(次分類)\n<ul>\n<li>及物、不及物動詞</li>\n</ul>\n</li>\n<li>Semantics can be divided into two parts\n<ul>\n<li>Lexical Semantics\n<ul>\n<li>上下位，同義(反義)，部分-整體</li>\n</ul>\n</li>\n<li>Composition Semantics\n<ul>\n<li>合起來的意義與單一字意義不同</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Implementation\n<ul>\n<li>WordNet®(large lexical database of English)</li>\n<li>Thesaurus(索引典)</li>\n<li>同義詞詞林</li>\n<li>廣義知網中文詞知識庫(E-HowNet)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mcmFtZW5ldC5pY3NpLmJlcmtlbGV5LmVkdS9mbmRydXBhbC9hYm91dA==\">FrameNet<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"FrameNet\">FrameNet</h4>\n<p>A dictionary of more than 10,000 word senses, 170,000 manually annotated sentences</p>\n<p>Frame Semantics(Charles J. Fillmore)</p>\n<ul>\n<li>the meanings of most words can be more understood by semantic frame</li>\n<li>Including description of a type of event, relation, or entity and the participants in it</li>\n<li>Example: <code>apply_heat</code> frame\n<ul>\n<li>When one of these words appear, this frame will be applied\n<ul>\n<li><code>Fry(炸)</code>, <code>bake(烘)</code>, <code>boil(煮)</code>, a`nd broil(烤)</li>\n</ul>\n</li>\n<li>Frame elements: Cook, Food, Heating_instrument and Container\n<ul>\n<li>a person doing the cooking (Cook)</li>\n<li>the food that is to be cooked (Food)</li>\n<li>something to hold the food while cooking (Container)</li>\n<li>a source of heat (Heating_instrument)</li>\n</ul>\n</li>\n<li>[<code>Cook</code> the boys] ... GRILL [<code>Food</code> fish] [<code>Heating_instrument</code> on an open fire]</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Pragmatics-how-sentences-relate-to-each-other\">Pragmatics(how sentences relate to each other)</h3>\n<ul>\n<li>explain what the speaker really expressed</li>\n<li>Understand the scope of\n<ul>\n<li>quantifiers</li>\n<li>speech acts</li>\n<li>discourse analysis</li>\n<li>anaphoric relations(首語重複)</li>\n</ul>\n</li>\n<li>Anaphora(首語重複) and Coreference(指代)\n<ul>\n<li>張三是老師,他教學很認真,同時,他也是一個好爸爸。</li>\n<li>Type/Instance: “老師”/“張三”, “一個好爸爸”/“張三”</li>\n</ul>\n</li>\n<li>crucial to <strong>information extraction</strong></li>\n<li>Dialogue Tagging <img data-src=\"/img/nlp/dialogue_tag.webp\" alt=\"\" /></li>\n</ul>\n<h3 id=\"Discourse-Analysis\">Discourse Analysis</h3>\n<p>Example</p>\n<ul>\n<li>1a: 佛羅倫斯哪個博物館在1993年的爆炸事件中受到破壞？</li>\n<li>1b: 這個事件哪一天發生？\n<ul>\n<li>問句1b「這個事件」，指的是問句1a「1993年的爆炸事件」</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Summary\">Summary</h3>\n<p>From <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5paXMuc2luaWNhLmVkdS50dy9wYWdlL2V2ZW50cy9GSUxFLzEyMDMxMzEwMTA3U2xpZGVzLnBkZg==\">The Three (and a Half) Futures of NLP<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>NLP is <strong>Notation Transformation</strong>(e.g. English → Chinese), with some information(POS, syntatic, senmatic...) added</li>\n<li>Much NLP is engineering\n<ul>\n<li>select and tuning learning performance</li>\n</ul>\n</li>\n<li>Knowledge is crucial in language-related research areas, but providing a large scaleknowledge base is difficult and costly\n<ul>\n<li>Knowledge Base\n<ul>\n<li>WordNet</li>\n<li>FrameNet</li>\n<li>Wikipedia</li>\n<li>Dbpedia</li>\n<li>Freebase</li>\n<li>Siri</li>\n<li>Google Knowledge Graph</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Hierarchy of transformations(由深至淺)\n<ul>\n<li>pragmatics, writing style\n<ul>\n<li>deeper semantics, discourse\n<ul>\n<li>shallow semantics, co-reference\n<ul>\n<li>syntax, POS(part-of-speech)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>分析時由淺至深</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Analysis\">Analysis</h4>\n<p><img data-src=\"/img/nlp/layer.webp\" alt=\"Layer\" /><br />\n<img data-src=\"/img/nlp/l1.webp\" alt=\"L1\" /><br />\n<img data-src=\"/img/nlp/l2.webp\" alt=\"L2\" /><br />\n<img data-src=\"/img/nlp/l3.webp\" alt=\"L3\" /><br />\n<img data-src=\"/img/nlp/l4.webp\" alt=\"L4\" /></p>\n<h4 id=\"NLP-progress-by-now\">NLP progress by now</h4>\n<p><img data-src=\"/img/nlp/sub.webp\" alt=\"NLP subclass\" /><br />\n<img data-src=\"/img/nlp/dowell.webp\" alt=\"NLP do today\" /><br />\n<img data-src=\"/img/nlp/cantdo.webp\" alt=\"NLP can't do today\" /></p>\n<h2 id=\"Chap03-Collocations-搭配詞\">Chap03 Collocations(搭配詞)</h2>\n<ul>\n<li>多個單字組合成一個有意義的語詞，其意義無法從各個單字中推得\n<ul>\n<li>e.g. black market</li>\n</ul>\n</li>\n<li>Subclasses of Collocations\n<ul>\n<li>compound nouns\n<ul>\n<li>telephone box and post office</li>\n</ul>\n</li>\n<li>idioms\n<ul>\n<li>kick the bucket(氣絕)</li>\n</ul>\n</li>\n<li>Light verbs(輕動詞)\n<ul>\n<li>動詞失去其意義，需要和其他有實質意義的詞作搭配</li>\n<li>e.g. The man took a walk(walk, not take) vs The man took a radio(take)</li>\n</ul>\n</li>\n<li>Verb particle constructions(語助詞) or Phrasal Verbs(詞組動詞, 短語動詞, V + 介系詞)\n<ul>\n<li>take in = deceive, look sth. up</li>\n</ul>\n</li>\n<li>proper names\n<ul>\n<li>San Francisco</li>\n</ul>\n</li>\n<li>Terminology(專有名詞)</li>\n</ul>\n</li>\n<li>Classification\n<ul>\n<li>Fixed expressions\n<ul>\n<li>in short (O)</li>\n<li>in shorter or in very short(X)</li>\n</ul>\n</li>\n<li>Semi-fixed expressions(可用變化形)\n<ul>\n<li>non-decomposable idioms\n<ul>\n<li>kick the bucket (O)</li>\n<li>he kicks the bucket(O)</li>\n<li>the bucket was kicked (X)</li>\n</ul>\n</li>\n<li>compound nominals\n<ul>\n<li>car park, car parks</li>\n</ul>\n</li>\n<li>Proper names</li>\n</ul>\n</li>\n<li>Syntactically-Flexible Expressions\n<ul>\n<li>decomposable idioms\n<ul>\n<li>let the cat out of the bag</li>\n</ul>\n</li>\n<li>verb-particle constructions</li>\n<li>light verbs</li>\n</ul>\n</li>\n<li>Institutionalized Phrases (習慣用法)\n<ul>\n<li>salt and pepper(○) pepper and salt(×)</li>\n<li>traffic light</li>\n<li>kindle excitement(點燃激情)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Collocation-detection\">Collocation detection</h3>\n<ul>\n<li>by Frequency</li>\n<li>by Mean and Variance of the distance between focal word (焦點詞) and collocating word(搭配詞)</li>\n<li>Hypothesis Testing</li>\n<li>Mutual Information</li>\n</ul>\n<h4 id=\"By-Frequency\">By Frequency</h4>\n<ul>\n<li>找出現機率大的bigrams\n<ul>\n<li>not always significant</li>\n<li>篩選可能為組合詞的詞性組合(Ex. adj+N)</li>\n</ul>\n</li>\n<li>The collocations found <img data-src=\"/img/nlp/freandtag.webp\" alt=\"\" /></li>\n<li>What if a word have two possible collocations?(strong force, powerful force) <img data-src=\"/img/nlp/frecomp.webp\" alt=\"\" /></li>\n</ul>\n<h4 id=\"By-Mean-and-Variance-of-the-distance-between-focal-word-焦點詞-and-collocating-word-搭配詞\">By Mean and Variance of the distance between focal word(焦點詞) and collocating word(搭配詞)</h4>\n<ul>\n<li>many collocations consist of more flexible relationships\n<ul>\n<li>frequency is not suitable</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>Define a collocational window\n<ol>\n<li>e.g., 3-4 words before/after</li>\n</ol>\n</li>\n<li>assemble every word pair as a bigram\n<ol>\n<li>e.g., A B C D → AB, AC, AD, BC, BD, CD</li>\n</ol>\n</li>\n<li>computes the mean and variance of the offset between the two words\n<ol>\n<li>變異數愈低，代表兩個字之間的位置關聯愈固定 <img data-src=\"/img/nlp/meanvar.webp\" alt=\"\" /></li>\n</ol>\n</li>\n</ol>\n<ul>\n<li>z-score $z = {freq - \\mu \\over \\sigma}$: the strength of a word pair</li>\n</ul>\n<h4 id=\"Hypothesis-Testing-假設檢定\">Hypothesis Testing(假設檢定)</h4>\n<ul>\n<li>Even high frequency and low variance can be accidental</li>\n<li>null hypothesis(虛無假設, H0)\n<ul>\n<li>設 w1 and w2 is completely independent → w1 and w2 不是搭配詞\n<ul>\n<li>P(w1w2) = P(w1)P(w2)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>假設H0為真，計算這兩個字符合H0的機率P\n<ul>\n<li>若P太低則否決H0(→ 是搭配詞)</li>\n</ul>\n</li>\n<li>Two issues\n<ul>\n<li>Look for particular patterns in the data</li>\n<li>How much data we have seen</li>\n</ul>\n</li>\n<li>種類包括：t檢驗，Z檢驗，卡方檢驗，F檢驗</li>\n</ul>\n<h5 id=\"t-test\">t-test</h5>\n<ul>\n<li>Test whether <strong>distributions of two groups</strong> are <strong>statistically different</strong> or not\n<ul>\n<li>H0 → (w1, w2) has no differnece with normal distribution</li>\n<li>considering <strong>variance</strong> of the data <img data-src=\"/img/nlp/ttest.webp\" alt=\"\" /></li>\n<li>formula <img data-src=\"/img/nlp/ttest2.webp\" alt=\"\" /> <img data-src=\"/img/nlp/ttest3.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Calculate t by alpha level and degree of freedom\n<ul>\n<li>alpha level <code>α</code>: confidence\n<ul>\n<li>in normal distribution，α = 95%落在mean±1.96std之間, α = 99%落在mean±2.576std之間</li>\n<li>If t-value is larger than 2.576, we say the two groups <strong>are different</strong> with 99% confidence</li>\n</ul>\n</li>\n<li>degree of freedom: number of sample-1\n<ul>\n<li>total = number of two groups-2</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>t↑ → more difference → more possible to reject null hypothesis → more possible to be collocation</strong></li>\n<li>Example: &quot;new&quot; occurs 15,828 times, &quot;companies&quot; 4,675 times, &quot;new companies&quot; 8 times, total 14,307,668 tokens\n<ul>\n<li><strong>Null hypothesis: the occurrences of new and companies are independent(not collocation)</strong></li>\n<li>H0 mean = P(new, companies) = P(new) x P(companies) = $\\frac{15828 \\times 4678}{14307668^2} = 3.615 \\times 10^{-7}$</li>\n<li>H0 var = p(1-p) ~= p when p is small</li>\n<li>tvalue = $\\frac{5.591 \\times 10^7 - 3.615\\times 10^7}{\\sqrt{\\frac{5.591 \\times 10^7}{14307668}}} = 0.999932$</li>\n<li>0.999932 &lt; 2.576, we cannot reject the null hypothesis\n<ul>\n<li>new company are not collocation</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>the above words are possible collocations <img data-src=\"/img/nlp/ttest4.webp\" alt=\"\" /></li>\n</ul>\n<!--???????-->\n<p>Hypothesis testing of differences</p>\n<ul>\n<li>useful for lexicography\n<ul>\n<li>which word(strong, powerful) is suitable to modify &quot;computer&quot;?</li>\n</ul>\n</li>\n<li>T-test can be used for <strong>comparison of the means of two normal populations</strong>\n<ul>\n<li>H0 is that the average difference is 0 (u = 0)</li>\n<li>v1 and v2 are the words we are comparing (e.g., powerful and strong), and w is the collocate of interest(e.g., computers)</li>\n<li><img data-src=\"/img/nlp/ttest5.webp\" alt=\"\" /><img data-src=\"/img/nlp/ttest6.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h5 id=\"Chi-Square-test\">Chi-Square test</h5>\n<ul>\n<li>T-test assumes that probabilities are normally distributed\n<ul>\n<li>not really</li>\n</ul>\n</li>\n<li>Chi-Square: compare <strong>observed frequencies</strong> with <strong>expected frequencies</strong>\n<ul>\n<li>If <strong>difference between observed and expected frequencies</strong> is large, we can reject H0</li>\n</ul>\n</li>\n<li>Example\n<ul>\n<li>expected frequency of &quot;new companies&quot;: $\\frac{8+4667}{14307668} \\times \\frac{8+15820}{14307668} \\times 14307668$ = 5.2 <img data-src=\"/img/nlp/chi1.webp\" alt=\"\" /></li>\n<li>chi-square value = χ^2 <img data-src=\"/img/nlp/chi3.webp\" alt=\"\" /> <img data-src=\"/img/nlp/chi2.webp\" alt=\"\" /></li>\n<li>When α=0.05, χ^2=3.841</li>\n<li>Because 1.55&lt;3.841, we cannot reject the null hypothesis. new companies is not a good candidate for a collocation</li>\n</ul>\n</li>\n<li>Comparison with T-test\n<ul>\n<li>The 20 bigrams with the highest t scores in the test corpus are also the 20 bigrams with the highest χ^2 scores</li>\n<li>χ^2 is appropriate for large probabilities(t-test is not because of normality assumption)</li>\n</ul>\n</li>\n<li>Application: Translation\n<ul>\n<li>find similarity of word pairs</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Likelihood-Ratios\">Likelihood Ratios</h3>\n<ul>\n<li>Advantage compared with Chi-Square test\n<ul>\n<li>more appropriate for sparse data</li>\n<li>easier to interpret</li>\n</ul>\n</li>\n</ul>\n<p>Likelihood Ratios within single corpus</p>\n<ul>\n<li>examine two hypothesis\n<ul>\n<li>H1: occurrence of w2 is independent of the previous occurrence of w1(null hypothesis)</li>\n<li>H2: occurrence of w2 is dependent of the previous occurrence of w1</li>\n</ul>\n</li>\n<li>maximum likelihood estimate <img data-src=\"/img/nlp/like1.webp\" alt=\"\" /></li>\n<li>using binomial distribution\n<ul>\n<li>$b(k;n, x) = \\binom nk x^k \\times (1-x)^{n-k}$</li>\n<li>only different at probability\n<ul>\n<li>$L(H_1) = b(c_{12};c_1, p)b(c_2-c_{12}; N-c_1, p)$</li>\n<li>$L(H_2) = b(c_{12};c_1, p_1)b(c_2-c_{12}; N-c_1, p_2)$</li>\n</ul>\n</li>\n<li><img data-src=\"/img/nlp/likew.webp\" alt=\"likely probability\" /></li>\n<li>log of likelihood ratio λ <img data-src=\"/img/nlp/like2.webp\" alt=\"log likelihood ratio\" /></li>\n<li>use D = -2logλ to examine the significance of two words, which can asymptotically(漸近) chi-square distributed</li>\n</ul>\n</li>\n</ul>\n<p>Likelihood Ratios between two or more corpora</p>\n<ul>\n<li>useful for the discovery of <strong>subject-specific collocations</strong></li>\n</ul>\n<h3 id=\"Mutual-Information\">Mutual Information</h3>\n<ul>\n<li>measure of <strong>how much one word tells us about the other</strong>(information theory)</li>\n<li>pointwise mutual information(PMI) <img data-src=\"/img/nlp/mutual.webp\" alt=\"PMI formula\" />\n<ul>\n<li>MI是在獲得一個隨機變數的資訊之後，觀察另一個隨機變數所獲得的「資訊量」（單位通常為位元）</li>\n</ul>\n</li>\n<li>mutual information = Expection(PMI) <img data-src=\"/img/nlp/newMI.webp\" alt=\"\" /></li>\n<li>works bad in sparse environments\n<ul>\n<li>As the perfectly dependent bigrams get rarer, their mutual information increases → <strong>bad measure of dependence</strong> <img data-src=\"/img/nlp/pmi-depend.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li><strong>good measure of independence</strong>\n<ul>\n<li>when perfect independence, I(x, y) = 0</li>\n<li><img data-src=\"/img/nlp/pmi-independ.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>New formula: $C(w1w2)I(w1w2)$\n<ul>\n<li>With MI, bigrams composed of low-frequency words will receive a higher score than bigrams composed of high-frequency words</li>\n</ul>\n</li>\n</ul>\n<p>Chain rule for entropy</p>\n<ul>\n<li>$H(X,Y) = H(Y|X) + H(X) = H(X|Y) + H(Y)$</li>\n<li>Conditional entropy $H(Y|X)$ expresses how much <strong>extra information</strong> you still need to supply on average to communicate Y when X is known <img data-src=\"/img/nlp/conditional.webp\" alt=\"\" /></li>\n<li>$H(X)-H(X|Y) = H(Y)-H(Y|X)$\n<ul>\n<li>This difference is called the <strong>mutual information between X and Y</strong>(X, Y共同擁有的information)</li>\n<li>MI is not similar to chi-square <img data-src=\"/img/nlp/wrongMI.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Entropy</p>\n<ul>\n<li>Entropy: uncertainty of a variable <img data-src=\"/img/nlp/entropy1.webp\" alt=\"\" /></li>\n<li>Incorrect model’s cross entropy is larger than correct model's <img data-src=\"/img/nlp/entropy2.webp\" alt=\"\" />\n<ul>\n<li>正確model和猜測model的差別：P(X)logP(X) ↔ P(X)logPM(X)</li>\n</ul>\n</li>\n<li>Entropy Rate: Per-word entropy(= sentence entropy / N) <img data-src=\"/img/nlp/entropy_rate.webp\" alt=\"\" /></li>\n<li>Cross Entropy: <strong>average informaton</strong> needed to <strong>identify an event drawn from the set</strong> between two probability distributions\n<ul>\n<li>交叉熵的意義是用該模型對文本識別的難度，或者從壓縮的角度來看，每個詞平均要用幾個位來編碼</li>\n<li><img data-src=\"/img/nlp/entropy_cross.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Joint entropy H(X, Y): average information needed to <strong>specify both values</strong> <img data-src=\"/img/nlp/joint.webp\" alt=\"\" /></li>\n</ul>\n<h3 id=\"Case-Study\">Case Study</h3>\n<p>Emotion Analysis</p>\n<ul>\n<li>Non-verbal Emotional Expressions</li>\n<li>text (raw) and emoticons(表情符號) (tag) form collection</li>\n<li>appearance of an emoticon is a good emotion indicator to sentences</li>\n<li>check the dependency of each word in sentences</li>\n<li>Evaluation\n<ul>\n<li>Use top 200 lexiconentries as features</li>\n<li>Tag={Positive, Negative}</li>\n<li>LIBSVM</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap04-N-gram-Model\">Chap04 N-gram Model</h2>\n<p>N-grams are token sequences of length N</p>\n<p>applications</p>\n<ul>\n<li>Automatic speech recognition</li>\n<li>Author Identification</li>\n<li>Spelling correction</li>\n<li>Grammatical Error Diagnosis</li>\n<li>Machine translation</li>\n</ul>\n<h3 id=\"Counting\">Counting</h3>\n<ul>\n<li>Example: <em>I do uh main-mainly business data processing</em>\n<ul>\n<li>Should we count “uh”(pause) as tokens?</li>\n<li>What about the repetition of “mainly”? Should such do-overs count twice or just once?(重複)</li>\n<li>The answers depend on the application\n<ul>\n<li>&quot;uh&quot; is not needed for query</li>\n<li>&quot;uh&quot; is very useful in dialog management</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Corpora: Google Web Crawl\n<ul>\n<li>1,024,908,267,229 English tokens</li>\n<li>13,588,391 wordform types</li>\n<li>even large dictionaries of English have only around 500k types. Why so many here?\n<ul>\n<li>Numbers</li>\n<li>Misspellings</li>\n<li>Names</li>\n<li>Acronyms(縮寫)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Language-model\">Language model</h3>\n<p>Language models assign a probability to a word sequence<br />\nEx. <code>P(the mythical unicorn) = P(the) * P(mythical | the) * P(unicorn | the mythical)</code></p>\n<ul>\n<li>Markov assumption: the probability of a word depends only on <strong>limited previous words</strong>\n<ul>\n<li>Generalization: n previous words, like bigram, trigrams, 4-grams......</li>\n<li>As we increase the value of N, the accuracy of model increases</li>\n</ul>\n</li>\n</ul>\n<p>N-Gram probabilities come from a training corpus<br />\noverly narrow corpus: probabilities don't generalize<br />\noverly general corpus: probabilities don't reflect task or domain</p>\n<p>maximum likelihood estimate</p>\n<ul>\n<li>maximizes the probability of the training set T given the model M</li>\n<li>Suppose the word “Chinese” occurs 400 times in a corpus\n<ul>\n<li>MLE estimate is 400/1000000 = .004</li>\n<li>makes it most likely that “Chinese” will occur 400 times in a million word corpus</li>\n</ul>\n</li>\n<li>P([s] I want englishfood [s]) = P(I|[s]) x P(want|I) x P(english|want) x P(food|english) x P([s]|food) = 0.000031$</li>\n</ul>\n<p>Usage</p>\n<ul>\n<li>\n<p>capture some knowledge about language</p>\n<ul>\n<li>World Knowledge\n<ul>\n<li>P(english food|want) = .0011</li>\n<li>P(chinese food|want) = .0065</li>\n</ul>\n</li>\n<li>syntax\n<ul>\n<li>P(to|want) = .66</li>\n<li>P(eat| to) = .28</li>\n<li>P(food| to) = 0</li>\n</ul>\n</li>\n<li>discourse\n<ul>\n<li><code>P(i|&lt;s&gt;)</code> = .25</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Shannon’s Method: use language model to generate random sentences</p>\n<ul>\n<li>Shakespeare as a Corpus\n<ul>\n<li>99.96% of the possible bigrams were never seen (have zero entries in the table)</li>\n</ul>\n</li>\n<li>This is the biggest problem in language modeling</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Evaluating-N-Gram-Models\">Evaluating N-Gram Models</h3>\n<ul>\n<li>Extrinsic(外在的) evaluation\n<ul>\n<li>Compare performance of the application within two models</li>\n<li>time-consuming</li>\n</ul>\n</li>\n<li>Intrinsic evaluation\n<ul>\n<li>perplexity\n<ul>\n<li>But get poor approximation unless the test data looks just like the training data</li>\n</ul>\n</li>\n<li>not sufficient to publish</li>\n</ul>\n</li>\n</ul>\n<p>Standard Method</p>\n<ul>\n<li>Train → Test</li>\n<li>A dataset which is different from our training set, but both drawn from the same source</li>\n<li>use evaluation metric(Ex. perplexity)</li>\n<li>Example\n<ul>\n<li>Create a fixed lexicon L, of size V\n<ul>\n<li>At text normalization phase, <strong>any training word not in L changed to UNK</strong>(unknown word token)</li>\n<li><strong>count UNK like a normal word</strong></li>\n</ul>\n</li>\n<li>When testing, also use UNK counts for any word not in training</li>\n<li>The best language model is one that best predicts an unseen test set</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"perplexity-複雜度\">perplexity(複雜度)</h3>\n<ul>\n<li>Definition\n<ul>\n<li>notion of surprise\n<ul>\n<li>The more surprised the model is, the lower probability it assigned to the test set</li>\n<li><strong>Minimizing perplexity is the same as maximizing probability</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>probability of a test set, as normalized by the number of words <img data-src=\"/img/nlp/perplexity.webp\" alt=\"\" /></li>\n<li>物理意義是單詞的編碼大小\n<ul>\n<li>如果在某個測試語句上，語言模型的perplexity值為2^190，說明該句子的編碼需要190bits</li>\n</ul>\n</li>\n<li>relate to entropy\n<ul>\n<li>Perplexity(p, q) = $2^{H(p,q)}$</li>\n<li>p is the test sample distribution, and q is the distribution of language model</li>\n<li>do everything in log space to avoid underflow and calculate faster</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"word-entropy\">word entropy</h3>\n<ul>\n<li>word entropy for English\n<ul>\n<li>11.82 bits per word [Shannon, 1951]</li>\n<li>9.8 bits per word [Grignetti, 1964]</li>\n</ul>\n</li>\n<li>word entropy in medical language\n<ul>\n<li>11.15 bits per word</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Chap05-Statistical-Inference\">Chap05 Statistical Inference</h2>\n<ul>\n<li>Statistical Inference：<strong>taking some data</strong> (generated by unknown distribution) and then <strong>making some inferences(推理，推測)</strong> about this distribution</li>\n<li>three issues\n<ul>\n<li><strong>Dividing the training data into equivalence classes</strong></li>\n<li><strong>Finding a good statistical estimator for each equivalence class</strong></li>\n<li><strong>Combining multiple estimators</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Form-Equivalence-Class\">Form Equivalence Class</h3>\n<ul>\n<li>Classification Problem\n<ul>\n<li><strong>predict target feature</strong> based on various <strong>classificatory features</strong></li>\n<li>reliability v.s. discrimination\n<ul>\n<li>The more classes, the more discrimination, but estimation feature is not reliable</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Independent assumption\n<ul>\n<li>assume data is nearly independent</li>\n</ul>\n</li>\n<li>Statistical Language Modeling\n<ul>\n<li><img data-src=\"/img/nlp/smodel.webp\" alt=\"\" /></li>\n<li>Language Model: P(W)</li>\n<li>LM does not depend on acoustics\n<ul>\n<li>the acoutstics probability is constant(calculated by data)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>n-gram model\n<ul>\n<li>assume equivalence classes are previous n-1 words</li>\n<li>Markov Assumption: Only the prior n-1 local context affects the next entry\n<ul>\n<li>(n-1)th Markov Model or n-gram</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Building n-grams</strong>\n<ol>\n<li>Remove punctuation(標點) and normalize text</li>\n<li>Map out-of-vocabulary words to unknown symbol(UNK)</li>\n<li>Estimate conditional probabilities by joint probabilities\n<ul>\n<li>P(n | n-2, n-1) = P(n-2, n-1, n) / P(n-2, n-1)</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"Finding-statistical-estimator\">Finding statistical estimator</h3>\n<ul>\n<li>Goal: derive <strong>probability estimate of target feature</strong> based on observed data</li>\n<li>Running Example\n<ul>\n<li>From n-gram data P(w1,..,wn), predict P(wn|w1,..,wn-1)</li>\n</ul>\n</li>\n<li>Solutions\n<ul>\n<li>Maximum Likelihood Estimation</li>\n<li>Laplace’s, Lidstone’s and Jeffreys-Perks’ Laws</li>\n<li>Held Out Estimation</li>\n<li>Cross-Validation</li>\n<li>Good-Turing Estimation</li>\n</ul>\n</li>\n<li>Model combination\n<ul>\n<li>Combine models (unigram, bigram, trigram, …) to use the most precise model available</li>\n<li>interpolation(內插) and back-off(後退)</li>\n<li>use higher order models when model has enough data</li>\n<li>back off to lower order models when there isn’t enough data</li>\n</ul>\n</li>\n</ul>\n<p>Terminology</p>\n<ul>\n<li>Ex. <code>[s] a b a b a</code>\n<ul>\n<li>N = 5 (<code>[s]a,ab,ba,ab,ba</code>)</li>\n<li>B = 3 (<code>[s]a,ab,ba</code>)</li>\n<li>C(w1, w2...) = 某N-gram(Ex. ab)出現次數</li>\n<li>r =  某N-gram出現頻率</li>\n<li>Nr = 有幾個「出現r次的N-gram」</li>\n<li>Tr = 出現r次的N-gram，在test data出現的總次數</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-Maximum-Likelihood-Estimation\">(1) Maximum Likelihood Estimation</h4>\n<ul>\n<li>usually unsuitable for NLP\n<ul>\n<li>sparseness of the data(a lot of word sequences with zero probabilities)</li>\n</ul>\n</li>\n<li>Use Discounting or Smoothing technique to improve\n<ul>\n<li>Smoothing\n<ul>\n<li>Smoothing is like Robin Hood: Steal from the rich and give to the poor</li>\n<li>no word sequences has 0 probability <img data-src=\"/img/nlp/fBBrh6P.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Discounting\n<ul>\n<li>assign some probability to unseen events</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-Laplace’s-Lidstone’s-and-Jeffreys-Perks’-Laws\">(2) Laplace’s, Lidstone’s and Jeffreys-Perks’ Laws</h4>\n<ul>\n<li>Laplace: add 1 to every count\n<ul>\n<li>gives far too much probabilities to unseen events</li>\n<li>Usage: In domains where the number of zeros isn’t so huge\n<ul>\n<li>pilot studies</li>\n<li>document classification</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Lidstone and Jeffreys-Perks: add a smaller value λ &lt; 1\n<ul>\n<li>B:number of bins <img data-src=\"/img/nlp/lidstone.webp\" alt=\"lid\" /></li>\n<li>Expected Likelihood Estimation (ELE)(Jeffreys-Perks Law)\n<ul>\n<li>λ=1/2</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-Held-Out-Estimation\">(3) Held Out Estimation</h4>\n<ul>\n<li>compute frequencies in training data and held out data</li>\n<li><img data-src=\"/img/nlp/heldout.webp\" alt=\"\" />\n<ul>\n<li>Tr / Nr = Average frequency of training frequency r N-grams\n<ul>\n<li>estimate frequency(value for validation)</li>\n<li>計算出現在training corpus r次的bigrams，在held-out corpus出現的次數稱為Tr。 因為這種bigrams有Nr個，因此平均為Tr / Nr</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Validation\n<ul>\n<li>if the probabilities estimated on training data are close to those on held-out data, it's a good language model</li>\n<li><a href=\"http://gitqwerty777.github.io/MLfoundation2/#chap15-validation\">參考資料--validation in machine learning</a></li>\n</ul>\n</li>\n<li>Prevent Overtraining(overfit)\n<ul>\n<li>test on different data</li>\n</ul>\n</li>\n</ul>\n<p>Training portion and testing portion (5-10% of total data)</p>\n<ul>\n<li>Held out data (validation data)\n<ul>\n<li>available training data: real training data(90%) + held out data(10%)</li>\n</ul>\n</li>\n<li>Instead of presenting a single performance figure, testing result on each smaller sample\n<ul>\n<li>Using t-test to reject the possibility of an accidental difference</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-Cross-Validation\">(4) Cross-Validation</h4>\n<p>If data is not enough, use each part of the data both as training data and held out data</p>\n<ul>\n<li>Deleted Estimation\n<ul>\n<li>$N_r^a$ = number of n-grams occurring r times in the <strong>a th part</strong> of the training data</li>\n<li>$T_r^{ab}$ = number of occurs in part b of 「bigrams occurs r times in part a」</li>\n<li><img data-src=\"/img/nlp/deleted_estimate.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>Split the training data into K sections</li>\n<li>For each section k: hold-out section k and compute counts from remaining K-1 sections; compute Tr(k)</li>\n<li>Estimate probabilities by averaging over all sections</li>\n</ol>\n<p>estimate frequency of deleted estimation <img data-src=\"/img/nlp/del-estimate.webp\" alt=\"\" /></p>\n<h4 id=\"5-Good-Turing-Estimation\">(5) Good-Turing Estimation</h4>\n<ul>\n<li>用出現一次的來預測沒出現過的</li>\n<li>若出現次數&gt;k，不變，否則套用公式</li>\n<li><img data-src=\"/img/nlp/goodturing.webp\" alt=\"\" />\n<ul>\n<li>renormalize to sum = 1</li>\n</ul>\n</li>\n<li>Simple Good-Turing\n<ul>\n<li>replace any zeros in the sequence by linear regression: <code>log(Nc) = a+blog(c)</code></li>\n</ul>\n</li>\n<li>after good-turing <img data-src=\"/img/nlp/gttable.webp\" alt=\"\" /></li>\n</ul>\n<p>explaination from stanford NLP course</p>\n<ul>\n<li>when use leave-one-out validation, the possibilities of unseen validation data is $\\frac{N_1}{N}$(when thing-saw-once is the validation data), the possibilities of validation data have been seen K times is $\\frac{(k+1)N_{k+1}}{N}$</li>\n<li>Josh Goodman's intuition: assume You are fishing, and caught 10 carp,3 perch,2 whitefish, 1 trout, 1 salmon, 1 eel = 18 fish\n<ul>\n<li>P(unseen) = N1/N0 = N1/N = 3/18</li>\n<li>C(trout) = $2 \\times N_2/N_1$ = $2 \\times (1/3)$ = 2/3\n<ul>\n<li>P(trout) = 2/3 / 18 = 1/27</li>\n</ul>\n</li>\n<li>for large k, often get zero estimate, so do not change the count\n<ul>\n<li>C(the) = 200000, C(a) = 190000, $C*(the) = (200001)N_{200001} / N_{200000} = 0 (because N_{200001} = 0)$</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"6-Absolute-Discounting\">(6) Absolute Discounting</h4>\n<p>從所有非零N-gram中拿出λ，平均分配給所有未出現過的N-gram</p>\n<h3 id=\"Combining-Estimator\">Combining Estimator</h3>\n<p>Combination Methods</p>\n<ul>\n<li>Simple Linear Interpolation(內插)(finite mixture models)\n<ul>\n<li>Ex. trigram, bigram and unigram <img data-src=\"/img/nlp/linearde.webp\" alt=\"\" />\n<ul>\n<li>More generally, λ can be a function of (wn-2, wn-1, wn)</li>\n</ul>\n</li>\n<li>use <a href=\"#backward-forward\">Expectation-Maximization (EM) algorithm</a> to get weights</li>\n</ul>\n</li>\n<li>General Linear Interpolation\n<ul>\n<li>general form for a linear interpolation model</li>\n<li>weights are a function of the history <img data-src=\"/img/nlp/gli.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Katz’s Backing-Off\n<ul>\n<li>choose proper order to train model (base on training data)\n<ul>\n<li>If the n-gram appeared more than k times\n<ul>\n<li>use MLE estimate and discount it</li>\n</ul>\n</li>\n<li>If the n-gram appeared k times or less\n<ul>\n<li>use an estimate from <strong>lower-order n-gram</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>back-off probability <img data-src=\"/img/nlp/pbo.webp\" alt=\"\" />\n<ul>\n<li>$P_{Dis}(w_n|w_{n-2},w_{n-1})$ is specific discounted estimate. e.g., Good-Turing or Absolute Discounting</li>\n<li>unseen trigram is estimated by bigram and β <img data-src=\"/img/nlp/bosmooth.webp\" alt=\"\" /></li>\n<li><strong>β(wn-2, wn-1)</strong> and <strong>α</strong> are chosen so that sum of probabilities = 1</li>\n</ul>\n</li>\n<li>more genereal form <img data-src=\"/img/nlp/botable.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Most usual approach in large speech recognition: trigram language model, Good-Turing discounting, back-off combination</p>\n</blockquote>\n<h2 id=\"Chap06-Hidden-Markov-Models-HMM\">Chap06 Hidden Markov Models(HMM)</h2>\n<ul>\n<li>statistical tools that are useful for NLP\n<ul>\n<li><strong>part-of-speech-tagging</strong></li>\n<li>We construct “Visible” Markov Models in training, but treat them as Hidden Markov Models when tagging new corpora</li>\n</ul>\n</li>\n<li>model a <strong>state sequence</strong> (perhaps through time) <strong>of random variables</strong> that have dependencies\n<ul>\n<li>狀態(state)並不是直接可見的，但受狀態影響的某些變量(output symbol)則是可見的</li>\n<li>known value\n<ul>\n<li><strong>output symbols(words)</strong> 字詞</li>\n<li>probabilistic function of state relation 和state相關的機率函式</li>\n</ul>\n</li>\n<li>unknown value\n<ul>\n<li><strong>state(part-of-speech tags)</strong> 目前的state，即POS tag</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>rely on 2 assumptions\n<ul>\n<li>Let X=(X1, ..., XT) be a sequence of random variables, X is markov chain if</li>\n</ul>\n<ol>\n<li>Limited Horizon\n<ul>\n<li>a word’s tag only depends on <strong>previous</strong> tag(state只受前一個state影響)</li>\n</ul>\n</li>\n<li>Time Invariant\n<ul>\n<li>the dependency does not change over time(轉移矩陣不變)</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<p>Description</p>\n<ul>\n<li>initial state π, state = Q, Observations = O, transition matrix = A, output(observation) matrix = B</li>\n<li><img data-src=\"/img/nlp/hmm1.webp\" alt=\"\" />\n<ul>\n<li>$a_{ij}$ = probability of state $q_i$ transition to state $q_j$</li>\n<li>$b_i(k)$ = probability of observe output symbol $O_k$ when state = $q_i$</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-problems-of-HMM\">3 problems of HMM</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy41Mm5scC5jbi9obW0tbGVhcm4tYmVzdC1wcmFjdGljZXMtZm91ci1oaWRkZW4tbWFya292LW1vZGVscw==\">中文解說：隱馬可夫鏈<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li>評估（Evaluation）：what is probability of the observation sequence given a model? (P(Observes|Model))\n<ul>\n<li>Used in model improvement</li>\n<li>Used in classification\n<ul>\n<li>Word spotting in speech recognition, language identification, speaker identification, author identification……</li>\n<li>Given an observation, compute P(O|model) for all models</li>\n</ul>\n</li>\n<li>Use <strong>Forward algorithm</strong> to solve it</li>\n</ul>\n</li>\n<li>解碼（Decoding）：Given an observation sequence and model, what is the <strong>most likely state sequence</strong>? (P(States|Observes, Model)) 下一個state是什麼\n<ul>\n<li>Used in tagging (tags=hidden states)</li>\n<li>Use <strong>Viterbi algorithm</strong> to solve it</li>\n</ul>\n</li>\n<li>學習（Learning）：Given an observation sequence, infer the best model parameters (argmax(Model) P(Model|Observes))\n<ul>\n<li>「fill in model parameters that make the observation sequence most likely」</li>\n<li>Used for building HMM Model from data</li>\n<li>Use <strong>EM(Baum-Welch, backward-forward algorithm)</strong> to solve it</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Solutions-of-HMM-problem\">Solutions of HMM problem</h3>\n<h4 id=\"Forward\">Forward</h4>\n<p><a href=\"http://www.52nlp.cn/hmm-learn-best-practices-five-forward-algorithm-1\"></a></p>\n<ul>\n<li><img data-src=\"/img/nlp/fwformula.webp\" alt=\"\" /></li>\n<li>simply sum of the probability of each possible state sequence</li>\n<li>Direct evaluation\n<ul>\n<li>time complexity = $(2T+1) \\times N^{T+1}$ -&gt; too big <img data-src=\"/img/nlp/fw.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Use dynamic programming\n<ul>\n<li>record the probability of subpaths of the HMM</li>\n<li>The probability of longer subpaths can be calculated from shorter subpaths</li>\n<li>similar to Viterbi: viterbi use MAX() instead of SUM()</li>\n</ul>\n</li>\n</ul>\n<!-- Description:DP  \n- ![dp](/img/nlp/dp.webp)\n- ![dp](/img/nlp/dptable.webp)\n\t- 選最高機率的路徑(將其他路徑的機率加入最高機率) \n\t- 例：p(qqqq) = 0.01, p(qrrq) = 0.007 → P(qqqq) = 0.017\n-->\n<p>Forward Algorithm</p>\n<ul>\n<li>$α_t(i)$ = probability of state = qi at time = t <img data-src=\"/img/nlp/forwardalgo.webp\" alt=\"dp\" /></li>\n<li>α的求法：將time = t-1 的 α 值，乘上在time = t時會在qi state的機率，並加總 <img data-src=\"/img/nlp/forwardfex.webp\" alt=\"dp\" /></li>\n<li>順向推出所有可能的state sequence會產生此observation的機率和, 即為此model會產生此observation的機率 <img data-src=\"/img/nlp/forwardexample.webp\" alt=\"dp\" />\n<ul>\n<li>Σ P($O_1, O_2, O_3$ | possible state sequence) = P($O_1, O_2, O_3$ | Model)</li>\n</ul>\n</li>\n<li><img data-src=\"/img/nlp/forwardpseudo.webp\" alt=\"dp\" /></li>\n</ul>\n<p>Example:Urn(甕)</p>\n<ul>\n<li>genie has two urns filled with red and blue balls</li>\n<li>genie selects an urn and then draws a ball from it\n<ul>\n<li>The urns are hidden</li>\n<li>The balls are observed</li>\n</ul>\n</li>\n<li>After a lot of draws\n<ul>\n<li>know the distribution of colors of balls in each urn(B matrix)</li>\n<li>know the genie’s preferences in draw from one urn or the next(A matrix)</li>\n</ul>\n</li>\n<li>assume output (observation) is Blue Blue Red (BBR)\n<ul>\n<li>Forward: P(BBR|model) = 0.0792 (SUM of all possible states' probability) <img data-src=\"/img/nlp/forward-urn.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>Viterbi</p>\n<ul>\n<li>\n<p>compute <strong>the most possible path</strong></p>\n</li>\n<li>\n<p>$v_t(i)$ = <strong>most possible path probability</strong> from time = 0 to time = t, and state = qi at time = t <img data-src=\"/img/nlp/viterbi.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p><img data-src=\"/img/nlp/viterbi-graph.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p><img data-src=\"/img/nlp/viterbi-algo.webp\" alt=\"\" /></p>\n</li>\n<li>\n<p>Viterbi in Urn example <img data-src=\"/img/nlp/urn-cal.webp\" alt=\"\" /></p>\n<p>def viterbi(obs, states, start_p, trans_p, emit_p):<br />\nV = [{}]<br />\npath = {}</p>\n<pre><code>  # Initialize base cases (t == 0)\n  for y in states:\n      V[0][y] = start_p[y] * emit_p[y][obs[0]]\n      path[y] = [y]\n\n  # Run Viterbi for t &gt; 0\n  for t in range(1,len(obs)):\n      V.append(&#123;&#125;)\n      newpath = &#123;&#125;\n\n      for y in states:\n          (prob, state) = max([(V[t-1][y0] * trans_p[y0][y] * emit_p[y][obs[t]], y0) for y0 in states]) \n  \t\t# ↑ find the most possible state transitting to given state y at time=t\n          V[t][y] = prob\n          newpath[y] = path[state] + [y] \n\n      # newpath(at time t) can overwrite path(at time t-1) \n      path = newpath\n\n  (prob, state) = max([(V[len(obs) - 1][y], y) for y in states])\n  return (prob, path[state])\n</code></pre>\n</li>\n</ul>\n<h4 id=\"Backward\">Backward</h4>\n<ul>\n<li>Useful for parameter estimation</li>\n</ul>\n<p>Description</p>\n<ul>\n<li>Backward variables β, which are the total probability of seeing the rest of the observation sequence($O_t to O_T$) given state qi at time t <img data-src=\"/img/nlp/bw-procedure.webp\" alt=\"\" />\n<ul>\n<li><img data-src=\"/img/nlp/bw-f.webp\" alt=\"\" /></li>\n<li>初始化β：令t=T時刻所有狀態的β為1</li>\n</ul>\n</li>\n<li>由後往前計算 <img data-src=\"/img/nlp/bw-graph.webp\" alt=\"\" /></li>\n<li>如果要計算某observation的概率，只需將t=1的後向變量相加</li>\n</ul>\n<h4 id=\"Backward-Forward\">Backward-Forward</h4>\n<ul>\n<li>We can locally maximize model parameter λ, by an iterative hill-climbing known as Baum-Welch algorithm(=Forward-Backward) (by EM Algorithm structure)</li>\n</ul>\n<p>Forward-Backward Algorithm</p>\n<ul>\n<li>find which** state transitions(A matrix)** and <strong>symbol observaions(B matrix)</strong> were <strong>probably used the most</strong></li>\n<li>By <strong>increasing the probability of those</strong>, we can get a better model which gives a higher probability to the observation sequence</li>\n<li>transition probabilities and path probabilities are both require each other to calculate\n<ul>\n<li>use A matrix to calculate path probabilities</li>\n<li>need path probabilities to update A matrix</li>\n<li>use EM algorithm</li>\n</ul>\n</li>\n</ul>\n<p>EM algorithm (Expectation-Maximization)</p>\n<ul>\n<li>迭代算法，它的最大優點是簡單和穩定，但容易陷入局部最優</li>\n<li>(隨機)選擇參數λ0，找出在λ0下最可能的狀態，計算每個訓練樣本的可能結果的概率，再<strong>重新估計新的參數λ</strong>。經過多次的迭代，直至某個收斂條件滿足為止</li>\n<li>Urn Example\n<ul>\n<li>update transition matrix A ($a_{12}, a_{11}$ ... ) <img data-src=\"/img/nlp/newtrans.webp\" alt=\"\" />\n<ul>\n<li>P(1→2) = 0.0414 <img data-src=\"/img/nlp/1-2.webp\" alt=\"1→2\" /></li>\n<li>P(1→1) = 0.0537 <img data-src=\"/img/nlp/1-1.webp\" alt=\"1→1\" /></li>\n<li>normalize: P(1→2)+P(1→1) = 1, P(1→2) = 0.435 ...</li>\n</ul>\n</li>\n<li>若state數目多的時候，計算量過大…\n<ul>\n<li>用backward, forward</li>\n<li>前面用forward, 後面用backward <img data-src=\"/img/nlp/bf-graph.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Combine forward and backward</p>\n<ul>\n<li>Let ξt be the probability of being in state i at time t and state j at time t+1, <strong>given observation and model λ</strong><img data-src=\"/img/nlp/kesin.webp\" alt=\"\" /></li>\n<li>use not-quite-ξ to get ξ <img data-src=\"/img/nlp/nqkesin.webp\" alt=\"\" /> because <img data-src=\"/img/nlp/kesin-formula.webp\" alt=\"\" />\n<ul>\n<li>P(O|λ) → problem1 of HMM 的答案 → 用forward解</li>\n</ul>\n</li>\n<li>見上方backward, forward同時使用之圖 <img data-src=\"/img/nlp/nqkesin-formula.webp\" alt=\"\" /></li>\n<li>ξ可用來計算transition matrix <img data-src=\"/img/nlp/newtrans-final.webp\" alt=\"\" /></li>\n</ul>\n<p>Summary of Forward-Backward <img data-src=\"/img/nlp/fb-algo.webp\" alt=\"\" /></p>\n<ol>\n<li>Initialize λ=(A,B)</li>\n<li>Compute α, β, ξ using observations</li>\n<li>Estimate new λ’=(A,B)</li>\n<li>Replace λ with λ’</li>\n<li>If not converged go to 2</li>\n</ol>\n<h2 id=\"Chap07-Part-of-Speech-Tagging\">Chap07 Part-of-Speech Tagging</h2>\n<p>alias: <strong>parts-of-speech</strong>, <strong>lexical categories</strong>, <strong>word classes</strong>, <strong>morphological classes</strong>, <strong>lexical tags</strong></p>\n<ul>\n<li>Noun, verb, adjective, preposition, adverb, article, interjection, pronoun, conjunction</li>\n<li>preposition(P)\n<ul>\n<li>of, by, to</li>\n</ul>\n</li>\n<li>pronoun(PRO)\n<ul>\n<li>I, me, mine</li>\n</ul>\n</li>\n<li>determiner(DET)\n<ul>\n<li>the, a, that, those</li>\n</ul>\n</li>\n</ul>\n<p>Usage</p>\n<ul>\n<li>\n<p>Speech synthesis</p>\n</li>\n<li>\n<p>Tag before parsing</p>\n</li>\n<li>\n<p>Information extraction</p>\n</li>\n<li>\n<p>Finding names, relations, etc.</p>\n</li>\n<li>\n<p>Machine Translation</p>\n</li>\n<li>\n<p>Closed class</p>\n<ul>\n<li>the class that is hard to add new words</li>\n<li>Usually function words (short common words which play a role in grammar)\n<ul>\n<li>prepositions: on, under, over,…</li>\n<li>particles: up, down, on, off, …</li>\n<li>determiners: a, an, the, …</li>\n<li>pronouns: she, who, I, …</li>\n<li>conjunctions: and, but, or, …</li>\n<li>auxiliary verbs: can, may should, …</li>\n<li>numerals: one, two, three, third, …</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Open class</p>\n<ul>\n<li>new ones can be created all the time</li>\n<li>For English: Nouns, Verbs, Adjectives, Adverbs</li>\n</ul>\n</li>\n</ul>\n<p>Choosing Tagset: Ex. “Penn TreeBank tagset”, 45 tag<br />\n<img data-src=\"/img/nlp/tagset.webp\" alt=\"\" /></p>\n<p>Methods for POS Tagging</p>\n<ol>\n<li>Rule-based tagging\n<ul>\n<li>ENGTWOL: ENGlish TWO Level analysis</li>\n</ul>\n</li>\n<li>Stochastic: Probabilistic sequence models\n<ul>\n<li>HMM (Hidden Markov Model)</li>\n<li>MEMMs (Maximum Entropy Markov Models)</li>\n</ul>\n</li>\n<li>Transformation-Based Tagger (Brill)</li>\n</ol>\n<h3 id=\"Rule-Based-Tagging\">Rule-Based Tagging</h3>\n<ol>\n<li>Assign all possible tags to each word</li>\n<li>Remove tags according to set of rules\n<ol>\n<li>Typically more than 1000 hand-written rules</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"Hidden-Markov-Model-tagging\">Hidden Markov Model tagging</h3>\n<ul>\n<li>special case of Bayesian inference\n<ul>\n<li>Foundational work in computational linguistics</li>\n</ul>\n</li>\n<li>related to the “noisy channel” model that’s the basis for ASR, OCR and MT</li>\n<li>Decoding view\n<ul>\n<li>Consider all possible sequences of tags</li>\n<li>choose the tag sequence which is most possible given the observation sequence of n words w1…wn</li>\n</ul>\n</li>\n<li>Generative view\n<ul>\n<li>This sequence of words must have resulted from some hidden process</li>\n<li>A sequence of tags (states), each of which emitted a word</li>\n</ul>\n</li>\n<li>$t^n_1$(t hat), which is the most possible tag <img data-src=\"/img/nlp/best-t.webp\" alt=\"\" /></li>\n<li>use viterbi to get tag <img data-src=\"/img/nlp/viterbi-ex.webp\" alt=\"\" /></li>\n</ul>\n<p>Evaluation</p>\n<ul>\n<li>Overall error rate with respect to a gold-standard test set</li>\n<li>Error rates on particular tags/words</li>\n<li>Tag confusions, Unknown words...</li>\n<li>Typically accuracy reaches 96~97%</li>\n</ul>\n<p>Unknown Words</p>\n<ul>\n<li>Simplest model\n<ul>\n<li>Unknown words can be of any part of speech, or only in any open class</li>\n</ul>\n</li>\n<li>Morphological and other cues\n<ul>\n<li>~ed: past tense forms or past participles</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Maximum-entropy-Markov-model-MEMM\">Maximum entropy Markov model (MEMM)</h3>\n<p>Maximum Entropy Model</p>\n<ul>\n<li>MaxEnt: multinomial(多項式) logistic regression</li>\n<li>Used for sequence classification/sequence labeling</li>\n<li>Maximum entropy Markov model (MEMM)\n<ul>\n<li>a common MaxEnt classifier</li>\n</ul>\n</li>\n</ul>\n<!-- Classification\n- Task\n\t- observation, Extract useful features, Classify the observation based on these features\n- Probabilistic classifier\n\t- Given an observation, it gives a probability distribution over all classes\n- Non-sequential(連續的) Applications\n\t- Text classification\n\t- Sentiment analysis\n\t- Sentence boundary detection\n-->\n<p>Exponential(log-linear) classifiers</p>\n<ul>\n<li>Combine features linearly</li>\n<li>Use the sum as an exponent <img data-src=\"/img/nlp/maxent.webp\" alt=\"\" /></li>\n<li>Example <img data-src=\"/img/nlp/maxent-ex.webp\" alt=\"\" /></li>\n</ul>\n<p>Maximum Entropy Markov Model</p>\n<ul>\n<li>MaxEnt model\n<ul>\n<li>classifies <strong>a</strong> observation into <strong>one</strong> of discrete classes</li>\n</ul>\n</li>\n<li>MEMM\n<ul>\n<li>augmentation(增加) of the basic MaxEnt classifier</li>\n<li><strong>assign a class to each element in a sequence</strong></li>\n</ul>\n</li>\n</ul>\n<p>POS tagging from MaxExt to MEMM</p>\n<ul>\n<li>include some source of knowledge into the tagging process</li>\n<li>The simplest approach\n<ul>\n<li>run the local classifier and <strong>feature is classifier from the previous word</strong></li>\n<li>Flaw\n<ul>\n<li>It makes a hard decision on each word before moving on the next word</li>\n<li>cannot use information from the later words</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>discriminative model</strong>(判別模型)</p>\n<ul>\n<li>Compute the posterior P(Tag|Word) directly to decide tag <img data-src=\"/img/nlp/memm.webp\" alt=\"\" /></li>\n<li>求解條件機率分佈 P(y|x) 預測 y → 求P(tag|word)來取得tag</li>\n<li>不考慮聯合機率分佈 P(x, y)</li>\n<li>對於諸如分類和回歸問題，由於不考慮聯合機率分佈，採用判別模型可以取得更好的效果</li>\n</ul>\n<p>HMM and MEMM(順推和逆推的差別) <img data-src=\"/img/nlp/hmmandmemm.webp\" alt=\"\" /></p>\n<ul>\n<li>Unlike HMM, MEMM can condition on any <strong>useful feature of observation</strong>\n<ul>\n<li>HMM: state is the fiven value</li>\n<li>MEMM: observation is the given value</li>\n</ul>\n</li>\n<li>viterbi function for MEMM <img data-src=\"/img/nlp/viterbi-new.webp\" alt=\"\" /></li>\n<li><img data-src=\"/img/nlp/memm-ex.webp\" alt=\"\" /></li>\n</ul>\n<h3 id=\"Transformation-Based-Learning-of-Tags\">Transformation-Based Learning of Tags</h3>\n<ul>\n<li>Tag each word with its most frequent tag</li>\n<li>Construct a list of transformations that <strong>improve the initial tag</strong></li>\n<li>trigger environment: at the limited number of words before/after <img data-src=\"/img/nlp/transformed-learn.webp\" alt=\"\" /></li>\n<li><img data-src=\"/img/nlp/transformed-algo.webp\" alt=\"\" /></li>\n</ul>\n<ol>\n<li>Trigger by tags</li>\n<li>Trigger by word</li>\n<li>Trigger by morphology(詞法學)</li>\n</ol>\n<p>&lt;! -- <mark><mark><mark><mark><mark><mark><mark><mark><mark><mark>分水嶺：尚未分類</mark></mark></mark></mark></mark></mark></mark></mark></mark></mark>====== --&gt;</p>\n<h3 id=\"Zipf’s-Law-long-tail-phenomenon\">Zipf’s Law (long tail phenomenon)</h3>\n<p>a word’s frequency is approximately inversely proportional to its rank in the word distribution list<br />\n單詞出現的頻率與它在頻率表裡的排名成反比:<br />\n頻率最高的單詞出現的頻率大約是出現頻率第二位的單詞的2倍</p>\n<h4 id=\"Jelinek-Mercer-Smoothing\">Jelinek-Mercer Smoothing</h4>\n<p>interpolate(插值) between bigram and unigram<br />\nbecause if p(eat the) = 0 and p(eat thou) = 0<br />\nit still must consider that  p(eat the) &gt; p(eat thou)<br />\nbecause p(the) &gt; p(thou)<br />\nso p(eat the) = N * p(the | eat) + (1-N) * p(the | thou)</p>\n<h2 id=\"Language-Model-Applications\">Language Model: Applications</h2>\n<h3 id=\"Query-Likelihood-Model\">Query Likelihood Model</h3>\n<p>given a query 𝑞, rank the probability 𝑝(𝑑|q)<br />\n<img data-src=\"/img/nlp/cfKf6I3.webp\" alt=\"\" /><br />\nSo the following arguments are equivalent:<br />\n1.𝑝𝑑𝑞: find the document 𝑑 that is most likely to be relevant to 𝑞<br />\n2.𝑝𝑞𝑑: find the document 𝑑 that is most likely to generate the query 𝑞</p>\n<p>Typically, unigram LMs are used in IR(information retrieval)<br />\nRetrieval does not depend that much on sentence structure</p>\n<h3 id=\"Dependence-Language-Model\">Dependence Language Model</h3>\n<p>Relax the independence assumption of unigram LMs<br />\nDo not assume that the dependency only exist between <strong>adjacent</strong> words<br />\nIntroduce a hidden variable: “linkage” 𝐿<br />\nEx.<br />\n<img data-src=\"/img/nlp/Z8ftSRP.webp\" alt=\"\" /></p>\n<p>skipped....</p>\n<h3 id=\"Proximity-Language-Model\">Proximity Language Model</h3>\n<p>Proximity: how close the query terms appear in a document<br />\nthe closer they are, the more likely they are describing the same topic or concept</p>\n<h3 id=\"Positional-Language-Model\">Positional Language Model</h3>\n<p>Position: define a LM for each position of a document, instead of the entire document<br />\nWords closer to a position will contribute more to the language model of this position</p>\n<h3 id=\"Speech-Recognition\">Speech Recognition</h3>\n<ul>\n<li>The “origin” of language models</li>\n<li>used to restrict the search space of possible word sequences</li>\n<li>requires higher order models: knowing previous acoustic is important!</li>\n<li>Speed is important!</li>\n<li>N-gram LM with modified Kneser-Ney smoothing is extensively used</li>\n</ul>\n<h3 id=\"Machine-Translation-MT\">Machine Translation (MT)</h3>\n<ul>\n<li>Decoding: given the probability model(s), find the best translation</li>\n<li>Similar role as in speech recognition: <strong>eliminate unlikely word sequences</strong></li>\n<li>Higher order Kneser-Ney smoothed n-gram LM is widely used</li>\n<li>NNLM-style models tend to outperform standard back-off LMs</li>\n<li>Also significantly speeded up in (Delvin et al, 2014)</li>\n</ul>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li>HHChen 課堂講義</li>\n<li>SDLin 講義</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGFzcy5jb3Vyc2VyYS5vcmcvbmxwLw==\">Stanford NLP course<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><a href=\"www.52nlp.cn\">52nlp</a></li>\n</ul>\n","categories":["筆記"],"tags":["機器學習","自然語言處理","統計"]},{"title":"SEO實作方法","url":"/seo/","content":"<blockquote>\n<p>hexo 都實作得差不多了，純整理</p>\n</blockquote>\n<h2 id=\"html-tag\">html tag</h2>\n<h3 id=\"title\">&lt;title&gt;</h3>\n<ul>\n<li>網頁的主題</li>\n<li><code>&lt;title&gt;</code>標記應該放在HTML文件的<code>&lt;head&gt;</code>標記區段中</li>\n</ul>\n<span id=\"more\"></span>\n<h3 id=\"meta\">&lt;meta&gt;</h3>\n<ul>\n<li>網頁的摘要</li>\n<li>描述中繼標記<code>&lt;meta&gt;</code>也位於HTML文件的<code>&lt;head&gt;</code>標記部分中</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">“description”</span> <span class=\"attr\">content</span>=<span class=\"string\">“Brandon’s</span> <span class=\"attr\">Baseball</span> <span class=\"attr\">Cards</span> </span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">provides</span> <span class=\"attr\">a</span> <span class=\"attr\">large</span> <span class=\"attr\">selection</span> <span class=\"attr\">of</span> <span class=\"attr\">vintage</span> <span class=\"attr\">and</span> <span class=\"attr\">modern</span> <span class=\"attr\">baseball</span> <span class=\"attr\">cards</span></span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">for</span> <span class=\"attr\">sale.</span> <span class=\"attr\">We</span> <span class=\"attr\">also</span> <span class=\"attr\">offer</span> <span class=\"attr\">daily</span> <span class=\"attr\">baseball</span> <span class=\"attr\">news</span> <span class=\"attr\">and</span> <span class=\"attr\">events</span> <span class=\"attr\">in</span>”&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"a\">&lt;a&gt;</h3>\n<ul>\n<li>連結\n<ul>\n<li>用文字敘述來告知使用者和Google有關您所要連結網頁的部分內容</li>\n</ul>\n</li>\n<li>同時考慮內部連結的錨定文字\n<ul>\n<li>多加注意用於內部連結的錨定文字可以幫助使用者和Google更容易瀏覽您的網站</li>\n</ul>\n</li>\n<li>請避免\n<ul>\n<li>只是為了搜尋引擎而使用大量關鍵字或冗長的錨定文字</li>\n<li>建立不必要的連結，這對使用者瀏覽網站無益</li>\n</ul>\n</li>\n<li>將<code>rel</code>屬性值設定為<code>nofollow</code>\n<ul>\n<li>告知搜尋引擎不應隨著您網站上的某些連結連至他處，也不應將您網頁的信譽情況傳給連上的網頁</li>\n<li>對評論欄和訊息板新增 <code>nofollow</code>\n<ul>\n<li>評論中的連結可能將信譽傳給不願擔保的網頁</li>\n</ul>\n</li>\n<li>對個別內容、所有網頁等使用 <code>nofollow</code>\n<ul>\n<li>想要參照某個網站，但是又不想把信譽傳給該網站\n<ul>\n<li>撰寫一篇以垃圾評論為主題的網誌文章</li>\n<li>並打算揭發一個最近經常在網誌上發表垃圾評論的網站</li>\n<li>希望提醒其他人對該網站提高警惕，因此將該網站的連結納入了內容中</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>在robots中繼標記中使用 <code>nofollow</code>\n<ul>\n<li><code>&lt;meta name=&quot;robots&quot; content=&quot;nofollow&quot;&gt;</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"img\">&lt;img&gt;</h3>\n<ul>\n<li><code>alt</code>屬性\n<ul>\n<li>如果因為某些原因而無法顯示圖片，<code>alt</code>屬性可允許您為圖片指定替代文字</li>\n</ul>\n</li>\n<li>將圖片檔案合併儲存於單一目錄中，而不要分散儲存在整個網域的許多目錄和子目錄下。這樣可以簡化圖片的連結路徑</li>\n<li>提供<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vd2VibWFzdGVycy9hbnN3ZXIvMTc4NjM2\">圖片Sitemap<i class=\"fa fa-external-link-alt\"></i></span>檔案</li>\n<li>簡單明瞭的檔案名稱</li>\n</ul>\n<h3 id=\"標題\">標題</h3>\n<ul>\n<li>標題標記有六種不同大小，從<code>&lt;h1&gt;</code>到<code>&lt;h6&gt;</code>，其重要性依次降低\n<ul>\n<li>由於標題標記通常會使其中包含的文字比網頁上的普通文字大一些，因此使用者可以清楚意識到這部分文字比較重要</li>\n</ul>\n</li>\n<li>建立層次分明的結構</li>\n</ul>\n<h2 id=\"網站資訊\">網站資訊</h2>\n<h3 id=\"URL\">URL</h3>\n<ul>\n<li>簡單易懂的URL能夠更加容易的表達內容</li>\n<li>建立簡單的目錄架構</li>\n<li>在網址中使用文字而非數字\n<ul>\n<li><code>www.stasiasbakery.com/custom-cakes</code> (O)</li>\n<li><code>www.stasiasbakery.com/prodid?12345</code> (X)</li>\n</ul>\n</li>\n<li>為同一文件提供同一版本的網址\n<ul>\n<li>設定301重新導向，將不喜歡的網址重新導向到您所期望使用的網址，這是一個很好的解決方案</li>\n<li>無法重新導向時，也可以使用標準網頁或<code>rel=&quot;canonical&quot;</code>連結元素\n<ul>\n<li>https://support.google.com/webmasters/answer/139066</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>請避免\n<ul>\n<li>無論從子域還是根目錄(例如<code>domain.com/page.htm</code>和<code>sub.domain.com/page.htm</code>)都可以瀏覽到相同的內容</li>\n<li>在網址中使用奇怪的大寫字母\n<ul>\n<li>大部分使用者喜歡小寫的網址， 並且小寫也便於使用者記憶</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"目錄\">目錄</h4>\n<ul>\n<li>層級架構\n<ul>\n<li>將訪客從主網頁導向至包含特定內容的網頁</li>\n<li>導覽中儘量使用文字連結</li>\n</ul>\n</li>\n<li>考慮移除部分網址的情況\n<ul>\n<li>正在瀏覽：<code>http://www.brandonsbaseballcards.com/news/2010/upcoming-baseball-cardshows.htm</code></li>\n<li>輸入：<code>http://www.brandonsbaseballcards.com/news/2010/</code>，認為這樣就可以顯示2010年的所有新聞</li>\n<li>在這種情況下，您的網站是否已準備好顯示使用者想要的內容，還是只顯示一個404(「找不到網頁」錯誤)</li>\n</ul>\n</li>\n<li>建立實用的404網頁\n<ul>\n<li>最好能提供返回您網站根網頁的連結，以及前往網站中熱門或相關內容的連結</li>\n<li>Google提供了404小工具，可以將其嵌入您的404網頁，即可自動產生許多實用的功能</li>\n<li>可以使用Google網站管理員工具，找出導致「找不到網頁」錯誤的網址來源</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Sitemap\">Sitemap</h3>\n<p>Sitemap(網站架構)用於顯示網站架構，通常由一份網站網頁的層級清單組成。當訪客在您的網站上找不到某些特定網頁時，即可瀏覽該網頁<br />\n雖然搜尋引擎也會瀏覽該網頁，以便對您網站上的網頁進行更全面的檢索，但其主要目的還是為了方便訪客</p>\n<ul>\n<li>準備兩種Sitemap：分別供使用者和搜尋引擎使用\n<ul>\n<li>在網站上放置HTML Sitemap</li>\n<li>建立XML Sitemap檔案並提交給搜尋引擎</li>\n</ul>\n</li>\n<li>請避免\n<ul>\n<li>HTML Sitemap中含有無效連結，無法到達相應的網頁</li>\n<li>建立的HTML Sitemap僅列出網頁，而沒有進行整理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"robots-txt\">robots.txt</h3>\n<ul>\n<li>避免內容出現在搜尋結果中\n<ul>\n<li><code>robots.txt</code>檔案可告知搜尋引擎是否可以存取您網站的某些部分，進而對這些部分進行檢索</li>\n</ul>\n</li>\n<li>必須為該子網域建立一個單獨的<code>robots.txt</code>檔案</li>\n<li>其他方法\n<ul>\n<li>為robots中繼標記新增<code>NOINDEX</code>\n<ul>\n<li><code>&lt;meta name=&quot;googlebot&quot; content=&quot;noindex&quot; /&gt;</code></li>\n</ul>\n</li>\n<li>使用<code>.htaccess</code>對目錄進行密碼保護</li>\n<li>使用Google網站管理員工具移除已檢索的內容</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"對敏感的內容使用更為安全的方法\">對敏感的內容使用更為安全的方法</h4>\n<ul>\n<li>\n<p>一些惡意搜尋引擎並不遵守標準，可能會違背您的<code>robots.txt</code>指示</p>\n</li>\n<li>\n<p>好奇的使用者可能會查看<code>robots.txt</code>檔案中的目錄或子目錄，並猜中不想曝光的內容網址</p>\n</li>\n<li>\n<p>對內容加密或使用<code>.htaccess</code>對內容進行密碼保護是更安全的選擇</p>\n</li>\n<li>\n<p>請避免</p>\n<ul>\n<li>允許檢索類似搜尋結果的網頁\n<ul>\n<li>使用者不喜歡從一個搜尋結果網頁進入另一個搜尋結果網頁，這對他們而言沒有多大價值</li>\n</ul>\n</li>\n<li>允許檢索大量自動產生的且內容相同或相似的網頁</li>\n<li>允許檢索因Proxy服務而建立的網址</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"https-和-SSL-憑證\">https 和 SSL 憑證</h3>\n<p>安全性已經被視為 SEO 搜尋排名因素之一，而且當網站不安全時，人們也會感到擔心</p>\n<h3 id=\"行動網站\">行動網站</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWFyY2guZ29vZ2xlLmNvbS90ZXN0L21vYmlsZS1mcmllbmRseQ==\">Google提供的手機友善測試<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>驗證Google是否替行動網站製作索引\n<ul>\n<li>使用<code>site:</code> 運算子在Google行動搜尋</li>\n</ul>\n</li>\n<li>Googlebot可能無法存取您的網站\n<ul>\n<li>在網頁搜尋中使用<code>Googlebot</code></li>\n<li>在行動搜尋中使用<code>Googlebot-Mobile</code></li>\n<li>提供給<code>Googlebot</code>的內容應與電腦所見內容相同</li>\n<li>提供給<code>Googlebot-Mobile</code>的內容應與行動裝置所見的內容相同</li>\n</ul>\n</li>\n<li>請檢查易於行動裝置使用的網址，其DTD宣告是否為適當的行動格式，例如<code>XHTML</code>行動網頁或<code>Compact HTML</code></li>\n<li>正確指導行動裝置使用者\n<ul>\n<li>最常發生的問題就是在桌上型電腦中顯示行動版的網站，或是在行動裝置中顯示電腦版的網站</li>\n<li>重新導向至正確的版本\n<ul>\n<li>行動裝置使用者或行動檢索器(例如<code>Googlebot-Mobile</code>)存取電腦版的網址時，重新導向至對應的行動版網址</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"網頁速度\">網頁速度</h3>\n<ul>\n<li>如果讀取時間超過7秒鐘，訪客從您的網站離開的可能性就會增加 113%</li>\n<li>使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZXN0bXlzaXRlLnRoaW5rd2l0aGdvb2dsZS5jb20v\">Google 的測試工具<i class=\"fa fa-external-link-alt\"></i></span> 瞭解網頁的載入速度</li>\n</ul>\n<h2 id=\"內容\">內容</h2>\n<h3 id=\"提供優質內容和服務\">提供優質內容和服務</h3>\n<ul>\n<li>內容引人注目的網站自然會受到肯定</li>\n<li>提供獨一無二的內容</li>\n<li>為使用者創作內容，而不是為搜尋引擎創作內容</li>\n<li>持續更新內容</li>\n</ul>\n<h3 id=\"宣傳\">宣傳</h3>\n<ul>\n<li>離線宣傳\n<ul>\n<li>名片、信、海報</li>\n</ul>\n</li>\n<li>增加反向連結以提升網站的價值\n<ul>\n<li>撰寫網誌，讓訪客知道網站有新增內容</li>\n<li>社群媒體</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"關鍵字\">關鍵字</h3>\n<ul>\n<li>考量使用者為找到部分內容而可能搜尋的字詞。相較於對主題不瞭解的使用者，很瞭解該主題的使用者可能會在他們的搜尋查詢中使用不同的關鍵字\n<ul>\n<li>一個資深棒球愛好者可能會搜尋國家聯盟冠軍系列賽(National League Championship Series)的縮寫<code>nlcs</code></li>\n<li>一個剛剛接觸棒球的愛好者可能會使用<code>棒球季後賽</code>這樣較為普通的查詢</li>\n</ul>\n</li>\n<li>Google AdWords的關鍵字工具，可找出新的關鍵字變化，並查看每一個關鍵字的約略搜尋量</li>\n<li>Google網站管理員工具會提供網站上出現的熱門搜尋查詢</li>\n<li>請避免\n<ul>\n<li>針對搜尋引擎插入大量不必要的關鍵字，這些關鍵字對使用者毫無意義且令人感到厭煩</li>\n<li>欺騙性地對使用者隱藏一些文字，卻對搜尋引擎顯示這些文字</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"工具\">工具</h2>\n<h3 id=\"網站管理員工具\">網站管理員工具</h3>\n<ul>\n<li>Google 網站管理員工具</li>\n<li>Google Analytics</li>\n<li>Yahoo! (Yahoo! Site Explorer)</li>\n<li>Microsoft (Live Search Webmaster Tools)</li>\n</ul>\n<h2 id=\"其他\">其他</h2>\n<h3 id=\"不符規定的方法\">不符規定的方法</h3>\n<ul>\n<li>斗蓬法（cloaking）\n<ul>\n<li>用兩版不同的網頁來達到最佳化的效果。一個版本只給搜索引擎看，一個版本給人看</li>\n</ul>\n</li>\n<li>關鍵字隱密字 （hidden text with keyword stuffing）\n<ul>\n<li>設定關鍵字的顏色和網頁背景顏色一樣，或透過 css hidden attribute （隱密特性） 來達到優化效果</li>\n</ul>\n</li>\n<li>橋頁（doorway pages）\n<ul>\n<li>自動生成大量包含關鍵詞的網頁，然後從這些網頁做自動轉向到主頁。目的是希望這些以不同關鍵詞為目標的橋頁在搜索引擎中得到好的排名。</li>\n</ul>\n</li>\n<li>付費連結（paid link）\n<ul>\n<li>是利用支付費用方式要求其他網站提供連結至自身網站，藉此偽裝高信任網站來欺騙搜尋引擎，付費連結類型多為錨點文字（Anchor Text）類型</li>\n</ul>\n</li>\n<li>連結農場（link farm）\n<ul>\n<li>是故意在一些低質素，內容跟自己內容無關的網站上取得大量連結，藉以提高排名</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGF0aWMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL21lZGlhL3d3dy5nb29nbGUuY24vemgtVFcvY24vaW50bC96aC1UVy93ZWJtYXN0ZXJzL2RvY3Mvc2VhcmNoLWVuZ2luZS1vcHRpbWl6YXRpb24tc3RhcnRlci1ndWlkZS16aC10dy5wZGY=\">Google 搜尋引擎最佳化 (SEO) 速記指南<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGF0aWMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL21lZGlhL3d3dy5nb29nbGUuY24vemgtVFcvY24vaW50bC96aC1UVy93ZWJtYXN0ZXJzL2RvY3Mvc2VhcmNoLWVuZ2luZS1vcHRpbWl6YXRpb24tc3RhcnRlci1ndWlkZS16aC10dy5wZGY=\">搜尋引擎最佳化初學者指南<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2lraXdhbmQuY29tL3poLyVFNiU5MCU5QyVFNSVCMCU4QiVFNSVCQyU5NSVFNiU5MyU4RSVFNiU5QyU4MCVFNCVCRCVCMyVFNSU4QyU5Ng==\">搜尋引擎最佳化<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["SEO","google","html"]},{"title":"Unity Tutorial - Survival Shooter 實作","url":"/unity5-tutorial-survival-shooter/","content":"<p>Version 5.1</p>\n<p>Unity官網上的教學<span class=\"exturl\" data-url=\"aHR0cHM6Ly91bml0eTNkLmNvbS9sZWFybi90dXRvcmlhbHMvcHJvamVjdHMvc3Vydml2YWwtc2hvb3Rlci1wcm9qZWN0\">Survival-Shooter-Project<i class=\"fa fa-external-link-alt\"></i></span>實作</p>\n<span id=\"more\"></span>\n<h2 id=\"Outline\">Outline</h2>\n<h2 id=\"記錄\">記錄</h2>\n<h3 id=\"Chap02\">Chap02</h3>\n<ul>\n<li><code>Drag</code>, <code>AngularDrag</code>:<span class=\"exturl\" data-url=\"aHR0cDovL2ZvcnVtcy5nYW1lc2FsYWQuY29tL2Rpc2N1c3Npb24vMzQzNjMvd2hhdHMtZHJhZy1hbmQtYW5ndWxhci1kcmFnLXVzZWQtZm9y\">阻力大小<i class=\"fa fa-external-link-alt\"></i></span>，<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS96aGlib2xpZmUvcC80MDE4NjIxLmh0bWw=\">角阻力<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>設定Infinity會使移動完成(放開鍵盤)後立刻停止</li>\n</ul>\n</li>\n<li><code>GetComponent&lt;T&gt;</code> Get type T component from this object</li>\n<li><code>Rigidbody</code>(剛體)：屬於物理運動的物件</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy52aWN0c2FvLmNvbS9ibG9nLzk3LXVuaXR5LzQyMC11bml0eS11cGRhdGUtZml4dXBkYXRl\">Update 和 FixUpdate<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><code>Anim.SetTrigger(String)</code>: 啟動animator的trigger</li>\n<li><code>Input.GetAxisRaw(&quot;Horizontal&quot;);</code>, <code>Input.GetAxisRaw(&quot;Vertical&quot;);</code>：鍵盤輸入</li>\n<li><code>Input.mousePosition</code>：滑鼠位置</li>\n<li><code>floorHit</code>：滑鼠對應到遊戲中地板的位置，用投影方式算出</li>\n<li><code>Quaternion</code>：<span class=\"exturl\" data-url=\"aHR0cDovL29wZW5ob21lLmNjL0dvc3NpcC9Db21wdXRlckdyYXBoaWNzL1F1YXRlcm5pb25zUm90YXRlLmh0bQ==\">四元數<i class=\"fa fa-external-link-alt\"></i></span>，用來旋轉</li>\n</ul>\n<h3 id=\"Chap03\">Chap03</h3>\n<ul>\n<li><code>offset = transform.position - target.position;</code>: camera 和 player 的距離(固定)</li>\n<li><code>Vector3.Lerp</code>: 內插法移動至 player位置+offset</li>\n</ul>\n<h3 id=\"Chap04\">Chap04</h3>\n<ul>\n<li><code>hitParticles</code>: 屬於<span class=\"exturl\" data-url=\"aHR0cDovL3NoaW5lbGl1YmxvZy5ibG9nc3BvdC50dy8yMDE0LzAxLzEzLXVuaXR5LTNkLXBhcnRpY2xlLXN5c3RlbS5odG1s\">ParticleSystem(粒子系統)<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>被打的特效</li>\n</ul>\n</li>\n<li>Nav Mesh Agent(尋路agent)\n<ul>\n<li>Use Windows → navigation to bake</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Chap05\">Chap05</h3>\n<ul>\n<li><code>Handle Slide Area</code>: 控制UI.Slide的移動，移除後無法變更Slide</li>\n</ul>\n<h3 id=\"Chap07\">Chap07</h3>\n<ul>\n<li><code>OnTriggerEnter (Collider other)</code> 被其他Collider碰到時自動呼叫\n<ul>\n<li><code>OnTriggerExit (Collider other)</code> 離開</li>\n</ul>\n</li>\n<li><code>GetComponentInChildren</code>: 可以拿child的object</li>\n<li><code>GameObject.FindGameObjectWithTag (&quot;Player&quot;);</code>: 拿取其他object</li>\n<li><code>capsuleCollider.isTrigger = true;</code>: 模擬被Trigger的情況 → 會依序呼叫<code>OnTriggerEnter</code>，<code>OnTriggerExit</code></li>\n<li><code>Rigidbody.isKinematic = true;</code>:使其得到物理性質(預設即有，只是之前關掉了)</li>\n<li><code>Destroy (gameObject, 2f);</code>: 在2秒後將呼叫者摧毀</li>\n<li><code>Input.GetButton(&quot;Fire1&quot;)</code>: 滑鼠左鍵或left control</li>\n<li><code>LineRenderer</code>: 線渲染器渲染有寬度並可以被賦予貼圖的線，可設置顏色，寬度\n<ul>\n<li><code>gunLine.SetPosition((int) index, Vetor3 position)</code>\n<ul>\n<li>依照index順序的端點畫出線</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>timer += Time.deltaTime</code> in <code>Update</code>: 計算經過時間</li>\n<li><code>Physics.Raycast((Ray)shootRay,(RayCastHit)out shootHit,(float)range,(int)shootableMask)</code>: 計算shootHit(擊中的地方)，限制在shootableMask上\n<ul>\n<li><code>shootableMask = LayerMask.GetMask (&quot;Shootable&quot;);</code></li>\n</ul>\n</li>\n<li><code>transform.forward</code>: 物體面對的方向</li>\n</ul>\n<h3 id=\"Chap09\">Chap09</h3>\n<ul>\n<li><code>InvokeRepeating (&quot;Spawn&quot;, delayTime, loopTime);</code>: Call &quot;Spawn&quot; function after delayTime and continue calling after loopTime</li>\n<li><code>Instantiate</code>: 產生物件</li>\n</ul>\n<h3 id=\"Chap10\">Chap10</h3>\n<ul>\n<li>物件會照Hierarchy的順序render到螢幕</li>\n<li><code>Application.LoadLevel(Application.loadedLevel);</code>: 重新載入此場景(scene)</li>\n</ul>\n<h2 id=\"遇到的問題\">遇到的問題</h2>\n<h3 id=\"Chap02-2\">Chap02</h3>\n<p>PlayerAC -- 設定箭頭時要取消勾選<code>Has Exit Time</code></p>\n<h3 id=\"Chap04-2\">Chap04</h3>\n<p>Bake: set Width Inaccuracy % to 1 -- Unity5 找不到 → 不影響</p>\n<h3 id=\"Chap05-2\">Chap05</h3>\n<p>CanvasGroup → 直接在 Add Component 處尋找</p>\n","categories":["記錄"],"tags":["unity"]},{"title":"漢字的異體字及其Unicode編碼","url":"/unicode/","content":"<h2 id=\"異體字\">異體字</h2>\n<p>異體字為意思一樣、但寫法不同的字集合。<br />\n因為漢字在多個國家使用，每個國家的正式寫法不同，且在歷史中會出現字形改變的情形，自然字形也不同。</p>\n<span id=\"more\"></span>\n<h2 id=\"原因\">原因</h2>\n<p>Unicode只是編碼標準，不是字形標準。因此其原則為：<strong>它只對字（Character）編碼，而非字形（Glyph，每個字的具體形狀、寫法）</strong>，稱為表意文字認同原則。</p>\n<p>陸、港、臺、韓的「港」字右下從「巳」，日本的「港」字右下從「己」；港、臺、韓、日的「角」字中豎不穿頭，大陸的「角」字中豎穿頭；港、臺「起」字從「巳」，陸、日、韓從「己」……這些異形同字，Unicode都不分別編碼。例如「港」就是「6E2F」，不論從「巳」還是從「己」。</p>\n<p>爲了相容不同地區的編碼， Unicode 又有「<strong>字源分離原則</strong>」。日本 JIS 編碼同時收錄了「剣」、「劍」二形， Unicode 爲了與之兼容，即使它們是同一個字， Unicode 也分別給予編碼：「剣」是「5263」，「劍」是「528D」。</p>\n<p>而這兩個原則</p>\n<ol>\n<li>表意文字認同原則(Han Unification Rule)</li>\n<li>字源分離原則(Source Separation Rule)</li>\n</ol>\n<p>是互相矛盾的</p>\n<p>結果就是有些異體字被編進同一碼位，有些則區分作兩碼</p>\n<p>當然原則一是比較合理的，因為畢竟是同一個字，只是寫法稍有不同，原則二只是純粹的歷史包袱。</p>\n<h2 id=\"歷史\">歷史</h2>\n<p>國際標準組織於 1993 年 5 月出版了「通用碼架構及基本多語文字面」（UCSArchitecture and Basic Multilingual Plane）草案，該草案將此標準定名為 Universal MultipleOctet Coded Character Set（通用多八位組編碼字符集），並說明其編碼架構為 4 個位元組（4 Bytes），共組成 128 個群（Group），每一個群有 256 個字面（Plane)，每一個字面有256×256 個編碼空間，其中第 32 群的第 32 個字面為基本多語文字面（Basic MultilingualPlane；簡稱 BMP）。到了 1993 年 ISO 10646-1 正式版本，此標準定名為 Universal Multiple-Octet Coded Character Set（廣用多八位元組編碼字元集；簡稱 UCS），BMP 則定義在第 0 群第 0 個字面。在使用上，假如需用的字集都在 BMP 中，則只要使用 2 個八位元組的編碼架構即可，否則就必須使用 4 個八位元組的編碼架構；而且這兩種編碼架構不能混合使用，不是使用 2 個八位元組，就是使用 4 個八位元組的固定長度編碼架構，其用意就是要避免 ISO 2022 不定長度的缺點。</p>\n<p>參與制定 ISO 10646 的代表莫不儘量爭取把自己國家使用的字集編入 BMP，目的就是希望能利用 BMP 只用 2 個八位元組的優勢，取得比 4 個八位元組更高的資訊處理效率。BMP 的爭取如此重要，然其編碼位置卻有限，因此如何充份利用這些編碼空間處理更多常用字符集，就成為標準研訂時的一個重要考慮因素。過去在 BMP 的設計中，除編入西方拼音文字及符號外，在漢字方面只蒐集日本、南韓及中國三個地區使用的漢字字集，並沒有考慮到我國的字集，我國遂積極組團以民間團體－臺北市電腦商業同業公會（TCA）的名義，參加 ISO 10646 的制定，以爭取將我國使用的正體字編入 BMP 中。</p>\n<p>ISO 10646 編碼基本原則為「一字一碼」，我國及中國的代表因此就共同提出了 HCS（Han Character Set） 的構想，這個構想同時獲得美國及其它國家代表的支持，進而一步步發展至今。1993 年公布的 ISO 10646-1 之 BMP 中，已經將臺灣、大陸、日本和南韓所使用之漢字整合成獨立的**「中日韓認同表意文字區（ CJK Unified Ideographs）」**，使<br />\n得亞洲幾個主要使用漢字的國家，有圓滿的解決方案。</p>\n<p>然而，當初進行中日韓漢字編碼時，因各國所提出的漢字集有重複及形、體不盡相同，進行重複字比對、篩選及形、體認同（ unify） 原則討論等工作。歷經五次會議完成的「中日韓認同表意文字」（ CJK Unified Ideographs），其字序主要是參考康熙字典、大漢和詞典、漢語大詞典及大字源字典，以先部首後筆劃的順序排列。<br />\n完成了 ISO 10646:1993 之 BMP 中 I 區的表意文字編碼標準，總計含 20,902 個漢字，其中包含了 CNS 11643 用字共 17,011 個。</p>\n<p>1998 年 IRG 完成「中日韓認同表意文字擴充 A」(CJK Unified Ideographs Extension A)，編訂 6,582 字，送交 SC2／WG2 通過，編碼於 BMP 之 A 區的3400～4DFF，其中包含 CNS 11643 用字共 5,879 個。</p>\n<p>被認定相同的 CNS11643 字元 527 個，收容於「中日韓相容表意文字擴充 A 區」，編碼範圍為 0002-F800 ～0002-FA16h。</p>\n<p>「中日韓認同表意文字擴充 B」（CJK Unified Ideographs Extension B）的整理，這套字集涵蓋康熙字典全部用字、漢語大字典全部用字及中國、臺灣、韓國、越南、香港所提的國家標準字集。擴充 B 字集係編碼於 ISO 10646 第二輔助字面(Plane 2)，總計 42,807 中日韓越漢字，編碼範圍為 0002-0100～0002-A836h，其中含我國 CNS 11643 第 4~7 字面共約 3 萬字。「中日韓認同表意文字擴充 B」擴編完成後，CNS 11643 第 1 至 7 字面有 95%以上的用字全部納入 ISO 10646 標準中，其餘 5%是被認定相同(unified)的字。</p>\n<h2 id=\"範例：不同Unicode的異體字\">範例：不同Unicode的異體字</h2>\n<ul>\n<li>剣(5263)、劍(528D)</li>\n<li>數(6578)、數(f969)</li>\n<li>靑(9751)、青(9752)</li>\n<li><img data-src=\"http://founder.acgvlyric.org/iu/lib/exe/fetch.php/%E8%AA%AA%E6%96%87:cing_unified.png?cache=\" alt=\"\" /></li>\n</ul>\n<h2 id=\"範例：相同Unicode的異體字\">範例：相同Unicode的異體字</h2>\n<p>早期Unicode碰到在有關國家或地區既有碼表已分別編碼的字，像「値」與「值」，就會放棄原則一，改以原則二來把兩個字形分別編碼。<br />\n但若當時有關國家或地區沒有把異體字分別編碼，像日本的JIS90只收錄了一個「葛」字，Unicode就不會分別編碼。如「直、殖、植」等字皆沒有像「値」與「值」般分別編碼。</p>\n<p>但是實際上兩個異體字在日本都有被使用，所以需要額外處理這些Unicode也沒有解決的例外，方法為<strong>異體字選擇器</strong>。</p>\n<p><img data-src=\"../../img/font/IVS_fig1.webp\" alt=\"\" /></p>\n<h3 id=\"異體字選擇器\">異體字選擇器</h3>\n<p>異體字選擇器是一種在Unicode上，用來準確、具體地指定選擇哪個文字字形的程序。有標準化的異體字選擇器（Standardized Variation Sequence，簡稱「SVS」），以及漢字異體字選擇器（Ideographic Variation Sequence，簡稱「IVS」）。</p>\n<p><img data-src=\"../../img/font/ivs2.webp\" alt=\"\" /></p>\n<p>Standardized Variants錄入的字集和數量</p>\n<ul>\n<li>數學符號表：25</li>\n<li>緬甸的緬文：27個</li>\n<li>八思巴字母：6個</li>\n<li>摩尼字母：5個</li>\n<li>傳統蒙古文：60個</li>\n<li>中日韓統一表意文字：1,002個</li>\n<li>繪文字：702個（文本類型和圖形文字的類型351個）</li>\n<li>IVD（2017-12-12版）錄入的字集和數量\n<ul>\n<li>CID之Adobe-Japan1集：14,683個</li>\n<li>通用電子信息交換環境整頓計劃之Hanyo-Denshi集：13,045個</li>\n<li>文字信息基礎整備事業之Moji_Joho集：11,384個</li>\n<li>澳門特別行政區之MSARG集：21個</li>\n<li>韓國之KRName集：36個</li>\n</ul>\n</li>\n</ul>\n<p>這個功能也被開發了新用法，像是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0J1dFRhaXdhbi9icG1mdnM=\">標注注音<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img data-src=\"../../img/font/chuin.webp\" alt=\"\" /></p>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yaC5uYWVyLmVkdS50dy9jZ2ktYmluL2dzMzIvZ3N3ZWIuY2dpP289ZGlycHJvamVjdCZzPWlkPSUyMlJQMDAwMDAwMDAwNjM3JTIyLiZzZWFyY2htb2RlPWJhc2lj\">李鵑娟-異體字字典港澳陸規範字收錄研究<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JTk1JUIwJUU5JUFCJTk0JUU1JUFEJTk3JUU5JTgxJUI4JUU2JTkzJTg3JUU1JTk5JUE4\">異體字選擇器<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy51bmljb2RlLm9yZy9QdWJsaWMvMTIuMS4wL3VjZC9TdGFuZGFyZGl6ZWRWYXJpYW50cy50eHQ=\">SVS<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly91bmljb2RlLm9yZy9pdmQvZGF0YS8yMDE3LTEyLTEyL0lWRF9TZXF1ZW5jZXMudHh0\">IVS<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1jTnYyQnJtUDlTWQ==\">顯示表意文字字形變化序列示範<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb2ppa2liYW4uaXBhLmdvLmpwLzEyOTIuaHRtbA==\">IVD/IVSとは<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzQ3MjY1Nzg4MA==\">Unicode 中的多個 IVS 對應同一字形時，應該選擇哪一個？<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["中文","漢字","異體字","unicode"]},{"title":"嘸蝦米：最好的傳統中文輸入法","url":"/why-boshiamy-is-good/","content":"<p>本文以實驗證實嘸蝦米勝過其他傳統中文輸入法的地方</p>\n<p><img data-src=\"/img/boshiamy/cover.webp\" alt=\"\" /></p>\n<span id=\"more\"></span>\n<h2 id=\"簡介\">簡介</h2>\n<p>嘸蝦米輸入法，為台灣人劉重次發明的中文輸入法。它是一種形碼輸入法，將漢字分拆成字型結構，再以字型結構的形、音、義與英文字母加以聯想，拼出漢字。嘸蝦米輸入法的發想始於劉重次在歐洲留學期間（1969年 - 1975年左右），當時因為Telex電傳系統（電報機）普及，劉重次於是想創造一種便利中文資訊溝通的方法，於是投入中文檢字法的世界，經過數十年後嘸蝦米輸入法才告完成，並於1990年成立「行易有限公司」</p>\n<h2 id=\"中文輸入法分類\">中文輸入法分類</h2>\n<ol>\n<li>拼音輸入法\n<ul>\n<li>注音、拼音</li>\n<li>需要知道字的唸法</li>\n<li>選字頻率較高</li>\n</ul>\n</li>\n<li>拼字(拆字)輸入法\n<ul>\n<li>倉頡、大易、速成、嘸蝦米、五筆、行列</li>\n<li>需要知道字的寫法</li>\n<li>選字頻率較低</li>\n<li>需要額外記憶字根\n<ul>\n<li>注音和羅馬拼音也算是字根，不過學校會教</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"評價標準\">評價標準</h2>\n<ol>\n<li>學習成本\n<ul>\n<li>易學性\n<ul>\n<li>拆碼邏輯的合理性</li>\n<li>拼音輸入法的拆碼較直觀</li>\n</ul>\n</li>\n<li>鍵位\n<ul>\n<li>是否有額外鍵盤位置需記憶，如注音、倉頡需要記憶各碼的對應的鍵盤位置</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>打字速度\n<ul>\n<li>編碼長度\n<ul>\n<li>愈常用字編碼應愈短，以符合資訊熵的最短編碼方法</li>\n</ul>\n</li>\n<li>手指移動距離\n<ul>\n<li>手指移動距離愈短愈好</li>\n<li>最理想的情況就是左右手交互打字</li>\n</ul>\n</li>\n<li>選字\n<ul>\n<li>重碼率：重碼率越低，減少選字的疑慮，輸入速度越快\n<ul>\n<li>選字至少多花一碼的時間</li>\n<li>實際上多花的時間：看選字表+翻頁+輸入對應數字</li>\n<li>這是拼音輸入法的的劣勢</li>\n</ul>\n</li>\n<li>不用選字是盲打的必要條件</li>\n</ul>\n</li>\n<li>簡碼：簡碼可大幅增加常用字的輸入速度，但必須額外背誦\n<ul>\n<li>簡碼是否好背</li>\n</ul>\n</li>\n<li>困難字方案：如何打出不知道拆碼的字\n<ul>\n<li>一字多拆：避免一些字型由於主觀認知上的差異而拆不出的困擾</li>\n<li>模糊輸入：不會拆字時可用模糊的輸入方式拆出\n<ul>\n<li>如 <code>abc*</code>，會列出<code>abca</code>、<code>abcb</code>、<code>abcc</code>、<code>abcd</code>…所對應的字</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>普遍性\n<ul>\n<li>一般電腦是否有安裝此輸入法</li>\n<li>購買價格</li>\n</ul>\n</li>\n<li>非漢字輸入\n<ul>\n<li>切換成英文的方法</li>\n<li>標點符號、注音、希臘符號、數學符號、表情符號(emoji)</li>\n</ul>\n</li>\n<li>擴充性\n<ul>\n<li>自訂編碼或自訂詞庫</li>\n<li>不同國家的漢字\n<ul>\n<li>簡體、繁體、韓文、日文</li>\n</ul>\n</li>\n<li>記憶功能\n<ul>\n<li>輸入法自動學習、記憶常用字</li>\n</ul>\n</li>\n<li>字庫大小\n<ul>\n<li>是否能輸入生僻字</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"實驗\">實驗</h2>\n<h3 id=\"資料來源\">資料來源</h3>\n<ul>\n<li>台灣的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW5ndWFnZS5tb2UuZ292LnR3L3Jlc3VsdC5hc3B4P2NsYXNzaWZ5X3NuPTIzJnN1YmNsYXNzaWZ5X3NuPTQzNyZjb250ZW50X3NuPTQ2\">常用國字標準字體表(共4808字)<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>教育部定義的常用國字</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW5ndWFnZS5tb2UuZ292LnR3LzAwMS9VcGxvYWQvZmlsZXMvU0lURV9DT05URU5UL00wMDAxL1BJTi9iaWF1MS5odG0/b3Blbg==\">教育部字頻表<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>即常用的字，如「的」、「不」、「一」、「我」、「是」、「人」、「有」…</li>\n<li>字頻表前100字</li>\n<li>字頻表前500字</li>\n<li>字頻表前1200字</li>\n<li>字頻表前2500字</li>\n<li>字頻表前3700字\n<ul>\n<li>據研究，<span class=\"exturl\" data-url=\"aHR0cDovL2VwYnVsbGV0aW4uZXBjLm50bnUuZWR1LnR3L3VwbG9hZC9qb3VybmFsL3Byb2cvMThlMzhiZWRfMjAxNzEyMTMucGRm\">國三學生約認識3700字<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n<li>以字的頻率加權平均</li>\n</ul>\n</li>\n<li>一般散文\n<ul>\n<li>小王子(27519字)</li>\n<li>我所知道的康橋(5857字)</li>\n<li>背影(1324字)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"假設\">假設</h3>\n<ol>\n<li>按空白鍵等同按0.5個普通鍵的時間\n<ul>\n<li>應該是高估的數字</li>\n<li>因為大姆指基本上都在空白鍵上，應該是不用花這麼久</li>\n</ul>\n</li>\n<li>需要選字的輸入法，其選字頻率為2%\n<ul>\n<li>不確定真實數字</li>\n</ul>\n</li>\n<li>選字等同按2個普通鍵的時間\n<ul>\n<li>應該是低估的數字\n<ul>\n<li>需要查看想要的字的位置(排第幾個)</li>\n<li>需要額外輸入方向鍵、數字鍵或空白鍵</li>\n</ul>\n</li>\n<li>如果用舊注音，已經將位置背起來了，那等同1個普通鍵\n<ul>\n<li>但是需要的記憶量很大，在此不考慮</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>手指移動不花時間\n<ul>\n<li>因為難以計算</li>\n<li>有興趣的人可以實作此部份</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"計算方式\">計算方式</h3>\n<ol>\n<li>計算文章中的中文及符號，若遇到無法拆解的情況(很少)，會直接跳過</li>\n<li>計算文章中一個字的拆字長度平均</li>\n<li>嘸蝦米一個字有多種拆字法，所以用嘸蝦米最簡碼、嘸蝦米最長碼來表示其上下限</li>\n</ol>\n<h3 id=\"輸入法解碼\">輸入法解碼</h3>\n<!-- TODO: 看chinese_input_decode.py -->\n<p>拆碼的方法</p>\n<ul>\n<li>參考Linux上中文輸入法的編碼表</li>\n<li>拼音輸入法：直接轉換</li>\n<li>嘸蝦米：使用正版軟體的編碼表</li>\n</ul>\n<!-- - `liu-uni.tab`\n- 倉頡編碼表\n  - <https://github.com/Jackchows/Cangjie5/blob/master/Cangjie5.txt>\n  - <https://github.com/rime/rime-cangjie/blob/master/cangjie5.dict.yaml> -->\n<h3 id=\"結果\">結果</h3>\n<p>實作程式碼<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZ2l0cXdlcnR5Nzc3L2UxMjQ1ODY5MTBhOTQwOTMzN2ZlNTBiN2Y0ZWM0MDgy\">連結<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img data-src=\"/img/boshiamy/compare.webp\" alt=\"\" /></p>\n<iframe src=\"/compare.html\" width=\"1366\" height=\"768\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n<p>由圖可知，大易和嘸蝦米對字頻的編碼都是出現頻率愈高的字編碼愈短；而且嘸蝦米在打非常常用的字時(常用1200字內)，拆碼比大易短。</p>\n<p>這可以有效減少一般打字時的拆碼長度(參考字頻表-頻率加權的欄位)。</p>\n<p>這使得嘸蝦米在考慮字頻加權的情況下，例如散文時，編碼長度是前幾低的。</p>\n<p>拼音在散文上的表現也很好(雖然不知道原因)，所以也能考慮使用。</p>\n<p>註：五筆輸入法沒有放入比較，因為我完全搞不懂他的拆字邏輯</p>\n<h2 id=\"嘸蝦米和其他輸入法比較\">嘸蝦米和其他輸入法比較</h2>\n<p>所以嘸蝦米強在哪？以上述各評價標準來比較</p>\n<ol>\n<li>學習成本\n<ul>\n<li>易學性：字根同時有形、音、義三種來源<!--舉例--> <img data-src=\"/img/boshiamy/root.webp\" alt=\"\" />\n<ul>\n<li>拆碼好不好記很主觀</li>\n<li>我個人認為嘸蝦米的字根因為同時使用多種來源，雖然許多字根很天馬行空，但還算是容易聯想的</li>\n</ul>\n</li>\n<li>鍵位：⭕使用英文拆碼，不需額外記憶</li>\n</ul>\n</li>\n<li>打字速度\n<ul>\n<li>編碼長度：⭕由上述實驗可知，嘸蝦米的編碼是很短的</li>\n<li>選字：⭕幾乎不會重碼\n<ul>\n<li>嘸蝦米把常用的重碼字移到兩碼簡碼了\n<ul>\n<li>尾碼輸入V等同選第二順位的字，大幅加快選字速度\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib3NoaWFteS5jb20vdHV0b3JpYWxfZnVuY3Rpb24ucGhwP3BhZ2U9NSZzdWI9NA==\">例子<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>簡碼：❌嘸蝦米的兩碼簡碼很多是硬湊的，特別難記</li>\n<li>困難字方案：⭕注音輸入、同音詞輸入\n<ul>\n<li>注音輸入：就是內建的注音\n<ul>\n<li>對於剛學習的新手來說，是非常有用的(會顯示嘸蝦米編碼)</li>\n</ul>\n</li>\n<li>同音詞輸入：想打「蝦」字，但忘了字怎麼寫，可以找一個同音的字如「瞎」，就會列出同音的字作為選項</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>普遍性 ➖\n<ul>\n<li>要付費，不過終生可使用，很划算\n<ul>\n<li>680(家用版)、990(一般版)、200(Android)</li>\n</ul>\n</li>\n<li>在台灣算是常見，有些公共電腦也有嘸蝦米</li>\n<li>台大有買<span class=\"exturl\" data-url=\"aHR0cHM6Ly9teS5udHUuZWR1LnR3L3RpcGEvcGFydDJfMy5odG1s\">授權版<i class=\"fa fa-external-link-alt\"></i></span>，可以在軟體中心下載</li>\n</ul>\n</li>\n<li>非漢字輸入\n<ul>\n<li>⭕標點符號、希臘符號、數學符號、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib3NoaWFteS5jb20vdHV0b3JpYWxfYmVnaW5uZXIucGhwP3BhZ2U9NSN0YWJfdGFiMg==\">注音/平假/片假名<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib3NoaWFteS5jb20vdHV0b3JpYWxfZnVuY3Rpb24ucGhwP3BhZ2U9NiZzdWI9NA==\">符號<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>注音 <code>ㄌ</code> → <code>,l2</code></li>\n<li>日文 <code>あ</code> → <code>a,</code></li>\n<li>日文 <code>シ</code> → <code>shi.</code></li>\n<li>特殊符號 <code>↓</code>, <code>△</code>, <code>①</code>, <code>□</code>, <code>○</code></li>\n</ul>\n</li>\n<li>❌沒韓文、表情符號(emoji)</li>\n</ul>\n</li>\n<li>擴充性 ⭕\n<ul>\n<li>可輸出成簡體或日文漢字\n<ul>\n<li><code>,,j</code> → 之後輸出的字為日文標準\n<ul>\n<li>有些日文漢字要用此模式才能輸出，如<code>畑(はた, FQO)</code></li>\n</ul>\n</li>\n<li><code>,,c</code> → 之後輸出的字為简体標準</li>\n<li><code>,,ct</code> → 可以用繁体字的逻辑拆字，输出时为简体字</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"嘸蝦米使用心得\">嘸蝦米使用心得</h2>\n<p>❓：學嘸蝦米要先學哪些字<br />\n❗：「嘸蝦米」(<code>OVFF COX MN</code>)，因為你需要經常Google簡碼的邏輯</p>\n<ul>\n<li>緣由\n<ul>\n<li>因為我不想額外記鍵盤配置，所以倉頡、大易之類的直接不考慮</li>\n<li>剛好學校有提供嘸蝦米，就試著學習看看，想不到還蠻好用的</li>\n</ul>\n</li>\n<li>目前日常打字約60~70字/分，比打注音快一些\n<ul>\n<li>\n<img data-src=\"/img/boshiamy/my-typing.webp\" class=\"img-regular\" title alt>\n</li>\n<li>測試平台：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90eXBpbmcudHcv\">https://typing.tw/<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n<li>能輸入日文和一些特殊符號，非常有用</li>\n<li>輸入法可視為一種加密表\n<ul>\n<li>可用來當作密碼或密語</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FpdGpjaXplL2dvdmZm\">嘸蝦米文翻譯機<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"嘸蝦米教學\">嘸蝦米教學</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1mTHJqekxQdzVCRQ==\">PAPAYA 電腦教室 - 為什麼公司的前輩們打字都那麼快？ 來談談那些年他們一起練過的嘸蝦米輸入法 ~<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/fLrjzLPw5BE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib3NoaWFteS5jb20vdHV0b3JpYWxfYmVnaW5uZXIucGhw\">官網教學<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib3NoaWFteS5jb20vZG93bmxvYWRfdG9vbHMucGhw\">學習軟體<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU1JTk4JUI4JUU4JTlEJUE2JUU3JUIxJUIzJUU4JUJDJUI4JUU1JTg1JUE1JUU2JUIzJTk1\">Wiki: 嘸蝦米輸入法<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib3NoaWFteS50aGVuLnR3Lw==\">查碼網站(非官方)<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>嘸蝦米有快打模式，在使用非最簡碼輸入時，會出現提示</li>\n</ul>\n<h2 id=\"誰能擊敗嘸蝦米？\">誰能擊敗嘸蝦米？</h2>\n<p>標題已經表示，<strong>傳統的</strong>(拼字、拼音)輸入方法是贏不了嘸蝦米的，需要更聰明的方法</p>\n<ul>\n<li>智慧選字\n<ul>\n<li>注音聲母，如<code>ㄐㄅㄈㄏ</code> → 加倍奉還</li>\n<li>拼音縮寫，如<code>AWSL</code> → 啊我死了</li>\n</ul>\n</li>\n<li>自動補字(Auto Complete)\n<ul>\n<li>自動產生/補完後面的字</li>\n</ul>\n</li>\n<li>語音輸入</li>\n<li>意念輸入\n<ul>\n<li>腦機介面（brain-computer interface, BCI）\n<ul>\n<li>這類似SAO那一套</li>\n<li>這是霍金那一套嗎？</li>\n</ul>\n</li>\n</ul>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/QzV3h5pfyZ4\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</li>\n</ul>\n<p>上述幾個智慧方法的缺點是難以輸入專有名詞(人名、產品名、專業術語)，還是會有需要修正錯字或選字的情形</p>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NnYWxhbC9hd2Vzb21lLXJpbWU=\">輸入法列表<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib3NoaWFteS5jb20vdHV0b3JpYWxfd2h5LnBocA==\">嘸蝦米官網<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU0JUI4JUFEJUU2JTk2JTg3JUU4JUJFJTkzJUU1JTg1JUE1JUU2JUIzJTk1\">Wiki: 中文輸入法<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<!--TODO:寫完發在PTT/EMAIL給官網-->","categories":["心得"],"tags":["中文","嘸蝦米","輸入法","注音","編碼","熵","鍵盤"]},{"title":"vuejs 語法","url":"/vuejs/","content":"<h2 id=\"簡介\">簡介</h2>\n<p>採用簡潔的模板語法來宣告式地將資料渲染進 DOM 的系統</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- html part --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123; message &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//js part</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Hello Vue.js!&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">todo</span>: []</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">reverseMessage</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">message</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">message</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">reverse</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>在 html tag 中 加入<code>v-</code>開頭的attributes以實作邏輯</p>\n<span id=\"more\"></span>\n<h2 id=\"元件化應用構建\">元件化應用構建</h2>\n<p><code>v-bind</code>: todo-item 元件接受一個&quot;prop&quot;，類似於一個自定義 attribute。這個 prop 名為 todo。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">&quot;app&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">todo-item</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in groceryList&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">v-bind:todo</span>=<span class=\"string\">&quot;item&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">v-bind:key</span>=<span class=\"string\">&quot;item.id&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">todo-item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">component</span>(<span class=\"string\">&#x27;todo-item&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;todo&#x27;</span>],</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;&lt;li&gt;&#123;&#123; todo.text &#125;&#125;&lt;/li&gt;&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">groceryList</span>: [</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">0</span>, <span class=\"attr\">text</span>: <span class=\"string\">&#x27;蔬菜&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">text</span>: <span class=\"string\">&#x27;乳酪&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">text</span>: <span class=\"string\">&#x27;隨便其它什麼人吃的東西&#x27;</span> &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Instance\">Instance</h2>\n<p>用 Vue 函式建立一個新的 Vue 例項<br />\n當一個 Vue 例項被建立時，它將 data 物件中的所有的 property 加入到 Vue 的響應式系統中<br />\n只有當例項被建立時就已經存在於 data 中的 property 才是響應式的<br />\n唯一的例外是使用<code>Object.freeze()</code>，這會阻止修改現有的 property，也意味著響應系統無法再追蹤變化。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 我們的資料物件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = &#123; <span class=\"attr\">a</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 該物件被加入到一個 Vue 例項中</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#example&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: data</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 獲得這個例項上的 property</span></span><br><span class=\"line\"><span class=\"comment\">// 返回源資料中對應的欄位</span></span><br><span class=\"line\">vm.<span class=\"property\">a</span> == data.<span class=\"property\">a</span> <span class=\"comment\">// =&gt; true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 設定 property 也會影響到原始資料</span></span><br><span class=\"line\">vm.<span class=\"property\">a</span> = <span class=\"number\">2</span></span><br><span class=\"line\">data.<span class=\"property\">a</span> <span class=\"comment\">// =&gt; 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ……反之亦然</span></span><br><span class=\"line\">data.<span class=\"property\">a</span> = <span class=\"number\">3</span></span><br><span class=\"line\">vm.<span class=\"property\">a</span> <span class=\"comment\">// =&gt; 3</span></span><br><span class=\"line\"></span><br><span class=\"line\">vm.<span class=\"property\">$data</span> === data <span class=\"comment\">// =&gt; true</span></span><br><span class=\"line\">vm.<span class=\"property\">$el</span> === <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;example&#x27;</span>) <span class=\"comment\">// =&gt; true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// $watch 是一個例項方法</span></span><br><span class=\"line\">vm.$watch(<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">newValue, oldValue</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 這個回撥將在 `vm.a` 改變後呼叫</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"生命週期鉤子\">生命週期鉤子</h2>\n<p><code>created</code>、<code>mounted</code>、<code>updated</code> 和 <code>destroyed</code></p>\n<p><strong>不要在選項 property 或 callback 使用箭頭函式</strong>。因為箭頭函式並沒有 this，this 會作為變數一直向上級詞法作用域查詢，直至找到為止，經常導致 Uncaught TypeError: Cannot read property of undefined 或 Uncaught TypeError: this.myMethod is not a function 之類的錯誤。</p>\n<h2 id=\"資料繫結\">資料繫結</h2>\n<p>資料繫結最常見的形式就是使用“Mustache”語法 (雙大括號) 的文字插值：<br />\n雙大括號會將資料解釋為普通文字，而非 HTML 程式碼</p>\n<p><code>&lt;span&gt;Message: {{ msg }}&lt;/span&gt;</code></p>\n<p>可使用表示式<br />\n<code>{{ ok ? 'YES' : 'NO' }}</code></p>\n<p>透過使用 <code>v-once</code> 指令，你也能執行一次性地插值，當資料改變時，插值處的內容不會更新。但請留心這會影響到該節點上的其它資料繫結：</p>\n<p><code>&lt;span v-once&gt;這個將不會改變: {{ msg }}&lt;/span&gt;</code></p>\n<p>為了輸出真正的 HTML，你需要使用 <code>v-html</code> 指令<br />\n<code>&lt;p&gt;Using v-html directive: &lt;span v-html=&quot;rawHtml&quot;&gt;&lt;/span&gt;&lt;/p&gt;</code><br />\n<strong>動態渲染 HTML 可能會非常危險，因為它很容易導致 XSS 攻擊。請只對可信內容使用 HTML 插值，絕不要對使用者提供的內容使用插值。</strong></p>\n<p>Mustache 語法不能作用在 HTML attribute 上，應該使用 <code>v-bind</code> 指令：<br />\n<code>&lt;div v-bind:id=&quot;dynamicId&quot;&gt;&lt;/div&gt;</code><br />\n<code>&lt;div v-bind:id=&quot;'list-' + id&quot;&gt;&lt;/div&gt;</code></p>\n<h2 id=\"指令\">指令</h2>\n<p>指令 (Directives) 是帶有 <code>v-</code> 字首的特殊 attribute。<br />\n指令 attribute 的值預期是單個 JavaScript 表示式 (<code>v-for</code> 是例外)。<br />\n指令的職責是，當表示式的值改變時，將其產生的連帶影響，響應式地作用於 DOM。</p>\n<p>一些指令能夠接收一個“引數”，在指令名稱之後以冒號表示。例如，<code>v-bind</code> 指令可以用於響應式地更新 HTML attribute<br />\n<code>&lt;a v-bind:href&gt;</code></p>\n<p>從 2.6.0 開始，可以用方括號括起來的 JavaScript 表示式作為一個指令的引數：<br />\n<code>&lt;a v-bind:[attributeName]=&quot;url&quot;&gt; ... &lt;/a&gt;</code></p>\n<p>動態引數預期會求出一個字串，異常情況下值為 null。這個特殊的 null 值可以用於移除繫結。任何其它非字串型別的值都將會觸發一個警告。</p>\n<h3 id=\"修飾符\">修飾符</h3>\n<p>修飾符 (modifier) 是以 <code>.</code> 指明的特殊字尾，用於指出一個指令應該以特殊方式繫結。例如<code>.prevent</code> 修飾符告訴 <code>v-on</code> 指令對於觸發的事件呼叫 <code>event.preventDefault()</code></p>\n<p><code>&lt;form v-on:submit.prevent=&quot;onSubmit&quot;&gt;...&lt;/form&gt;</code></p>\n<p>Vue 為 <code>v-bind</code> 和 <code>v-on</code> 這兩個最常用的指令，提供了特定簡寫：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 完整語法 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 縮寫 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 完整語法 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;doSomething&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 縮寫 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;doSomething&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"計算屬性-computed\">計算屬性(computed)</h3>\n<p>對於任何複雜邏輯，你都應當使用計算屬性<br />\n計算屬性只在相關響應式依賴發生改變時它們才會重新求值，這是比使用function好的地方</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Hello&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 計算屬性的 getter</span></span><br><span class=\"line\">    <span class=\"attr\">reversedMessage</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// `this` 指向 vm 例項</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">message</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">reverse</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>)<span class=\"comment\">//olleH</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>下面的計算屬性將不再更新，因為 Date.now() 不是響應式依賴：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">now</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>計算屬性預設只有 getter，不過在需要時你也可以提供一個 setter：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">fullName</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// getter</span></span><br><span class=\"line\">    <span class=\"attr\">get</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">firstName</span> + <span class=\"string\">&#x27; &#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">lastName</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// better than set two variables seperately</span></span><br><span class=\"line\">    <span class=\"attr\">set</span>: <span class=\"keyword\">function</span> (<span class=\"params\">newValue</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> names = newValue.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">firstName</span> = names[<span class=\"number\">0</span>]</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">lastName</span> = names[names.<span class=\"property\">length</span> - <span class=\"number\">1</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"watch\">watch</h3>\n<p>監視某個資料，當其發生改變，這個函式就會執行</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">&quot;watch-example&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    Ask a yes/no question:</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;question&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; answer &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 因為 <span class=\"variable constant_\">AJAX</span> 庫和通用工具的生態已經相當豐富，<span class=\"title class_\">Vue</span> 核心程式碼沒有重複 --&gt;</span><br><span class=\"line\">&lt;!-- 提供這些功能以保持精簡。這也可以讓你自由選擇自己更熟悉的工具。 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/axios@0.12.0/dist/axios.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/lodash@4.13.1/lodash.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">var</span> watchExampleVM = <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#watch-example&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">data</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">question</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">answer</span>: <span class=\"string\">&#x27;I cannot give you an answer until you ask a question!&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">watch</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">// 如果 `question` 發生改變，這個函式就會執行</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">question</span>: <span class=\"keyword\">function</span> (<span class=\"params\">newQuestion, oldQuestion</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">this</span>.<span class=\"property\">answer</span> = <span class=\"string\">&#x27;Waiting for you to stop typing...&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">debouncedGetAnswer</span>()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">created</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">// `_.debounce` 是一個透過 Lodash 限制操作頻率的函式。</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">// 在這個例子中，我們希望限制訪問 yesno.wtf/api 的頻率</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">// AJAX 請求直到使用者輸入完畢才會發出。想要瞭解更多關於</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">// `_.debounce` 函式 (及其近親 `_.throttle`) 的知識，</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">// 請參考：https://lodash.com/docs#debounce</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"variable language_\">this</span>.<span class=\"property\">debouncedGetAnswer</span> = _.<span class=\"title function_\">debounce</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">getAnswer</span>, <span class=\"number\">500</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">getAnswer</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">question</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;?&#x27;</span>) === -<span class=\"number\">1</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.<span class=\"property\">answer</span> = <span class=\"string\">&#x27;Questions usually contain a question mark. ;-)&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"keyword\">return</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">this</span>.<span class=\"property\">answer</span> = <span class=\"string\">&#x27;Thinking...&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">var</span> vm = <span class=\"variable language_\">this</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      axios.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;https://yesno.wtf/api&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">response</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          vm.<span class=\"property\">answer</span> = _.<span class=\"title function_\">capitalize</span>(response.<span class=\"property\">data</span>.<span class=\"property\">answer</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        .<span class=\"title function_\">catch</span>(<span class=\"keyword\">function</span> (<span class=\"params\">error</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">          vm.<span class=\"property\">answer</span> = <span class=\"string\">&#x27;Error! Could not reach the API. &#x27;</span> + error</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Class-與-Style-繫結\">Class 與 Style 繫結</h2>\n<p><code>&lt;div v-bind:class=&quot;{ active: isActive }&quot;&gt;&lt;/div&gt;</code><br />\n上面的語法表示 active 這個 class 存在與否將取決於資料 property isActive 的 truthiness。</p>\n<p>我們也可以在這裡繫結一個返回物件的計算屬性。這是一個常用且強大的模式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div v-<span class=\"attr\">bind</span>:<span class=\"keyword\">class</span>=<span class=\"string\">&quot;classObject&quot;</span>&gt;&lt;/div&gt;</span><br><span class=\"line\"><span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">isActive</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">error</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">classObject</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">active</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">isActive</span> &amp;&amp; !<span class=\"variable language_\">this</span>.<span class=\"property\">error</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;text-danger&#x27;</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">error</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"property\">error</span>.<span class=\"property\">type</span> === <span class=\"string\">&#x27;fatal&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>陣列語法中也可以使用物件語法：<br />\n<code>&lt;div v-bind:class=&quot;[{ active: isActive }, errorClass]&quot;&gt;&lt;/div&gt;</code></p>\n<h3 id=\"v-if\">v-if</h3>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">  A</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">  B</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">  C</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">  Not A/B/C</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在html用<code>template</code>作為隱形元素，不渲染</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template v-<span class=\"keyword\">if</span>=<span class=\"string\">&quot;ok&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Paragraph 1<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Paragraph 2<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<p>Vue 會儘可能高效地渲染元素，通常會復用已有元素而不是從頭開始渲染。這麼做除了使 Vue 變得非常快之外，還有其它一些好處。例如，如果你允許使用者在不同的登入方式之間切換：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template v-<span class=\"keyword\">if</span>=<span class=\"string\">&quot;loginType === &#x27;username&#x27;&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>Username<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;Enter your username&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-else</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>Email<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;Enter your email address&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>那麼在上面的程式碼中切換 loginType 將不會清除使用者已經輸入的內容。因為兩個模板使用了相同的元素，<code>&lt;input&gt;</code> 不會被替換掉——僅僅是替換了它的 placeholder。</p>\n<p>帶有 <code>v-show</code> 的元素始終會被渲染並保留在 DOM 中。<code>v-show</code> 只是簡單地切換元素的 CSS property display。<br />\n注意，<code>v-show</code> 不支援 <code>&lt;template&gt;</code> 元素，也不支援 <code>v-else</code>。</p>\n<p><code>v-if</code> 是“真正”的條件渲染，因為它會確保在切換過程中條件塊內的事件監聽器和子元件適當地被銷毀和重建。</p>\n<p><code>v-if</code> 也是惰性的：如果在初始渲染時條件為假，則什麼也不做——直到條件第一次變為真時，才會開始渲染條件塊。</p>\n<p>相比之下，<code>v-show</code> 就簡單得多——不管初始條件是什麼，元素總是會被渲染，並且只是簡單地基於 CSS 進行切換。</p>\n<blockquote>\n<p>一般來說，v-if 有更高的切換開銷，而 v-show 有更高的初始渲染開銷。因此，如果需要非常頻繁地切換，則使用 v-show 較好；如果在執行時條件很少改變，則使用 v-if 較好。</p>\n</blockquote>\n<p><strong>不推薦同時使用 v-if 和 v-for</strong>。請查閱風格指南以獲取更多資訊。</p>\n<h3 id=\"v-for\">v-for</h3>\n<p><code>v-for</code> 還支援一個可選的第二個引數，即當前項的索引。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;ul id=<span class=\"string\">&quot;example-2&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item, index) in items&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    &#123;&#123; parentMessage &#125;&#125; - &#123;&#123; index &#125;&#125; - &#123;&#123; item.message &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<p>你也可以用 <code>of</code> 替代 <code>in</code> 作為分隔符，因為它更接近 JavaScript 迭代器的語法：</p>\n<p><code>&lt;div v-for=&quot;item of items&quot;&gt;&lt;/div&gt;</code></p>\n<p>可以用 <code>v-for</code> 來遍歷一個物件的 property。<br />\n也可以提供第二個的引數為 property 名稱 (也就是key)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;ul id=<span class=\"string\">&quot;v-for-object&quot;</span> <span class=\"keyword\">class</span>=<span class=\"string\">&quot;demo&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;value in object&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    &#123;&#123; value &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 在遍歷物件時，會按 <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>() 的結果遍歷，但是不能保證它的結果在不同的 <span class=\"title class_\">JavaScript</span> 引擎下都一致。 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(value, name) in object&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  &#123;&#123; name &#125;&#125;: &#123;&#123; value &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><code>v-for</code> 渲染的元素列表時，它預設使用“就地更新”的策略。如果資料項的順序被改變，Vue 將不會移動 DOM 元素來匹配資料項的順序，而是就地更新每個元素，並且確保它們在每個索引位置正確渲染</p>\n<p>這個預設的模式是高效的，但是隻適用於不依賴子元件狀態或臨時 DOM 狀態 (例如：表單輸入值) 的列表渲染輸出。</p>\n<p>為了給 Vue 一個提示，以便它能跟蹤每個節點的身份，從而重用和重新排序現有元素，<strong>你需要為每項提供一個唯一的 key attribute</strong></p>\n<h3 id=\"自動檢測變化的限制\">自動檢測變化的限制</h3>\n<p><strong>由於 JavaScript 的限制，Vue 不能檢測陣列(array)和物件(object)的變化</strong></p>\n<p>Vue 將被偵聽的陣列的變更方法進行了包裹，所以它們也將會觸發檢視更新。這些被包裹過的方法包括：</p>\n<ul>\n<li><code>push()</code></li>\n<li><code>pop()</code></li>\n<li><code>shift()</code></li>\n<li><code>unshift()</code></li>\n<li><code>splice()</code></li>\n<li><code>sort()</code></li>\n<li><code>reverse()</code></li>\n</ul>\n<p>相比之下，也有非變更方法，例如 <code>filter()</code>、<code>concat()</code> 和 <code>slice()</code>。它們不會變更原始陣列，而總是返回一個新陣列</p>\n<h3 id=\"is\">is</h3>\n<p>注意這裡的 <code>is=&quot;todo-item&quot;</code> attribute。這種做法在使用 DOM 模板時是十分必要的，因為在 <code>&lt;ul&gt;</code> 元素內只有 <code>&lt;li&gt;</code> 元素會被看作有效內容。這樣做實現的效果與 <code>&lt;todo-item&gt;</code> 相同，但是可以避開一些潛在的瀏覽器解析錯誤。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;todo-list-example&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">v-on:submit.prevent</span>=<span class=\"string\">&quot;addNewTodo&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;new-todo&quot;</span>&gt;</span>Add a todo<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;newTodoText&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">&quot;new-todo&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;E.g. Feed the cat&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>Add<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">is</span>=<span class=\"string\">&quot;todo-item&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(todo, index) in todos&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-bind:key</span>=<span class=\"string\">&quot;todo.id&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-bind:title</span>=<span class=\"string\">&quot;todo.title&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-on:remove</span>=<span class=\"string\">&quot;todos.splice(index, 1)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"v-on-dom-event\">v-on: dom event</h3>\n<p>用特殊變數 <code>$event</code>訪問原始的 DOM 事件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;button v-<span class=\"attr\">on</span>:click=<span class=\"string\">&quot;warn(&#x27;Form cannot be submitted yet.&#x27;, $event)&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"title class_\">Submit</span></span><br><span class=\"line\">&lt;/button&gt;</span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">warn</span>: <span class=\"keyword\">function</span> (<span class=\"params\">message, event</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 現在我們可以訪問原生事件物件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (event) &#123;</span><br><span class=\"line\">      event.<span class=\"title function_\">preventDefault</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(message)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Vue.js 為 <code>v-on</code> 提供了事件修飾符。之前提過，修飾符是由點開頭的指令字尾來表示的。</p>\n<ul>\n<li><code>.stop</code></li>\n<li><code>.prevent</code></li>\n<li><code>.capture</code></li>\n<li><code>.self</code></li>\n<li><code>.once</code></li>\n<li><code>.passive</code></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 阻止單擊事件繼續傳播 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-on:click.stop</span>=<span class=\"string\">&quot;doThis&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 提交事件不再過載頁面 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">v-on:submit.prevent</span>=<span class=\"string\">&quot;onSubmit&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 修飾符可以串聯 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-on:click.stop.prevent</span>=<span class=\"string\">&quot;doThat&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 只有修飾符 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">v-on:submit.prevent</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 新增事件監聽器時使用事件捕獲模式 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 即內部元素觸發的事件先在此處理，然後才交由內部元素進行處理 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-on:click.capture</span>=<span class=\"string\">&quot;doThis&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 只當在 event.target 是當前元素自身時觸發處理函式 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 即事件不是從內部元素觸發的 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-on:click.self</span>=<span class=\"string\">&quot;doThat&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"v-on-input\">v-on: input</h2>\n<p>Vue 允許為 <code>v-on</code> 在監聽鍵盤事件時新增按鍵修飾符：<br />\n你可以直接將 KeyboardEvent.key 暴露的任意有效按鍵名轉換為 kebab-case 來作為修飾符。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 只有在 `key` 是 `Enter` 時呼叫 `vm.submit()` --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-on:keyup.enter</span>=<span class=\"string\">&quot;submit&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-on:keyup.page-down</span>=<span class=\"string\">&quot;onPageDown&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 即使 Alt 或 Shift 被一同按下時也會觸發 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click.ctrl</span>=<span class=\"string\">&quot;onClick&quot;</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 有且只有 Ctrl 被按下的時候才觸發 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click.ctrl.exact</span>=<span class=\"string\">&quot;onCtrlClick&quot;</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>滑鼠按鈕修飾符</p>\n<ul>\n<li><code>.left</code></li>\n<li><code>.right</code></li>\n<li><code>.middle</code></li>\n</ul>\n<h2 id=\"v-model-Input\">v-model: Input</h2>\n<blockquote>\n<p>這是 Vue 完全贏過 React 的部分</p>\n</blockquote>\n<p>你可以用 <code>v-model</code> 指令在表單 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 及 <code>&lt;select&gt;</code> 元素上建立雙向資料繫結。它會根據控制元件型別自動選取正確的方法來更新元素。儘管有些神奇，但 <code>v-model</code> 本質上不過是語法糖。它負責監聽使用者的輸入事件以更新資料，並對一些極端場景進行一些特殊處理。</p>\n<p><code>v-model</code> 只看binding data的值，會忽略所有表單元素的 value、checked、selected attribute 的初始值</p>\n<p><code>v-model</code> 在內部為不同的輸入元素使用不同的 property 並丟擲不同的事件：</p>\n<ul>\n<li>text 和 textarea 元素使用 value property 和 input 事件；</li>\n<li>checkbox 和 radio 使用 checked property 和 change 事件；</li>\n<li>select 欄位將 value 作為 prop 並將 change 作為事件。</li>\n</ul>\n<!-- (? need example) -->\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchText&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">等價於：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:value</span>=<span class=\"string\">&quot;searchText&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-on:input</span>=<span class=\"string\">&quot;searchText = $event.target.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- checkbox example --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;jack&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Jack&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;jack&quot;</span>&gt;</span>Jack<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;john&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;John&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;john&quot;</span>&gt;</span>John<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mike&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Mike&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;mike&quot;</span>&gt;</span>Mike<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Checked names: &#123;&#123; checkedNames &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">new Vue(&#123;</span><br><span class=\"line\">  el: &#x27;...&#x27;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    checkedNames: []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- select example --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;selected&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">disabled</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>請選擇<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>B<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>C<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Selected: &#123;&#123; selected &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">new Vue(&#123;</span><br><span class=\"line\">  el: &#x27;...&#x27;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    selected: &#x27;&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>如果 <code>v-model</code> 表示式的初始值未能匹配任何選項，<code>&lt;select&gt;</code> 元素將被渲染為“未選中”狀態。在 iOS 中，這會使使用者無法選擇第一個選項。因為這樣的情況下，iOS 不會觸發 <code>change</code> 事件。因此，更推薦像上面這樣提供一個值為空的禁用選項。</p>\n<h3 id=\"input-繫結-variable\">input 繫結 variable</h3>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;toggle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">true-value</span>=<span class=\"string\">&quot;yes&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">false-value</span>=<span class=\"string\">&quot;no&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">// 當選中時</span><br><span class=\"line\">vm.toggle === &#x27;yes&#x27;</span><br><span class=\"line\">// 當沒有選中時</span><br><span class=\"line\">vm.toggle === &#x27;no&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;pick&quot;</span> <span class=\"attr\">v-bind:value</span>=<span class=\"string\">&quot;a&quot;</span>&gt;</span></span><br><span class=\"line\">// 當選中時</span><br><span class=\"line\">vm.pick === vm.a</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- v-model as object --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;selected&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 內聯物件字面量 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">v-bind:value</span>=<span class=\"string\">&quot;&#123; number: 123 &#125;&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">// 當選中時</span><br><span class=\"line\">typeof vm.selected // =&gt; &#x27;object&#x27;</span><br><span class=\"line\">vm.selected.number // =&gt; 123</span><br></pre></td></tr></table></figure>\n<h3 id=\"v-model-修飾符\">v-model: 修飾符</h3>\n<p><code>.lazy</code><br />\n在預設情況下，v-model 在每次 input 事件觸發後將輸入框的值與資料進行同步 (除了上述輸入法組合文字時)。</p>\n<p>新增 lazy 修飾符，等到滑鼠移到輸入框外，觸發 change 事件才更新。</p>\n<p><code>.number</code><br />\n自動將使用者的輸入值轉為數值型別</p>\n<p><code>&lt;input v-model.number=&quot;age&quot; type=&quot;number&quot;&gt;</code><br />\n這通常很有用，因為即使在 type=&quot;number&quot; 時，HTML 輸入元素的值也總會返回字串。如果這個值無法被 parseFloat() 解析，則會返回原始的值。</p>\n<p><code>.trim</code><br />\n如果要自動過濾使用者輸入的首尾空白字元，可以給 v-model 新增 trim 修飾符：</p>\n<h2 id=\"元件-Components\">元件 Components</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定義一個名為 button-counter 的新元件</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">component</span>(<span class=\"string\">&#x27;button-counter&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;&lt;button v-on:click=&quot;count++&quot;&gt;You clicked me &#123;&#123; count &#125;&#125; times.&lt;/button&gt;&#x27;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>元件是可復用的 Vue 例項，且帶有一個名字：在這個例子中是 <code>&lt;button-counter&gt;</code>。我們可以在一個透過 new Vue 建立的 Vue 根例項中，把這個元件作為自定義元素來使用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;components-demo&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button-counter</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-counter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>因為元件是可復用的 Vue 例項，所以它們與 new Vue 接收相同的選項，例如 data、computed、watch、methods 以及生命週期鉤子等。<strong>僅有的例外是像 el 這樣根例項特有的選項</strong>。</p>\n<p>為了能在模板中使用，這些元件必須先註冊以便 Vue 能夠識別。這裡有兩種元件的註冊型別：全域性註冊和區域性註冊。至此，我們的元件都只是透過 Vue.component 全域性註冊的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">component</span>(<span class=\"string\">&#x27;my-component-name&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ... options ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>全域性註冊的元件可以用在其被註冊之後的任何 (透過 new Vue) 新建立的 Vue 根例項，也包括其元件樹中的所有子元件的模板中。</p>\n<p>而區域性註冊的好處是當你使用的是webpack這樣的構建系統時，如果是用全域性註冊的這種方法註冊的元件，那麼當你不使用某一個元件的時候，它仍然會存在最終的構建結果之中，這就增加的無謂的js下載。</p>\n<h3 id=\"data-是一個函式\">data 是一個函式</h3>\n<p>data 是一個函式，因此每個例項可以維護一份被返回物件的獨立的複製：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">data</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"範例\">範例</h3>\n<p>每個元件必須只有一個根元素。你可以將模板的內容包裹在一個父元素內，來修復這個問題，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;blog-post&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>當元件變得越來越複雜的時候，為每個相關的資訊定義一個 prop 會變得很麻煩：<br />\n所以是時候重構一下這個 <code>&lt;blog-post&gt;</code> 元件了，讓它變成接受一個單獨的 post prop：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blog-post</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;post in posts&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:key</span>=<span class=\"string\">&quot;post.id&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:title</span>=<span class=\"string\">&quot;post.title&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:content</span>=<span class=\"string\">&quot;post.content&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:publishedAt</span>=<span class=\"string\">&quot;post.publishedAt&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:comments</span>=<span class=\"string\">&quot;post.comments&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blog-post</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;post in posts&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:key</span>=<span class=\"string\">&quot;post.id&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-bind:post</span>=<span class=\"string\">&quot;post&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post</span>&gt;</span></span><br><span class=\"line\">Vue.component(&#x27;blog-post&#x27;, &#123;</span><br><span class=\"line\">  props: [&#x27;post&#x27;],</span><br><span class=\"line\">  template: `</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;blog-post&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;&#123; post.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">&quot;post.content&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- other props --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    `</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>父級元件可以像處理 native DOM 事件一樣透過 <code>v-on</code> 監聽子元件例項的任意事件</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blog-post</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">...</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-on:enlarge-text</span>=<span class=\"string\">&quot;postFontSize += 0.1&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post</span>&gt;</span></span><br><span class=\"line\">同時子元件可以透過呼叫內建的 `$emit` 方法並傳入事件名稱來觸發一個事件：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;$emit(&#x27;enlarge-text&#x27;)&quot;</span>&gt;</span></span><br><span class=\"line\">  Enlarge text</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>使用事件傳遞一個值</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;$emit(&#x27;enlarge-text&#x27;, 0.1)&quot;</span>&gt;</span></span><br><span class=\"line\">  Enlarge text</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 透過 $event 訪問到被拋出的這個值 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blog-post</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">...</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-on:enlarge-text</span>=<span class=\"string\">&quot;postFontSize += $event&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>emit input的值使 custom-input 可以更新<code>v-model</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;custom-input v-model=<span class=\"string\">&quot;searchText&quot;</span>&gt;&lt;/custom-input&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">component</span>(<span class=\"string\">&#x27;custom-input&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;value&#x27;</span>],</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;input</span></span><br><span class=\"line\"><span class=\"string\">      v-bind:value=&quot;value&quot;</span></span><br><span class=\"line\"><span class=\"string\">      v-on:input=&quot;$emit(&#x27;input&#x27;, $event.target.value)&quot;</span></span><br><span class=\"line\"><span class=\"string\">    &gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"slot\">slot</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">&quot;app&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span>這裡可能是一個頁面標題<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>主要內容的一個段落。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>另一個主要段落。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span>這裡有一些聯繫信息<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span></span></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">component</span>(<span class=\"string\">&#x27;layout&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div class=&quot;container&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;header&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;slot name=&quot;header&quot;&gt;&lt;/slot&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/header&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;main&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;slot&gt;&lt;/slot&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/main&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;footer&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;slot name=&quot;footer&quot;&gt;&lt;/slot&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/footer&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;`</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"動態切換component\">動態切換component</h3>\n<p>有的時候，在不同元件之間進行動態切換是非常有用的，比如在一個多標籤的介面裡：</p>\n<p>上述內容可以透過 Vue 的 <code>&lt;component&gt;</code> 元素加一個特殊的 is attribute 來實現：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 元件會在 `currentTabComponent` 改變時改變 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">v-bind:is</span>=<span class=\"string\">&quot;currentTabComponent&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在上述示例中，currentTabComponent 可以包括已註冊元件的名字，或一個元件的選項物件</p>\n<h3 id=\"解析-DOM-模板時的注意事項\">解析 DOM 模板時的注意事項</h3>\n<p>有些 HTML 元素，諸如 <code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;table&gt;</code> 和 <code>&lt;select&gt;</code>，對於哪些元素可以出現在其內部是有嚴格限制的。而有些元素，諸如 <code>&lt;li&gt;</code>、<code>&lt;tr&gt;</code> 和 <code>&lt;option&gt;</code>，只能出現在其它某些特定的元素內部。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- wrong --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">blog-post-row</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post-row</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- correct --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">is</span>=<span class=\"string\">&quot;blog-post-row&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>需要注意的是如果我們從以下來源使用模板的話，這條限制是不存在的：</p>\n<ul>\n<li>字串 (例如：template: '...')</li>\n<li>單檔案元件 (.vue)</li>\n<li><code>&lt;script type=&quot;text/x-template&quot;&gt;</code></li>\n</ul>\n<h3 id=\"實作\">實作</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2d1aWRlL3Byb3RvdHlwaW5nLmh0bWw=\">使用vue cli<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>說回App.vue這個檔案，這是一個檢視（或者說元件和頁面），想像一下我們的index.html中什麼也沒有，只有一個檢視，這個檢視相當於一個容器，然後我們往這個容器中放各種各樣的積木（其他元件或者其他頁面）</p>\n<p>將<code>App.vue</code>放到<code>#app</code>中，然後以<code>&lt;App/&gt;</code>來指代我們的<code>#app</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span><span class=\"comment\">/*引入App這個元件*/</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span><span class=\"comment\">/*引入路由配置*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">config</span>.<span class=\"property\">productionTip</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* eslint-disable no-new */</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,<span class=\"comment\">/*最後效果將會替換頁面中id為app的div元素*/</span></span><br><span class=\"line\">  router,<span class=\"comment\">/*使用路由*/</span></span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;&lt;App/&gt;&#x27;</span>,<span class=\"comment\">/*告知頁面這個元件用這樣的標籤來包裹著,並且使用它*/</span></span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123; <span class=\"title class_\">App</span> &#125;<span class=\"comment\">/*告知當前頁面想使用App這個元件*/</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li>https://cn.vuejs.org/v2/guide/</li>\n<li>https://peterhpchen.github.io/</li>\n<li>https://cythilya.github.io/2017/10/11/vue-component-slot/</li>\n</ul>\n","categories":["筆記"],"tags":["vuejs","javascript"]},{"title":"隨機排序演算法實作","url":"/why-linear-shuffle-works/","content":"<h2 id=\"簡介\">簡介</h2>\n<p>說到隨機排序(shuffle)演算法，最著名的肯定是Fisher–Yates，它是一個$O(N)$時間的演算法，偽碼如下</p>\n<span id=\"more\"></span>\n<figure class=\"highlight stylus\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">Shuffle</span><span class=\"params\">(Array a)</span></span>&#123;</span><br><span class=\"line\">    N = <span class=\"selector-tag\">a</span><span class=\"selector-class\">.length</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"selector-tag\">i</span> = <span class=\"number\">0</span> ~ N-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">Swap</span>(<span class=\"selector-tag\">a</span><span class=\"selector-attr\">[i]</span>, <span class=\"selector-tag\">a</span><span class=\"selector-attr\">[Random value between i and N]</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>簡單來說就是每個元素都和之後(包含自身)的隨機一個元素交換</p>\n<h2 id=\"實作\">實作</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">N = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Shuffle</span>(<span class=\"params\">arr</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N-<span class=\"number\">1</span>):</span><br><span class=\"line\">        j = random.randint(i, N-<span class=\"number\">1</span>)</span><br><span class=\"line\">        arr[i], arr[j] = arr[j], arr[i]</span><br><span class=\"line\"></span><br><span class=\"line\">total = [[<span class=\"number\">0</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N)] <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N)]</span><br><span class=\"line\"><span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1000000</span>):</span><br><span class=\"line\">    arr = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N)]</span><br><span class=\"line\">    Shuffle(arr)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i, v <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(arr):</span><br><span class=\"line\">        total[v][i] += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;數字<span class=\"subst\">&#123;i&#125;</span>分佈&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;,&quot;</span>.join(<span class=\"built_in\">str</span>(v) <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> total[i]))</span><br></pre></td></tr></table></figure>\n<p>執行1000000次Shuffle，各數字的分布</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"code\"><pre><span class=\"line\">數字<span class=\"number\">0</span>分佈</span><br><span class=\"line\"><span class=\"number\">99656,99624</span>,<span class=\"number\">100636,100081</span>,<span class=\"number\">99957,100149</span>,<span class=\"number\">100238,100287</span>,<span class=\"number\">99710,99662</span></span><br><span class=\"line\">數字<span class=\"number\">1</span>分佈</span><br><span class=\"line\"><span class=\"number\">100043,100292</span>,<span class=\"number\">99499,100262</span>,<span class=\"number\">100141,99847</span>,<span class=\"number\">100098,100164</span>,<span class=\"number\">99655,99999</span></span><br><span class=\"line\">數字<span class=\"number\">2</span>分佈</span><br><span class=\"line\"><span class=\"number\">100032,100412</span>,<span class=\"number\">99857,100035</span>,<span class=\"number\">100148,99738</span>,<span class=\"number\">100139,99765</span>,<span class=\"number\">99681,100193</span></span><br><span class=\"line\">數字<span class=\"number\">3</span>分佈</span><br><span class=\"line\"><span class=\"number\">100031,99868</span>,<span class=\"number\">100572,99418</span>,<span class=\"number\">99965,99918</span>,<span class=\"number\">99889,100107</span>,<span class=\"number\">100279,99953</span></span><br><span class=\"line\">數字<span class=\"number\">4</span>分佈</span><br><span class=\"line\"><span class=\"number\">100214,99716</span>,<span class=\"number\">100181,100315</span>,<span class=\"number\">99764,99667</span>,<span class=\"number\">100270,99829</span>,<span class=\"number\">99871,100173</span></span><br><span class=\"line\">數字<span class=\"number\">5</span>分佈</span><br><span class=\"line\"><span class=\"number\">99952,100282</span>,<span class=\"number\">99670,99642</span>,<span class=\"number\">99919,100401</span>,<span class=\"number\">99785,100627</span>,<span class=\"number\">100215,99507</span></span><br><span class=\"line\">數字<span class=\"number\">6</span>分佈</span><br><span class=\"line\"><span class=\"number\">100332,99879</span>,<span class=\"number\">99976,100143</span>,<span class=\"number\">99614,100319</span>,<span class=\"number\">99665,100169</span>,<span class=\"number\">100380,99523</span></span><br><span class=\"line\">數字<span class=\"number\">7</span>分佈</span><br><span class=\"line\"><span class=\"number\">99878,100407</span>,<span class=\"number\">99804,99669</span>,<span class=\"number\">100115,99760</span>,<span class=\"number\">100251,99602</span>,<span class=\"number\">100124,100390</span></span><br><span class=\"line\">數字<span class=\"number\">8</span>分佈</span><br><span class=\"line\"><span class=\"number\">100104,99888</span>,<span class=\"number\">99876,100575</span>,<span class=\"number\">100181,100229</span>,<span class=\"number\">100083,99398</span>,<span class=\"number\">99632,100034</span></span><br><span class=\"line\">數字<span class=\"number\">9</span>分佈</span><br><span class=\"line\"><span class=\"number\">99758,99632</span>,<span class=\"number\">99929,99860</span>,<span class=\"number\">100196,99972</span>,<span class=\"number\">99582,100052</span>,<span class=\"number\">100453,100566</span></span><br></pre></td></tr></table></figure>\n<p>但為何只要這樣交換，就是隨機排序？ 🤔</p>\n<h2 id=\"不嚴謹的證明\">不嚴謹的證明</h2>\n<p>已知N=1或2時，使用此法皆可使陣列為隨機排序。<br />\n若N=n時成立，考慮N=n+1時的情況：<br />\nWithout loss of generality，令陣列為[0, 1, 2, ..., n]<br />\n第一個位置的數0會和後面的隨機一個元素交換，此時第一個位置是0到n的數的機率是平均的 $P_0(v)=\\frac{1}{n+1}, v \\in {0, 1, 2, .. n}$<br />\n此時子陣列(<code>[1:]</code>)即為N=n的情況，依照假設，使用此法後，其餘數字會是隨機排序，<br />\n所以N=n+1時也成立。<br />\n依數學歸納法，N=1,2時成立，且N=n成立時，N=n+1也成立；所以N為自然數時，使用此法皆可使陣列為隨機排序。$\\blacksquare$</p>\n<hr />\n<p>一個更直觀的解釋是，每一次交換都是在隨機選擇剩下還沒選的值。</p>\n<h2 id=\"錯誤版本\">錯誤版本</h2>\n<figure class=\"highlight stylus\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">WrongShuffle</span><span class=\"params\">(Array a)</span></span>&#123;</span><br><span class=\"line\">    N = <span class=\"selector-tag\">a</span><span class=\"selector-class\">.length</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"selector-tag\">i</span> = <span class=\"number\">0</span> ~ N-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">Swap</span>(<span class=\"selector-tag\">a</span><span class=\"selector-attr\">[i]</span>, <span class=\"selector-tag\">a</span><span class=\"selector-attr\">[Random value between 0 and N]</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此版本的所有元素對陣列中的一個元素交換<br />\n雖然接近，但不是隨機排序</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"code\"><pre><span class=\"line\">數字<span class=\"number\">0</span>分佈</span><br><span class=\"line\"><span class=\"number\">99993,100886</span>,<span class=\"number\">99773,100749</span>,<span class=\"number\">100077,99675</span>,<span class=\"number\">99556,99589</span>,<span class=\"number\">99798,99904</span></span><br><span class=\"line\">數字<span class=\"number\">1</span>分佈</span><br><span class=\"line\"><span class=\"number\">128185,93869</span>,<span class=\"number\">94816,95112</span>,<span class=\"number\">96020,96324</span>,<span class=\"number\">97355,98316</span>,<span class=\"number\">99545,100458</span></span><br><span class=\"line\">數字<span class=\"number\">2</span>分佈</span><br><span class=\"line\"><span class=\"number\">120180,124118</span>,<span class=\"number\">89932,91055</span>,<span class=\"number\">91953,92791</span>,<span class=\"number\">94813,96518</span>,<span class=\"number\">98183,100457</span></span><br><span class=\"line\">數字<span class=\"number\">3</span>分佈</span><br><span class=\"line\"><span class=\"number\">112478,115941</span>,<span class=\"number\">120497,86991</span>,<span class=\"number\">88766,90575</span>,<span class=\"number\">92353,94732</span>,<span class=\"number\">97465,100202</span></span><br><span class=\"line\">數字<span class=\"number\">4</span>分佈</span><br><span class=\"line\"><span class=\"number\">104476,109125</span>,<span class=\"number\">113448,119119</span>,<span class=\"number\">85554,88077</span>,<span class=\"number\">90897,92827</span>,<span class=\"number\">96727,99750</span></span><br><span class=\"line\">數字<span class=\"number\">5</span>分佈</span><br><span class=\"line\"><span class=\"number\">97764,101507</span>,<span class=\"number\">106920,112440</span>,<span class=\"number\">118047,85835</span>,<span class=\"number\">89281,92036</span>,<span class=\"number\">96476,99694</span></span><br><span class=\"line\">數字<span class=\"number\">6</span>分佈</span><br><span class=\"line\"><span class=\"number\">91910,96017</span>,<span class=\"number\">101046,105743</span>,<span class=\"number\">112624,119489</span>,<span class=\"number\">87594,91230</span>,<span class=\"number\">94797,99550</span></span><br><span class=\"line\">數字<span class=\"number\">7</span>分佈</span><br><span class=\"line\"><span class=\"number\">86177,90650</span>,<span class=\"number\">96260,101089</span>,<span class=\"number\">107061,113865</span>,<span class=\"number\">120411,90146</span>,<span class=\"number\">94617,99724</span></span><br><span class=\"line\">數字<span class=\"number\">8</span>分佈</span><br><span class=\"line\"><span class=\"number\">81888,86070</span>,<span class=\"number\">90840,96392</span>,<span class=\"number\">101840,109008</span>,<span class=\"number\">115726,124044</span>,<span class=\"number\">93945,100247</span></span><br><span class=\"line\">數字<span class=\"number\">9</span>分佈</span><br><span class=\"line\"><span class=\"number\">76949,81817</span>,<span class=\"number\">86468,91310</span>,<span class=\"number\">98058,104361</span>,<span class=\"number\">112014,120562</span>,<span class=\"number\">128447,100014</span></span><br></pre></td></tr></table></figure>\n<p>為何不是隨機排序？ 🤔 目前想不到直觀解釋</p>\n<p>參考維基的證明：<br />\n總共有$n^n$種選法，但可能的排列只有$n!$種，在$n&gt;2$時並不能整除</p>\n<h2 id=\"更簡單的實作\">更簡單的實作</h2>\n<p>對每個index設一隨機數，對隨機數排序<br />\n時間複雜度為$O(n\\log n)$</p>\n<h2 id=\"各語言Shuffle實作\">各語言Shuffle實作</h2>\n<p>都是Fisher-Yates</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B5dGhvbi9jcHl0aG9uL2Jsb2IvY2IwNzQ4ZDM5MzljMzExNjhhYjVkM2I4MGUzNjc3NDk0NDk3ZDVlMy9MaWIvcmFuZG9tLnB5I0wyODY=\">Python<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9saWJjeHgvYmxvYi8yN2M4MzZmZjNhOWM1MDVkZWI5ZmQxNjE2MDEyOTI0ZGU4ZmY5Mjc5L2luY2x1ZGUvYWxnb3JpdGhtI0wyNzg3\">LLVM C++<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"Reference\">Reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRmlzaGVyJUUyJTgwJTkzWWF0ZXNfc2h1ZmZsZQ==\">Wiki<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW9wbGUuY3MudW1hc3MuZWR1L35waGFhcy9DUzU5ME0vaGFuZG91dHMvRmlzaGVyLVlhdGVzLXByb29mLnBkZg==\">https://people.cs.umass.edu/~phaas/CS590M/handouts/Fisher-Yates-proof.pdf<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcy5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvMjE1Mi9ob3ctdG8tcHJvdmUtY29ycmVjdG5lc3Mtb2YtYS1zaHVmZmxlLWFsZ29yaXRobQ==\">https://cs.stackexchange.com/questions/2152/how-to-prove-correctness-of-a-shuffle-algorithm<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["演算法","隨機排序","洗牌","Fisher-Yates","證明"]},{"title":"Python 之禪","url":"/zen-of-python/","content":"<h2 id=\"import-this\">import this</h2>\n<blockquote>\n<p>The Zen of Python, by Tim Peters<br />\n <br />\nBeautiful is better than ugly.<br />\nExplicit is better than implicit.<br />\nSimple is better than complex.<br />\nComplex is better than complicated.<br />\nFlat is better than nested.<br />\nSparse is better than dense.<br />\nReadability counts.<br />\nSpecial cases aren't special enough to break the rules.<br />\nAlthough practicality beats purity.<br />\nErrors should never pass silently.<br />\nUnless explicitly silenced.<br />\nIn the face of ambiguity, refuse the temptation to guess.<br />\nThere should be one-- and preferably only one --obvious way to do it.<br />\nAlthough that way may not be obvious at first unless you're Dutch.<br />\nNow is better than never.<br />\nAlthough never is often better than <em>right</em> now.<br />\nIf the implementation is hard to explain, it's a bad idea.<br />\nIf the implementation is easy to explain, it may be a good idea.<br />\nNamespaces are one honking great idea -- let's do more of those!</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"翻譯和解釋\">翻譯和解釋</h2>\n<p>基本上在解釋 clean code 的做法</p>\n<p>優美優於醜陋，</p>\n<p>明瞭優於隱晦；</p>\n<p>簡單優於複雜，</p>\n<p>複雜優於凌亂，</p>\n<blockquote>\n<p>如果復雜不可避免，那代碼間也不能有難懂的關係，要保持接口簡潔</p>\n</blockquote>\n<p>扁平優於嵌套，</p>\n<p>稀疏優於稠密，</p>\n<p>可讀性很重要！</p>\n<p>即使實用比純粹更優，</p>\n<p>特例亦不可違背原則。</p>\n<p>錯誤絕不能悄悄忽略，</p>\n<p>除非它明確需要如此。</p>\n<p>面對不確定性，</p>\n<p>拒絕妄加猜測。</p>\n<p>任何問題應有一種，</p>\n<p>且最好只有一種，</p>\n<p>顯而易見的解決方法。</p>\n<p>儘管這方法一開始並非如此直觀，</p>\n<p>除非你是荷蘭人。</p>\n<blockquote>\n<p>解決一個問題的方法可能會有很多種，但在Python中，只選擇最明顯的那一個</p>\n</blockquote>\n<p>做優於不做，</p>\n<p>然而不假思索還不如不做。</p>\n<p>很難解釋的，必然是壞方法。</p>\n<p>很好解釋的，可能是好方法。</p>\n<p>命名空間是個絕妙的主意，</p>\n<p>我們應好好利用它。</p>\n<h2 id=\"reference\">reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2lraXdhbmQuY29tL3poLXR3L1B5dGhvbiVFNCVCOSU4QiVFNyVBNiU4NQ==\">wiki<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kZXYvcGVwcy9wZXAtMDAyMC8=\">PEP-20<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["轉載"],"tags":["python"]},{"title":"歐文字體簡介","url":"/owen/","content":"<h2 id=\"基本概念\">基本概念</h2>\n<p><img data-src=\"/img/font/typography.svg\" alt=\"\" /></p>\n<span id=\"more\"></span>\n<ul>\n<li>高度\n<ul>\n<li>一個字型的外觀大多取決於字高的比例</li>\n<li>Cap Height(大寫字高): 大寫字母的高度</li>\n<li>x Height(x 字高): 小寫字母 x 的高度</li>\n<li>Ascender: 小寫字母高於 x 字高的部份，如 b, d, h, k, l</li>\n<li>Descender: 小寫字母下方延伸部份，如 g, j, p, q, y</li>\n</ul>\n<!-- - Ascender和Cap Height若相同，大寫 I 會和小寫 l 相似 -->\n</li>\n<li>基準線\n<ul>\n<li>Base Line(基線): 大小寫字母的底端對齊線</li>\n<li>Cap Line(大寫線): 大寫字母的頂端沿線</li>\n<li>x-Height Line(x 高度線): 對齊x Height頂端的線，也稱Mean Line</li>\n<li>Ascender line(上端線): 對齊Ascender頂端的線</li>\n<li>Descender Line(下緣線): 對齊Descender底端的線</li>\n<li>字體的實際大小為Cap Line到Descender Line的距離</li>\n</ul>\n</li>\n<li>形狀\n<ul>\n<li><strong>Serif(襯線)</strong>: 起筆與終筆的裝飾突起</li>\n<li>Stem(字幹): 成為字母主要骨幹的筆劃</li>\n<li>Arm: 橫/斜向延伸出的筆劃</li>\n<li>Axis: 傾斜的軸線</li>\n<li>Ear: 短突起</li>\n<li>Terminal: 筆畫末端的部位</li>\n<li>Shoulder: b, h 等字母的曲線上方部位</li>\n<li>Bowl(字碗): 封閉的曲線</li>\n<li>Arch: 開放的曲線</li>\n<li>Link: 連結部位的筆劃</li>\n<li>Loop: 以曲線封住開口</li>\n<li>Tail: 筆劃結束的部位</li>\n<li>Counter(字腔): 線框住的空間</li>\n<li>Swash(曲飾線): 起筆和收筆處特別拉長的曲線</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"名詞解釋\">名詞解釋</h3>\n<ul>\n<li>字體,書體 (typeface): 一致的文字風格 (形狀、設計樣式)\n<ul>\n<li>如 Garamond、細明體</li>\n<li>類似 css 中的 <code>font-family: serif;</code></li>\n</ul>\n</li>\n<li>字型 (font): 一組相同字體的符號，如一種數位字型\n<ul>\n<li>如 Adobe Garamond、Apple Garamond 屬於 Garamond(字體)</li>\n<li>如 細明體、新細明體 屬於 細明體(字體)</li>\n<li>如 文鼎圓體、華康圓體 屬於 圓體(字體)</li>\n<li>對應css中的 <code>font: </code></li>\n</ul>\n</li>\n<li>在中文，字體和字型兩個詞已經混用，兩者通常都是指font，下列內容皆混用兩詞</li>\n<li>Lucida(typeface): 包含Serif, SanSerif, Script, Gothic, MonoSpace, Display 等Font</li>\n<li>字符(glyph)：非文字的符號</li>\n<li>文字之間空白量的調整：字間調整 (letter spacing)、字間微調 (kerning)</li>\n</ul>\n<h3 id=\"字體分類\">字體分類</h3>\n<ul>\n<li>以襯線區分\n<ul>\n<li>San-Serif(無襯線體)</li>\n<li>Serif(襯線體)</li>\n</ul>\n</li>\n<li>以直立與否區分\n<ul>\n<li>直立字型: 羅馬體 Roman</li>\n<li>Serif的傾斜字型: 義大利體 Italic</li>\n<li>San-Serif的傾斜字型: 斜體 Oblique</li>\n</ul>\n</li>\n<li>以感覺區分\n<ul>\n<li>手寫 ↔ 數位</li>\n<li>提示 ↔ 強調</li>\n<li>華美 ↔ 凌亂</li>\n<li>拘謹 ↔ 隨意</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"大小\">大小</h3>\n<ul>\n<li>point(點, pt)：1/72 英吋，72點為1英吋</li>\n<li>em(全形)：1em等同字體大小\n<ul>\n<li>若字的大小為 12pt，則 1em=12pt</li>\n<li>en(半形)：0.5em</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"連字\">連字</h3>\n<p>ligature(連字)：避免文字相疊而提高易讀性，如 fi, ff</p>\n<p><img data-src=\"https://upload.wikimedia.org/wikipedia/commons/2/29/Latin_ligatures_%28part_1%29.svg\" alt=\"ff example\" /></p>\n<p>註：以前複製 pdf 的資料時，<code>ff</code>和<code>fi</code>會無法顯示，因為是一個<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29tcGFydC5jb20vZW4vdW5pY29kZS9VK0ZCMDA=\">連字符號<i class=\"fa fa-external-link-alt\"></i></span>而非兩個英文字，之後可能被 Windows 或 adobe 修好了 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZXguc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzMzNDc2L3doeS1jYW50LWZpLWJlLXNlcGFyYXRlZC13aGVuLWJlaW5nLWNvcGllZC1mcm9tLWEtY29tcGlsZWQtcGRm\">來源<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"符號\">符號</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU5JTk5JTg0JUU1JThBJUEwJUU3JUFDJUE2JUU1JThGJUI3\">附加符號<i class=\"fa fa-external-link-alt\"></i></span>：添加在字母上面的符號</p>\n<ul>\n<li><code>&amp;</code>(ampersand)：&quot;and per se and&quot;的縮寫，意思為「這就是 and」，形狀為 et，即拉丁語的 and</li>\n<li>符號在不同文化的意義也不同\n<ul>\n<li>美、亞\n<ul>\n<li>2,345</li>\n<li>0.95m</li>\n</ul>\n</li>\n<li>歐\n<ul>\n<li>2.345</li>\n<li>0,95m</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU1JTgwJTkyJUU2JTg0JTlGJUU1JThGJUI5JUU1JThGJUI3JUU1JThGJThBJUU1JTgwJTkyJUU5JTk3JUFFJUU1JThGJUI3\">倒驚嘆號 ¡<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>於西班牙文中使用，用於表達情緒</li>\n</ul>\n</li>\n<li>驚嘆號和問號的順序\n<ul>\n<li>你說什麼！?</li>\n<li>what?!</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>連字號 (<code>-</code>, hyphen, U+2010)、連接號 (<code>–</code>, en dash, U+2013)、破折號 (<code>—</code>, em dash, U+2014)、減號(<code>-</code>, hyphen minus, U+002D)\n<ul>\n<li>hyphen連接兩個單字: That was an extra-hot hot dog.</li>\n<li>en dash數字、時間的起始: Refer to pages 225–237 (並非<code>~</code>)</li>\n<li>em dash語氣轉折: The dog — wet and muddy — ran past</li>\n<li>hyphen minus減法: 9 - 4 = 5</li>\n<li>長度：hyphen~=hyphen minus &lt; en dash &lt; em dash</li>\n</ul>\n</li>\n<li>注腳符號(footnote)\n<ul>\n<li>星號 <code>*</code> (asterisk)</li>\n<li>劍號 <code>†</code> (dagger)</li>\n<li>雙劍號 <code>‡</code> (double dagger)</li>\n<li>分節 <code>§</code> (section)</li>\n<li>段落 <code>‖</code>, <code>¶</code> (paragraph)</li>\n<li>現在大多用數字取代</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"字型命名規則\">字型命名規則</h3>\n<ul>\n<li>不同字重 (筆畫從細到粗)\n<ul>\n<li>Ultra Light</li>\n<li>Thin</li>\n<li>Light</li>\n<li>Roman(Regular)</li>\n<li>Medium</li>\n<li>Bold</li>\n<li>Heavy</li>\n<li>Black</li>\n</ul>\n</li>\n<li>不同字寬\n<ul>\n<li>Condensed</li>\n<li>Extended</li>\n<li>MonoSpace</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"歷史\">歷史</h3>\n<ul>\n<li>1 世紀  雕刻文字羅馬體</li>\n<li>12 世紀 哥德體</li>\n<li>15 世紀 印刷羅馬體</li>\n<li>20 世紀 無襯線體</li>\n</ul>\n<h2 id=\"無襯線體-Sans-Serif\">無襯線體 (Sans-Serif)</h2>\n<p>簡稱Sans，共分四類</p>\n<ol>\n<li>早期 (怪誕，Grotesque)\n<ul>\n<li>還是有粗細變化</li>\n<li>例：Franklin Gothic</li>\n</ul>\n</li>\n<li>新怪誕 (Neo-Grotesque)\n<ul>\n<li>筆畫筆直</li>\n<li>例：Helvetica, Univers</li>\n</ul>\n</li>\n<li>人文 (Humanist)\n<ul>\n<li>帶有手寫特徵</li>\n<li>例：Gill Sans, Optima, Frutiger</li>\n</ul>\n</li>\n<li>幾何 (Geometric)\n<ul>\n<li>字為幾何形狀，如 O 為正圓</li>\n<li>例：Futura</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>\n<p>Franklin Gothic、Impact: 縱長造型，能配置較多文字</p>\n<ul>\n<li>用於標題、頭條</li>\n</ul>\n</li>\n<li>\n<p>Helvetica: 運用領域廣泛</p>\n<ul>\n<li>有許多變種，使用時須注意</li>\n<li>Panasonic <img data-src=\"/img/font/panasonic.png\" alt=\"\" /></li>\n<li>iOS(~2015) <img data-src=\"https://cdn.osxdaily.com/wp-content/uploads/2014/05/ios-system-font.jpg\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>Arial: Helvetica 的替代字體</p>\n<ul>\n<li>兩者寬度相同</li>\n<li>Monotype 設計這套字型是要作為一個較便宜的替代品，與 Linotype 的 Helvetica 競爭</li>\n<li>在 Windows 和 Mac 均為預設字體之一</li>\n</ul>\n</li>\n<li>\n<p>Gill Sans: 具人文風格</p>\n<ul>\n<li>英國人愛用</li>\n<li>BBC <img data-src=\"/img/font/bbc.jpg\" alt=\"\" /></li>\n<li>AMD(Gill Sans Bold) <img data-src=\"/img/font/amd.jpg\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>Futura: 幾何學造型</p>\n<ul>\n<li>OMEGA <img data-src=\"https://assets.website-files.com/5ee732bebd9839b494ff27cd/5ee732bebd9839d0a4ff2813_1280px-Omega_Logo.svg-p-500.png\" alt=\"\" /></li>\n<li>阿波羅 11 號記念碑 <img data-src=\"/img/font/apollo11.jpg\" alt=\"\" /></li>\n<li>納粹 <img data-src=\"/img/font/futura-nazi.webp\" alt=\"眾所皆知，hitler是個藝術家\" /></li>\n</ul>\n</li>\n<li>\n<p>Frutiger、DIN 1451: 易認性優異</p>\n<ul>\n<li>常用於道路標誌</li>\n<li>DIN 標準是 Deutsches Institut für Normung（德國標準化學會）的縮寫\n<ul>\n<li>DIN 1451 為 DIN標準定義的字體</li>\n</ul>\n</li>\n<li>Frutiger <img data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/This_Way_Sign%2C_Northern_General_Hospital%2C_Sheffield_-_geograph.org.uk_-_1731994.jpg/1280px-This_Way_Sign%2C_Northern_General_Hospital%2C_Sheffield_-_geograph.org.uk_-_1731994.webp\" alt=\"\" /></li>\n<li>2020 東京奧運 (DIN) <img data-src=\"/img/font/din-tokyo-olympics.svg\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>Optima: 曲線美</p>\n<ul>\n<li>類似羅馬體</li>\n<li>Godiva <img data-src=\"/img/font/optima-godiva.svg\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>Gotham: 讓人感覺值得信頼</p>\n<ul>\n<li>Spotify <img data-src=\"/img/font/spotify.jpg\" alt=\"\" /></li>\n</ul>\n<!-- - Inception ![](/img/font/inception.jpg) -->\n</li>\n</ul>\n<!-- [字型預覽(已失效)](https://creatynes.com/sans-serif/) -->\n<p>辨別非襯線字體方式：S的終端、R的字腿、a的樣式、o的形狀</p>\n<h2 id=\"襯線體-Serif\">襯線體 (Serif)</h2>\n<p>也稱羅馬體 (Roman)</p>\n<p>共分五類</p>\n<ol>\n<li>威尼斯 (Venetian)\n<ul>\n<li>保留手寫感</li>\n<li>小寫 e 往右上傾斜</li>\n<li>例：Centaur, Jenson</li>\n</ul>\n</li>\n<li>古典 (Old face, Humanist)\n<ul>\n<li>圓潤的襯線</li>\n<li>優雅、正式的形象\n<ul>\n<li>數字會延伸到下伸部</li>\n</ul>\n</li>\n<li>4 的頂端沒開口\n<ul>\n<li>大寫的 W 中央會交叉</li>\n</ul>\n</li>\n<li>例：Garamond, Caslon</li>\n</ul>\n</li>\n<li>過渡 (Transitional)\n<ul>\n<li>介於古典和現代之間</li>\n<li>例：Times New Roman, Baskerville</li>\n</ul>\n</li>\n<li>現代 (Modern face)\n<ul>\n<li>縱向筆劃和橫向筆劃粗細差很多</li>\n<li>襯線又直又細</li>\n<li>例：Bodoni, Didot</li>\n</ul>\n</li>\n<li>粗襯線 (Slab Serif)\n<ul>\n<li>又稱埃及體</li>\n<li>休閒的印象</li>\n<li>例：Rockwell, Clarendon</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>Centaur、Jenson: 手寫風格的威尼斯羅馬體\n<ul>\n<li>牛津聖經台聖經 (Oxford Lectern Bible)(Centaur) <img data-src=\"/img/font/centaur-bible.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Caslon: 古典\n<ul>\n<li>以前很流行的字型</li>\n<li>美國獨立宣言 <img data-src=\"../../img/font/caslon-declaration-of-independence.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Garamond: 優雅\n<ul>\n<li>17 世紀法國官方字體</li>\n<li>同 Helvetica，有許多變體</li>\n<li>Think Different(Apple Garamond) <img data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/Apple_logo_Think_Different_vectorized.svg/906px-Apple_logo_Think_Different_vectorized.svg.webp\" alt=\"\" /></li>\n<li>Rolex <img data-src=\"/img/font/rolex.jpg\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Times New Roman: 適讀性高\n<ul>\n<li>用於報紙內文</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxpdGVkYWlseS5jb20vbmV3cy93b3JsZC9uZXctcm9tYW4tcmVzdW1lLWxvb2tzLWJhc2ljLzEwMTc5ODU=\">被過度濫用<i class=\"fa fa-external-link-alt\"></i></span>，如同中文的新細明體</li>\n<li>HSBC <img data-src=\"/img/font/hsbc.jpg\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Bodoni、Didot: 洗練優美的現代羅馬體\n<ul>\n<li>Bodoni: 強悍\n<ul>\n<li>Lady Gaga <img data-src=\"/img/font/bodoni-ladygaga.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Didot: 女性化、優美\n<ul>\n<li>Vogue <img data-src=\"https://assets.website-files.com/5ee732bebd9839b494ff27cd/5eef395df2eb3d80f08d8030_VOGUE_LOGO.svg\" alt=\"\" /></li>\n<li>Zara <img data-src=\"/img/font/zara.jpg\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Clarendon: 粗襯線體\n<ul>\n<li>SONY(基於Clarendon修改) <img data-src=\"/img/font/sony.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Rockwell: 沉穩的粗襯線體\n<ul>\n<li>大寫 A 的上方襯線為其特色 <img data-src=\"/img/font/rockwell.png\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<p>辨別方法：筆畫粗細對比、A的尖端、f和r的終端、R的字腿</p>\n<h2 id=\"草書體、書寫體-Script\">草書體、書寫體 (Script)</h2>\n<p>有明顯連寫筆勢，常用於餐廳、咖啡館</p>\n<ul>\n<li>Zapfino: 優雅\n<ul>\n<li><img data-src=\"/img/font/zapfino.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Mistral: 休閒\n<ul>\n<li><img data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Mistral_font.svg/640px-Mistral_font.svg.webp\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Comic Sans: 易辨識\n<ul>\n<li>不知為何，此字體屬於sans</li>\n<li>受漫畫字體啟發</li>\n<li>Undertale <img data-src=\"/img/font/comic-sans.webp\" alt=\"\" />\n<ul>\n<li>註：Papyrus也是個字體名</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>參考字體作者：George Bickham, George Shelley, George Snell</p>\n<h2 id=\"展示體-Display\">展示體 (Display)</h2>\n<p>主要用於標題、海報的設計型字體，通常不利閱讀</p>\n<ul>\n<li>Trajan: 高格調\n<ul>\n<li>起源於古羅馬時期圖拉真皇帝的碑文\n<ul>\n<li>當年只有 23 種大寫字母 (沒有 J、U 和 W)</li>\n</ul>\n</li>\n<li>字型只有大寫</li>\n<li>Titanic <img data-src=\"/img/font/titanic.jpg\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Peignot: 裝飾藝術 <img data-src=\"/img/font/peignot-font.png\" alt=\"\" /></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NvbGlkWk9STy96cGl4LXBpeGVsLWZvbnQ=\">Zpix<i class=\"fa fa-external-link-alt\"></i></span>: 點陣字體 <img data-src=\"/img/font/zpix.png\" alt=\"\" /></li>\n<li>acsf <img data-src=\"/img/font/acsf.png\" alt=\"\" /></li>\n</ul>\n<h2 id=\"哥德體-BlackLetter\">哥德體 (BlackLetter)</h2>\n<p>也稱Gothic或Old English。</p>\n<p>中世紀(12~15世紀)常用；直到20世紀前半，德國還普遍使用。</p>\n<p>中二病唯一指定字體。</p>\n<p>我的奮鬥 <img data-src=\"https://media.wired.com/photos/5942da6f0221283cb54e750e/master/w_1600%2Cc_limit/hitler-font.png\" class=\"img-regular\"></p>\n<p>Fette Fraktur <img data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/23/FetteFraktur.png/330px-FetteFraktur.png\" alt=\"Fette Fraktur\" /></p>\n<p>Corona <img data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/ba/Corona_Extra_text_logo.svg/515px-Corona_Extra_text_logo.svg.png\" alt=\"Corona\" /></p>\n<p>天國降臨:救贖 <img data-src=\"/img/font/kingdomcome.jpg\" alt=\"\" /></p>\n<p>New York Times(Engravers' Old English) <img data-src=\"/img/font/nyt.jpg\" alt=\"\" /></p>\n<h2 id=\"細節\">細節</h2>\n<ol>\n<li>用平頭筆(如麥克筆)寫字，就能了解筆畫粗細和襯線 <img data-src=\"/img/font/roman.webp\" alt=\"\" /> <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/07nk5PwY8MM?si=LfHXluX1pb45B91i\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe> <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/jttJrajs4vw?si=qrmb8tH-K1gvRbGM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n<ol>\n<li>古代是用雕刻刀或羽毛筆，意義相同，也代表襯線體比較符合自然的書寫方式</li>\n<li>快速連寫直畫時，直畫會自然地向右傾，同樣寬度的線條會因傾斜而變細，形成義大利體\n<ol>\n<li>所以義大利體多半比羅馬體細，且字寬較窄</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>為了處理視錯覺，會對字母做微調，只要翻轉字母，就能清楚看出差異\n<ul>\n<li>大寫O不是正圓</li>\n<li>K 的上方<code>/</code>比下方的<code>\\</code>細</li>\n<li>小寫o通常比小寫x還高一點點</li>\n<li>大寫M兩側並非垂直線</li>\n</ul>\n</li>\n<li>小寫字母：從大寫演變而來，類似於漢字從草書的型態變成日文假名，如 9 世紀的加洛林體 (Carolingian)</li>\n</ol>\n<h2 id=\"對各種字體的印象\">對各種字體的印象</h2>\n<p>摘自小林章的《歐文字體 2：經典字體與表現手法》<s>，我個人是看不出來。</s></p>\n<ul>\n<li>Garamond 詩意、傳統、柔和感</li>\n<li>Galliard 詩意、傳統、陽剛味</li>\n<li>Janson 傳統樸素粗獷</li>\n<li>Caslon 應用廣泛</li>\n<li>Baskerville 傳統、高貴感</li>\n<li>Didot 優美、柔和、女性化</li>\n<li>Bodoni 洗練感</li>\n<li>Walbaum 工整 無機感</li>\n<li>Times Roman 精簡 濃黑 廣泛使用的內文字體</li>\n</ul>\n<!-- p42~47 -->\n<p>高級感：具有古羅馬帝國碑文的文字比例結構(粗細明顯)，適合用於標題</p>\n<ul>\n<li>Tarjan</li>\n<li>Optima Nova</li>\n<li>Augustea Open</li>\n<li>Waters Titling</li>\n<li>Palatino Nova Imperial</li>\n</ul>\n<p>奢華感：銅版印刷風格</p>\n<ul>\n<li>Palace Script</li>\n<li>Copperplate Gothic</li>\n</ul>\n<p>輕鬆感的手寫體</p>\n<ul>\n<li>Vladimir</li>\n<li>Caflisch</li>\n<li>Caliban</li>\n<li>Present</li>\n<li>Dom Casual</li>\n</ul>\n<p>隨意的草書體</p>\n<ul>\n<li>Wiesbaden Swing</li>\n<li>Freestyle script</li>\n<li>Smudger</li>\n</ul>\n<p>柔順感的無襯線體</p>\n<ul>\n<li>Cronos</li>\n<li>Highlander</li>\n<li>Goudy Sans</li>\n<li>Woodland</li>\n</ul>\n<p>讓人感覺「方便、划算又料多實在」的字體</p>\n<ul>\n<li>FF Tartine</li>\n<li>Textile</li>\n<li>Flora</li>\n<li>Spring</li>\n<li>Mistral</li>\n</ul>\n<p>書法元素字體</p>\n<ul>\n<li>Clover(Jill bell)</li>\n<li>Humana</li>\n<li>Salto</li>\n<li>Hamada</li>\n</ul>\n<p>英國風字體</p>\n<ul>\n<li>Big Caslon</li>\n<li>Palace Script</li>\n<li>Windsor(19世紀)</li>\n<li>Thorowgood(維多利亞時代)</li>\n</ul>\n<p>英國常見字體</p>\n<ul>\n<li>New Johnston</li>\n<li>Albertus</li>\n<li>Gill Sans</li>\n<li>Perpetua</li>\n</ul>\n<p>德國風字體</p>\n<ul>\n<li>Duc De Berry</li>\n<li>Wilhelm Klingspor Gotisch</li>\n<li>Wittenberger Fraktur</li>\n</ul>\n<!-- 各種 Garamond, Caslon, Bodoni\nP52~56 -->\n<h2 id=\"排版\">排版</h2>\n<ol>\n<li>不要使用笨蛋引號(dumb quote, <code>&quot;</code>，就是程式在用的)，用角分符號(Prime, <code> ″</code>, <code>′ </code>)</li>\n<li>使用 fi 連字 (fi, fl, ff, ffi, ffl)</li>\n<li>強調、不熟悉的外來語、書名、劇名 使用意大利體\n<ol>\n<li>Oh, you heard <em>that</em>, did you?</li>\n<li>words like <em>maison</em> or <em>du chef</em> are</li>\n<li>shakespeare's <em>hamlet</em></li>\n</ol>\n</li>\n<li>較長的詞進行斷句分行\n<ol>\n<li>將兩個單字組合成一個，如Stratford-upon-Avon(地名)</li>\n</ol>\n</li>\n<li>靈活運用大小寫\n<ol>\n<li>WARNING: NEVER REMOVE THE TOP COVER FROM...</li>\n<li>Warning: Never Remove The Top Cover From...</li>\n<li>WARNING: Never remove the top cover from...</li>\n<li>第三種最好閱讀</li>\n</ol>\n</li>\n<li>Small Caps(小型的大寫字母)\n<ol>\n<li>組織簡稱：ISO、BC、AD\n<ul>\n<li>From 202ʙᴄ to 220ᴀᴅ</li>\n</ul>\n</li>\n<li>hᴛᴄ(後兩個字)</li>\n</ol>\n</li>\n<li>數字\n<ol>\n<li>可以用文字或數字表達</li>\n<li>一種寫法\n<ol>\n<li>未滿 100: 文字</li>\n<li>大於 100: 數字</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>有些字體的數字高度並不一致，通常是舊字體 <img data-src=\"/img/font/number-align.png\" alt=\"\" /></li>\n<li>考慮文繞圖的設計</li>\n<li>德文歌德體排版: 長s, 圓s, ch連字</li>\n</ol>\n<h2 id=\"程式字體\">程式字體</h2>\n<ol>\n<li>辨識度高</li>\n<li>等寬(MonoSpace)</li>\n</ol>\n<h3 id=\"辨識度高\">辨識度高</h3>\n<ul>\n<li>容易辨識大小寫、數字\n<ul>\n<li>0 ↔ O ↔ o\n<ul>\n<li>零、大寫O、小寫o</li>\n</ul>\n</li>\n<li>1 ↔ I ↔ l\n<ul>\n<li>一、大寫I、小寫l</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>PTT網頁版預設使用細明體，所以上述文字分不出來 <img data-src=\"/img/font/%E7%B4%B0%E6%98%8E%E9%AB%94.webp\" alt=\"PTT(細明體)\" /></li>\n</ul>\n<h3 id=\"等寬-MonoSpace\">等寬(MonoSpace)</h3>\n<p>每個字的寬度都相同</p>\n<ul>\n<li>容易對齊，在寫程式時十分重要(看log、縮排)</li>\n<li>適合用於表格</li>\n<li>適用於古老時代設下的，Terminal一行80字的限制</li>\n</ul>\n<p>例：Consolas(注意1, l, 0, O的區別) <img data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/ConsolasSP.svg/800px-ConsolasSP.svg.webp\" alt=\"\" /></p>\n<!-- ## 學習方式\n\n觀察：廣告、標誌、雜誌、網站\n\nTODO: 打造自己的字體選集，包含經典、前衛、特立獨行、嚴謹、隨意、高、寬、粗娙、嬌小、纖細、肥胖, 且所有類型都至少\\有一份\n\nTODO: 個人花押字 自己名字縮寫\n-->\n<!-- 選擇字體的方法 (p66~78) -->\n<h2 id=\"實際應用\">實際應用</h2>\n<p>稍微修改此網誌的字體，明顯舒服很多</p>\n<ul>\n<li>舊 <img data-src=\"/img/other/qwerty-blog-screenshot3.webp\" alt=\"\" />\n<ul>\n<li>全都為<code>Microsoft YaHei</code>\n<ul>\n<li>這是個簡體字字體，所以標點符號位置沒有置中</li>\n<li><img data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Microsoft_YaHei.png/1280px-Microsoft_YaHei.webp\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>新 <img data-src=\"/img/other/qwerty-blog-screenshot4.webp\" alt=\"\" />\n<ul>\n<li>右上標題：<code>Cormorant Garamond</code></li>\n<li>文章標題 (<code>h1</code>~<code>h6</code>)：<code>Noto Serif</code></li>\n<li>內文：<code>Noto Sans</code></li>\n<li>圖示：<code>FontAwesome</code>(不知道算不算字體)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Google\">Google</h3>\n<ul>\n<li>Catull BQ Regular → Product Sans <img data-src=\"/img/font/google-old.png\" alt=\"\" /> <img data-src=\"/img/font/google-new.png\" alt=\"\" />\n<ul>\n<li>改成Sans-Serif，變得比較有科技感？</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"小知識\">小知識</h2>\n<h3 id=\"假字體：仿冒有名字體\">假字體：仿冒有名字體</h3>\n<p>左邊是正版的</p>\n<ul>\n<li>Savoy → Sanbon</li>\n<li>Mistral(Linotype) → Mistral</li>\n<li>Hobo(Linotype) → Hobo</li>\n</ul>\n<h3 id=\"小技巧\">小技巧</h3>\n<ul>\n<li>字體極小時使用：Times Ten, Times Europa, Bell Gothic, Bell Centennial Spartan Classified, Vectora</li>\n<li>標題使用較細的字重、反白時用稍粗的字重</li>\n<li>標題和內文不同字體：不是相近就是對比明顯</li>\n<li>試試意大利體的<code>&amp;</code></li>\n<li>Pi 字型：符號字型</li>\n<li>花邊：Frutiger Symbols</li>\n</ul>\n<h3 id=\"設計一個字型\">設計一個字型</h3>\n<ul>\n<li>以特定形狀創造：六邊形、橢圓、正方形(圓角)</li>\n<li>裝飾文字：增加圖像(像是某些logo)</li>\n</ul>\n<p>以diomage, QAREMS來看一個字型的特色<br />\n<img data-src=\"https://www.iread.com.tw/ProductFile/T0081700/B000356705/B000356705-001010.jpg\" alt=\"\" /></p>\n<ul>\n<li>d: 筆畫寬度</li>\n<li>i: 襯線比例，上方的小圓</li>\n<li>o: 圓、x字高</li>\n<li>m: 拱門圓弧</li>\n<li>g: 字尾</li>\n<li>a, e: 較特別的小寫字</li>\n</ul>\n<!-- 網格化字體(像是紅綠燈那種) -->\n<h3 id=\"文字設計要點\">文字設計要點</h3>\n<ul>\n<li>粗細、顏色、大小</li>\n<li>顏色、漸層、透明度</li>\n<li>連字</li>\n<li>以圖像取代文字：通常是i, o\n<ul>\n<li><img data-src=\"https://res.cloudinary.com/jerrick/image/upload/d_642250b563292b35f27461a7.png,f_jpg,fl_progressive,q_auto,w_1024/wv9zgmvj9rpbtqi2a8l0.jpg\" alt=\"Pixar\" /></li>\n</ul>\n</li>\n<li>花體(字體裝飾) <img data-src=\"https://www.creativefabrica.com/wp-content/uploads/2022/10/11/Flourish-Fonts-41047123-580x386.png\" alt=\"\" /></li>\n<li>文字藝術師(3D) <img data-src=\"/img/font/wordartist.png\" alt=\"\" /></li>\n<li>邊框、花紋、背景\n<ul>\n<li>徽章 <img data-src=\"/img/font/porsche.png\" alt=\"porsche\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"辨識字體\">辨識字體</h3>\n<p>網站</p>\n<ol>\n<li>瀏覽器<code>F12</code>開啟 Console Inspector，指向元素</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvd2hhdGZvbnQvamFib3BvYmdjcGptZWRsanBiY2FhYmxwbWxtZmNvZ20=\">whatfont<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n<p>實體</p>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0plZmZlcnNvblFpbi9ZdXp1TWFya2VyLkZvbnREZXRlY3Rpb24=\">拍照上傳辨識<i class=\"fa fa-external-link-alt\"></i></span>\n<ul>\n<li>辨識能力不佳</li>\n</ul>\n</li>\n<li>問<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2dyb3Vwcy9lbmpveWZvbnRzLw==\">字嗨<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n<h2 id=\"心得\">心得</h2>\n<p>我覺得有趣的文字設計</p>\n<!-- TODO:改成img alt -->\n<ul>\n<li>雖然我不看籃球…\n<ul>\n<li><img data-src=\"https://upload.wikimedia.org/wikipedia/en/thumb/2/28/Houston_Rockets.svg/1200px-Houston_Rockets.svg.png\" alt=\"\" /></li>\n<li><img data-src=\"/img/font/spurs.svg\" alt=\"\" /></li>\n</ul>\n</li>\n<li>Playstation <img data-src=\"/img/font/playstation.jpg\" alt=\"\" /></li>\n</ul>\n<p>最後，我想問：</p>\n<blockquote>\n<p>歐文是誰？</p>\n</blockquote>\n<h2 id=\"參考資料\">參考資料</h2>\n<ul>\n<li>Jim Krause(2015)。設計師的文字力。</li>\n<li>小林章(2015)。歐文字體 1：基礎知識與活用方法。</li>\n<li>小林章(2016)。歐文字體 2：經典字體與表現手法。</li>\n<li>蘆谷國一、山本政幸(2020)。漫畫歐文字體の世界。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZm9udGlubG9nby5jb20vbG9nb3M=\">Font In Logo<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29kaW5nZm9udC5jb20v\">CodingFont<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2l0ZXBvaW50LmNvbS90aGUtYmxhY2tsZXR0ZXItdHlwZWZhY2UtYS1sb25nLWFuZC1jb2xvcmVkLWhpc3Rvcnkv\">The Blackletter Typeface: A Long And Colored History<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>連字符號\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ3JhbW1hcmx5LmNvbS9ibG9nL2h5cGhlbnMtYW5kLWRhc2hlcy8=\">https://www.grammarly.com/blog/hyphens-and-dashes/<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnJpdGFubmljYS5jb20vdG9waWMvaHlwaGVuIy9tZWRpYS8xLzI3OTc5NC8yNzE2NDg=\">https://www.britannica.com/topic/hyphen#/media/1/279794/271648<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYWt1Ym1hcmlhbi5jb20vaHlwaGVuLW1pbnVzLWVuLWRhc2gtYW5kLWVtLWRhc2gtZGlmZmVyZW5jZS1hbmQtdXNhZ2UtaW4tZW5nbGlzaC8=\">https://jakubmarian.com/hyphen-minus-en-dash-and-em-dash-difference-and-usage-in-english/<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmp1c3Rmb250LmNvbS8yMDE0LzAxL2FyaWFsLTEv\">身邊的字體：Arial<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250bWVtZS5jb20veml0aS9hY3NmLWZlc3RpdmUtZm9udC8=\">ascf<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n","categories":["筆記"],"tags":["字體","排版","英文","字型"]}]